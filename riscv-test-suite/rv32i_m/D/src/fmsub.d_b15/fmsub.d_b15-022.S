
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_16128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000000000fff; valaddr_reg:x3; val_offset:48384*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48384*0 + 3*0*FLEN/8, x4, x1, x2)

inst_16129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000000001fff; valaddr_reg:x3; val_offset:48387*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48387*0 + 3*1*FLEN/8, x4, x1, x2)

inst_16130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000000003fff; valaddr_reg:x3; val_offset:48390*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48390*0 + 3*2*FLEN/8, x4, x1, x2)

inst_16131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000000007fff; valaddr_reg:x3; val_offset:48393*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48393*0 + 3*3*FLEN/8, x4, x1, x2)

inst_16132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000000000ffff; valaddr_reg:x3; val_offset:48396*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48396*0 + 3*4*FLEN/8, x4, x1, x2)

inst_16133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000000001ffff; valaddr_reg:x3; val_offset:48399*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48399*0 + 3*5*FLEN/8, x4, x1, x2)

inst_16134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000000003ffff; valaddr_reg:x3; val_offset:48402*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48402*0 + 3*6*FLEN/8, x4, x1, x2)

inst_16135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000000007ffff; valaddr_reg:x3; val_offset:48405*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48405*0 + 3*7*FLEN/8, x4, x1, x2)

inst_16136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00000000fffff; valaddr_reg:x3; val_offset:48408*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48408*0 + 3*8*FLEN/8, x4, x1, x2)

inst_16137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00000001fffff; valaddr_reg:x3; val_offset:48411*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48411*0 + 3*9*FLEN/8, x4, x1, x2)

inst_16138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00000003fffff; valaddr_reg:x3; val_offset:48414*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48414*0 + 3*10*FLEN/8, x4, x1, x2)

inst_16139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00000007fffff; valaddr_reg:x3; val_offset:48417*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48417*0 + 3*11*FLEN/8, x4, x1, x2)

inst_16140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000000ffffff; valaddr_reg:x3; val_offset:48420*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48420*0 + 3*12*FLEN/8, x4, x1, x2)

inst_16141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000001ffffff; valaddr_reg:x3; val_offset:48423*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48423*0 + 3*13*FLEN/8, x4, x1, x2)

inst_16142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000003ffffff; valaddr_reg:x3; val_offset:48426*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48426*0 + 3*14*FLEN/8, x4, x1, x2)

inst_16143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000007ffffff; valaddr_reg:x3; val_offset:48429*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48429*0 + 3*15*FLEN/8, x4, x1, x2)

inst_16144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000000fffffff; valaddr_reg:x3; val_offset:48432*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48432*0 + 3*16*FLEN/8, x4, x1, x2)

inst_16145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000001fffffff; valaddr_reg:x3; val_offset:48435*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48435*0 + 3*17*FLEN/8, x4, x1, x2)

inst_16146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000003fffffff; valaddr_reg:x3; val_offset:48438*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48438*0 + 3*18*FLEN/8, x4, x1, x2)

inst_16147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000007fffffff; valaddr_reg:x3; val_offset:48441*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48441*0 + 3*19*FLEN/8, x4, x1, x2)

inst_16148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00000ffffffff; valaddr_reg:x3; val_offset:48444*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48444*0 + 3*20*FLEN/8, x4, x1, x2)

inst_16149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00001ffffffff; valaddr_reg:x3; val_offset:48447*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48447*0 + 3*21*FLEN/8, x4, x1, x2)

inst_16150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00003ffffffff; valaddr_reg:x3; val_offset:48450*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48450*0 + 3*22*FLEN/8, x4, x1, x2)

inst_16151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00007ffffffff; valaddr_reg:x3; val_offset:48453*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48453*0 + 3*23*FLEN/8, x4, x1, x2)

inst_16152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0000fffffffff; valaddr_reg:x3; val_offset:48456*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48456*0 + 3*24*FLEN/8, x4, x1, x2)

inst_16153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0001fffffffff; valaddr_reg:x3; val_offset:48459*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48459*0 + 3*25*FLEN/8, x4, x1, x2)

inst_16154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0003fffffffff; valaddr_reg:x3; val_offset:48462*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48462*0 + 3*26*FLEN/8, x4, x1, x2)

inst_16155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0007fffffffff; valaddr_reg:x3; val_offset:48465*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48465*0 + 3*27*FLEN/8, x4, x1, x2)

inst_16156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa000ffffffffff; valaddr_reg:x3; val_offset:48468*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48468*0 + 3*28*FLEN/8, x4, x1, x2)

inst_16157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa001ffffffffff; valaddr_reg:x3; val_offset:48471*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48471*0 + 3*29*FLEN/8, x4, x1, x2)

inst_16158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa003ffffffffff; valaddr_reg:x3; val_offset:48474*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48474*0 + 3*30*FLEN/8, x4, x1, x2)

inst_16159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa007ffffffffff; valaddr_reg:x3; val_offset:48477*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48477*0 + 3*31*FLEN/8, x4, x1, x2)

inst_16160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa00fffffffffff; valaddr_reg:x3; val_offset:48480*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48480*0 + 3*32*FLEN/8, x4, x1, x2)

inst_16161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa01fffffffffff; valaddr_reg:x3; val_offset:48483*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48483*0 + 3*33*FLEN/8, x4, x1, x2)

inst_16162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa03fffffffffff; valaddr_reg:x3; val_offset:48486*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48486*0 + 3*34*FLEN/8, x4, x1, x2)

inst_16163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa07fffffffffff; valaddr_reg:x3; val_offset:48489*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48489*0 + 3*35*FLEN/8, x4, x1, x2)

inst_16164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa0ffffffffffff; valaddr_reg:x3; val_offset:48492*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48492*0 + 3*36*FLEN/8, x4, x1, x2)

inst_16165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa1ffffffffffff; valaddr_reg:x3; val_offset:48495*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48495*0 + 3*37*FLEN/8, x4, x1, x2)

inst_16166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa3ffffffffffff; valaddr_reg:x3; val_offset:48498*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48498*0 + 3*38*FLEN/8, x4, x1, x2)

inst_16167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa7ffffffffffff; valaddr_reg:x3; val_offset:48501*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48501*0 + 3*39*FLEN/8, x4, x1, x2)

inst_16168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fa8000000000000; valaddr_reg:x3; val_offset:48504*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48504*0 + 3*40*FLEN/8, x4, x1, x2)

inst_16169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fac000000000000; valaddr_reg:x3; val_offset:48507*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48507*0 + 3*41*FLEN/8, x4, x1, x2)

inst_16170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fae000000000000; valaddr_reg:x3; val_offset:48510*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48510*0 + 3*42*FLEN/8, x4, x1, x2)

inst_16171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faf000000000000; valaddr_reg:x3; val_offset:48513*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48513*0 + 3*43*FLEN/8, x4, x1, x2)

inst_16172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faf800000000000; valaddr_reg:x3; val_offset:48516*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48516*0 + 3*44*FLEN/8, x4, x1, x2)

inst_16173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafc00000000000; valaddr_reg:x3; val_offset:48519*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48519*0 + 3*45*FLEN/8, x4, x1, x2)

inst_16174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafe00000000000; valaddr_reg:x3; val_offset:48522*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48522*0 + 3*46*FLEN/8, x4, x1, x2)

inst_16175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faff00000000000; valaddr_reg:x3; val_offset:48525*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48525*0 + 3*47*FLEN/8, x4, x1, x2)

inst_16176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faff80000000000; valaddr_reg:x3; val_offset:48528*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48528*0 + 3*48*FLEN/8, x4, x1, x2)

inst_16177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffc0000000000; valaddr_reg:x3; val_offset:48531*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48531*0 + 3*49*FLEN/8, x4, x1, x2)

inst_16178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffe0000000000; valaddr_reg:x3; val_offset:48534*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48534*0 + 3*50*FLEN/8, x4, x1, x2)

inst_16179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafff0000000000; valaddr_reg:x3; val_offset:48537*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48537*0 + 3*51*FLEN/8, x4, x1, x2)

inst_16180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafff8000000000; valaddr_reg:x3; val_offset:48540*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48540*0 + 3*52*FLEN/8, x4, x1, x2)

inst_16181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffc000000000; valaddr_reg:x3; val_offset:48543*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48543*0 + 3*53*FLEN/8, x4, x1, x2)

inst_16182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffe000000000; valaddr_reg:x3; val_offset:48546*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48546*0 + 3*54*FLEN/8, x4, x1, x2)

inst_16183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffff000000000; valaddr_reg:x3; val_offset:48549*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48549*0 + 3*55*FLEN/8, x4, x1, x2)

inst_16184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffff800000000; valaddr_reg:x3; val_offset:48552*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48552*0 + 3*56*FLEN/8, x4, x1, x2)

inst_16185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffc00000000; valaddr_reg:x3; val_offset:48555*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48555*0 + 3*57*FLEN/8, x4, x1, x2)

inst_16186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffe00000000; valaddr_reg:x3; val_offset:48558*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48558*0 + 3*58*FLEN/8, x4, x1, x2)

inst_16187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffff00000000; valaddr_reg:x3; val_offset:48561*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48561*0 + 3*59*FLEN/8, x4, x1, x2)

inst_16188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffff80000000; valaddr_reg:x3; val_offset:48564*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48564*0 + 3*60*FLEN/8, x4, x1, x2)

inst_16189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffc0000000; valaddr_reg:x3; val_offset:48567*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48567*0 + 3*61*FLEN/8, x4, x1, x2)

inst_16190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffe0000000; valaddr_reg:x3; val_offset:48570*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48570*0 + 3*62*FLEN/8, x4, x1, x2)

inst_16191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffff0000000; valaddr_reg:x3; val_offset:48573*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48573*0 + 3*63*FLEN/8, x4, x1, x2)

inst_16192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffff8000000; valaddr_reg:x3; val_offset:48576*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48576*0 + 3*64*FLEN/8, x4, x1, x2)

inst_16193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffc000000; valaddr_reg:x3; val_offset:48579*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48579*0 + 3*65*FLEN/8, x4, x1, x2)

inst_16194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffe000000; valaddr_reg:x3; val_offset:48582*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48582*0 + 3*66*FLEN/8, x4, x1, x2)

inst_16195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffff000000; valaddr_reg:x3; val_offset:48585*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48585*0 + 3*67*FLEN/8, x4, x1, x2)

inst_16196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffff800000; valaddr_reg:x3; val_offset:48588*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48588*0 + 3*68*FLEN/8, x4, x1, x2)

inst_16197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffffc00000; valaddr_reg:x3; val_offset:48591*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48591*0 + 3*69*FLEN/8, x4, x1, x2)

inst_16198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffffe00000; valaddr_reg:x3; val_offset:48594*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48594*0 + 3*70*FLEN/8, x4, x1, x2)

inst_16199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffff00000; valaddr_reg:x3; val_offset:48597*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48597*0 + 3*71*FLEN/8, x4, x1, x2)

inst_16200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffff80000; valaddr_reg:x3; val_offset:48600*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48600*0 + 3*72*FLEN/8, x4, x1, x2)

inst_16201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffffc0000; valaddr_reg:x3; val_offset:48603*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48603*0 + 3*73*FLEN/8, x4, x1, x2)

inst_16202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffffe0000; valaddr_reg:x3; val_offset:48606*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48606*0 + 3*74*FLEN/8, x4, x1, x2)

inst_16203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffffff0000; valaddr_reg:x3; val_offset:48609*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48609*0 + 3*75*FLEN/8, x4, x1, x2)

inst_16204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffffff8000; valaddr_reg:x3; val_offset:48612*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48612*0 + 3*76*FLEN/8, x4, x1, x2)

inst_16205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffffffc000; valaddr_reg:x3; val_offset:48615*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48615*0 + 3*77*FLEN/8, x4, x1, x2)

inst_16206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffffffe000; valaddr_reg:x3; val_offset:48618*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48618*0 + 3*78*FLEN/8, x4, x1, x2)

inst_16207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffffff000; valaddr_reg:x3; val_offset:48621*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48621*0 + 3*79*FLEN/8, x4, x1, x2)

inst_16208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffffff800; valaddr_reg:x3; val_offset:48624*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48624*0 + 3*80*FLEN/8, x4, x1, x2)

inst_16209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffffffc00; valaddr_reg:x3; val_offset:48627*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48627*0 + 3*81*FLEN/8, x4, x1, x2)

inst_16210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffffffe00; valaddr_reg:x3; val_offset:48630*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48630*0 + 3*82*FLEN/8, x4, x1, x2)

inst_16211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffffffff00; valaddr_reg:x3; val_offset:48633*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48633*0 + 3*83*FLEN/8, x4, x1, x2)

inst_16212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffffffff80; valaddr_reg:x3; val_offset:48636*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48636*0 + 3*84*FLEN/8, x4, x1, x2)

inst_16213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffffffffc0; valaddr_reg:x3; val_offset:48639*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48639*0 + 3*85*FLEN/8, x4, x1, x2)

inst_16214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffffffffe0; valaddr_reg:x3; val_offset:48642*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48642*0 + 3*86*FLEN/8, x4, x1, x2)

inst_16215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffffffff0; valaddr_reg:x3; val_offset:48645*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48645*0 + 3*87*FLEN/8, x4, x1, x2)

inst_16216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffffffff8; valaddr_reg:x3; val_offset:48648*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48648*0 + 3*88*FLEN/8, x4, x1, x2)

inst_16217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffffffffc; valaddr_reg:x3; val_offset:48651*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48651*0 + 3*89*FLEN/8, x4, x1, x2)

inst_16218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3faffffffffffffe; valaddr_reg:x3; val_offset:48654*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48654*0 + 3*90*FLEN/8, x4, x1, x2)

inst_16219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fafffffffffffff; valaddr_reg:x3; val_offset:48657*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48657*0 + 3*91*FLEN/8, x4, x1, x2)

inst_16220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:48660*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48660*0 + 3*92*FLEN/8, x4, x1, x2)

inst_16221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:48663*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48663*0 + 3*93*FLEN/8, x4, x1, x2)

inst_16222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:48666*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48666*0 + 3*94*FLEN/8, x4, x1, x2)

inst_16223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:48669*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48669*0 + 3*95*FLEN/8, x4, x1, x2)

inst_16224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:48672*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48672*0 + 3*96*FLEN/8, x4, x1, x2)

inst_16225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:48675*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48675*0 + 3*97*FLEN/8, x4, x1, x2)

inst_16226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:48678*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48678*0 + 3*98*FLEN/8, x4, x1, x2)

inst_16227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:48681*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48681*0 + 3*99*FLEN/8, x4, x1, x2)

inst_16228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:48684*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48684*0 + 3*100*FLEN/8, x4, x1, x2)

inst_16229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:48687*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48687*0 + 3*101*FLEN/8, x4, x1, x2)

inst_16230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:48690*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48690*0 + 3*102*FLEN/8, x4, x1, x2)

inst_16231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:48693*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48693*0 + 3*103*FLEN/8, x4, x1, x2)

inst_16232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:48696*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48696*0 + 3*104*FLEN/8, x4, x1, x2)

inst_16233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:48699*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48699*0 + 3*105*FLEN/8, x4, x1, x2)

inst_16234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:48702*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48702*0 + 3*106*FLEN/8, x4, x1, x2)

inst_16235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:48705*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48705*0 + 3*107*FLEN/8, x4, x1, x2)

inst_16236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:48708*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48708*0 + 3*108*FLEN/8, x4, x1, x2)

inst_16237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:48711*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48711*0 + 3*109*FLEN/8, x4, x1, x2)

inst_16238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:48714*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48714*0 + 3*110*FLEN/8, x4, x1, x2)

inst_16239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:48717*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48717*0 + 3*111*FLEN/8, x4, x1, x2)

inst_16240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:48720*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48720*0 + 3*112*FLEN/8, x4, x1, x2)

inst_16241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x205 and fm2 == 0xb4db60a2cc1ff and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82c08bdce69f77; op2val:0x205b4db60a2cc1ff;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:48723*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48723*0 + 3*113*FLEN/8, x4, x1, x2)

inst_16242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:48726*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48726*0 + 3*114*FLEN/8, x4, x1, x2)

inst_16243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:48729*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48729*0 + 3*115*FLEN/8, x4, x1, x2)

inst_16244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:48732*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48732*0 + 3*116*FLEN/8, x4, x1, x2)

inst_16245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:48735*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48735*0 + 3*117*FLEN/8, x4, x1, x2)

inst_16246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:48738*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48738*0 + 3*118*FLEN/8, x4, x1, x2)

inst_16247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:48741*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48741*0 + 3*119*FLEN/8, x4, x1, x2)

inst_16248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:48744*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48744*0 + 3*120*FLEN/8, x4, x1, x2)

inst_16249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:48747*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48747*0 + 3*121*FLEN/8, x4, x1, x2)

inst_16250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:48750*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48750*0 + 3*122*FLEN/8, x4, x1, x2)

inst_16251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:48753*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48753*0 + 3*123*FLEN/8, x4, x1, x2)

inst_16252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:48756*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48756*0 + 3*124*FLEN/8, x4, x1, x2)

inst_16253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:48759*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48759*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:48762*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48762*0 + 3*126*FLEN/8, x4, x1, x2)

inst_16255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:48765*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48765*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_16256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:48768*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48768*0 + 3*128*FLEN/8, x4, x1, x2)

inst_16257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:48771*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48771*0 + 3*129*FLEN/8, x4, x1, x2)

inst_16258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:48774*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48774*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:48777*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48777*0 + 3*131*FLEN/8, x4, x1, x2)

inst_16260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:48780*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48780*0 + 3*132*FLEN/8, x4, x1, x2)

inst_16261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:48783*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48783*0 + 3*133*FLEN/8, x4, x1, x2)

inst_16262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:48786*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48786*0 + 3*134*FLEN/8, x4, x1, x2)

inst_16263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:48789*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48789*0 + 3*135*FLEN/8, x4, x1, x2)

inst_16264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000000000000; valaddr_reg:x3; val_offset:48792*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48792*0 + 3*136*FLEN/8, x4, x1, x2)

inst_16265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000000000001; valaddr_reg:x3; val_offset:48795*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48795*0 + 3*137*FLEN/8, x4, x1, x2)

inst_16266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000000000003; valaddr_reg:x3; val_offset:48798*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48798*0 + 3*138*FLEN/8, x4, x1, x2)

inst_16267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000000000007; valaddr_reg:x3; val_offset:48801*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48801*0 + 3*139*FLEN/8, x4, x1, x2)

inst_16268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000000000000f; valaddr_reg:x3; val_offset:48804*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48804*0 + 3*140*FLEN/8, x4, x1, x2)

inst_16269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000000000001f; valaddr_reg:x3; val_offset:48807*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48807*0 + 3*141*FLEN/8, x4, x1, x2)

inst_16270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000000000003f; valaddr_reg:x3; val_offset:48810*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48810*0 + 3*142*FLEN/8, x4, x1, x2)

inst_16271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000000000007f; valaddr_reg:x3; val_offset:48813*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48813*0 + 3*143*FLEN/8, x4, x1, x2)

inst_16272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300000000000ff; valaddr_reg:x3; val_offset:48816*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48816*0 + 3*144*FLEN/8, x4, x1, x2)

inst_16273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300000000001ff; valaddr_reg:x3; val_offset:48819*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48819*0 + 3*145*FLEN/8, x4, x1, x2)

inst_16274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300000000003ff; valaddr_reg:x3; val_offset:48822*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48822*0 + 3*146*FLEN/8, x4, x1, x2)

inst_16275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300000000007ff; valaddr_reg:x3; val_offset:48825*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48825*0 + 3*147*FLEN/8, x4, x1, x2)

inst_16276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000000000fff; valaddr_reg:x3; val_offset:48828*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48828*0 + 3*148*FLEN/8, x4, x1, x2)

inst_16277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000000001fff; valaddr_reg:x3; val_offset:48831*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48831*0 + 3*149*FLEN/8, x4, x1, x2)

inst_16278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000000003fff; valaddr_reg:x3; val_offset:48834*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48834*0 + 3*150*FLEN/8, x4, x1, x2)

inst_16279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000000007fff; valaddr_reg:x3; val_offset:48837*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48837*0 + 3*151*FLEN/8, x4, x1, x2)

inst_16280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000000000ffff; valaddr_reg:x3; val_offset:48840*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48840*0 + 3*152*FLEN/8, x4, x1, x2)

inst_16281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000000001ffff; valaddr_reg:x3; val_offset:48843*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48843*0 + 3*153*FLEN/8, x4, x1, x2)

inst_16282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000000003ffff; valaddr_reg:x3; val_offset:48846*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48846*0 + 3*154*FLEN/8, x4, x1, x2)

inst_16283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000000007ffff; valaddr_reg:x3; val_offset:48849*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48849*0 + 3*155*FLEN/8, x4, x1, x2)

inst_16284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300000000fffff; valaddr_reg:x3; val_offset:48852*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48852*0 + 3*156*FLEN/8, x4, x1, x2)

inst_16285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300000001fffff; valaddr_reg:x3; val_offset:48855*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48855*0 + 3*157*FLEN/8, x4, x1, x2)

inst_16286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300000003fffff; valaddr_reg:x3; val_offset:48858*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48858*0 + 3*158*FLEN/8, x4, x1, x2)

inst_16287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300000007fffff; valaddr_reg:x3; val_offset:48861*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48861*0 + 3*159*FLEN/8, x4, x1, x2)

inst_16288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000000ffffff; valaddr_reg:x3; val_offset:48864*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48864*0 + 3*160*FLEN/8, x4, x1, x2)

inst_16289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000001ffffff; valaddr_reg:x3; val_offset:48867*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48867*0 + 3*161*FLEN/8, x4, x1, x2)

inst_16290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000003ffffff; valaddr_reg:x3; val_offset:48870*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48870*0 + 3*162*FLEN/8, x4, x1, x2)

inst_16291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000007ffffff; valaddr_reg:x3; val_offset:48873*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48873*0 + 3*163*FLEN/8, x4, x1, x2)

inst_16292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000000fffffff; valaddr_reg:x3; val_offset:48876*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48876*0 + 3*164*FLEN/8, x4, x1, x2)

inst_16293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000001fffffff; valaddr_reg:x3; val_offset:48879*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48879*0 + 3*165*FLEN/8, x4, x1, x2)

inst_16294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000003fffffff; valaddr_reg:x3; val_offset:48882*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48882*0 + 3*166*FLEN/8, x4, x1, x2)

inst_16295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000007fffffff; valaddr_reg:x3; val_offset:48885*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48885*0 + 3*167*FLEN/8, x4, x1, x2)

inst_16296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300000ffffffff; valaddr_reg:x3; val_offset:48888*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48888*0 + 3*168*FLEN/8, x4, x1, x2)

inst_16297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300001ffffffff; valaddr_reg:x3; val_offset:48891*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48891*0 + 3*169*FLEN/8, x4, x1, x2)

inst_16298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300003ffffffff; valaddr_reg:x3; val_offset:48894*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48894*0 + 3*170*FLEN/8, x4, x1, x2)

inst_16299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300007ffffffff; valaddr_reg:x3; val_offset:48897*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48897*0 + 3*171*FLEN/8, x4, x1, x2)

inst_16300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330000fffffffff; valaddr_reg:x3; val_offset:48900*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48900*0 + 3*172*FLEN/8, x4, x1, x2)

inst_16301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330001fffffffff; valaddr_reg:x3; val_offset:48903*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48903*0 + 3*173*FLEN/8, x4, x1, x2)

inst_16302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330003fffffffff; valaddr_reg:x3; val_offset:48906*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48906*0 + 3*174*FLEN/8, x4, x1, x2)

inst_16303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330007fffffffff; valaddr_reg:x3; val_offset:48909*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48909*0 + 3*175*FLEN/8, x4, x1, x2)

inst_16304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833000ffffffffff; valaddr_reg:x3; val_offset:48912*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48912*0 + 3*176*FLEN/8, x4, x1, x2)

inst_16305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833001ffffffffff; valaddr_reg:x3; val_offset:48915*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48915*0 + 3*177*FLEN/8, x4, x1, x2)

inst_16306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833003ffffffffff; valaddr_reg:x3; val_offset:48918*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48918*0 + 3*178*FLEN/8, x4, x1, x2)

inst_16307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833007ffffffffff; valaddr_reg:x3; val_offset:48921*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48921*0 + 3*179*FLEN/8, x4, x1, x2)

inst_16308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83300fffffffffff; valaddr_reg:x3; val_offset:48924*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48924*0 + 3*180*FLEN/8, x4, x1, x2)

inst_16309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83301fffffffffff; valaddr_reg:x3; val_offset:48927*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48927*0 + 3*181*FLEN/8, x4, x1, x2)

inst_16310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83303fffffffffff; valaddr_reg:x3; val_offset:48930*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48930*0 + 3*182*FLEN/8, x4, x1, x2)

inst_16311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x83307fffffffffff; valaddr_reg:x3; val_offset:48933*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48933*0 + 3*183*FLEN/8, x4, x1, x2)

inst_16312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8330ffffffffffff; valaddr_reg:x3; val_offset:48936*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48936*0 + 3*184*FLEN/8, x4, x1, x2)

inst_16313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8331ffffffffffff; valaddr_reg:x3; val_offset:48939*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48939*0 + 3*185*FLEN/8, x4, x1, x2)

inst_16314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8333ffffffffffff; valaddr_reg:x3; val_offset:48942*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48942*0 + 3*186*FLEN/8, x4, x1, x2)

inst_16315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8337ffffffffffff; valaddr_reg:x3; val_offset:48945*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48945*0 + 3*187*FLEN/8, x4, x1, x2)

inst_16316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x8338000000000000; valaddr_reg:x3; val_offset:48948*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48948*0 + 3*188*FLEN/8, x4, x1, x2)

inst_16317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833c000000000000; valaddr_reg:x3; val_offset:48951*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48951*0 + 3*189*FLEN/8, x4, x1, x2)

inst_16318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833e000000000000; valaddr_reg:x3; val_offset:48954*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48954*0 + 3*190*FLEN/8, x4, x1, x2)

inst_16319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833f000000000000; valaddr_reg:x3; val_offset:48957*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48957*0 + 3*191*FLEN/8, x4, x1, x2)

inst_16320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833f800000000000; valaddr_reg:x3; val_offset:48960*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48960*0 + 3*192*FLEN/8, x4, x1, x2)

inst_16321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fc00000000000; valaddr_reg:x3; val_offset:48963*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48963*0 + 3*193*FLEN/8, x4, x1, x2)

inst_16322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fe00000000000; valaddr_reg:x3; val_offset:48966*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48966*0 + 3*194*FLEN/8, x4, x1, x2)

inst_16323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ff00000000000; valaddr_reg:x3; val_offset:48969*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48969*0 + 3*195*FLEN/8, x4, x1, x2)

inst_16324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ff80000000000; valaddr_reg:x3; val_offset:48972*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48972*0 + 3*196*FLEN/8, x4, x1, x2)

inst_16325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffc0000000000; valaddr_reg:x3; val_offset:48975*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48975*0 + 3*197*FLEN/8, x4, x1, x2)

inst_16326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffe0000000000; valaddr_reg:x3; val_offset:48978*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48978*0 + 3*198*FLEN/8, x4, x1, x2)

inst_16327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fff0000000000; valaddr_reg:x3; val_offset:48981*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48981*0 + 3*199*FLEN/8, x4, x1, x2)

inst_16328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fff8000000000; valaddr_reg:x3; val_offset:48984*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48984*0 + 3*200*FLEN/8, x4, x1, x2)

inst_16329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffc000000000; valaddr_reg:x3; val_offset:48987*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48987*0 + 3*201*FLEN/8, x4, x1, x2)

inst_16330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffe000000000; valaddr_reg:x3; val_offset:48990*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48990*0 + 3*202*FLEN/8, x4, x1, x2)

inst_16331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffff000000000; valaddr_reg:x3; val_offset:48993*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48993*0 + 3*203*FLEN/8, x4, x1, x2)

inst_16332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffff800000000; valaddr_reg:x3; val_offset:48996*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48996*0 + 3*204*FLEN/8, x4, x1, x2)

inst_16333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffc00000000; valaddr_reg:x3; val_offset:48999*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48999*0 + 3*205*FLEN/8, x4, x1, x2)

inst_16334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffe00000000; valaddr_reg:x3; val_offset:49002*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49002*0 + 3*206*FLEN/8, x4, x1, x2)

inst_16335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffff00000000; valaddr_reg:x3; val_offset:49005*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49005*0 + 3*207*FLEN/8, x4, x1, x2)

inst_16336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffff80000000; valaddr_reg:x3; val_offset:49008*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49008*0 + 3*208*FLEN/8, x4, x1, x2)

inst_16337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffc0000000; valaddr_reg:x3; val_offset:49011*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49011*0 + 3*209*FLEN/8, x4, x1, x2)

inst_16338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffe0000000; valaddr_reg:x3; val_offset:49014*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49014*0 + 3*210*FLEN/8, x4, x1, x2)

inst_16339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffff0000000; valaddr_reg:x3; val_offset:49017*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49017*0 + 3*211*FLEN/8, x4, x1, x2)

inst_16340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffff8000000; valaddr_reg:x3; val_offset:49020*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49020*0 + 3*212*FLEN/8, x4, x1, x2)

inst_16341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffc000000; valaddr_reg:x3; val_offset:49023*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49023*0 + 3*213*FLEN/8, x4, x1, x2)

inst_16342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffe000000; valaddr_reg:x3; val_offset:49026*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49026*0 + 3*214*FLEN/8, x4, x1, x2)

inst_16343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffff000000; valaddr_reg:x3; val_offset:49029*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49029*0 + 3*215*FLEN/8, x4, x1, x2)

inst_16344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffff800000; valaddr_reg:x3; val_offset:49032*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49032*0 + 3*216*FLEN/8, x4, x1, x2)

inst_16345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffffc00000; valaddr_reg:x3; val_offset:49035*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49035*0 + 3*217*FLEN/8, x4, x1, x2)

inst_16346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffffe00000; valaddr_reg:x3; val_offset:49038*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49038*0 + 3*218*FLEN/8, x4, x1, x2)

inst_16347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffff00000; valaddr_reg:x3; val_offset:49041*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49041*0 + 3*219*FLEN/8, x4, x1, x2)

inst_16348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffff80000; valaddr_reg:x3; val_offset:49044*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49044*0 + 3*220*FLEN/8, x4, x1, x2)

inst_16349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffffc0000; valaddr_reg:x3; val_offset:49047*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49047*0 + 3*221*FLEN/8, x4, x1, x2)

inst_16350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffffe0000; valaddr_reg:x3; val_offset:49050*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49050*0 + 3*222*FLEN/8, x4, x1, x2)

inst_16351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffffff0000; valaddr_reg:x3; val_offset:49053*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49053*0 + 3*223*FLEN/8, x4, x1, x2)

inst_16352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffffff8000; valaddr_reg:x3; val_offset:49056*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49056*0 + 3*224*FLEN/8, x4, x1, x2)

inst_16353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffffffc000; valaddr_reg:x3; val_offset:49059*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49059*0 + 3*225*FLEN/8, x4, x1, x2)

inst_16354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffffffe000; valaddr_reg:x3; val_offset:49062*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49062*0 + 3*226*FLEN/8, x4, x1, x2)

inst_16355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffffff000; valaddr_reg:x3; val_offset:49065*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49065*0 + 3*227*FLEN/8, x4, x1, x2)

inst_16356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffffff800; valaddr_reg:x3; val_offset:49068*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49068*0 + 3*228*FLEN/8, x4, x1, x2)

inst_16357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffffffc00; valaddr_reg:x3; val_offset:49071*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49071*0 + 3*229*FLEN/8, x4, x1, x2)

inst_16358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffffffe00; valaddr_reg:x3; val_offset:49074*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49074*0 + 3*230*FLEN/8, x4, x1, x2)

inst_16359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffffffff00; valaddr_reg:x3; val_offset:49077*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49077*0 + 3*231*FLEN/8, x4, x1, x2)

inst_16360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffffffff80; valaddr_reg:x3; val_offset:49080*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49080*0 + 3*232*FLEN/8, x4, x1, x2)

inst_16361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffffffffc0; valaddr_reg:x3; val_offset:49083*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49083*0 + 3*233*FLEN/8, x4, x1, x2)

inst_16362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffffffffe0; valaddr_reg:x3; val_offset:49086*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49086*0 + 3*234*FLEN/8, x4, x1, x2)

inst_16363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffffffff0; valaddr_reg:x3; val_offset:49089*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49089*0 + 3*235*FLEN/8, x4, x1, x2)

inst_16364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffffffff8; valaddr_reg:x3; val_offset:49092*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49092*0 + 3*236*FLEN/8, x4, x1, x2)

inst_16365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffffffffc; valaddr_reg:x3; val_offset:49095*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49095*0 + 3*237*FLEN/8, x4, x1, x2)

inst_16366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833ffffffffffffe; valaddr_reg:x3; val_offset:49098*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49098*0 + 3*238*FLEN/8, x4, x1, x2)

inst_16367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2cc50c6d63da3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82cc50c6d63da3; op2val:0x8000;
op3val:0x833fffffffffffff; valaddr_reg:x3; val_offset:49101*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49101*0 + 3*239*FLEN/8, x4, x1, x2)

inst_16368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:49104*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49104*0 + 3*240*FLEN/8, x4, x1, x2)

inst_16369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:49107*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49107*0 + 3*241*FLEN/8, x4, x1, x2)

inst_16370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:49110*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49110*0 + 3*242*FLEN/8, x4, x1, x2)

inst_16371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:49113*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49113*0 + 3*243*FLEN/8, x4, x1, x2)

inst_16372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:49116*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49116*0 + 3*244*FLEN/8, x4, x1, x2)

inst_16373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:49119*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49119*0 + 3*245*FLEN/8, x4, x1, x2)

inst_16374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:49122*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49122*0 + 3*246*FLEN/8, x4, x1, x2)

inst_16375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:49125*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49125*0 + 3*247*FLEN/8, x4, x1, x2)

inst_16376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:49128*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49128*0 + 3*248*FLEN/8, x4, x1, x2)

inst_16377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:49131*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49131*0 + 3*249*FLEN/8, x4, x1, x2)

inst_16378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:49134*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49134*0 + 3*250*FLEN/8, x4, x1, x2)

inst_16379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:49137*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49137*0 + 3*251*FLEN/8, x4, x1, x2)

inst_16380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:49140*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49140*0 + 3*252*FLEN/8, x4, x1, x2)

inst_16381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:49143*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49143*0 + 3*253*FLEN/8, x4, x1, x2)

inst_16382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:49146*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49146*0 + 3*254*FLEN/8, x4, x1, x2)

inst_16383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:49149*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49149*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_16384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:49152*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49152*0 + 3*256*FLEN/8, x4, x1, x2)

inst_16385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:49155*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49155*0 + 3*257*FLEN/8, x4, x1, x2)

inst_16386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:49158*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49158*0 + 3*258*FLEN/8, x4, x1, x2)

inst_16387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:49161*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49161*0 + 3*259*FLEN/8, x4, x1, x2)

inst_16388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:49164*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49164*0 + 3*260*FLEN/8, x4, x1, x2)

inst_16389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:49167*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49167*0 + 3*261*FLEN/8, x4, x1, x2)

inst_16390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000000000000; valaddr_reg:x3; val_offset:49170*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49170*0 + 3*262*FLEN/8, x4, x1, x2)

inst_16391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000000000001; valaddr_reg:x3; val_offset:49173*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49173*0 + 3*263*FLEN/8, x4, x1, x2)

inst_16392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000000000003; valaddr_reg:x3; val_offset:49176*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49176*0 + 3*264*FLEN/8, x4, x1, x2)

inst_16393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000000000007; valaddr_reg:x3; val_offset:49179*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49179*0 + 3*265*FLEN/8, x4, x1, x2)

inst_16394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000000000000f; valaddr_reg:x3; val_offset:49182*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49182*0 + 3*266*FLEN/8, x4, x1, x2)

inst_16395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000000000001f; valaddr_reg:x3; val_offset:49185*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49185*0 + 3*267*FLEN/8, x4, x1, x2)

inst_16396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000000000003f; valaddr_reg:x3; val_offset:49188*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49188*0 + 3*268*FLEN/8, x4, x1, x2)

inst_16397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000000000007f; valaddr_reg:x3; val_offset:49191*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49191*0 + 3*269*FLEN/8, x4, x1, x2)

inst_16398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00000000000ff; valaddr_reg:x3; val_offset:49194*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49194*0 + 3*270*FLEN/8, x4, x1, x2)

inst_16399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00000000001ff; valaddr_reg:x3; val_offset:49197*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49197*0 + 3*271*FLEN/8, x4, x1, x2)

inst_16400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00000000003ff; valaddr_reg:x3; val_offset:49200*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49200*0 + 3*272*FLEN/8, x4, x1, x2)

inst_16401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00000000007ff; valaddr_reg:x3; val_offset:49203*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49203*0 + 3*273*FLEN/8, x4, x1, x2)

inst_16402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000000000fff; valaddr_reg:x3; val_offset:49206*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49206*0 + 3*274*FLEN/8, x4, x1, x2)

inst_16403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000000001fff; valaddr_reg:x3; val_offset:49209*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49209*0 + 3*275*FLEN/8, x4, x1, x2)

inst_16404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000000003fff; valaddr_reg:x3; val_offset:49212*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49212*0 + 3*276*FLEN/8, x4, x1, x2)

inst_16405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000000007fff; valaddr_reg:x3; val_offset:49215*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49215*0 + 3*277*FLEN/8, x4, x1, x2)

inst_16406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000000000ffff; valaddr_reg:x3; val_offset:49218*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49218*0 + 3*278*FLEN/8, x4, x1, x2)

inst_16407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000000001ffff; valaddr_reg:x3; val_offset:49221*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49221*0 + 3*279*FLEN/8, x4, x1, x2)

inst_16408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000000003ffff; valaddr_reg:x3; val_offset:49224*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49224*0 + 3*280*FLEN/8, x4, x1, x2)

inst_16409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000000007ffff; valaddr_reg:x3; val_offset:49227*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49227*0 + 3*281*FLEN/8, x4, x1, x2)

inst_16410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00000000fffff; valaddr_reg:x3; val_offset:49230*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49230*0 + 3*282*FLEN/8, x4, x1, x2)

inst_16411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00000001fffff; valaddr_reg:x3; val_offset:49233*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49233*0 + 3*283*FLEN/8, x4, x1, x2)

inst_16412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00000003fffff; valaddr_reg:x3; val_offset:49236*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49236*0 + 3*284*FLEN/8, x4, x1, x2)

inst_16413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00000007fffff; valaddr_reg:x3; val_offset:49239*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49239*0 + 3*285*FLEN/8, x4, x1, x2)

inst_16414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000000ffffff; valaddr_reg:x3; val_offset:49242*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49242*0 + 3*286*FLEN/8, x4, x1, x2)

inst_16415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000001ffffff; valaddr_reg:x3; val_offset:49245*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49245*0 + 3*287*FLEN/8, x4, x1, x2)

inst_16416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000003ffffff; valaddr_reg:x3; val_offset:49248*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49248*0 + 3*288*FLEN/8, x4, x1, x2)

inst_16417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000007ffffff; valaddr_reg:x3; val_offset:49251*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49251*0 + 3*289*FLEN/8, x4, x1, x2)

inst_16418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000000fffffff; valaddr_reg:x3; val_offset:49254*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49254*0 + 3*290*FLEN/8, x4, x1, x2)

inst_16419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000001fffffff; valaddr_reg:x3; val_offset:49257*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49257*0 + 3*291*FLEN/8, x4, x1, x2)

inst_16420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000003fffffff; valaddr_reg:x3; val_offset:49260*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49260*0 + 3*292*FLEN/8, x4, x1, x2)

inst_16421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000007fffffff; valaddr_reg:x3; val_offset:49263*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49263*0 + 3*293*FLEN/8, x4, x1, x2)

inst_16422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00000ffffffff; valaddr_reg:x3; val_offset:49266*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49266*0 + 3*294*FLEN/8, x4, x1, x2)

inst_16423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00001ffffffff; valaddr_reg:x3; val_offset:49269*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49269*0 + 3*295*FLEN/8, x4, x1, x2)

inst_16424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00003ffffffff; valaddr_reg:x3; val_offset:49272*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49272*0 + 3*296*FLEN/8, x4, x1, x2)

inst_16425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00007ffffffff; valaddr_reg:x3; val_offset:49275*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49275*0 + 3*297*FLEN/8, x4, x1, x2)

inst_16426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0000fffffffff; valaddr_reg:x3; val_offset:49278*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49278*0 + 3*298*FLEN/8, x4, x1, x2)

inst_16427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0001fffffffff; valaddr_reg:x3; val_offset:49281*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49281*0 + 3*299*FLEN/8, x4, x1, x2)

inst_16428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0003fffffffff; valaddr_reg:x3; val_offset:49284*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49284*0 + 3*300*FLEN/8, x4, x1, x2)

inst_16429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0007fffffffff; valaddr_reg:x3; val_offset:49287*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49287*0 + 3*301*FLEN/8, x4, x1, x2)

inst_16430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b000ffffffffff; valaddr_reg:x3; val_offset:49290*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49290*0 + 3*302*FLEN/8, x4, x1, x2)

inst_16431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b001ffffffffff; valaddr_reg:x3; val_offset:49293*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49293*0 + 3*303*FLEN/8, x4, x1, x2)

inst_16432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b003ffffffffff; valaddr_reg:x3; val_offset:49296*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49296*0 + 3*304*FLEN/8, x4, x1, x2)

inst_16433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b007ffffffffff; valaddr_reg:x3; val_offset:49299*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49299*0 + 3*305*FLEN/8, x4, x1, x2)

inst_16434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b00fffffffffff; valaddr_reg:x3; val_offset:49302*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49302*0 + 3*306*FLEN/8, x4, x1, x2)

inst_16435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b01fffffffffff; valaddr_reg:x3; val_offset:49305*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49305*0 + 3*307*FLEN/8, x4, x1, x2)

inst_16436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b03fffffffffff; valaddr_reg:x3; val_offset:49308*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49308*0 + 3*308*FLEN/8, x4, x1, x2)

inst_16437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b07fffffffffff; valaddr_reg:x3; val_offset:49311*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49311*0 + 3*309*FLEN/8, x4, x1, x2)

inst_16438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b0ffffffffffff; valaddr_reg:x3; val_offset:49314*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49314*0 + 3*310*FLEN/8, x4, x1, x2)

inst_16439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b1ffffffffffff; valaddr_reg:x3; val_offset:49317*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49317*0 + 3*311*FLEN/8, x4, x1, x2)

inst_16440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b3ffffffffffff; valaddr_reg:x3; val_offset:49320*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49320*0 + 3*312*FLEN/8, x4, x1, x2)

inst_16441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b7ffffffffffff; valaddr_reg:x3; val_offset:49323*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49323*0 + 3*313*FLEN/8, x4, x1, x2)

inst_16442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83b8000000000000; valaddr_reg:x3; val_offset:49326*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49326*0 + 3*314*FLEN/8, x4, x1, x2)

inst_16443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bc000000000000; valaddr_reg:x3; val_offset:49329*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49329*0 + 3*315*FLEN/8, x4, x1, x2)

inst_16444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83be000000000000; valaddr_reg:x3; val_offset:49332*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49332*0 + 3*316*FLEN/8, x4, x1, x2)

inst_16445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bf000000000000; valaddr_reg:x3; val_offset:49335*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49335*0 + 3*317*FLEN/8, x4, x1, x2)

inst_16446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bf800000000000; valaddr_reg:x3; val_offset:49338*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49338*0 + 3*318*FLEN/8, x4, x1, x2)

inst_16447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfc00000000000; valaddr_reg:x3; val_offset:49341*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49341*0 + 3*319*FLEN/8, x4, x1, x2)

inst_16448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfe00000000000; valaddr_reg:x3; val_offset:49344*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49344*0 + 3*320*FLEN/8, x4, x1, x2)

inst_16449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bff00000000000; valaddr_reg:x3; val_offset:49347*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49347*0 + 3*321*FLEN/8, x4, x1, x2)

inst_16450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bff80000000000; valaddr_reg:x3; val_offset:49350*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49350*0 + 3*322*FLEN/8, x4, x1, x2)

inst_16451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffc0000000000; valaddr_reg:x3; val_offset:49353*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49353*0 + 3*323*FLEN/8, x4, x1, x2)

inst_16452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffe0000000000; valaddr_reg:x3; val_offset:49356*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49356*0 + 3*324*FLEN/8, x4, x1, x2)

inst_16453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfff0000000000; valaddr_reg:x3; val_offset:49359*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49359*0 + 3*325*FLEN/8, x4, x1, x2)

inst_16454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfff8000000000; valaddr_reg:x3; val_offset:49362*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49362*0 + 3*326*FLEN/8, x4, x1, x2)

inst_16455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffc000000000; valaddr_reg:x3; val_offset:49365*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49365*0 + 3*327*FLEN/8, x4, x1, x2)

inst_16456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffe000000000; valaddr_reg:x3; val_offset:49368*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49368*0 + 3*328*FLEN/8, x4, x1, x2)

inst_16457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffff000000000; valaddr_reg:x3; val_offset:49371*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49371*0 + 3*329*FLEN/8, x4, x1, x2)

inst_16458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffff800000000; valaddr_reg:x3; val_offset:49374*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49374*0 + 3*330*FLEN/8, x4, x1, x2)

inst_16459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffc00000000; valaddr_reg:x3; val_offset:49377*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49377*0 + 3*331*FLEN/8, x4, x1, x2)

inst_16460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffe00000000; valaddr_reg:x3; val_offset:49380*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49380*0 + 3*332*FLEN/8, x4, x1, x2)

inst_16461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffff00000000; valaddr_reg:x3; val_offset:49383*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49383*0 + 3*333*FLEN/8, x4, x1, x2)

inst_16462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffff80000000; valaddr_reg:x3; val_offset:49386*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49386*0 + 3*334*FLEN/8, x4, x1, x2)

inst_16463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffc0000000; valaddr_reg:x3; val_offset:49389*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49389*0 + 3*335*FLEN/8, x4, x1, x2)

inst_16464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffe0000000; valaddr_reg:x3; val_offset:49392*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49392*0 + 3*336*FLEN/8, x4, x1, x2)

inst_16465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffff0000000; valaddr_reg:x3; val_offset:49395*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49395*0 + 3*337*FLEN/8, x4, x1, x2)

inst_16466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffff8000000; valaddr_reg:x3; val_offset:49398*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49398*0 + 3*338*FLEN/8, x4, x1, x2)

inst_16467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffc000000; valaddr_reg:x3; val_offset:49401*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49401*0 + 3*339*FLEN/8, x4, x1, x2)

inst_16468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffe000000; valaddr_reg:x3; val_offset:49404*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49404*0 + 3*340*FLEN/8, x4, x1, x2)

inst_16469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffff000000; valaddr_reg:x3; val_offset:49407*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49407*0 + 3*341*FLEN/8, x4, x1, x2)

inst_16470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffff800000; valaddr_reg:x3; val_offset:49410*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49410*0 + 3*342*FLEN/8, x4, x1, x2)

inst_16471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffffc00000; valaddr_reg:x3; val_offset:49413*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49413*0 + 3*343*FLEN/8, x4, x1, x2)

inst_16472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffffe00000; valaddr_reg:x3; val_offset:49416*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49416*0 + 3*344*FLEN/8, x4, x1, x2)

inst_16473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffff00000; valaddr_reg:x3; val_offset:49419*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49419*0 + 3*345*FLEN/8, x4, x1, x2)

inst_16474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffff80000; valaddr_reg:x3; val_offset:49422*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49422*0 + 3*346*FLEN/8, x4, x1, x2)

inst_16475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffffc0000; valaddr_reg:x3; val_offset:49425*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49425*0 + 3*347*FLEN/8, x4, x1, x2)

inst_16476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffffe0000; valaddr_reg:x3; val_offset:49428*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49428*0 + 3*348*FLEN/8, x4, x1, x2)

inst_16477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffffff0000; valaddr_reg:x3; val_offset:49431*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49431*0 + 3*349*FLEN/8, x4, x1, x2)

inst_16478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffffff8000; valaddr_reg:x3; val_offset:49434*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49434*0 + 3*350*FLEN/8, x4, x1, x2)

inst_16479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffffffc000; valaddr_reg:x3; val_offset:49437*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49437*0 + 3*351*FLEN/8, x4, x1, x2)

inst_16480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffffffe000; valaddr_reg:x3; val_offset:49440*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49440*0 + 3*352*FLEN/8, x4, x1, x2)

inst_16481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffffff000; valaddr_reg:x3; val_offset:49443*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49443*0 + 3*353*FLEN/8, x4, x1, x2)

inst_16482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffffff800; valaddr_reg:x3; val_offset:49446*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49446*0 + 3*354*FLEN/8, x4, x1, x2)

inst_16483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffffffc00; valaddr_reg:x3; val_offset:49449*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49449*0 + 3*355*FLEN/8, x4, x1, x2)

inst_16484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffffffe00; valaddr_reg:x3; val_offset:49452*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49452*0 + 3*356*FLEN/8, x4, x1, x2)

inst_16485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffffffff00; valaddr_reg:x3; val_offset:49455*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49455*0 + 3*357*FLEN/8, x4, x1, x2)

inst_16486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffffffff80; valaddr_reg:x3; val_offset:49458*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49458*0 + 3*358*FLEN/8, x4, x1, x2)

inst_16487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffffffffc0; valaddr_reg:x3; val_offset:49461*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49461*0 + 3*359*FLEN/8, x4, x1, x2)

inst_16488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffffffffe0; valaddr_reg:x3; val_offset:49464*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49464*0 + 3*360*FLEN/8, x4, x1, x2)

inst_16489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffffffff0; valaddr_reg:x3; val_offset:49467*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49467*0 + 3*361*FLEN/8, x4, x1, x2)

inst_16490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffffffff8; valaddr_reg:x3; val_offset:49470*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49470*0 + 3*362*FLEN/8, x4, x1, x2)

inst_16491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffffffffc; valaddr_reg:x3; val_offset:49473*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49473*0 + 3*363*FLEN/8, x4, x1, x2)

inst_16492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bffffffffffffe; valaddr_reg:x3; val_offset:49476*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49476*0 + 3*364*FLEN/8, x4, x1, x2)

inst_16493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3449ec298b02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83449ec298b02f; op2val:0x8000;
op3val:0x83bfffffffffffff; valaddr_reg:x3; val_offset:49479*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49479*0 + 3*365*FLEN/8, x4, x1, x2)

inst_16494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000000000000; valaddr_reg:x3; val_offset:49482*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49482*0 + 3*366*FLEN/8, x4, x1, x2)

inst_16495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:49485*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49485*0 + 3*367*FLEN/8, x4, x1, x2)

inst_16496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:49488*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49488*0 + 3*368*FLEN/8, x4, x1, x2)

inst_16497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:49491*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49491*0 + 3*369*FLEN/8, x4, x1, x2)

inst_16498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:49494*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49494*0 + 3*370*FLEN/8, x4, x1, x2)

inst_16499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:49497*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49497*0 + 3*371*FLEN/8, x4, x1, x2)

inst_16500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:49500*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49500*0 + 3*372*FLEN/8, x4, x1, x2)

inst_16501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000000000007f; valaddr_reg:x3; val_offset:49503*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49503*0 + 3*373*FLEN/8, x4, x1, x2)

inst_16502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00000000000ff; valaddr_reg:x3; val_offset:49506*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49506*0 + 3*374*FLEN/8, x4, x1, x2)

inst_16503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00000000001ff; valaddr_reg:x3; val_offset:49509*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49509*0 + 3*375*FLEN/8, x4, x1, x2)

inst_16504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00000000003ff; valaddr_reg:x3; val_offset:49512*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49512*0 + 3*376*FLEN/8, x4, x1, x2)

inst_16505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00000000007ff; valaddr_reg:x3; val_offset:49515*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49515*0 + 3*377*FLEN/8, x4, x1, x2)

inst_16506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000000000fff; valaddr_reg:x3; val_offset:49518*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49518*0 + 3*378*FLEN/8, x4, x1, x2)

inst_16507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000000001fff; valaddr_reg:x3; val_offset:49521*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49521*0 + 3*379*FLEN/8, x4, x1, x2)

inst_16508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000000003fff; valaddr_reg:x3; val_offset:49524*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49524*0 + 3*380*FLEN/8, x4, x1, x2)

inst_16509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000000007fff; valaddr_reg:x3; val_offset:49527*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49527*0 + 3*381*FLEN/8, x4, x1, x2)

inst_16510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000000000ffff; valaddr_reg:x3; val_offset:49530*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49530*0 + 3*382*FLEN/8, x4, x1, x2)

inst_16511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000000001ffff; valaddr_reg:x3; val_offset:49533*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49533*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_16512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000000003ffff; valaddr_reg:x3; val_offset:49536*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49536*0 + 3*384*FLEN/8, x4, x1, x2)

inst_16513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000000007ffff; valaddr_reg:x3; val_offset:49539*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49539*0 + 3*385*FLEN/8, x4, x1, x2)

inst_16514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00000000fffff; valaddr_reg:x3; val_offset:49542*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49542*0 + 3*386*FLEN/8, x4, x1, x2)

inst_16515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00000001fffff; valaddr_reg:x3; val_offset:49545*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49545*0 + 3*387*FLEN/8, x4, x1, x2)

inst_16516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00000003fffff; valaddr_reg:x3; val_offset:49548*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49548*0 + 3*388*FLEN/8, x4, x1, x2)

inst_16517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00000007fffff; valaddr_reg:x3; val_offset:49551*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49551*0 + 3*389*FLEN/8, x4, x1, x2)

inst_16518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000000ffffff; valaddr_reg:x3; val_offset:49554*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49554*0 + 3*390*FLEN/8, x4, x1, x2)

inst_16519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000001ffffff; valaddr_reg:x3; val_offset:49557*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49557*0 + 3*391*FLEN/8, x4, x1, x2)

inst_16520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000003ffffff; valaddr_reg:x3; val_offset:49560*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49560*0 + 3*392*FLEN/8, x4, x1, x2)

inst_16521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000007ffffff; valaddr_reg:x3; val_offset:49563*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49563*0 + 3*393*FLEN/8, x4, x1, x2)

inst_16522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000000fffffff; valaddr_reg:x3; val_offset:49566*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49566*0 + 3*394*FLEN/8, x4, x1, x2)

inst_16523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000001fffffff; valaddr_reg:x3; val_offset:49569*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49569*0 + 3*395*FLEN/8, x4, x1, x2)

inst_16524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000003fffffff; valaddr_reg:x3; val_offset:49572*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49572*0 + 3*396*FLEN/8, x4, x1, x2)

inst_16525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000007fffffff; valaddr_reg:x3; val_offset:49575*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49575*0 + 3*397*FLEN/8, x4, x1, x2)

inst_16526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00000ffffffff; valaddr_reg:x3; val_offset:49578*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49578*0 + 3*398*FLEN/8, x4, x1, x2)

inst_16527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00001ffffffff; valaddr_reg:x3; val_offset:49581*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49581*0 + 3*399*FLEN/8, x4, x1, x2)

inst_16528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00003ffffffff; valaddr_reg:x3; val_offset:49584*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49584*0 + 3*400*FLEN/8, x4, x1, x2)

inst_16529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00007ffffffff; valaddr_reg:x3; val_offset:49587*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49587*0 + 3*401*FLEN/8, x4, x1, x2)

inst_16530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0000fffffffff; valaddr_reg:x3; val_offset:49590*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49590*0 + 3*402*FLEN/8, x4, x1, x2)

inst_16531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0001fffffffff; valaddr_reg:x3; val_offset:49593*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49593*0 + 3*403*FLEN/8, x4, x1, x2)

inst_16532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0003fffffffff; valaddr_reg:x3; val_offset:49596*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49596*0 + 3*404*FLEN/8, x4, x1, x2)

inst_16533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0007fffffffff; valaddr_reg:x3; val_offset:49599*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49599*0 + 3*405*FLEN/8, x4, x1, x2)

inst_16534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff000ffffffffff; valaddr_reg:x3; val_offset:49602*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49602*0 + 3*406*FLEN/8, x4, x1, x2)

inst_16535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff001ffffffffff; valaddr_reg:x3; val_offset:49605*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49605*0 + 3*407*FLEN/8, x4, x1, x2)

inst_16536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff003ffffffffff; valaddr_reg:x3; val_offset:49608*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49608*0 + 3*408*FLEN/8, x4, x1, x2)

inst_16537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff007ffffffffff; valaddr_reg:x3; val_offset:49611*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49611*0 + 3*409*FLEN/8, x4, x1, x2)

inst_16538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff00fffffffffff; valaddr_reg:x3; val_offset:49614*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49614*0 + 3*410*FLEN/8, x4, x1, x2)

inst_16539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff01fffffffffff; valaddr_reg:x3; val_offset:49617*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49617*0 + 3*411*FLEN/8, x4, x1, x2)

inst_16540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff03fffffffffff; valaddr_reg:x3; val_offset:49620*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49620*0 + 3*412*FLEN/8, x4, x1, x2)

inst_16541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff07fffffffffff; valaddr_reg:x3; val_offset:49623*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49623*0 + 3*413*FLEN/8, x4, x1, x2)

inst_16542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff0ffffffffffff; valaddr_reg:x3; val_offset:49626*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49626*0 + 3*414*FLEN/8, x4, x1, x2)

inst_16543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff1ffffffffffff; valaddr_reg:x3; val_offset:49629*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49629*0 + 3*415*FLEN/8, x4, x1, x2)

inst_16544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff3ffffffffffff; valaddr_reg:x3; val_offset:49632*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49632*0 + 3*416*FLEN/8, x4, x1, x2)

inst_16545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff7ffffffffffff; valaddr_reg:x3; val_offset:49635*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49635*0 + 3*417*FLEN/8, x4, x1, x2)

inst_16546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ff8000000000000; valaddr_reg:x3; val_offset:49638*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49638*0 + 3*418*FLEN/8, x4, x1, x2)

inst_16547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffc000000000000; valaddr_reg:x3; val_offset:49641*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49641*0 + 3*419*FLEN/8, x4, x1, x2)

inst_16548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffe000000000000; valaddr_reg:x3; val_offset:49644*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49644*0 + 3*420*FLEN/8, x4, x1, x2)

inst_16549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fff000000000000; valaddr_reg:x3; val_offset:49647*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49647*0 + 3*421*FLEN/8, x4, x1, x2)

inst_16550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fff800000000000; valaddr_reg:x3; val_offset:49650*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49650*0 + 3*422*FLEN/8, x4, x1, x2)

inst_16551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffc00000000000; valaddr_reg:x3; val_offset:49653*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49653*0 + 3*423*FLEN/8, x4, x1, x2)

inst_16552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffe00000000000; valaddr_reg:x3; val_offset:49656*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49656*0 + 3*424*FLEN/8, x4, x1, x2)

inst_16553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffff00000000000; valaddr_reg:x3; val_offset:49659*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49659*0 + 3*425*FLEN/8, x4, x1, x2)

inst_16554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffff80000000000; valaddr_reg:x3; val_offset:49662*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49662*0 + 3*426*FLEN/8, x4, x1, x2)

inst_16555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffc0000000000; valaddr_reg:x3; val_offset:49665*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49665*0 + 3*427*FLEN/8, x4, x1, x2)

inst_16556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffe0000000000; valaddr_reg:x3; val_offset:49668*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49668*0 + 3*428*FLEN/8, x4, x1, x2)

inst_16557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffff0000000000; valaddr_reg:x3; val_offset:49671*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49671*0 + 3*429*FLEN/8, x4, x1, x2)

inst_16558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffff8000000000; valaddr_reg:x3; val_offset:49674*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49674*0 + 3*430*FLEN/8, x4, x1, x2)

inst_16559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffc000000000; valaddr_reg:x3; val_offset:49677*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49677*0 + 3*431*FLEN/8, x4, x1, x2)

inst_16560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffe000000000; valaddr_reg:x3; val_offset:49680*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49680*0 + 3*432*FLEN/8, x4, x1, x2)

inst_16561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffff000000000; valaddr_reg:x3; val_offset:49683*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49683*0 + 3*433*FLEN/8, x4, x1, x2)

inst_16562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffff800000000; valaddr_reg:x3; val_offset:49686*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49686*0 + 3*434*FLEN/8, x4, x1, x2)

inst_16563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffc00000000; valaddr_reg:x3; val_offset:49689*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49689*0 + 3*435*FLEN/8, x4, x1, x2)

inst_16564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffe00000000; valaddr_reg:x3; val_offset:49692*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49692*0 + 3*436*FLEN/8, x4, x1, x2)

inst_16565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffff00000000; valaddr_reg:x3; val_offset:49695*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49695*0 + 3*437*FLEN/8, x4, x1, x2)

inst_16566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffff80000000; valaddr_reg:x3; val_offset:49698*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49698*0 + 3*438*FLEN/8, x4, x1, x2)

inst_16567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffc0000000; valaddr_reg:x3; val_offset:49701*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49701*0 + 3*439*FLEN/8, x4, x1, x2)

inst_16568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffe0000000; valaddr_reg:x3; val_offset:49704*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49704*0 + 3*440*FLEN/8, x4, x1, x2)

inst_16569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffff0000000; valaddr_reg:x3; val_offset:49707*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49707*0 + 3*441*FLEN/8, x4, x1, x2)

inst_16570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffff8000000; valaddr_reg:x3; val_offset:49710*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49710*0 + 3*442*FLEN/8, x4, x1, x2)

inst_16571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffc000000; valaddr_reg:x3; val_offset:49713*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49713*0 + 3*443*FLEN/8, x4, x1, x2)

inst_16572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffe000000; valaddr_reg:x3; val_offset:49716*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49716*0 + 3*444*FLEN/8, x4, x1, x2)

inst_16573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffff000000; valaddr_reg:x3; val_offset:49719*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49719*0 + 3*445*FLEN/8, x4, x1, x2)

inst_16574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffff800000; valaddr_reg:x3; val_offset:49722*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49722*0 + 3*446*FLEN/8, x4, x1, x2)

inst_16575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffffc00000; valaddr_reg:x3; val_offset:49725*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49725*0 + 3*447*FLEN/8, x4, x1, x2)

inst_16576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffffe00000; valaddr_reg:x3; val_offset:49728*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49728*0 + 3*448*FLEN/8, x4, x1, x2)

inst_16577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffff00000; valaddr_reg:x3; val_offset:49731*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49731*0 + 3*449*FLEN/8, x4, x1, x2)

inst_16578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffff80000; valaddr_reg:x3; val_offset:49734*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49734*0 + 3*450*FLEN/8, x4, x1, x2)

inst_16579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffffc0000; valaddr_reg:x3; val_offset:49737*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49737*0 + 3*451*FLEN/8, x4, x1, x2)

inst_16580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffffe0000; valaddr_reg:x3; val_offset:49740*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49740*0 + 3*452*FLEN/8, x4, x1, x2)

inst_16581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffffff0000; valaddr_reg:x3; val_offset:49743*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49743*0 + 3*453*FLEN/8, x4, x1, x2)

inst_16582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffffff8000; valaddr_reg:x3; val_offset:49746*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49746*0 + 3*454*FLEN/8, x4, x1, x2)

inst_16583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffffffc000; valaddr_reg:x3; val_offset:49749*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49749*0 + 3*455*FLEN/8, x4, x1, x2)

inst_16584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffffffe000; valaddr_reg:x3; val_offset:49752*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49752*0 + 3*456*FLEN/8, x4, x1, x2)

inst_16585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffffff000; valaddr_reg:x3; val_offset:49755*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49755*0 + 3*457*FLEN/8, x4, x1, x2)

inst_16586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffffff800; valaddr_reg:x3; val_offset:49758*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49758*0 + 3*458*FLEN/8, x4, x1, x2)

inst_16587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffffffc00; valaddr_reg:x3; val_offset:49761*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49761*0 + 3*459*FLEN/8, x4, x1, x2)

inst_16588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffffffe00; valaddr_reg:x3; val_offset:49764*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49764*0 + 3*460*FLEN/8, x4, x1, x2)

inst_16589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffffffff00; valaddr_reg:x3; val_offset:49767*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49767*0 + 3*461*FLEN/8, x4, x1, x2)

inst_16590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffffffff80; valaddr_reg:x3; val_offset:49770*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49770*0 + 3*462*FLEN/8, x4, x1, x2)

inst_16591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:49773*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49773*0 + 3*463*FLEN/8, x4, x1, x2)

inst_16592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:49776*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49776*0 + 3*464*FLEN/8, x4, x1, x2)

inst_16593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:49779*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49779*0 + 3*465*FLEN/8, x4, x1, x2)

inst_16594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:49782*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49782*0 + 3*466*FLEN/8, x4, x1, x2)

inst_16595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:49785*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49785*0 + 3*467*FLEN/8, x4, x1, x2)

inst_16596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:49788*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49788*0 + 3*468*FLEN/8, x4, x1, x2)

inst_16597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x3fffffffffffffff; valaddr_reg:x3; val_offset:49791*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49791*0 + 3*469*FLEN/8, x4, x1, x2)

inst_16598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe0000000000001; valaddr_reg:x3; val_offset:49794*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49794*0 + 3*470*FLEN/8, x4, x1, x2)

inst_16599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe0000000000003; valaddr_reg:x3; val_offset:49797*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49797*0 + 3*471*FLEN/8, x4, x1, x2)

inst_16600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe0000000000007; valaddr_reg:x3; val_offset:49800*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49800*0 + 3*472*FLEN/8, x4, x1, x2)

inst_16601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe000000000000f; valaddr_reg:x3; val_offset:49803*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49803*0 + 3*473*FLEN/8, x4, x1, x2)

inst_16602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe000000000001f; valaddr_reg:x3; val_offset:49806*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49806*0 + 3*474*FLEN/8, x4, x1, x2)

inst_16603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe000000000003f; valaddr_reg:x3; val_offset:49809*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49809*0 + 3*475*FLEN/8, x4, x1, x2)

inst_16604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe3333333333333; valaddr_reg:x3; val_offset:49812*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49812*0 + 3*476*FLEN/8, x4, x1, x2)

inst_16605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe4924924924924; valaddr_reg:x3; val_offset:49815*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49815*0 + 3*477*FLEN/8, x4, x1, x2)

inst_16606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe6666666666666; valaddr_reg:x3; val_offset:49818*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49818*0 + 3*478*FLEN/8, x4, x1, x2)

inst_16607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe6db6db6db6db6; valaddr_reg:x3; val_offset:49821*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49821*0 + 3*479*FLEN/8, x4, x1, x2)

inst_16608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe7777777777777; valaddr_reg:x3; val_offset:49824*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49824*0 + 3*480*FLEN/8, x4, x1, x2)

inst_16609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe8888888888888; valaddr_reg:x3; val_offset:49827*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49827*0 + 3*481*FLEN/8, x4, x1, x2)

inst_16610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fe9999999999999; valaddr_reg:x3; val_offset:49830*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49830*0 + 3*482*FLEN/8, x4, x1, x2)

inst_16611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7feb6db6db6db6db; valaddr_reg:x3; val_offset:49833*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49833*0 + 3*483*FLEN/8, x4, x1, x2)

inst_16612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7feccccccccccccc; valaddr_reg:x3; val_offset:49836*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49836*0 + 3*484*FLEN/8, x4, x1, x2)

inst_16613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fedb6db6db6db6d; valaddr_reg:x3; val_offset:49839*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49839*0 + 3*485*FLEN/8, x4, x1, x2)

inst_16614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fefffffffffffc0; valaddr_reg:x3; val_offset:49842*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49842*0 + 3*486*FLEN/8, x4, x1, x2)

inst_16615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7fefffffffffffe0; valaddr_reg:x3; val_offset:49845*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49845*0 + 3*487*FLEN/8, x4, x1, x2)

inst_16616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7feffffffffffff0; valaddr_reg:x3; val_offset:49848*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49848*0 + 3*488*FLEN/8, x4, x1, x2)

inst_16617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7feffffffffffff8; valaddr_reg:x3; val_offset:49851*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49851*0 + 3*489*FLEN/8, x4, x1, x2)

inst_16618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7feffffffffffffc; valaddr_reg:x3; val_offset:49854*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49854*0 + 3*490*FLEN/8, x4, x1, x2)

inst_16619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x35229da34955b and fs2 == 0 and fe2 == 0x605 and fm2 == 0xa7fee58a26363 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f835229da34955b; op2val:0x605a7fee58a26363;
op3val:0x7feffffffffffffe; valaddr_reg:x3; val_offset:49857*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49857*0 + 3*491*FLEN/8, x4, x1, x2)

inst_16620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:49860*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49860*0 + 3*492*FLEN/8, x4, x1, x2)

inst_16621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:49863*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49863*0 + 3*493*FLEN/8, x4, x1, x2)

inst_16622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:49866*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49866*0 + 3*494*FLEN/8, x4, x1, x2)

inst_16623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:49869*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49869*0 + 3*495*FLEN/8, x4, x1, x2)

inst_16624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:49872*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49872*0 + 3*496*FLEN/8, x4, x1, x2)

inst_16625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:49875*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49875*0 + 3*497*FLEN/8, x4, x1, x2)

inst_16626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:49878*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49878*0 + 3*498*FLEN/8, x4, x1, x2)

inst_16627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:49881*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49881*0 + 3*499*FLEN/8, x4, x1, x2)

inst_16628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:49884*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49884*0 + 3*500*FLEN/8, x4, x1, x2)

inst_16629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:49887*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49887*0 + 3*501*FLEN/8, x4, x1, x2)

inst_16630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:49890*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49890*0 + 3*502*FLEN/8, x4, x1, x2)

inst_16631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:49893*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49893*0 + 3*503*FLEN/8, x4, x1, x2)

inst_16632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:49896*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49896*0 + 3*504*FLEN/8, x4, x1, x2)

inst_16633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:49899*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49899*0 + 3*505*FLEN/8, x4, x1, x2)

inst_16634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:49902*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49902*0 + 3*506*FLEN/8, x4, x1, x2)

inst_16635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:49905*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49905*0 + 3*507*FLEN/8, x4, x1, x2)

inst_16636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:49908*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49908*0 + 3*508*FLEN/8, x4, x1, x2)

inst_16637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:49911*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49911*0 + 3*509*FLEN/8, x4, x1, x2)

inst_16638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:49914*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49914*0 + 3*510*FLEN/8, x4, x1, x2)

inst_16639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:49917*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49917*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_16640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:49920*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49920*0 + 3*512*FLEN/8, x4, x1, x2)

inst_16641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:49923*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49923*0 + 3*513*FLEN/8, x4, x1, x2)

inst_16642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000000000000; valaddr_reg:x3; val_offset:49926*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49926*0 + 3*514*FLEN/8, x4, x1, x2)

inst_16643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000000000001; valaddr_reg:x3; val_offset:49929*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49929*0 + 3*515*FLEN/8, x4, x1, x2)

inst_16644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000000000003; valaddr_reg:x3; val_offset:49932*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49932*0 + 3*516*FLEN/8, x4, x1, x2)

inst_16645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000000000007; valaddr_reg:x3; val_offset:49935*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49935*0 + 3*517*FLEN/8, x4, x1, x2)

inst_16646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000000000000f; valaddr_reg:x3; val_offset:49938*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49938*0 + 3*518*FLEN/8, x4, x1, x2)

inst_16647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000000000001f; valaddr_reg:x3; val_offset:49941*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49941*0 + 3*519*FLEN/8, x4, x1, x2)

inst_16648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000000000003f; valaddr_reg:x3; val_offset:49944*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49944*0 + 3*520*FLEN/8, x4, x1, x2)

inst_16649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000000000007f; valaddr_reg:x3; val_offset:49947*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49947*0 + 3*521*FLEN/8, x4, x1, x2)

inst_16650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400000000000ff; valaddr_reg:x3; val_offset:49950*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49950*0 + 3*522*FLEN/8, x4, x1, x2)

inst_16651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400000000001ff; valaddr_reg:x3; val_offset:49953*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49953*0 + 3*523*FLEN/8, x4, x1, x2)

inst_16652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400000000003ff; valaddr_reg:x3; val_offset:49956*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49956*0 + 3*524*FLEN/8, x4, x1, x2)

inst_16653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400000000007ff; valaddr_reg:x3; val_offset:49959*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49959*0 + 3*525*FLEN/8, x4, x1, x2)

inst_16654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000000000fff; valaddr_reg:x3; val_offset:49962*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49962*0 + 3*526*FLEN/8, x4, x1, x2)

inst_16655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000000001fff; valaddr_reg:x3; val_offset:49965*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49965*0 + 3*527*FLEN/8, x4, x1, x2)

inst_16656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000000003fff; valaddr_reg:x3; val_offset:49968*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49968*0 + 3*528*FLEN/8, x4, x1, x2)

inst_16657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000000007fff; valaddr_reg:x3; val_offset:49971*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49971*0 + 3*529*FLEN/8, x4, x1, x2)

inst_16658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000000000ffff; valaddr_reg:x3; val_offset:49974*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49974*0 + 3*530*FLEN/8, x4, x1, x2)

inst_16659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000000001ffff; valaddr_reg:x3; val_offset:49977*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49977*0 + 3*531*FLEN/8, x4, x1, x2)

inst_16660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000000003ffff; valaddr_reg:x3; val_offset:49980*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49980*0 + 3*532*FLEN/8, x4, x1, x2)

inst_16661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000000007ffff; valaddr_reg:x3; val_offset:49983*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49983*0 + 3*533*FLEN/8, x4, x1, x2)

inst_16662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400000000fffff; valaddr_reg:x3; val_offset:49986*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49986*0 + 3*534*FLEN/8, x4, x1, x2)

inst_16663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400000001fffff; valaddr_reg:x3; val_offset:49989*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49989*0 + 3*535*FLEN/8, x4, x1, x2)

inst_16664:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400000003fffff; valaddr_reg:x3; val_offset:49992*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49992*0 + 3*536*FLEN/8, x4, x1, x2)

inst_16665:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400000007fffff; valaddr_reg:x3; val_offset:49995*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49995*0 + 3*537*FLEN/8, x4, x1, x2)

inst_16666:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000000ffffff; valaddr_reg:x3; val_offset:49998*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49998*0 + 3*538*FLEN/8, x4, x1, x2)

inst_16667:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000001ffffff; valaddr_reg:x3; val_offset:50001*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50001*0 + 3*539*FLEN/8, x4, x1, x2)

inst_16668:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000003ffffff; valaddr_reg:x3; val_offset:50004*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50004*0 + 3*540*FLEN/8, x4, x1, x2)

inst_16669:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000007ffffff; valaddr_reg:x3; val_offset:50007*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50007*0 + 3*541*FLEN/8, x4, x1, x2)

inst_16670:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000000fffffff; valaddr_reg:x3; val_offset:50010*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50010*0 + 3*542*FLEN/8, x4, x1, x2)

inst_16671:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000001fffffff; valaddr_reg:x3; val_offset:50013*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50013*0 + 3*543*FLEN/8, x4, x1, x2)

inst_16672:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000003fffffff; valaddr_reg:x3; val_offset:50016*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50016*0 + 3*544*FLEN/8, x4, x1, x2)

inst_16673:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000007fffffff; valaddr_reg:x3; val_offset:50019*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50019*0 + 3*545*FLEN/8, x4, x1, x2)

inst_16674:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400000ffffffff; valaddr_reg:x3; val_offset:50022*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50022*0 + 3*546*FLEN/8, x4, x1, x2)

inst_16675:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400001ffffffff; valaddr_reg:x3; val_offset:50025*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50025*0 + 3*547*FLEN/8, x4, x1, x2)

inst_16676:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400003ffffffff; valaddr_reg:x3; val_offset:50028*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50028*0 + 3*548*FLEN/8, x4, x1, x2)

inst_16677:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400007ffffffff; valaddr_reg:x3; val_offset:50031*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50031*0 + 3*549*FLEN/8, x4, x1, x2)

inst_16678:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140000fffffffff; valaddr_reg:x3; val_offset:50034*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50034*0 + 3*550*FLEN/8, x4, x1, x2)

inst_16679:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140001fffffffff; valaddr_reg:x3; val_offset:50037*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50037*0 + 3*551*FLEN/8, x4, x1, x2)

inst_16680:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140003fffffffff; valaddr_reg:x3; val_offset:50040*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50040*0 + 3*552*FLEN/8, x4, x1, x2)

inst_16681:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140007fffffffff; valaddr_reg:x3; val_offset:50043*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50043*0 + 3*553*FLEN/8, x4, x1, x2)

inst_16682:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14000ffffffffff; valaddr_reg:x3; val_offset:50046*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50046*0 + 3*554*FLEN/8, x4, x1, x2)

inst_16683:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14001ffffffffff; valaddr_reg:x3; val_offset:50049*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50049*0 + 3*555*FLEN/8, x4, x1, x2)

inst_16684:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14003ffffffffff; valaddr_reg:x3; val_offset:50052*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50052*0 + 3*556*FLEN/8, x4, x1, x2)

inst_16685:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14007ffffffffff; valaddr_reg:x3; val_offset:50055*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50055*0 + 3*557*FLEN/8, x4, x1, x2)

inst_16686:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1400fffffffffff; valaddr_reg:x3; val_offset:50058*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50058*0 + 3*558*FLEN/8, x4, x1, x2)

inst_16687:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1401fffffffffff; valaddr_reg:x3; val_offset:50061*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50061*0 + 3*559*FLEN/8, x4, x1, x2)

inst_16688:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1403fffffffffff; valaddr_reg:x3; val_offset:50064*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50064*0 + 3*560*FLEN/8, x4, x1, x2)

inst_16689:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x1407fffffffffff; valaddr_reg:x3; val_offset:50067*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50067*0 + 3*561*FLEN/8, x4, x1, x2)

inst_16690:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x140ffffffffffff; valaddr_reg:x3; val_offset:50070*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50070*0 + 3*562*FLEN/8, x4, x1, x2)

inst_16691:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x141ffffffffffff; valaddr_reg:x3; val_offset:50073*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50073*0 + 3*563*FLEN/8, x4, x1, x2)

inst_16692:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x143ffffffffffff; valaddr_reg:x3; val_offset:50076*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50076*0 + 3*564*FLEN/8, x4, x1, x2)

inst_16693:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x147ffffffffffff; valaddr_reg:x3; val_offset:50079*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50079*0 + 3*565*FLEN/8, x4, x1, x2)

inst_16694:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x148000000000000; valaddr_reg:x3; val_offset:50082*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50082*0 + 3*566*FLEN/8, x4, x1, x2)

inst_16695:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14c000000000000; valaddr_reg:x3; val_offset:50085*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50085*0 + 3*567*FLEN/8, x4, x1, x2)

inst_16696:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14e000000000000; valaddr_reg:x3; val_offset:50088*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50088*0 + 3*568*FLEN/8, x4, x1, x2)

inst_16697:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14f000000000000; valaddr_reg:x3; val_offset:50091*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50091*0 + 3*569*FLEN/8, x4, x1, x2)

inst_16698:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14f800000000000; valaddr_reg:x3; val_offset:50094*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50094*0 + 3*570*FLEN/8, x4, x1, x2)

inst_16699:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fc00000000000; valaddr_reg:x3; val_offset:50097*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50097*0 + 3*571*FLEN/8, x4, x1, x2)

inst_16700:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fe00000000000; valaddr_reg:x3; val_offset:50100*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50100*0 + 3*572*FLEN/8, x4, x1, x2)

inst_16701:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ff00000000000; valaddr_reg:x3; val_offset:50103*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50103*0 + 3*573*FLEN/8, x4, x1, x2)

inst_16702:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ff80000000000; valaddr_reg:x3; val_offset:50106*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50106*0 + 3*574*FLEN/8, x4, x1, x2)

inst_16703:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffc0000000000; valaddr_reg:x3; val_offset:50109*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50109*0 + 3*575*FLEN/8, x4, x1, x2)

inst_16704:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffe0000000000; valaddr_reg:x3; val_offset:50112*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50112*0 + 3*576*FLEN/8, x4, x1, x2)

inst_16705:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fff0000000000; valaddr_reg:x3; val_offset:50115*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50115*0 + 3*577*FLEN/8, x4, x1, x2)

inst_16706:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fff8000000000; valaddr_reg:x3; val_offset:50118*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50118*0 + 3*578*FLEN/8, x4, x1, x2)

inst_16707:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffc000000000; valaddr_reg:x3; val_offset:50121*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50121*0 + 3*579*FLEN/8, x4, x1, x2)

inst_16708:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffe000000000; valaddr_reg:x3; val_offset:50124*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50124*0 + 3*580*FLEN/8, x4, x1, x2)

inst_16709:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffff000000000; valaddr_reg:x3; val_offset:50127*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50127*0 + 3*581*FLEN/8, x4, x1, x2)

inst_16710:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffff800000000; valaddr_reg:x3; val_offset:50130*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50130*0 + 3*582*FLEN/8, x4, x1, x2)

inst_16711:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffc00000000; valaddr_reg:x3; val_offset:50133*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50133*0 + 3*583*FLEN/8, x4, x1, x2)

inst_16712:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffe00000000; valaddr_reg:x3; val_offset:50136*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50136*0 + 3*584*FLEN/8, x4, x1, x2)

inst_16713:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffff00000000; valaddr_reg:x3; val_offset:50139*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50139*0 + 3*585*FLEN/8, x4, x1, x2)

inst_16714:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffff80000000; valaddr_reg:x3; val_offset:50142*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50142*0 + 3*586*FLEN/8, x4, x1, x2)

inst_16715:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffc0000000; valaddr_reg:x3; val_offset:50145*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50145*0 + 3*587*FLEN/8, x4, x1, x2)

inst_16716:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffe0000000; valaddr_reg:x3; val_offset:50148*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50148*0 + 3*588*FLEN/8, x4, x1, x2)

inst_16717:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffff0000000; valaddr_reg:x3; val_offset:50151*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50151*0 + 3*589*FLEN/8, x4, x1, x2)

inst_16718:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffff8000000; valaddr_reg:x3; val_offset:50154*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50154*0 + 3*590*FLEN/8, x4, x1, x2)

inst_16719:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffc000000; valaddr_reg:x3; val_offset:50157*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50157*0 + 3*591*FLEN/8, x4, x1, x2)

inst_16720:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffe000000; valaddr_reg:x3; val_offset:50160*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50160*0 + 3*592*FLEN/8, x4, x1, x2)

inst_16721:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffff000000; valaddr_reg:x3; val_offset:50163*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50163*0 + 3*593*FLEN/8, x4, x1, x2)

inst_16722:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffff800000; valaddr_reg:x3; val_offset:50166*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50166*0 + 3*594*FLEN/8, x4, x1, x2)

inst_16723:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffffc00000; valaddr_reg:x3; val_offset:50169*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50169*0 + 3*595*FLEN/8, x4, x1, x2)

inst_16724:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffffe00000; valaddr_reg:x3; val_offset:50172*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50172*0 + 3*596*FLEN/8, x4, x1, x2)

inst_16725:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffff00000; valaddr_reg:x3; val_offset:50175*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50175*0 + 3*597*FLEN/8, x4, x1, x2)

inst_16726:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffff80000; valaddr_reg:x3; val_offset:50178*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50178*0 + 3*598*FLEN/8, x4, x1, x2)

inst_16727:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffffc0000; valaddr_reg:x3; val_offset:50181*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50181*0 + 3*599*FLEN/8, x4, x1, x2)

inst_16728:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffffe0000; valaddr_reg:x3; val_offset:50184*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50184*0 + 3*600*FLEN/8, x4, x1, x2)

inst_16729:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffffff0000; valaddr_reg:x3; val_offset:50187*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50187*0 + 3*601*FLEN/8, x4, x1, x2)

inst_16730:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffffff8000; valaddr_reg:x3; val_offset:50190*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50190*0 + 3*602*FLEN/8, x4, x1, x2)

inst_16731:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffffffc000; valaddr_reg:x3; val_offset:50193*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50193*0 + 3*603*FLEN/8, x4, x1, x2)

inst_16732:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffffffe000; valaddr_reg:x3; val_offset:50196*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50196*0 + 3*604*FLEN/8, x4, x1, x2)

inst_16733:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffffff000; valaddr_reg:x3; val_offset:50199*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50199*0 + 3*605*FLEN/8, x4, x1, x2)

inst_16734:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffffff800; valaddr_reg:x3; val_offset:50202*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50202*0 + 3*606*FLEN/8, x4, x1, x2)

inst_16735:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffffffc00; valaddr_reg:x3; val_offset:50205*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50205*0 + 3*607*FLEN/8, x4, x1, x2)

inst_16736:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffffffe00; valaddr_reg:x3; val_offset:50208*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50208*0 + 3*608*FLEN/8, x4, x1, x2)

inst_16737:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffffffff00; valaddr_reg:x3; val_offset:50211*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50211*0 + 3*609*FLEN/8, x4, x1, x2)

inst_16738:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffffffff80; valaddr_reg:x3; val_offset:50214*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50214*0 + 3*610*FLEN/8, x4, x1, x2)

inst_16739:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffffffffc0; valaddr_reg:x3; val_offset:50217*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50217*0 + 3*611*FLEN/8, x4, x1, x2)

inst_16740:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffffffffe0; valaddr_reg:x3; val_offset:50220*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50220*0 + 3*612*FLEN/8, x4, x1, x2)

inst_16741:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffffffff0; valaddr_reg:x3; val_offset:50223*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50223*0 + 3*613*FLEN/8, x4, x1, x2)

inst_16742:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffffffff8; valaddr_reg:x3; val_offset:50226*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50226*0 + 3*614*FLEN/8, x4, x1, x2)

inst_16743:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffffffffc; valaddr_reg:x3; val_offset:50229*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50229*0 + 3*615*FLEN/8, x4, x1, x2)

inst_16744:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14ffffffffffffe; valaddr_reg:x3; val_offset:50232*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50232*0 + 3*616*FLEN/8, x4, x1, x2)

inst_16745:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x360b5ea08bb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8360b5ea08bb53; op2val:0x0;
op3val:0x14fffffffffffff; valaddr_reg:x3; val_offset:50235*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50235*0 + 3*617*FLEN/8, x4, x1, x2)

inst_16746:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:50238*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50238*0 + 3*618*FLEN/8, x4, x1, x2)

inst_16747:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:50241*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50241*0 + 3*619*FLEN/8, x4, x1, x2)

inst_16748:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:50244*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50244*0 + 3*620*FLEN/8, x4, x1, x2)

inst_16749:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:50247*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50247*0 + 3*621*FLEN/8, x4, x1, x2)

inst_16750:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:50250*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50250*0 + 3*622*FLEN/8, x4, x1, x2)

inst_16751:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:50253*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50253*0 + 3*623*FLEN/8, x4, x1, x2)

inst_16752:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:50256*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50256*0 + 3*624*FLEN/8, x4, x1, x2)

inst_16753:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:50259*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50259*0 + 3*625*FLEN/8, x4, x1, x2)

inst_16754:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:50262*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50262*0 + 3*626*FLEN/8, x4, x1, x2)

inst_16755:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:50265*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50265*0 + 3*627*FLEN/8, x4, x1, x2)

inst_16756:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:50268*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50268*0 + 3*628*FLEN/8, x4, x1, x2)

inst_16757:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:50271*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50271*0 + 3*629*FLEN/8, x4, x1, x2)

inst_16758:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:50274*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50274*0 + 3*630*FLEN/8, x4, x1, x2)

inst_16759:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:50277*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50277*0 + 3*631*FLEN/8, x4, x1, x2)

inst_16760:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:50280*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50280*0 + 3*632*FLEN/8, x4, x1, x2)

inst_16761:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:50283*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50283*0 + 3*633*FLEN/8, x4, x1, x2)

inst_16762:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:50286*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50286*0 + 3*634*FLEN/8, x4, x1, x2)

inst_16763:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:50289*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50289*0 + 3*635*FLEN/8, x4, x1, x2)

inst_16764:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:50292*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50292*0 + 3*636*FLEN/8, x4, x1, x2)

inst_16765:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:50295*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50295*0 + 3*637*FLEN/8, x4, x1, x2)

inst_16766:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:50298*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50298*0 + 3*638*FLEN/8, x4, x1, x2)

inst_16767:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:50301*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50301*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_16768:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000000000000; valaddr_reg:x3; val_offset:50304*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50304*0 + 3*640*FLEN/8, x4, x1, x2)

inst_16769:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000000000001; valaddr_reg:x3; val_offset:50307*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50307*0 + 3*641*FLEN/8, x4, x1, x2)

inst_16770:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000000000003; valaddr_reg:x3; val_offset:50310*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50310*0 + 3*642*FLEN/8, x4, x1, x2)

inst_16771:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000000000007; valaddr_reg:x3; val_offset:50313*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50313*0 + 3*643*FLEN/8, x4, x1, x2)

inst_16772:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000000000000f; valaddr_reg:x3; val_offset:50316*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50316*0 + 3*644*FLEN/8, x4, x1, x2)

inst_16773:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000000000001f; valaddr_reg:x3; val_offset:50319*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50319*0 + 3*645*FLEN/8, x4, x1, x2)

inst_16774:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000000000003f; valaddr_reg:x3; val_offset:50322*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50322*0 + 3*646*FLEN/8, x4, x1, x2)

inst_16775:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000000000007f; valaddr_reg:x3; val_offset:50325*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50325*0 + 3*647*FLEN/8, x4, x1, x2)

inst_16776:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00000000000ff; valaddr_reg:x3; val_offset:50328*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50328*0 + 3*648*FLEN/8, x4, x1, x2)

inst_16777:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00000000001ff; valaddr_reg:x3; val_offset:50331*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50331*0 + 3*649*FLEN/8, x4, x1, x2)

inst_16778:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00000000003ff; valaddr_reg:x3; val_offset:50334*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50334*0 + 3*650*FLEN/8, x4, x1, x2)

inst_16779:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00000000007ff; valaddr_reg:x3; val_offset:50337*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50337*0 + 3*651*FLEN/8, x4, x1, x2)

inst_16780:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000000000fff; valaddr_reg:x3; val_offset:50340*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50340*0 + 3*652*FLEN/8, x4, x1, x2)

inst_16781:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000000001fff; valaddr_reg:x3; val_offset:50343*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50343*0 + 3*653*FLEN/8, x4, x1, x2)

inst_16782:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000000003fff; valaddr_reg:x3; val_offset:50346*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50346*0 + 3*654*FLEN/8, x4, x1, x2)

inst_16783:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000000007fff; valaddr_reg:x3; val_offset:50349*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50349*0 + 3*655*FLEN/8, x4, x1, x2)

inst_16784:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000000000ffff; valaddr_reg:x3; val_offset:50352*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50352*0 + 3*656*FLEN/8, x4, x1, x2)

inst_16785:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000000001ffff; valaddr_reg:x3; val_offset:50355*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50355*0 + 3*657*FLEN/8, x4, x1, x2)

inst_16786:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000000003ffff; valaddr_reg:x3; val_offset:50358*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50358*0 + 3*658*FLEN/8, x4, x1, x2)

inst_16787:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000000007ffff; valaddr_reg:x3; val_offset:50361*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50361*0 + 3*659*FLEN/8, x4, x1, x2)

inst_16788:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00000000fffff; valaddr_reg:x3; val_offset:50364*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50364*0 + 3*660*FLEN/8, x4, x1, x2)

inst_16789:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00000001fffff; valaddr_reg:x3; val_offset:50367*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50367*0 + 3*661*FLEN/8, x4, x1, x2)

inst_16790:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00000003fffff; valaddr_reg:x3; val_offset:50370*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50370*0 + 3*662*FLEN/8, x4, x1, x2)

inst_16791:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00000007fffff; valaddr_reg:x3; val_offset:50373*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50373*0 + 3*663*FLEN/8, x4, x1, x2)

inst_16792:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000000ffffff; valaddr_reg:x3; val_offset:50376*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50376*0 + 3*664*FLEN/8, x4, x1, x2)

inst_16793:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000001ffffff; valaddr_reg:x3; val_offset:50379*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50379*0 + 3*665*FLEN/8, x4, x1, x2)

inst_16794:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000003ffffff; valaddr_reg:x3; val_offset:50382*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50382*0 + 3*666*FLEN/8, x4, x1, x2)

inst_16795:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000007ffffff; valaddr_reg:x3; val_offset:50385*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50385*0 + 3*667*FLEN/8, x4, x1, x2)

inst_16796:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000000fffffff; valaddr_reg:x3; val_offset:50388*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50388*0 + 3*668*FLEN/8, x4, x1, x2)

inst_16797:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000001fffffff; valaddr_reg:x3; val_offset:50391*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50391*0 + 3*669*FLEN/8, x4, x1, x2)

inst_16798:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000003fffffff; valaddr_reg:x3; val_offset:50394*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50394*0 + 3*670*FLEN/8, x4, x1, x2)

inst_16799:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000007fffffff; valaddr_reg:x3; val_offset:50397*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50397*0 + 3*671*FLEN/8, x4, x1, x2)

inst_16800:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00000ffffffff; valaddr_reg:x3; val_offset:50400*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50400*0 + 3*672*FLEN/8, x4, x1, x2)

inst_16801:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00001ffffffff; valaddr_reg:x3; val_offset:50403*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50403*0 + 3*673*FLEN/8, x4, x1, x2)

inst_16802:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00003ffffffff; valaddr_reg:x3; val_offset:50406*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50406*0 + 3*674*FLEN/8, x4, x1, x2)

inst_16803:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00007ffffffff; valaddr_reg:x3; val_offset:50409*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50409*0 + 3*675*FLEN/8, x4, x1, x2)

inst_16804:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0000fffffffff; valaddr_reg:x3; val_offset:50412*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50412*0 + 3*676*FLEN/8, x4, x1, x2)

inst_16805:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0001fffffffff; valaddr_reg:x3; val_offset:50415*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50415*0 + 3*677*FLEN/8, x4, x1, x2)

inst_16806:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0003fffffffff; valaddr_reg:x3; val_offset:50418*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50418*0 + 3*678*FLEN/8, x4, x1, x2)

inst_16807:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0007fffffffff; valaddr_reg:x3; val_offset:50421*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50421*0 + 3*679*FLEN/8, x4, x1, x2)

inst_16808:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d000ffffffffff; valaddr_reg:x3; val_offset:50424*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50424*0 + 3*680*FLEN/8, x4, x1, x2)

inst_16809:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d001ffffffffff; valaddr_reg:x3; val_offset:50427*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50427*0 + 3*681*FLEN/8, x4, x1, x2)

inst_16810:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d003ffffffffff; valaddr_reg:x3; val_offset:50430*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50430*0 + 3*682*FLEN/8, x4, x1, x2)

inst_16811:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d007ffffffffff; valaddr_reg:x3; val_offset:50433*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50433*0 + 3*683*FLEN/8, x4, x1, x2)

inst_16812:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d00fffffffffff; valaddr_reg:x3; val_offset:50436*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50436*0 + 3*684*FLEN/8, x4, x1, x2)

inst_16813:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d01fffffffffff; valaddr_reg:x3; val_offset:50439*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50439*0 + 3*685*FLEN/8, x4, x1, x2)

inst_16814:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d03fffffffffff; valaddr_reg:x3; val_offset:50442*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50442*0 + 3*686*FLEN/8, x4, x1, x2)

inst_16815:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d07fffffffffff; valaddr_reg:x3; val_offset:50445*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50445*0 + 3*687*FLEN/8, x4, x1, x2)

inst_16816:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d0ffffffffffff; valaddr_reg:x3; val_offset:50448*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50448*0 + 3*688*FLEN/8, x4, x1, x2)

inst_16817:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d1ffffffffffff; valaddr_reg:x3; val_offset:50451*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50451*0 + 3*689*FLEN/8, x4, x1, x2)

inst_16818:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d3ffffffffffff; valaddr_reg:x3; val_offset:50454*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50454*0 + 3*690*FLEN/8, x4, x1, x2)

inst_16819:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d7ffffffffffff; valaddr_reg:x3; val_offset:50457*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50457*0 + 3*691*FLEN/8, x4, x1, x2)

inst_16820:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83d8000000000000; valaddr_reg:x3; val_offset:50460*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50460*0 + 3*692*FLEN/8, x4, x1, x2)

inst_16821:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dc000000000000; valaddr_reg:x3; val_offset:50463*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50463*0 + 3*693*FLEN/8, x4, x1, x2)

inst_16822:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83de000000000000; valaddr_reg:x3; val_offset:50466*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50466*0 + 3*694*FLEN/8, x4, x1, x2)

inst_16823:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83df000000000000; valaddr_reg:x3; val_offset:50469*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50469*0 + 3*695*FLEN/8, x4, x1, x2)

inst_16824:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83df800000000000; valaddr_reg:x3; val_offset:50472*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50472*0 + 3*696*FLEN/8, x4, x1, x2)

inst_16825:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfc00000000000; valaddr_reg:x3; val_offset:50475*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50475*0 + 3*697*FLEN/8, x4, x1, x2)

inst_16826:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfe00000000000; valaddr_reg:x3; val_offset:50478*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50478*0 + 3*698*FLEN/8, x4, x1, x2)

inst_16827:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dff00000000000; valaddr_reg:x3; val_offset:50481*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50481*0 + 3*699*FLEN/8, x4, x1, x2)

inst_16828:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dff80000000000; valaddr_reg:x3; val_offset:50484*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50484*0 + 3*700*FLEN/8, x4, x1, x2)

inst_16829:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffc0000000000; valaddr_reg:x3; val_offset:50487*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50487*0 + 3*701*FLEN/8, x4, x1, x2)

inst_16830:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffe0000000000; valaddr_reg:x3; val_offset:50490*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50490*0 + 3*702*FLEN/8, x4, x1, x2)

inst_16831:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfff0000000000; valaddr_reg:x3; val_offset:50493*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50493*0 + 3*703*FLEN/8, x4, x1, x2)

inst_16832:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfff8000000000; valaddr_reg:x3; val_offset:50496*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50496*0 + 3*704*FLEN/8, x4, x1, x2)

inst_16833:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffc000000000; valaddr_reg:x3; val_offset:50499*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50499*0 + 3*705*FLEN/8, x4, x1, x2)

inst_16834:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffe000000000; valaddr_reg:x3; val_offset:50502*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50502*0 + 3*706*FLEN/8, x4, x1, x2)

inst_16835:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffff000000000; valaddr_reg:x3; val_offset:50505*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50505*0 + 3*707*FLEN/8, x4, x1, x2)

inst_16836:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffff800000000; valaddr_reg:x3; val_offset:50508*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50508*0 + 3*708*FLEN/8, x4, x1, x2)

inst_16837:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffc00000000; valaddr_reg:x3; val_offset:50511*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50511*0 + 3*709*FLEN/8, x4, x1, x2)

inst_16838:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffe00000000; valaddr_reg:x3; val_offset:50514*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50514*0 + 3*710*FLEN/8, x4, x1, x2)

inst_16839:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffff00000000; valaddr_reg:x3; val_offset:50517*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50517*0 + 3*711*FLEN/8, x4, x1, x2)

inst_16840:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffff80000000; valaddr_reg:x3; val_offset:50520*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50520*0 + 3*712*FLEN/8, x4, x1, x2)

inst_16841:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffc0000000; valaddr_reg:x3; val_offset:50523*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50523*0 + 3*713*FLEN/8, x4, x1, x2)

inst_16842:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffe0000000; valaddr_reg:x3; val_offset:50526*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50526*0 + 3*714*FLEN/8, x4, x1, x2)

inst_16843:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffff0000000; valaddr_reg:x3; val_offset:50529*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50529*0 + 3*715*FLEN/8, x4, x1, x2)

inst_16844:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffff8000000; valaddr_reg:x3; val_offset:50532*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50532*0 + 3*716*FLEN/8, x4, x1, x2)

inst_16845:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffc000000; valaddr_reg:x3; val_offset:50535*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50535*0 + 3*717*FLEN/8, x4, x1, x2)

inst_16846:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffe000000; valaddr_reg:x3; val_offset:50538*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50538*0 + 3*718*FLEN/8, x4, x1, x2)

inst_16847:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffff000000; valaddr_reg:x3; val_offset:50541*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50541*0 + 3*719*FLEN/8, x4, x1, x2)

inst_16848:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffff800000; valaddr_reg:x3; val_offset:50544*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50544*0 + 3*720*FLEN/8, x4, x1, x2)

inst_16849:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffffc00000; valaddr_reg:x3; val_offset:50547*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50547*0 + 3*721*FLEN/8, x4, x1, x2)

inst_16850:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffffe00000; valaddr_reg:x3; val_offset:50550*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50550*0 + 3*722*FLEN/8, x4, x1, x2)

inst_16851:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffff00000; valaddr_reg:x3; val_offset:50553*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50553*0 + 3*723*FLEN/8, x4, x1, x2)

inst_16852:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffff80000; valaddr_reg:x3; val_offset:50556*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50556*0 + 3*724*FLEN/8, x4, x1, x2)

inst_16853:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffffc0000; valaddr_reg:x3; val_offset:50559*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50559*0 + 3*725*FLEN/8, x4, x1, x2)

inst_16854:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffffe0000; valaddr_reg:x3; val_offset:50562*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50562*0 + 3*726*FLEN/8, x4, x1, x2)

inst_16855:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffffff0000; valaddr_reg:x3; val_offset:50565*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50565*0 + 3*727*FLEN/8, x4, x1, x2)

inst_16856:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffffff8000; valaddr_reg:x3; val_offset:50568*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50568*0 + 3*728*FLEN/8, x4, x1, x2)

inst_16857:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffffffc000; valaddr_reg:x3; val_offset:50571*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50571*0 + 3*729*FLEN/8, x4, x1, x2)

inst_16858:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffffffe000; valaddr_reg:x3; val_offset:50574*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50574*0 + 3*730*FLEN/8, x4, x1, x2)

inst_16859:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffffff000; valaddr_reg:x3; val_offset:50577*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50577*0 + 3*731*FLEN/8, x4, x1, x2)

inst_16860:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffffff800; valaddr_reg:x3; val_offset:50580*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50580*0 + 3*732*FLEN/8, x4, x1, x2)

inst_16861:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffffffc00; valaddr_reg:x3; val_offset:50583*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50583*0 + 3*733*FLEN/8, x4, x1, x2)

inst_16862:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffffffe00; valaddr_reg:x3; val_offset:50586*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50586*0 + 3*734*FLEN/8, x4, x1, x2)

inst_16863:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffffffff00; valaddr_reg:x3; val_offset:50589*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50589*0 + 3*735*FLEN/8, x4, x1, x2)

inst_16864:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffffffff80; valaddr_reg:x3; val_offset:50592*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50592*0 + 3*736*FLEN/8, x4, x1, x2)

inst_16865:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffffffffc0; valaddr_reg:x3; val_offset:50595*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50595*0 + 3*737*FLEN/8, x4, x1, x2)

inst_16866:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffffffffe0; valaddr_reg:x3; val_offset:50598*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50598*0 + 3*738*FLEN/8, x4, x1, x2)

inst_16867:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffffffff0; valaddr_reg:x3; val_offset:50601*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50601*0 + 3*739*FLEN/8, x4, x1, x2)

inst_16868:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffffffff8; valaddr_reg:x3; val_offset:50604*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50604*0 + 3*740*FLEN/8, x4, x1, x2)

inst_16869:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffffffffc; valaddr_reg:x3; val_offset:50607*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50607*0 + 3*741*FLEN/8, x4, x1, x2)

inst_16870:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dffffffffffffe; valaddr_reg:x3; val_offset:50610*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50610*0 + 3*742*FLEN/8, x4, x1, x2)

inst_16871:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3a46e8790813b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83a46e8790813b; op2val:0x8000;
op3val:0x83dfffffffffffff; valaddr_reg:x3; val_offset:50613*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50613*0 + 3*743*FLEN/8, x4, x1, x2)

inst_16872:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000; valaddr_reg:x3; val_offset:50616*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50616*0 + 3*744*FLEN/8, x4, x1, x2)

inst_16873:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:50619*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50619*0 + 3*745*FLEN/8, x4, x1, x2)

inst_16874:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:50622*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50622*0 + 3*746*FLEN/8, x4, x1, x2)

inst_16875:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:50625*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50625*0 + 3*747*FLEN/8, x4, x1, x2)

inst_16876:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:50628*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50628*0 + 3*748*FLEN/8, x4, x1, x2)

inst_16877:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:50631*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50631*0 + 3*749*FLEN/8, x4, x1, x2)

inst_16878:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:50634*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50634*0 + 3*750*FLEN/8, x4, x1, x2)

inst_16879:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000000000007f; valaddr_reg:x3; val_offset:50637*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50637*0 + 3*751*FLEN/8, x4, x1, x2)

inst_16880:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000000000000ff; valaddr_reg:x3; val_offset:50640*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50640*0 + 3*752*FLEN/8, x4, x1, x2)

inst_16881:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000000000001ff; valaddr_reg:x3; val_offset:50643*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50643*0 + 3*753*FLEN/8, x4, x1, x2)

inst_16882:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000000000003ff; valaddr_reg:x3; val_offset:50646*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50646*0 + 3*754*FLEN/8, x4, x1, x2)

inst_16883:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000000000007ff; valaddr_reg:x3; val_offset:50649*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50649*0 + 3*755*FLEN/8, x4, x1, x2)

inst_16884:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000000000fff; valaddr_reg:x3; val_offset:50652*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50652*0 + 3*756*FLEN/8, x4, x1, x2)

inst_16885:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000000001fff; valaddr_reg:x3; val_offset:50655*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50655*0 + 3*757*FLEN/8, x4, x1, x2)

inst_16886:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000000003fff; valaddr_reg:x3; val_offset:50658*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50658*0 + 3*758*FLEN/8, x4, x1, x2)

inst_16887:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000000007fff; valaddr_reg:x3; val_offset:50661*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50661*0 + 3*759*FLEN/8, x4, x1, x2)

inst_16888:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000000000ffff; valaddr_reg:x3; val_offset:50664*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50664*0 + 3*760*FLEN/8, x4, x1, x2)

inst_16889:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000000001ffff; valaddr_reg:x3; val_offset:50667*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50667*0 + 3*761*FLEN/8, x4, x1, x2)

inst_16890:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000000003ffff; valaddr_reg:x3; val_offset:50670*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50670*0 + 3*762*FLEN/8, x4, x1, x2)

inst_16891:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000000007ffff; valaddr_reg:x3; val_offset:50673*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50673*0 + 3*763*FLEN/8, x4, x1, x2)

inst_16892:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000000000fffff; valaddr_reg:x3; val_offset:50676*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50676*0 + 3*764*FLEN/8, x4, x1, x2)

inst_16893:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000000001fffff; valaddr_reg:x3; val_offset:50679*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50679*0 + 3*765*FLEN/8, x4, x1, x2)

inst_16894:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000000003fffff; valaddr_reg:x3; val_offset:50682*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50682*0 + 3*766*FLEN/8, x4, x1, x2)

inst_16895:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000000007fffff; valaddr_reg:x3; val_offset:50685*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50685*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663169023,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663173119,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663181311,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663197695,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663230463,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663295999,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663427071,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420663689215,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420664213503,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420665262079,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420667359231,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420671553535,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420679942143,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420696719359,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420730273791,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420797382655,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664420931600383,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664421200035839,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664421736906751,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664422810648575,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664424958132223,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664429253099519,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664437843034111,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664455022903295,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664489382641663,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664558102118399,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664695541071871,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584664970418978815,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584665520174792703,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584666619686420479,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584668818709676031,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584673216756187135,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584682012849209343,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584699605035253759,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584734789407342591,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584805158151520255,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4584945895639875583,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4585227370616586239,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4585790320570007551,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4586916220476850175,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4586916220476850176,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4588042120383692800,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4588605070337114112,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4588886545313824768,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589027282802180096,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589097651546357760,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589132835918446592,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589150428104491008,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589159224197513216,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589163622244024320,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589165821267279872,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589166920778907648,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589167470534721536,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589167745412628480,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589167882851581952,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589167951571058688,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589167985930797056,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168003110666240,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168011700600832,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168015995568128,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168018143051776,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168019216793600,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168019753664512,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020022099968,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020156317696,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020223426560,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020256980992,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020273758208,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020282146816,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020286341120,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020288438272,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020289486848,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290011136,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290273280,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290404352,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290469888,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290502656,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290519040,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290527232,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290531328,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290533376,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290534400,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290534912,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290535168,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290535296,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290535360,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290535392,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290535408,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290535416,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290535420,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290535422,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4589168020290535423,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6882274887514627959,64,FLEN)
NAN_BOXED(2331542676344455679,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671104,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671105,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671107,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671111,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671119,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671135,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671167,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671231,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671359,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671615,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850672127,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850673151,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850675199,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850679295,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850687487,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850703871,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850736639,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850802175,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850933247,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851195391,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851719679,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617852768255,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617854865407,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617859059711,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617867448319,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617884225535,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617917779967,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617984888831,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618119106559,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618387542015,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618924412927,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055619998154751,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055622145638399,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055626440605695,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055635030540287,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055652210409471,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055686570147839,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055755289624575,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055892728578047,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056167606484991,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056717362298879,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453057816873926655,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453060015897182207,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453064413943693311,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453073210036715519,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453090802222759935,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453125986594848767,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453196355339026431,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453337092827381759,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453618567804092415,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9454181517757513727,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356351,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356352,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456433317571198976,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456996267524620288,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457277742501330944,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457418479989686272,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457488848733863936,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457524033105952768,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457541625291997184,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457550421385019392,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457554819431530496,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457557018454786048,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558117966413824,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558667722227712,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558942600134656,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559080039088128,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559148758564864,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559183118303232,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559200298172416,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559208888107008,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559213183074304,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559215330557952,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216404299776,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216941170688,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217209606144,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217343823872,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217410932736,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217444487168,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217461264384,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217469652992,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217473847296,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217475944448,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217476993024,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477517312,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477779456,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477910528,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477976064,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478008832,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478025216,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478033408,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478037504,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478039552,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478040576,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041088,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041344,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041472,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041536,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041568,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041584,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041592,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041596,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041598,64,FLEN)
NAN_BOXED(6882287827880918435,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041599,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635072,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635073,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635075,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635079,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635087,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635103,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635135,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635199,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635327,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635583,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869636095,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869637119,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869639167,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869643263,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869651455,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869667839,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869700607,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869766143,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869897215,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414870159359,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414870683647,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414871732223,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414873829375,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414878023679,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414886412287,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414903189503,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414936743935,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415003852799,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415138070527,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415406505983,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415943376895,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084417017118719,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084419164602367,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084423459569663,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084432049504255,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084449229373439,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084483589111807,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084552308588543,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084689747542015,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084964625448959,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489085514381262847,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489086613892890623,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489088812916146175,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489093210962657279,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489102007055679487,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489119599241723903,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489154783613812735,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489225152357990399,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489365889846345727,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489647364823056383,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9490210314776477695,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9491336214683320319,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9491336214683320320,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9492462114590162944,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493025064543584256,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493306539520294912,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493447277008650240,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493517645752827904,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493552830124916736,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493570422310961152,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493579218403983360,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493583616450494464,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493585815473750016,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493586914985377792,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587464741191680,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587739619098624,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587877058052096,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587945777528832,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587980137267200,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587997317136384,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588005907070976,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588010202038272,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588012349521920,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588013423263744,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588013960134656,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014228570112,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014362787840,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014429896704,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014463451136,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014480228352,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014488616960,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014492811264,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014494908416,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014495956992,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496481280,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496743424,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496874496,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496940032,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496972800,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496989184,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496997376,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497001472,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497003520,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497004544,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005056,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005312,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005440,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005504,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005536,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005552,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005560,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005564,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005566,64,FLEN)
NAN_BOXED(6882420104212557871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005567,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800017408,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800017535,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800017663,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800017919,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800018431,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800019455,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800021503,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800025599,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800033791,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800050175,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800082943,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800148479,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800279551,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418800541695,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418801065983,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418802114559,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418804211711,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418808406015,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418816794623,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418833571839,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418867126271,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182418934235135,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182419068452863,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182419336888319,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182419873759231,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182420947501055,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182423094984703,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182427389951999,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182435979886591,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182453159755775,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182487519494143,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182556238970879,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182693677924351,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607182968555831295,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607183518311645183,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607184617823272959,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607186816846528511,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607191214893039615,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607200010986061823,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607217603172106239,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607252787544195071,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607323156288372735,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607463893776728063,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4607745368753438719,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4608308318706860031,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4609434218613702655,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4609434218613702656,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4610560118520545280,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611123068473966592,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611404543450677248,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611545280939032576,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611615649683210240,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611650834055299072,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611668426241343488,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611677222334365696,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611681620380876800,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611683819404132352,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611684918915760128,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611685468671574016,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611685743549480960,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611685880988434432,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611685949707911168,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611685984067649536,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686001247518720,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686009837453312,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686014132420608,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686016279904256,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686017353646080,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686017890516992,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018158952448,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018293170176,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018360279040,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018393833472,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018410610688,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018418999296,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018423193600,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018425290752,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018426339328,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018426863616,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427125760,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427256832,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427322368,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427355136,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427371520,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427379712,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427383808,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427385856,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427386880,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427387392,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427387648,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427387776,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(4611686018427387903,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9214364837600034817,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9214364837600034819,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9214364837600034823,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9214364837600034831,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9214364837600034847,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9214364837600034879,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9215265557525508915,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9215651580350712100,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9216166277450983014,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9216294951726050742,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9216466517426141047,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9216766757401299080,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9217066997376457113,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9217581694476728027,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9217967717301931212,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9218225065852066669,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9218868437227405248,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9218868437227405280,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9218868437227405296,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9218868437227405304,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9218868437227405308,64,FLEN)
NAN_BOXED(6882434995260265819,64,FLEN)
NAN_BOXED(6943002437211022179,64,FLEN)
NAN_BOXED(9218868437227405310,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409920,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409921,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409923,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409927,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409935,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409951,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409983,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410047,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410175,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410431,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410943,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547411967,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547414015,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547418111,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547426303,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547442687,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547475455,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547540991,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547672063,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547934207,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992548458495,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992549507071,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992551604223,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992555798527,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992564187135,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992580964351,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992614518783,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992681627647,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992815845375,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993084280831,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993621151743,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071994694893567,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071996842377215,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072001137344511,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072009727279103,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072026907148287,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072061266886655,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072129986363391,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072267425316863,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072542303223807,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90073092059037695,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90074191570665471,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90076390593921023,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90080788640432127,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90089584733454335,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90107176919498751,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90142361291587583,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90212730035765247,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90353467524120575,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90634942500831231,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(91197892454252543,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095167,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095168,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(93449692267937792,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94012642221359104,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94294117198069760,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94434854686425088,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94505223430602752,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94540407802691584,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94557999988736000,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94566796081758208,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94571194128269312,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94573393151524864,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94574492663152640,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575042418966528,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575317296873472,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575454735826944,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575523455303680,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575557815042048,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575574994911232,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575583584845824,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575587879813120,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575590027296768,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591101038592,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591637909504,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591906344960,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592040562688,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592107671552,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592141225984,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592158003200,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592166391808,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592170586112,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592172683264,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592173731840,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174256128,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174518272,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174649344,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174714880,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174747648,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174764032,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174772224,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174776320,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174778368,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779392,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779904,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780160,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780288,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780352,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780384,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780400,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780408,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780412,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780414,64,FLEN)
NAN_BOXED(6882450989984037715,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780415,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376064,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376065,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376067,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376071,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376079,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376095,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376127,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376191,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376319,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376575,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124377087,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124378111,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124380159,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124384255,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124392447,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124408831,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124441599,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124507135,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124638207,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124900351,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614125424639,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614126473215,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614128570367,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614132764671,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614141153279,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614157930495,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614191484927,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614258593791,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614392811519,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614661246975,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091615198117887,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091616271859711,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091618419343359,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091622714310655,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091631304245247,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091648484114431,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091682843852799,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091751563329535,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091889002283007,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498092163880189951,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498092713636003839,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498093813147631615,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498096012170887167,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498100410217398271,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498109206310420479,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498126798496464895,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498161982868553727,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498232351612731391,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498373089101086719,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498654564077797375,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9499217514031218687,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9500343413938061311,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9500343413938061312,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9501469313844903936,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502032263798325248,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502313738775035904,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502454476263391232,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502524845007568896,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502560029379657728,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502577621565702144,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502586417658724352,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502590815705235456,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502593014728491008,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594114240118784,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594663995932672,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594938873839616,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595076312793088,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595145032269824,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595179392008192,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595196571877376,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595205161811968,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595209456779264,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595211604262912,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595212678004736,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213214875648,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213483311104,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213617528832,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213684637696,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213718192128,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213734969344,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213743357952,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213747552256,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213749649408,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213750697984,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751222272,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751484416,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751615488,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751681024,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751713792,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751730176,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751738368,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751742464,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751744512,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751745536,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746048,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746304,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746432,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746496,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746528,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746544,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746552,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746556,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746558,64,FLEN)
NAN_BOXED(6882525450180002107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746559,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775935,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776063,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776319,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776831,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854777855,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854779903,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854783999,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854792191,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854808575,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854841343,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854906879,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855037951,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855300095,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855824383,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036856872959,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036858970111,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036863164415,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
