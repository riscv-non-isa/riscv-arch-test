
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_16896:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000000ffffff; valaddr_reg:x3; val_offset:50688*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50688*0 + 3*0*FLEN/8, x4, x1, x2)

inst_16897:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000001ffffff; valaddr_reg:x3; val_offset:50691*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50691*0 + 3*1*FLEN/8, x4, x1, x2)

inst_16898:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000003ffffff; valaddr_reg:x3; val_offset:50694*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50694*0 + 3*2*FLEN/8, x4, x1, x2)

inst_16899:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000007ffffff; valaddr_reg:x3; val_offset:50697*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50697*0 + 3*3*FLEN/8, x4, x1, x2)

inst_16900:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000000fffffff; valaddr_reg:x3; val_offset:50700*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50700*0 + 3*4*FLEN/8, x4, x1, x2)

inst_16901:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000001fffffff; valaddr_reg:x3; val_offset:50703*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50703*0 + 3*5*FLEN/8, x4, x1, x2)

inst_16902:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000003fffffff; valaddr_reg:x3; val_offset:50706*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50706*0 + 3*6*FLEN/8, x4, x1, x2)

inst_16903:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000007fffffff; valaddr_reg:x3; val_offset:50709*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50709*0 + 3*7*FLEN/8, x4, x1, x2)

inst_16904:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000000ffffffff; valaddr_reg:x3; val_offset:50712*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50712*0 + 3*8*FLEN/8, x4, x1, x2)

inst_16905:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000001ffffffff; valaddr_reg:x3; val_offset:50715*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50715*0 + 3*9*FLEN/8, x4, x1, x2)

inst_16906:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000003ffffffff; valaddr_reg:x3; val_offset:50718*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50718*0 + 3*10*FLEN/8, x4, x1, x2)

inst_16907:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000007ffffffff; valaddr_reg:x3; val_offset:50721*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50721*0 + 3*11*FLEN/8, x4, x1, x2)

inst_16908:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000000fffffffff; valaddr_reg:x3; val_offset:50724*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50724*0 + 3*12*FLEN/8, x4, x1, x2)

inst_16909:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000001fffffffff; valaddr_reg:x3; val_offset:50727*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50727*0 + 3*13*FLEN/8, x4, x1, x2)

inst_16910:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000003fffffffff; valaddr_reg:x3; val_offset:50730*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50730*0 + 3*14*FLEN/8, x4, x1, x2)

inst_16911:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000007fffffffff; valaddr_reg:x3; val_offset:50733*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50733*0 + 3*15*FLEN/8, x4, x1, x2)

inst_16912:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800000ffffffffff; valaddr_reg:x3; val_offset:50736*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50736*0 + 3*16*FLEN/8, x4, x1, x2)

inst_16913:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800001ffffffffff; valaddr_reg:x3; val_offset:50739*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50739*0 + 3*17*FLEN/8, x4, x1, x2)

inst_16914:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800003ffffffffff; valaddr_reg:x3; val_offset:50742*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50742*0 + 3*18*FLEN/8, x4, x1, x2)

inst_16915:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800007ffffffffff; valaddr_reg:x3; val_offset:50745*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50745*0 + 3*19*FLEN/8, x4, x1, x2)

inst_16916:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80000fffffffffff; valaddr_reg:x3; val_offset:50748*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50748*0 + 3*20*FLEN/8, x4, x1, x2)

inst_16917:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80001fffffffffff; valaddr_reg:x3; val_offset:50751*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50751*0 + 3*21*FLEN/8, x4, x1, x2)

inst_16918:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80003fffffffffff; valaddr_reg:x3; val_offset:50754*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50754*0 + 3*22*FLEN/8, x4, x1, x2)

inst_16919:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x80007fffffffffff; valaddr_reg:x3; val_offset:50757*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50757*0 + 3*23*FLEN/8, x4, x1, x2)

inst_16920:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8000ffffffffffff; valaddr_reg:x3; val_offset:50760*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50760*0 + 3*24*FLEN/8, x4, x1, x2)

inst_16921:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8001ffffffffffff; valaddr_reg:x3; val_offset:50763*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50763*0 + 3*25*FLEN/8, x4, x1, x2)

inst_16922:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:50766*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50766*0 + 3*26*FLEN/8, x4, x1, x2)

inst_16923:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8003ffffffffffff; valaddr_reg:x3; val_offset:50769*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50769*0 + 3*27*FLEN/8, x4, x1, x2)

inst_16924:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:50772*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50772*0 + 3*28*FLEN/8, x4, x1, x2)

inst_16925:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:50775*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50775*0 + 3*29*FLEN/8, x4, x1, x2)

inst_16926:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:50778*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50778*0 + 3*30*FLEN/8, x4, x1, x2)

inst_16927:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:50781*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50781*0 + 3*31*FLEN/8, x4, x1, x2)

inst_16928:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8007ffffffffffff; valaddr_reg:x3; val_offset:50784*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50784*0 + 3*32*FLEN/8, x4, x1, x2)

inst_16929:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8008000000000000; valaddr_reg:x3; val_offset:50787*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50787*0 + 3*33*FLEN/8, x4, x1, x2)

inst_16930:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:50790*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50790*0 + 3*34*FLEN/8, x4, x1, x2)

inst_16931:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:50793*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50793*0 + 3*35*FLEN/8, x4, x1, x2)

inst_16932:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:50796*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50796*0 + 3*36*FLEN/8, x4, x1, x2)

inst_16933:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800c000000000000; valaddr_reg:x3; val_offset:50799*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50799*0 + 3*37*FLEN/8, x4, x1, x2)

inst_16934:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:50802*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50802*0 + 3*38*FLEN/8, x4, x1, x2)

inst_16935:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:50805*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50805*0 + 3*39*FLEN/8, x4, x1, x2)

inst_16936:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800e000000000000; valaddr_reg:x3; val_offset:50808*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50808*0 + 3*40*FLEN/8, x4, x1, x2)

inst_16937:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800f000000000000; valaddr_reg:x3; val_offset:50811*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50811*0 + 3*41*FLEN/8, x4, x1, x2)

inst_16938:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800f800000000000; valaddr_reg:x3; val_offset:50814*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50814*0 + 3*42*FLEN/8, x4, x1, x2)

inst_16939:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fc00000000000; valaddr_reg:x3; val_offset:50817*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50817*0 + 3*43*FLEN/8, x4, x1, x2)

inst_16940:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fe00000000000; valaddr_reg:x3; val_offset:50820*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50820*0 + 3*44*FLEN/8, x4, x1, x2)

inst_16941:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ff00000000000; valaddr_reg:x3; val_offset:50823*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50823*0 + 3*45*FLEN/8, x4, x1, x2)

inst_16942:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ff80000000000; valaddr_reg:x3; val_offset:50826*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50826*0 + 3*46*FLEN/8, x4, x1, x2)

inst_16943:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffc0000000000; valaddr_reg:x3; val_offset:50829*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50829*0 + 3*47*FLEN/8, x4, x1, x2)

inst_16944:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffe0000000000; valaddr_reg:x3; val_offset:50832*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50832*0 + 3*48*FLEN/8, x4, x1, x2)

inst_16945:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fff0000000000; valaddr_reg:x3; val_offset:50835*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50835*0 + 3*49*FLEN/8, x4, x1, x2)

inst_16946:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fff8000000000; valaddr_reg:x3; val_offset:50838*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50838*0 + 3*50*FLEN/8, x4, x1, x2)

inst_16947:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffc000000000; valaddr_reg:x3; val_offset:50841*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50841*0 + 3*51*FLEN/8, x4, x1, x2)

inst_16948:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffe000000000; valaddr_reg:x3; val_offset:50844*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50844*0 + 3*52*FLEN/8, x4, x1, x2)

inst_16949:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffff000000000; valaddr_reg:x3; val_offset:50847*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50847*0 + 3*53*FLEN/8, x4, x1, x2)

inst_16950:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffff800000000; valaddr_reg:x3; val_offset:50850*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50850*0 + 3*54*FLEN/8, x4, x1, x2)

inst_16951:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffc00000000; valaddr_reg:x3; val_offset:50853*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50853*0 + 3*55*FLEN/8, x4, x1, x2)

inst_16952:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffe00000000; valaddr_reg:x3; val_offset:50856*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50856*0 + 3*56*FLEN/8, x4, x1, x2)

inst_16953:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffff00000000; valaddr_reg:x3; val_offset:50859*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50859*0 + 3*57*FLEN/8, x4, x1, x2)

inst_16954:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffff80000000; valaddr_reg:x3; val_offset:50862*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50862*0 + 3*58*FLEN/8, x4, x1, x2)

inst_16955:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffc0000000; valaddr_reg:x3; val_offset:50865*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50865*0 + 3*59*FLEN/8, x4, x1, x2)

inst_16956:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffe0000000; valaddr_reg:x3; val_offset:50868*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50868*0 + 3*60*FLEN/8, x4, x1, x2)

inst_16957:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffff0000000; valaddr_reg:x3; val_offset:50871*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50871*0 + 3*61*FLEN/8, x4, x1, x2)

inst_16958:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffff8000000; valaddr_reg:x3; val_offset:50874*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50874*0 + 3*62*FLEN/8, x4, x1, x2)

inst_16959:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffc000000; valaddr_reg:x3; val_offset:50877*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50877*0 + 3*63*FLEN/8, x4, x1, x2)

inst_16960:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffe000000; valaddr_reg:x3; val_offset:50880*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50880*0 + 3*64*FLEN/8, x4, x1, x2)

inst_16961:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffff000000; valaddr_reg:x3; val_offset:50883*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50883*0 + 3*65*FLEN/8, x4, x1, x2)

inst_16962:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffff800000; valaddr_reg:x3; val_offset:50886*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50886*0 + 3*66*FLEN/8, x4, x1, x2)

inst_16963:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffffc00000; valaddr_reg:x3; val_offset:50889*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50889*0 + 3*67*FLEN/8, x4, x1, x2)

inst_16964:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffffe00000; valaddr_reg:x3; val_offset:50892*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50892*0 + 3*68*FLEN/8, x4, x1, x2)

inst_16965:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffff00000; valaddr_reg:x3; val_offset:50895*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50895*0 + 3*69*FLEN/8, x4, x1, x2)

inst_16966:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffff80000; valaddr_reg:x3; val_offset:50898*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50898*0 + 3*70*FLEN/8, x4, x1, x2)

inst_16967:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffffc0000; valaddr_reg:x3; val_offset:50901*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50901*0 + 3*71*FLEN/8, x4, x1, x2)

inst_16968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffffe0000; valaddr_reg:x3; val_offset:50904*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50904*0 + 3*72*FLEN/8, x4, x1, x2)

inst_16969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffffff0000; valaddr_reg:x3; val_offset:50907*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50907*0 + 3*73*FLEN/8, x4, x1, x2)

inst_16970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffffff8000; valaddr_reg:x3; val_offset:50910*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50910*0 + 3*74*FLEN/8, x4, x1, x2)

inst_16971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffffffc000; valaddr_reg:x3; val_offset:50913*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50913*0 + 3*75*FLEN/8, x4, x1, x2)

inst_16972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffffffe000; valaddr_reg:x3; val_offset:50916*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50916*0 + 3*76*FLEN/8, x4, x1, x2)

inst_16973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffffff000; valaddr_reg:x3; val_offset:50919*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50919*0 + 3*77*FLEN/8, x4, x1, x2)

inst_16974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffffff800; valaddr_reg:x3; val_offset:50922*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50922*0 + 3*78*FLEN/8, x4, x1, x2)

inst_16975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffffffc00; valaddr_reg:x3; val_offset:50925*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50925*0 + 3*79*FLEN/8, x4, x1, x2)

inst_16976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffffffe00; valaddr_reg:x3; val_offset:50928*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50928*0 + 3*80*FLEN/8, x4, x1, x2)

inst_16977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffffffff00; valaddr_reg:x3; val_offset:50931*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50931*0 + 3*81*FLEN/8, x4, x1, x2)

inst_16978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffffffff80; valaddr_reg:x3; val_offset:50934*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50934*0 + 3*82*FLEN/8, x4, x1, x2)

inst_16979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:50937*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50937*0 + 3*83*FLEN/8, x4, x1, x2)

inst_16980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:50940*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50940*0 + 3*84*FLEN/8, x4, x1, x2)

inst_16981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:50943*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50943*0 + 3*85*FLEN/8, x4, x1, x2)

inst_16982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:50946*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50946*0 + 3*86*FLEN/8, x4, x1, x2)

inst_16983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:50949*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50949*0 + 3*87*FLEN/8, x4, x1, x2)

inst_16984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:50952*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50952*0 + 3*88*FLEN/8, x4, x1, x2)

inst_16985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x42aa83d2f9523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f842aa83d2f9523; op2val:0x8000;
op3val:0x800fffffffffffff; valaddr_reg:x3; val_offset:50955*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50955*0 + 3*89*FLEN/8, x4, x1, x2)

inst_16986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:50958*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50958*0 + 3*90*FLEN/8, x4, x1, x2)

inst_16987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:50961*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50961*0 + 3*91*FLEN/8, x4, x1, x2)

inst_16988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:50964*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50964*0 + 3*92*FLEN/8, x4, x1, x2)

inst_16989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:50967*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50967*0 + 3*93*FLEN/8, x4, x1, x2)

inst_16990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:50970*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50970*0 + 3*94*FLEN/8, x4, x1, x2)

inst_16991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:50973*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50973*0 + 3*95*FLEN/8, x4, x1, x2)

inst_16992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:50976*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50976*0 + 3*96*FLEN/8, x4, x1, x2)

inst_16993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:50979*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50979*0 + 3*97*FLEN/8, x4, x1, x2)

inst_16994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:50982*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50982*0 + 3*98*FLEN/8, x4, x1, x2)

inst_16995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:50985*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50985*0 + 3*99*FLEN/8, x4, x1, x2)

inst_16996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:50988*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50988*0 + 3*100*FLEN/8, x4, x1, x2)

inst_16997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:50991*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50991*0 + 3*101*FLEN/8, x4, x1, x2)

inst_16998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:50994*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50994*0 + 3*102*FLEN/8, x4, x1, x2)

inst_16999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:50997*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50997*0 + 3*103*FLEN/8, x4, x1, x2)

inst_17000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:51000*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51000*0 + 3*104*FLEN/8, x4, x1, x2)

inst_17001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:51003*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51003*0 + 3*105*FLEN/8, x4, x1, x2)

inst_17002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:51006*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51006*0 + 3*106*FLEN/8, x4, x1, x2)

inst_17003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:51009*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51009*0 + 3*107*FLEN/8, x4, x1, x2)

inst_17004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:51012*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51012*0 + 3*108*FLEN/8, x4, x1, x2)

inst_17005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:51015*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51015*0 + 3*109*FLEN/8, x4, x1, x2)

inst_17006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:51018*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51018*0 + 3*110*FLEN/8, x4, x1, x2)

inst_17007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:51021*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51021*0 + 3*111*FLEN/8, x4, x1, x2)

inst_17008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000000000000; valaddr_reg:x3; val_offset:51024*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51024*0 + 3*112*FLEN/8, x4, x1, x2)

inst_17009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000000000001; valaddr_reg:x3; val_offset:51027*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51027*0 + 3*113*FLEN/8, x4, x1, x2)

inst_17010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000000000003; valaddr_reg:x3; val_offset:51030*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51030*0 + 3*114*FLEN/8, x4, x1, x2)

inst_17011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000000000007; valaddr_reg:x3; val_offset:51033*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51033*0 + 3*115*FLEN/8, x4, x1, x2)

inst_17012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000000000000f; valaddr_reg:x3; val_offset:51036*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51036*0 + 3*116*FLEN/8, x4, x1, x2)

inst_17013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000000000001f; valaddr_reg:x3; val_offset:51039*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51039*0 + 3*117*FLEN/8, x4, x1, x2)

inst_17014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000000000003f; valaddr_reg:x3; val_offset:51042*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51042*0 + 3*118*FLEN/8, x4, x1, x2)

inst_17015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000000000007f; valaddr_reg:x3; val_offset:51045*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51045*0 + 3*119*FLEN/8, x4, x1, x2)

inst_17016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800000000000ff; valaddr_reg:x3; val_offset:51048*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51048*0 + 3*120*FLEN/8, x4, x1, x2)

inst_17017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800000000001ff; valaddr_reg:x3; val_offset:51051*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51051*0 + 3*121*FLEN/8, x4, x1, x2)

inst_17018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800000000003ff; valaddr_reg:x3; val_offset:51054*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51054*0 + 3*122*FLEN/8, x4, x1, x2)

inst_17019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800000000007ff; valaddr_reg:x3; val_offset:51057*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51057*0 + 3*123*FLEN/8, x4, x1, x2)

inst_17020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000000000fff; valaddr_reg:x3; val_offset:51060*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51060*0 + 3*124*FLEN/8, x4, x1, x2)

inst_17021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000000001fff; valaddr_reg:x3; val_offset:51063*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51063*0 + 3*125*FLEN/8, x4, x1, x2)

inst_17022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000000003fff; valaddr_reg:x3; val_offset:51066*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51066*0 + 3*126*FLEN/8, x4, x1, x2)

inst_17023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000000007fff; valaddr_reg:x3; val_offset:51069*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51069*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_17024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000000000ffff; valaddr_reg:x3; val_offset:51072*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51072*0 + 3*128*FLEN/8, x4, x1, x2)

inst_17025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000000001ffff; valaddr_reg:x3; val_offset:51075*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51075*0 + 3*129*FLEN/8, x4, x1, x2)

inst_17026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000000003ffff; valaddr_reg:x3; val_offset:51078*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51078*0 + 3*130*FLEN/8, x4, x1, x2)

inst_17027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000000007ffff; valaddr_reg:x3; val_offset:51081*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51081*0 + 3*131*FLEN/8, x4, x1, x2)

inst_17028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800000000fffff; valaddr_reg:x3; val_offset:51084*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51084*0 + 3*132*FLEN/8, x4, x1, x2)

inst_17029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800000001fffff; valaddr_reg:x3; val_offset:51087*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51087*0 + 3*133*FLEN/8, x4, x1, x2)

inst_17030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800000003fffff; valaddr_reg:x3; val_offset:51090*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51090*0 + 3*134*FLEN/8, x4, x1, x2)

inst_17031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800000007fffff; valaddr_reg:x3; val_offset:51093*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51093*0 + 3*135*FLEN/8, x4, x1, x2)

inst_17032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000000ffffff; valaddr_reg:x3; val_offset:51096*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51096*0 + 3*136*FLEN/8, x4, x1, x2)

inst_17033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000001ffffff; valaddr_reg:x3; val_offset:51099*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51099*0 + 3*137*FLEN/8, x4, x1, x2)

inst_17034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000003ffffff; valaddr_reg:x3; val_offset:51102*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51102*0 + 3*138*FLEN/8, x4, x1, x2)

inst_17035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000007ffffff; valaddr_reg:x3; val_offset:51105*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51105*0 + 3*139*FLEN/8, x4, x1, x2)

inst_17036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000000fffffff; valaddr_reg:x3; val_offset:51108*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51108*0 + 3*140*FLEN/8, x4, x1, x2)

inst_17037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000001fffffff; valaddr_reg:x3; val_offset:51111*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51111*0 + 3*141*FLEN/8, x4, x1, x2)

inst_17038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000003fffffff; valaddr_reg:x3; val_offset:51114*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51114*0 + 3*142*FLEN/8, x4, x1, x2)

inst_17039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000007fffffff; valaddr_reg:x3; val_offset:51117*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51117*0 + 3*143*FLEN/8, x4, x1, x2)

inst_17040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800000ffffffff; valaddr_reg:x3; val_offset:51120*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51120*0 + 3*144*FLEN/8, x4, x1, x2)

inst_17041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800001ffffffff; valaddr_reg:x3; val_offset:51123*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51123*0 + 3*145*FLEN/8, x4, x1, x2)

inst_17042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800003ffffffff; valaddr_reg:x3; val_offset:51126*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51126*0 + 3*146*FLEN/8, x4, x1, x2)

inst_17043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800007ffffffff; valaddr_reg:x3; val_offset:51129*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51129*0 + 3*147*FLEN/8, x4, x1, x2)

inst_17044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80000fffffffff; valaddr_reg:x3; val_offset:51132*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51132*0 + 3*148*FLEN/8, x4, x1, x2)

inst_17045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80001fffffffff; valaddr_reg:x3; val_offset:51135*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51135*0 + 3*149*FLEN/8, x4, x1, x2)

inst_17046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80003fffffffff; valaddr_reg:x3; val_offset:51138*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51138*0 + 3*150*FLEN/8, x4, x1, x2)

inst_17047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80007fffffffff; valaddr_reg:x3; val_offset:51141*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51141*0 + 3*151*FLEN/8, x4, x1, x2)

inst_17048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8000ffffffffff; valaddr_reg:x3; val_offset:51144*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51144*0 + 3*152*FLEN/8, x4, x1, x2)

inst_17049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8001ffffffffff; valaddr_reg:x3; val_offset:51147*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51147*0 + 3*153*FLEN/8, x4, x1, x2)

inst_17050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8003ffffffffff; valaddr_reg:x3; val_offset:51150*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51150*0 + 3*154*FLEN/8, x4, x1, x2)

inst_17051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8007ffffffffff; valaddr_reg:x3; val_offset:51153*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51153*0 + 3*155*FLEN/8, x4, x1, x2)

inst_17052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x800fffffffffff; valaddr_reg:x3; val_offset:51156*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51156*0 + 3*156*FLEN/8, x4, x1, x2)

inst_17053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x801fffffffffff; valaddr_reg:x3; val_offset:51159*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51159*0 + 3*157*FLEN/8, x4, x1, x2)

inst_17054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x803fffffffffff; valaddr_reg:x3; val_offset:51162*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51162*0 + 3*158*FLEN/8, x4, x1, x2)

inst_17055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x807fffffffffff; valaddr_reg:x3; val_offset:51165*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51165*0 + 3*159*FLEN/8, x4, x1, x2)

inst_17056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x80ffffffffffff; valaddr_reg:x3; val_offset:51168*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51168*0 + 3*160*FLEN/8, x4, x1, x2)

inst_17057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x81ffffffffffff; valaddr_reg:x3; val_offset:51171*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51171*0 + 3*161*FLEN/8, x4, x1, x2)

inst_17058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x83ffffffffffff; valaddr_reg:x3; val_offset:51174*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51174*0 + 3*162*FLEN/8, x4, x1, x2)

inst_17059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x87ffffffffffff; valaddr_reg:x3; val_offset:51177*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51177*0 + 3*163*FLEN/8, x4, x1, x2)

inst_17060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x88000000000000; valaddr_reg:x3; val_offset:51180*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51180*0 + 3*164*FLEN/8, x4, x1, x2)

inst_17061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8c000000000000; valaddr_reg:x3; val_offset:51183*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51183*0 + 3*165*FLEN/8, x4, x1, x2)

inst_17062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8e000000000000; valaddr_reg:x3; val_offset:51186*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51186*0 + 3*166*FLEN/8, x4, x1, x2)

inst_17063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8f000000000000; valaddr_reg:x3; val_offset:51189*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51189*0 + 3*167*FLEN/8, x4, x1, x2)

inst_17064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8f800000000000; valaddr_reg:x3; val_offset:51192*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51192*0 + 3*168*FLEN/8, x4, x1, x2)

inst_17065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fc00000000000; valaddr_reg:x3; val_offset:51195*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51195*0 + 3*169*FLEN/8, x4, x1, x2)

inst_17066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fe00000000000; valaddr_reg:x3; val_offset:51198*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51198*0 + 3*170*FLEN/8, x4, x1, x2)

inst_17067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ff00000000000; valaddr_reg:x3; val_offset:51201*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51201*0 + 3*171*FLEN/8, x4, x1, x2)

inst_17068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ff80000000000; valaddr_reg:x3; val_offset:51204*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51204*0 + 3*172*FLEN/8, x4, x1, x2)

inst_17069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffc0000000000; valaddr_reg:x3; val_offset:51207*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51207*0 + 3*173*FLEN/8, x4, x1, x2)

inst_17070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffe0000000000; valaddr_reg:x3; val_offset:51210*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51210*0 + 3*174*FLEN/8, x4, x1, x2)

inst_17071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fff0000000000; valaddr_reg:x3; val_offset:51213*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51213*0 + 3*175*FLEN/8, x4, x1, x2)

inst_17072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fff8000000000; valaddr_reg:x3; val_offset:51216*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51216*0 + 3*176*FLEN/8, x4, x1, x2)

inst_17073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffc000000000; valaddr_reg:x3; val_offset:51219*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51219*0 + 3*177*FLEN/8, x4, x1, x2)

inst_17074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffe000000000; valaddr_reg:x3; val_offset:51222*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51222*0 + 3*178*FLEN/8, x4, x1, x2)

inst_17075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffff000000000; valaddr_reg:x3; val_offset:51225*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51225*0 + 3*179*FLEN/8, x4, x1, x2)

inst_17076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffff800000000; valaddr_reg:x3; val_offset:51228*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51228*0 + 3*180*FLEN/8, x4, x1, x2)

inst_17077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffc00000000; valaddr_reg:x3; val_offset:51231*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51231*0 + 3*181*FLEN/8, x4, x1, x2)

inst_17078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffe00000000; valaddr_reg:x3; val_offset:51234*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51234*0 + 3*182*FLEN/8, x4, x1, x2)

inst_17079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffff00000000; valaddr_reg:x3; val_offset:51237*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51237*0 + 3*183*FLEN/8, x4, x1, x2)

inst_17080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffff80000000; valaddr_reg:x3; val_offset:51240*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51240*0 + 3*184*FLEN/8, x4, x1, x2)

inst_17081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffc0000000; valaddr_reg:x3; val_offset:51243*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51243*0 + 3*185*FLEN/8, x4, x1, x2)

inst_17082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffe0000000; valaddr_reg:x3; val_offset:51246*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51246*0 + 3*186*FLEN/8, x4, x1, x2)

inst_17083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffff0000000; valaddr_reg:x3; val_offset:51249*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51249*0 + 3*187*FLEN/8, x4, x1, x2)

inst_17084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffff8000000; valaddr_reg:x3; val_offset:51252*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51252*0 + 3*188*FLEN/8, x4, x1, x2)

inst_17085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffc000000; valaddr_reg:x3; val_offset:51255*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51255*0 + 3*189*FLEN/8, x4, x1, x2)

inst_17086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffe000000; valaddr_reg:x3; val_offset:51258*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51258*0 + 3*190*FLEN/8, x4, x1, x2)

inst_17087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffff000000; valaddr_reg:x3; val_offset:51261*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51261*0 + 3*191*FLEN/8, x4, x1, x2)

inst_17088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffff800000; valaddr_reg:x3; val_offset:51264*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51264*0 + 3*192*FLEN/8, x4, x1, x2)

inst_17089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffffc00000; valaddr_reg:x3; val_offset:51267*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51267*0 + 3*193*FLEN/8, x4, x1, x2)

inst_17090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffffe00000; valaddr_reg:x3; val_offset:51270*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51270*0 + 3*194*FLEN/8, x4, x1, x2)

inst_17091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffff00000; valaddr_reg:x3; val_offset:51273*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51273*0 + 3*195*FLEN/8, x4, x1, x2)

inst_17092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffff80000; valaddr_reg:x3; val_offset:51276*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51276*0 + 3*196*FLEN/8, x4, x1, x2)

inst_17093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffffc0000; valaddr_reg:x3; val_offset:51279*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51279*0 + 3*197*FLEN/8, x4, x1, x2)

inst_17094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffffe0000; valaddr_reg:x3; val_offset:51282*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51282*0 + 3*198*FLEN/8, x4, x1, x2)

inst_17095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffffff0000; valaddr_reg:x3; val_offset:51285*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51285*0 + 3*199*FLEN/8, x4, x1, x2)

inst_17096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffffff8000; valaddr_reg:x3; val_offset:51288*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51288*0 + 3*200*FLEN/8, x4, x1, x2)

inst_17097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffffffc000; valaddr_reg:x3; val_offset:51291*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51291*0 + 3*201*FLEN/8, x4, x1, x2)

inst_17098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffffffe000; valaddr_reg:x3; val_offset:51294*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51294*0 + 3*202*FLEN/8, x4, x1, x2)

inst_17099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffffff000; valaddr_reg:x3; val_offset:51297*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51297*0 + 3*203*FLEN/8, x4, x1, x2)

inst_17100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffffff800; valaddr_reg:x3; val_offset:51300*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51300*0 + 3*204*FLEN/8, x4, x1, x2)

inst_17101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffffffc00; valaddr_reg:x3; val_offset:51303*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51303*0 + 3*205*FLEN/8, x4, x1, x2)

inst_17102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffffffe00; valaddr_reg:x3; val_offset:51306*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51306*0 + 3*206*FLEN/8, x4, x1, x2)

inst_17103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffffffff00; valaddr_reg:x3; val_offset:51309*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51309*0 + 3*207*FLEN/8, x4, x1, x2)

inst_17104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffffffff80; valaddr_reg:x3; val_offset:51312*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51312*0 + 3*208*FLEN/8, x4, x1, x2)

inst_17105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffffffffc0; valaddr_reg:x3; val_offset:51315*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51315*0 + 3*209*FLEN/8, x4, x1, x2)

inst_17106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffffffffe0; valaddr_reg:x3; val_offset:51318*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51318*0 + 3*210*FLEN/8, x4, x1, x2)

inst_17107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffffffff0; valaddr_reg:x3; val_offset:51321*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51321*0 + 3*211*FLEN/8, x4, x1, x2)

inst_17108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffffffff8; valaddr_reg:x3; val_offset:51324*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51324*0 + 3*212*FLEN/8, x4, x1, x2)

inst_17109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffffffffc; valaddr_reg:x3; val_offset:51327*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51327*0 + 3*213*FLEN/8, x4, x1, x2)

inst_17110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8ffffffffffffe; valaddr_reg:x3; val_offset:51330*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51330*0 + 3*214*FLEN/8, x4, x1, x2)

inst_17111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8445e3cffed91f; op2val:0x0;
op3val:0x8fffffffffffff; valaddr_reg:x3; val_offset:51333*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51333*0 + 3*215*FLEN/8, x4, x1, x2)

inst_17112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:51336*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51336*0 + 3*216*FLEN/8, x4, x1, x2)

inst_17113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:51339*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51339*0 + 3*217*FLEN/8, x4, x1, x2)

inst_17114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:51342*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51342*0 + 3*218*FLEN/8, x4, x1, x2)

inst_17115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:51345*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51345*0 + 3*219*FLEN/8, x4, x1, x2)

inst_17116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:51348*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51348*0 + 3*220*FLEN/8, x4, x1, x2)

inst_17117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:51351*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51351*0 + 3*221*FLEN/8, x4, x1, x2)

inst_17118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:51354*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51354*0 + 3*222*FLEN/8, x4, x1, x2)

inst_17119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:51357*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51357*0 + 3*223*FLEN/8, x4, x1, x2)

inst_17120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:51360*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51360*0 + 3*224*FLEN/8, x4, x1, x2)

inst_17121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:51363*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51363*0 + 3*225*FLEN/8, x4, x1, x2)

inst_17122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:51366*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51366*0 + 3*226*FLEN/8, x4, x1, x2)

inst_17123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:51369*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51369*0 + 3*227*FLEN/8, x4, x1, x2)

inst_17124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:51372*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51372*0 + 3*228*FLEN/8, x4, x1, x2)

inst_17125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:51375*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51375*0 + 3*229*FLEN/8, x4, x1, x2)

inst_17126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:51378*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51378*0 + 3*230*FLEN/8, x4, x1, x2)

inst_17127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:51381*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51381*0 + 3*231*FLEN/8, x4, x1, x2)

inst_17128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:51384*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51384*0 + 3*232*FLEN/8, x4, x1, x2)

inst_17129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:51387*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51387*0 + 3*233*FLEN/8, x4, x1, x2)

inst_17130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:51390*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51390*0 + 3*234*FLEN/8, x4, x1, x2)

inst_17131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:51393*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51393*0 + 3*235*FLEN/8, x4, x1, x2)

inst_17132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:51396*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51396*0 + 3*236*FLEN/8, x4, x1, x2)

inst_17133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:51399*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51399*0 + 3*237*FLEN/8, x4, x1, x2)

inst_17134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000000000000; valaddr_reg:x3; val_offset:51402*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51402*0 + 3*238*FLEN/8, x4, x1, x2)

inst_17135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000000000001; valaddr_reg:x3; val_offset:51405*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51405*0 + 3*239*FLEN/8, x4, x1, x2)

inst_17136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000000000003; valaddr_reg:x3; val_offset:51408*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51408*0 + 3*240*FLEN/8, x4, x1, x2)

inst_17137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000000000007; valaddr_reg:x3; val_offset:51411*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51411*0 + 3*241*FLEN/8, x4, x1, x2)

inst_17138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000000000000f; valaddr_reg:x3; val_offset:51414*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51414*0 + 3*242*FLEN/8, x4, x1, x2)

inst_17139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000000000001f; valaddr_reg:x3; val_offset:51417*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51417*0 + 3*243*FLEN/8, x4, x1, x2)

inst_17140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000000000003f; valaddr_reg:x3; val_offset:51420*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51420*0 + 3*244*FLEN/8, x4, x1, x2)

inst_17141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000000000007f; valaddr_reg:x3; val_offset:51423*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51423*0 + 3*245*FLEN/8, x4, x1, x2)

inst_17142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00000000000ff; valaddr_reg:x3; val_offset:51426*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51426*0 + 3*246*FLEN/8, x4, x1, x2)

inst_17143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00000000001ff; valaddr_reg:x3; val_offset:51429*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51429*0 + 3*247*FLEN/8, x4, x1, x2)

inst_17144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00000000003ff; valaddr_reg:x3; val_offset:51432*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51432*0 + 3*248*FLEN/8, x4, x1, x2)

inst_17145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00000000007ff; valaddr_reg:x3; val_offset:51435*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51435*0 + 3*249*FLEN/8, x4, x1, x2)

inst_17146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000000000fff; valaddr_reg:x3; val_offset:51438*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51438*0 + 3*250*FLEN/8, x4, x1, x2)

inst_17147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000000001fff; valaddr_reg:x3; val_offset:51441*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51441*0 + 3*251*FLEN/8, x4, x1, x2)

inst_17148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000000003fff; valaddr_reg:x3; val_offset:51444*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51444*0 + 3*252*FLEN/8, x4, x1, x2)

inst_17149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000000007fff; valaddr_reg:x3; val_offset:51447*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51447*0 + 3*253*FLEN/8, x4, x1, x2)

inst_17150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000000000ffff; valaddr_reg:x3; val_offset:51450*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51450*0 + 3*254*FLEN/8, x4, x1, x2)

inst_17151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000000001ffff; valaddr_reg:x3; val_offset:51453*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51453*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_17152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000000003ffff; valaddr_reg:x3; val_offset:51456*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51456*0 + 3*256*FLEN/8, x4, x1, x2)

inst_17153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000000007ffff; valaddr_reg:x3; val_offset:51459*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51459*0 + 3*257*FLEN/8, x4, x1, x2)

inst_17154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00000000fffff; valaddr_reg:x3; val_offset:51462*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51462*0 + 3*258*FLEN/8, x4, x1, x2)

inst_17155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00000001fffff; valaddr_reg:x3; val_offset:51465*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51465*0 + 3*259*FLEN/8, x4, x1, x2)

inst_17156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00000003fffff; valaddr_reg:x3; val_offset:51468*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51468*0 + 3*260*FLEN/8, x4, x1, x2)

inst_17157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00000007fffff; valaddr_reg:x3; val_offset:51471*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51471*0 + 3*261*FLEN/8, x4, x1, x2)

inst_17158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000000ffffff; valaddr_reg:x3; val_offset:51474*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51474*0 + 3*262*FLEN/8, x4, x1, x2)

inst_17159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000001ffffff; valaddr_reg:x3; val_offset:51477*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51477*0 + 3*263*FLEN/8, x4, x1, x2)

inst_17160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000003ffffff; valaddr_reg:x3; val_offset:51480*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51480*0 + 3*264*FLEN/8, x4, x1, x2)

inst_17161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000007ffffff; valaddr_reg:x3; val_offset:51483*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51483*0 + 3*265*FLEN/8, x4, x1, x2)

inst_17162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000000fffffff; valaddr_reg:x3; val_offset:51486*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51486*0 + 3*266*FLEN/8, x4, x1, x2)

inst_17163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000001fffffff; valaddr_reg:x3; val_offset:51489*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51489*0 + 3*267*FLEN/8, x4, x1, x2)

inst_17164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000003fffffff; valaddr_reg:x3; val_offset:51492*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51492*0 + 3*268*FLEN/8, x4, x1, x2)

inst_17165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000007fffffff; valaddr_reg:x3; val_offset:51495*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51495*0 + 3*269*FLEN/8, x4, x1, x2)

inst_17166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00000ffffffff; valaddr_reg:x3; val_offset:51498*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51498*0 + 3*270*FLEN/8, x4, x1, x2)

inst_17167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00001ffffffff; valaddr_reg:x3; val_offset:51501*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51501*0 + 3*271*FLEN/8, x4, x1, x2)

inst_17168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00003ffffffff; valaddr_reg:x3; val_offset:51504*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51504*0 + 3*272*FLEN/8, x4, x1, x2)

inst_17169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00007ffffffff; valaddr_reg:x3; val_offset:51507*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51507*0 + 3*273*FLEN/8, x4, x1, x2)

inst_17170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0000fffffffff; valaddr_reg:x3; val_offset:51510*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51510*0 + 3*274*FLEN/8, x4, x1, x2)

inst_17171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0001fffffffff; valaddr_reg:x3; val_offset:51513*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51513*0 + 3*275*FLEN/8, x4, x1, x2)

inst_17172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0003fffffffff; valaddr_reg:x3; val_offset:51516*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51516*0 + 3*276*FLEN/8, x4, x1, x2)

inst_17173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0007fffffffff; valaddr_reg:x3; val_offset:51519*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51519*0 + 3*277*FLEN/8, x4, x1, x2)

inst_17174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb000ffffffffff; valaddr_reg:x3; val_offset:51522*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51522*0 + 3*278*FLEN/8, x4, x1, x2)

inst_17175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb001ffffffffff; valaddr_reg:x3; val_offset:51525*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51525*0 + 3*279*FLEN/8, x4, x1, x2)

inst_17176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb003ffffffffff; valaddr_reg:x3; val_offset:51528*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51528*0 + 3*280*FLEN/8, x4, x1, x2)

inst_17177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb007ffffffffff; valaddr_reg:x3; val_offset:51531*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51531*0 + 3*281*FLEN/8, x4, x1, x2)

inst_17178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb00fffffffffff; valaddr_reg:x3; val_offset:51534*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51534*0 + 3*282*FLEN/8, x4, x1, x2)

inst_17179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb01fffffffffff; valaddr_reg:x3; val_offset:51537*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51537*0 + 3*283*FLEN/8, x4, x1, x2)

inst_17180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb03fffffffffff; valaddr_reg:x3; val_offset:51540*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51540*0 + 3*284*FLEN/8, x4, x1, x2)

inst_17181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb07fffffffffff; valaddr_reg:x3; val_offset:51543*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51543*0 + 3*285*FLEN/8, x4, x1, x2)

inst_17182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb0ffffffffffff; valaddr_reg:x3; val_offset:51546*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51546*0 + 3*286*FLEN/8, x4, x1, x2)

inst_17183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb1ffffffffffff; valaddr_reg:x3; val_offset:51549*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51549*0 + 3*287*FLEN/8, x4, x1, x2)

inst_17184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb3ffffffffffff; valaddr_reg:x3; val_offset:51552*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51552*0 + 3*288*FLEN/8, x4, x1, x2)

inst_17185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb7ffffffffffff; valaddr_reg:x3; val_offset:51555*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51555*0 + 3*289*FLEN/8, x4, x1, x2)

inst_17186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xb8000000000000; valaddr_reg:x3; val_offset:51558*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51558*0 + 3*290*FLEN/8, x4, x1, x2)

inst_17187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbc000000000000; valaddr_reg:x3; val_offset:51561*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51561*0 + 3*291*FLEN/8, x4, x1, x2)

inst_17188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbe000000000000; valaddr_reg:x3; val_offset:51564*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51564*0 + 3*292*FLEN/8, x4, x1, x2)

inst_17189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbf000000000000; valaddr_reg:x3; val_offset:51567*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51567*0 + 3*293*FLEN/8, x4, x1, x2)

inst_17190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbf800000000000; valaddr_reg:x3; val_offset:51570*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51570*0 + 3*294*FLEN/8, x4, x1, x2)

inst_17191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfc00000000000; valaddr_reg:x3; val_offset:51573*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51573*0 + 3*295*FLEN/8, x4, x1, x2)

inst_17192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfe00000000000; valaddr_reg:x3; val_offset:51576*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51576*0 + 3*296*FLEN/8, x4, x1, x2)

inst_17193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbff00000000000; valaddr_reg:x3; val_offset:51579*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51579*0 + 3*297*FLEN/8, x4, x1, x2)

inst_17194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbff80000000000; valaddr_reg:x3; val_offset:51582*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51582*0 + 3*298*FLEN/8, x4, x1, x2)

inst_17195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffc0000000000; valaddr_reg:x3; val_offset:51585*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51585*0 + 3*299*FLEN/8, x4, x1, x2)

inst_17196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffe0000000000; valaddr_reg:x3; val_offset:51588*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51588*0 + 3*300*FLEN/8, x4, x1, x2)

inst_17197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfff0000000000; valaddr_reg:x3; val_offset:51591*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51591*0 + 3*301*FLEN/8, x4, x1, x2)

inst_17198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfff8000000000; valaddr_reg:x3; val_offset:51594*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51594*0 + 3*302*FLEN/8, x4, x1, x2)

inst_17199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffc000000000; valaddr_reg:x3; val_offset:51597*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51597*0 + 3*303*FLEN/8, x4, x1, x2)

inst_17200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffe000000000; valaddr_reg:x3; val_offset:51600*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51600*0 + 3*304*FLEN/8, x4, x1, x2)

inst_17201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffff000000000; valaddr_reg:x3; val_offset:51603*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51603*0 + 3*305*FLEN/8, x4, x1, x2)

inst_17202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffff800000000; valaddr_reg:x3; val_offset:51606*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51606*0 + 3*306*FLEN/8, x4, x1, x2)

inst_17203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffc00000000; valaddr_reg:x3; val_offset:51609*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51609*0 + 3*307*FLEN/8, x4, x1, x2)

inst_17204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffe00000000; valaddr_reg:x3; val_offset:51612*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51612*0 + 3*308*FLEN/8, x4, x1, x2)

inst_17205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffff00000000; valaddr_reg:x3; val_offset:51615*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51615*0 + 3*309*FLEN/8, x4, x1, x2)

inst_17206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffff80000000; valaddr_reg:x3; val_offset:51618*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51618*0 + 3*310*FLEN/8, x4, x1, x2)

inst_17207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffc0000000; valaddr_reg:x3; val_offset:51621*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51621*0 + 3*311*FLEN/8, x4, x1, x2)

inst_17208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffe0000000; valaddr_reg:x3; val_offset:51624*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51624*0 + 3*312*FLEN/8, x4, x1, x2)

inst_17209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffff0000000; valaddr_reg:x3; val_offset:51627*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51627*0 + 3*313*FLEN/8, x4, x1, x2)

inst_17210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffff8000000; valaddr_reg:x3; val_offset:51630*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51630*0 + 3*314*FLEN/8, x4, x1, x2)

inst_17211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffc000000; valaddr_reg:x3; val_offset:51633*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51633*0 + 3*315*FLEN/8, x4, x1, x2)

inst_17212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffe000000; valaddr_reg:x3; val_offset:51636*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51636*0 + 3*316*FLEN/8, x4, x1, x2)

inst_17213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffff000000; valaddr_reg:x3; val_offset:51639*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51639*0 + 3*317*FLEN/8, x4, x1, x2)

inst_17214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffff800000; valaddr_reg:x3; val_offset:51642*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51642*0 + 3*318*FLEN/8, x4, x1, x2)

inst_17215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffffc00000; valaddr_reg:x3; val_offset:51645*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51645*0 + 3*319*FLEN/8, x4, x1, x2)

inst_17216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffffe00000; valaddr_reg:x3; val_offset:51648*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51648*0 + 3*320*FLEN/8, x4, x1, x2)

inst_17217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffff00000; valaddr_reg:x3; val_offset:51651*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51651*0 + 3*321*FLEN/8, x4, x1, x2)

inst_17218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffff80000; valaddr_reg:x3; val_offset:51654*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51654*0 + 3*322*FLEN/8, x4, x1, x2)

inst_17219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffffc0000; valaddr_reg:x3; val_offset:51657*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51657*0 + 3*323*FLEN/8, x4, x1, x2)

inst_17220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffffe0000; valaddr_reg:x3; val_offset:51660*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51660*0 + 3*324*FLEN/8, x4, x1, x2)

inst_17221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffffff0000; valaddr_reg:x3; val_offset:51663*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51663*0 + 3*325*FLEN/8, x4, x1, x2)

inst_17222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffffff8000; valaddr_reg:x3; val_offset:51666*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51666*0 + 3*326*FLEN/8, x4, x1, x2)

inst_17223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffffffc000; valaddr_reg:x3; val_offset:51669*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51669*0 + 3*327*FLEN/8, x4, x1, x2)

inst_17224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffffffe000; valaddr_reg:x3; val_offset:51672*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51672*0 + 3*328*FLEN/8, x4, x1, x2)

inst_17225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffffff000; valaddr_reg:x3; val_offset:51675*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51675*0 + 3*329*FLEN/8, x4, x1, x2)

inst_17226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffffff800; valaddr_reg:x3; val_offset:51678*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51678*0 + 3*330*FLEN/8, x4, x1, x2)

inst_17227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffffffc00; valaddr_reg:x3; val_offset:51681*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51681*0 + 3*331*FLEN/8, x4, x1, x2)

inst_17228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffffffe00; valaddr_reg:x3; val_offset:51684*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51684*0 + 3*332*FLEN/8, x4, x1, x2)

inst_17229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffffffff00; valaddr_reg:x3; val_offset:51687*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51687*0 + 3*333*FLEN/8, x4, x1, x2)

inst_17230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffffffff80; valaddr_reg:x3; val_offset:51690*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51690*0 + 3*334*FLEN/8, x4, x1, x2)

inst_17231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffffffffc0; valaddr_reg:x3; val_offset:51693*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51693*0 + 3*335*FLEN/8, x4, x1, x2)

inst_17232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffffffffe0; valaddr_reg:x3; val_offset:51696*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51696*0 + 3*336*FLEN/8, x4, x1, x2)

inst_17233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffffffff0; valaddr_reg:x3; val_offset:51699*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51699*0 + 3*337*FLEN/8, x4, x1, x2)

inst_17234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffffffff8; valaddr_reg:x3; val_offset:51702*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51702*0 + 3*338*FLEN/8, x4, x1, x2)

inst_17235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffffffffc; valaddr_reg:x3; val_offset:51705*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51705*0 + 3*339*FLEN/8, x4, x1, x2)

inst_17236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbffffffffffffe; valaddr_reg:x3; val_offset:51708*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51708*0 + 3*340*FLEN/8, x4, x1, x2)

inst_17237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4599d6197c653 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84599d6197c653; op2val:0x0;
op3val:0xbfffffffffffff; valaddr_reg:x3; val_offset:51711*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51711*0 + 3*341*FLEN/8, x4, x1, x2)

inst_17238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000000000000; valaddr_reg:x3; val_offset:51714*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51714*0 + 3*342*FLEN/8, x4, x1, x2)

inst_17239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000000000001; valaddr_reg:x3; val_offset:51717*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51717*0 + 3*343*FLEN/8, x4, x1, x2)

inst_17240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000000000003; valaddr_reg:x3; val_offset:51720*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51720*0 + 3*344*FLEN/8, x4, x1, x2)

inst_17241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000000000007; valaddr_reg:x3; val_offset:51723*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51723*0 + 3*345*FLEN/8, x4, x1, x2)

inst_17242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000000000000f; valaddr_reg:x3; val_offset:51726*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51726*0 + 3*346*FLEN/8, x4, x1, x2)

inst_17243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000000000001f; valaddr_reg:x3; val_offset:51729*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51729*0 + 3*347*FLEN/8, x4, x1, x2)

inst_17244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000000000003f; valaddr_reg:x3; val_offset:51732*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51732*0 + 3*348*FLEN/8, x4, x1, x2)

inst_17245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000000000007f; valaddr_reg:x3; val_offset:51735*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51735*0 + 3*349*FLEN/8, x4, x1, x2)

inst_17246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00000000000ff; valaddr_reg:x3; val_offset:51738*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51738*0 + 3*350*FLEN/8, x4, x1, x2)

inst_17247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00000000001ff; valaddr_reg:x3; val_offset:51741*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51741*0 + 3*351*FLEN/8, x4, x1, x2)

inst_17248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00000000003ff; valaddr_reg:x3; val_offset:51744*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51744*0 + 3*352*FLEN/8, x4, x1, x2)

inst_17249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00000000007ff; valaddr_reg:x3; val_offset:51747*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51747*0 + 3*353*FLEN/8, x4, x1, x2)

inst_17250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000000000fff; valaddr_reg:x3; val_offset:51750*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51750*0 + 3*354*FLEN/8, x4, x1, x2)

inst_17251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000000001fff; valaddr_reg:x3; val_offset:51753*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51753*0 + 3*355*FLEN/8, x4, x1, x2)

inst_17252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000000003fff; valaddr_reg:x3; val_offset:51756*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51756*0 + 3*356*FLEN/8, x4, x1, x2)

inst_17253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000000007fff; valaddr_reg:x3; val_offset:51759*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51759*0 + 3*357*FLEN/8, x4, x1, x2)

inst_17254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000000000ffff; valaddr_reg:x3; val_offset:51762*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51762*0 + 3*358*FLEN/8, x4, x1, x2)

inst_17255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000000001ffff; valaddr_reg:x3; val_offset:51765*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51765*0 + 3*359*FLEN/8, x4, x1, x2)

inst_17256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000000003ffff; valaddr_reg:x3; val_offset:51768*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51768*0 + 3*360*FLEN/8, x4, x1, x2)

inst_17257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000000007ffff; valaddr_reg:x3; val_offset:51771*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51771*0 + 3*361*FLEN/8, x4, x1, x2)

inst_17258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00000000fffff; valaddr_reg:x3; val_offset:51774*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51774*0 + 3*362*FLEN/8, x4, x1, x2)

inst_17259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00000001fffff; valaddr_reg:x3; val_offset:51777*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51777*0 + 3*363*FLEN/8, x4, x1, x2)

inst_17260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00000003fffff; valaddr_reg:x3; val_offset:51780*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51780*0 + 3*364*FLEN/8, x4, x1, x2)

inst_17261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00000007fffff; valaddr_reg:x3; val_offset:51783*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51783*0 + 3*365*FLEN/8, x4, x1, x2)

inst_17262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000000ffffff; valaddr_reg:x3; val_offset:51786*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51786*0 + 3*366*FLEN/8, x4, x1, x2)

inst_17263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000001ffffff; valaddr_reg:x3; val_offset:51789*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51789*0 + 3*367*FLEN/8, x4, x1, x2)

inst_17264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000003ffffff; valaddr_reg:x3; val_offset:51792*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51792*0 + 3*368*FLEN/8, x4, x1, x2)

inst_17265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000007ffffff; valaddr_reg:x3; val_offset:51795*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51795*0 + 3*369*FLEN/8, x4, x1, x2)

inst_17266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000000fffffff; valaddr_reg:x3; val_offset:51798*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51798*0 + 3*370*FLEN/8, x4, x1, x2)

inst_17267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000001fffffff; valaddr_reg:x3; val_offset:51801*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51801*0 + 3*371*FLEN/8, x4, x1, x2)

inst_17268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000003fffffff; valaddr_reg:x3; val_offset:51804*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51804*0 + 3*372*FLEN/8, x4, x1, x2)

inst_17269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000007fffffff; valaddr_reg:x3; val_offset:51807*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51807*0 + 3*373*FLEN/8, x4, x1, x2)

inst_17270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00000ffffffff; valaddr_reg:x3; val_offset:51810*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51810*0 + 3*374*FLEN/8, x4, x1, x2)

inst_17271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00001ffffffff; valaddr_reg:x3; val_offset:51813*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51813*0 + 3*375*FLEN/8, x4, x1, x2)

inst_17272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00003ffffffff; valaddr_reg:x3; val_offset:51816*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51816*0 + 3*376*FLEN/8, x4, x1, x2)

inst_17273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00007ffffffff; valaddr_reg:x3; val_offset:51819*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51819*0 + 3*377*FLEN/8, x4, x1, x2)

inst_17274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0000fffffffff; valaddr_reg:x3; val_offset:51822*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51822*0 + 3*378*FLEN/8, x4, x1, x2)

inst_17275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0001fffffffff; valaddr_reg:x3; val_offset:51825*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51825*0 + 3*379*FLEN/8, x4, x1, x2)

inst_17276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0003fffffffff; valaddr_reg:x3; val_offset:51828*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51828*0 + 3*380*FLEN/8, x4, x1, x2)

inst_17277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0007fffffffff; valaddr_reg:x3; val_offset:51831*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51831*0 + 3*381*FLEN/8, x4, x1, x2)

inst_17278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d000ffffffffff; valaddr_reg:x3; val_offset:51834*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51834*0 + 3*382*FLEN/8, x4, x1, x2)

inst_17279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d001ffffffffff; valaddr_reg:x3; val_offset:51837*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51837*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_17280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d003ffffffffff; valaddr_reg:x3; val_offset:51840*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51840*0 + 3*384*FLEN/8, x4, x1, x2)

inst_17281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d007ffffffffff; valaddr_reg:x3; val_offset:51843*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51843*0 + 3*385*FLEN/8, x4, x1, x2)

inst_17282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d00fffffffffff; valaddr_reg:x3; val_offset:51846*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51846*0 + 3*386*FLEN/8, x4, x1, x2)

inst_17283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d01fffffffffff; valaddr_reg:x3; val_offset:51849*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51849*0 + 3*387*FLEN/8, x4, x1, x2)

inst_17284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d03fffffffffff; valaddr_reg:x3; val_offset:51852*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51852*0 + 3*388*FLEN/8, x4, x1, x2)

inst_17285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d07fffffffffff; valaddr_reg:x3; val_offset:51855*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51855*0 + 3*389*FLEN/8, x4, x1, x2)

inst_17286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d0ffffffffffff; valaddr_reg:x3; val_offset:51858*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51858*0 + 3*390*FLEN/8, x4, x1, x2)

inst_17287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d1ffffffffffff; valaddr_reg:x3; val_offset:51861*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51861*0 + 3*391*FLEN/8, x4, x1, x2)

inst_17288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d3ffffffffffff; valaddr_reg:x3; val_offset:51864*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51864*0 + 3*392*FLEN/8, x4, x1, x2)

inst_17289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d7ffffffffffff; valaddr_reg:x3; val_offset:51867*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51867*0 + 3*393*FLEN/8, x4, x1, x2)

inst_17290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38d8000000000000; valaddr_reg:x3; val_offset:51870*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51870*0 + 3*394*FLEN/8, x4, x1, x2)

inst_17291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dc000000000000; valaddr_reg:x3; val_offset:51873*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51873*0 + 3*395*FLEN/8, x4, x1, x2)

inst_17292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38de000000000000; valaddr_reg:x3; val_offset:51876*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51876*0 + 3*396*FLEN/8, x4, x1, x2)

inst_17293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38df000000000000; valaddr_reg:x3; val_offset:51879*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51879*0 + 3*397*FLEN/8, x4, x1, x2)

inst_17294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38df800000000000; valaddr_reg:x3; val_offset:51882*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51882*0 + 3*398*FLEN/8, x4, x1, x2)

inst_17295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfc00000000000; valaddr_reg:x3; val_offset:51885*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51885*0 + 3*399*FLEN/8, x4, x1, x2)

inst_17296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfe00000000000; valaddr_reg:x3; val_offset:51888*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51888*0 + 3*400*FLEN/8, x4, x1, x2)

inst_17297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dff00000000000; valaddr_reg:x3; val_offset:51891*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51891*0 + 3*401*FLEN/8, x4, x1, x2)

inst_17298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dff80000000000; valaddr_reg:x3; val_offset:51894*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51894*0 + 3*402*FLEN/8, x4, x1, x2)

inst_17299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffc0000000000; valaddr_reg:x3; val_offset:51897*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51897*0 + 3*403*FLEN/8, x4, x1, x2)

inst_17300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffe0000000000; valaddr_reg:x3; val_offset:51900*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51900*0 + 3*404*FLEN/8, x4, x1, x2)

inst_17301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfff0000000000; valaddr_reg:x3; val_offset:51903*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51903*0 + 3*405*FLEN/8, x4, x1, x2)

inst_17302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfff8000000000; valaddr_reg:x3; val_offset:51906*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51906*0 + 3*406*FLEN/8, x4, x1, x2)

inst_17303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffc000000000; valaddr_reg:x3; val_offset:51909*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51909*0 + 3*407*FLEN/8, x4, x1, x2)

inst_17304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffe000000000; valaddr_reg:x3; val_offset:51912*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51912*0 + 3*408*FLEN/8, x4, x1, x2)

inst_17305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffff000000000; valaddr_reg:x3; val_offset:51915*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51915*0 + 3*409*FLEN/8, x4, x1, x2)

inst_17306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffff800000000; valaddr_reg:x3; val_offset:51918*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51918*0 + 3*410*FLEN/8, x4, x1, x2)

inst_17307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffc00000000; valaddr_reg:x3; val_offset:51921*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51921*0 + 3*411*FLEN/8, x4, x1, x2)

inst_17308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffe00000000; valaddr_reg:x3; val_offset:51924*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51924*0 + 3*412*FLEN/8, x4, x1, x2)

inst_17309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffff00000000; valaddr_reg:x3; val_offset:51927*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51927*0 + 3*413*FLEN/8, x4, x1, x2)

inst_17310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffff80000000; valaddr_reg:x3; val_offset:51930*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51930*0 + 3*414*FLEN/8, x4, x1, x2)

inst_17311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffc0000000; valaddr_reg:x3; val_offset:51933*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51933*0 + 3*415*FLEN/8, x4, x1, x2)

inst_17312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffe0000000; valaddr_reg:x3; val_offset:51936*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51936*0 + 3*416*FLEN/8, x4, x1, x2)

inst_17313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffff0000000; valaddr_reg:x3; val_offset:51939*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51939*0 + 3*417*FLEN/8, x4, x1, x2)

inst_17314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffff8000000; valaddr_reg:x3; val_offset:51942*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51942*0 + 3*418*FLEN/8, x4, x1, x2)

inst_17315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffc000000; valaddr_reg:x3; val_offset:51945*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51945*0 + 3*419*FLEN/8, x4, x1, x2)

inst_17316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffe000000; valaddr_reg:x3; val_offset:51948*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51948*0 + 3*420*FLEN/8, x4, x1, x2)

inst_17317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffff000000; valaddr_reg:x3; val_offset:51951*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51951*0 + 3*421*FLEN/8, x4, x1, x2)

inst_17318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffff800000; valaddr_reg:x3; val_offset:51954*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51954*0 + 3*422*FLEN/8, x4, x1, x2)

inst_17319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffffc00000; valaddr_reg:x3; val_offset:51957*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51957*0 + 3*423*FLEN/8, x4, x1, x2)

inst_17320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffffe00000; valaddr_reg:x3; val_offset:51960*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51960*0 + 3*424*FLEN/8, x4, x1, x2)

inst_17321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffff00000; valaddr_reg:x3; val_offset:51963*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51963*0 + 3*425*FLEN/8, x4, x1, x2)

inst_17322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffff80000; valaddr_reg:x3; val_offset:51966*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51966*0 + 3*426*FLEN/8, x4, x1, x2)

inst_17323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffffc0000; valaddr_reg:x3; val_offset:51969*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51969*0 + 3*427*FLEN/8, x4, x1, x2)

inst_17324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffffe0000; valaddr_reg:x3; val_offset:51972*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51972*0 + 3*428*FLEN/8, x4, x1, x2)

inst_17325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffffff0000; valaddr_reg:x3; val_offset:51975*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51975*0 + 3*429*FLEN/8, x4, x1, x2)

inst_17326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffffff8000; valaddr_reg:x3; val_offset:51978*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51978*0 + 3*430*FLEN/8, x4, x1, x2)

inst_17327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffffffc000; valaddr_reg:x3; val_offset:51981*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51981*0 + 3*431*FLEN/8, x4, x1, x2)

inst_17328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffffffe000; valaddr_reg:x3; val_offset:51984*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51984*0 + 3*432*FLEN/8, x4, x1, x2)

inst_17329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffffff000; valaddr_reg:x3; val_offset:51987*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51987*0 + 3*433*FLEN/8, x4, x1, x2)

inst_17330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffffff800; valaddr_reg:x3; val_offset:51990*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51990*0 + 3*434*FLEN/8, x4, x1, x2)

inst_17331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffffffc00; valaddr_reg:x3; val_offset:51993*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51993*0 + 3*435*FLEN/8, x4, x1, x2)

inst_17332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffffffe00; valaddr_reg:x3; val_offset:51996*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51996*0 + 3*436*FLEN/8, x4, x1, x2)

inst_17333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffffffff00; valaddr_reg:x3; val_offset:51999*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 51999*0 + 3*437*FLEN/8, x4, x1, x2)

inst_17334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffffffff80; valaddr_reg:x3; val_offset:52002*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52002*0 + 3*438*FLEN/8, x4, x1, x2)

inst_17335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffffffffc0; valaddr_reg:x3; val_offset:52005*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52005*0 + 3*439*FLEN/8, x4, x1, x2)

inst_17336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffffffffe0; valaddr_reg:x3; val_offset:52008*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52008*0 + 3*440*FLEN/8, x4, x1, x2)

inst_17337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffffffff0; valaddr_reg:x3; val_offset:52011*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52011*0 + 3*441*FLEN/8, x4, x1, x2)

inst_17338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffffffff8; valaddr_reg:x3; val_offset:52014*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52014*0 + 3*442*FLEN/8, x4, x1, x2)

inst_17339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffffffffc; valaddr_reg:x3; val_offset:52017*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52017*0 + 3*443*FLEN/8, x4, x1, x2)

inst_17340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dffffffffffffe; valaddr_reg:x3; val_offset:52020*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52020*0 + 3*444*FLEN/8, x4, x1, x2)

inst_17341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x38d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x38dfffffffffffff; valaddr_reg:x3; val_offset:52023*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52023*0 + 3*445*FLEN/8, x4, x1, x2)

inst_17342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:52026*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52026*0 + 3*446*FLEN/8, x4, x1, x2)

inst_17343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:52029*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52029*0 + 3*447*FLEN/8, x4, x1, x2)

inst_17344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:52032*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52032*0 + 3*448*FLEN/8, x4, x1, x2)

inst_17345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:52035*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52035*0 + 3*449*FLEN/8, x4, x1, x2)

inst_17346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:52038*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52038*0 + 3*450*FLEN/8, x4, x1, x2)

inst_17347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:52041*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52041*0 + 3*451*FLEN/8, x4, x1, x2)

inst_17348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:52044*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52044*0 + 3*452*FLEN/8, x4, x1, x2)

inst_17349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:52047*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52047*0 + 3*453*FLEN/8, x4, x1, x2)

inst_17350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:52050*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52050*0 + 3*454*FLEN/8, x4, x1, x2)

inst_17351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:52053*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52053*0 + 3*455*FLEN/8, x4, x1, x2)

inst_17352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:52056*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52056*0 + 3*456*FLEN/8, x4, x1, x2)

inst_17353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:52059*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52059*0 + 3*457*FLEN/8, x4, x1, x2)

inst_17354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:52062*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52062*0 + 3*458*FLEN/8, x4, x1, x2)

inst_17355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:52065*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52065*0 + 3*459*FLEN/8, x4, x1, x2)

inst_17356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:52068*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52068*0 + 3*460*FLEN/8, x4, x1, x2)

inst_17357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:52071*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52071*0 + 3*461*FLEN/8, x4, x1, x2)

inst_17358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:52074*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52074*0 + 3*462*FLEN/8, x4, x1, x2)

inst_17359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:52077*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52077*0 + 3*463*FLEN/8, x4, x1, x2)

inst_17360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:52080*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52080*0 + 3*464*FLEN/8, x4, x1, x2)

inst_17361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:52083*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52083*0 + 3*465*FLEN/8, x4, x1, x2)

inst_17362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:52086*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52086*0 + 3*466*FLEN/8, x4, x1, x2)

inst_17363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8d1bc7b35b98d and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a10e22bb3b33; op2val:0x2058d1bc7b35b98d;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:52089*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52089*0 + 3*467*FLEN/8, x4, x1, x2)

inst_17364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:52092*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52092*0 + 3*468*FLEN/8, x4, x1, x2)

inst_17365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:52095*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52095*0 + 3*469*FLEN/8, x4, x1, x2)

inst_17366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:52098*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52098*0 + 3*470*FLEN/8, x4, x1, x2)

inst_17367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:52101*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52101*0 + 3*471*FLEN/8, x4, x1, x2)

inst_17368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:52104*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52104*0 + 3*472*FLEN/8, x4, x1, x2)

inst_17369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:52107*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52107*0 + 3*473*FLEN/8, x4, x1, x2)

inst_17370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:52110*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52110*0 + 3*474*FLEN/8, x4, x1, x2)

inst_17371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:52113*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52113*0 + 3*475*FLEN/8, x4, x1, x2)

inst_17372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:52116*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52116*0 + 3*476*FLEN/8, x4, x1, x2)

inst_17373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:52119*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52119*0 + 3*477*FLEN/8, x4, x1, x2)

inst_17374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:52122*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52122*0 + 3*478*FLEN/8, x4, x1, x2)

inst_17375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:52125*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52125*0 + 3*479*FLEN/8, x4, x1, x2)

inst_17376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:52128*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52128*0 + 3*480*FLEN/8, x4, x1, x2)

inst_17377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:52131*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52131*0 + 3*481*FLEN/8, x4, x1, x2)

inst_17378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:52134*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52134*0 + 3*482*FLEN/8, x4, x1, x2)

inst_17379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:52137*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52137*0 + 3*483*FLEN/8, x4, x1, x2)

inst_17380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:52140*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52140*0 + 3*484*FLEN/8, x4, x1, x2)

inst_17381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:52143*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52143*0 + 3*485*FLEN/8, x4, x1, x2)

inst_17382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:52146*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52146*0 + 3*486*FLEN/8, x4, x1, x2)

inst_17383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:52149*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52149*0 + 3*487*FLEN/8, x4, x1, x2)

inst_17384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:52152*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52152*0 + 3*488*FLEN/8, x4, x1, x2)

inst_17385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:52155*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52155*0 + 3*489*FLEN/8, x4, x1, x2)

inst_17386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000000000000; valaddr_reg:x3; val_offset:52158*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52158*0 + 3*490*FLEN/8, x4, x1, x2)

inst_17387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000000000001; valaddr_reg:x3; val_offset:52161*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52161*0 + 3*491*FLEN/8, x4, x1, x2)

inst_17388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000000000003; valaddr_reg:x3; val_offset:52164*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52164*0 + 3*492*FLEN/8, x4, x1, x2)

inst_17389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000000000007; valaddr_reg:x3; val_offset:52167*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52167*0 + 3*493*FLEN/8, x4, x1, x2)

inst_17390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000000000000f; valaddr_reg:x3; val_offset:52170*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52170*0 + 3*494*FLEN/8, x4, x1, x2)

inst_17391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000000000001f; valaddr_reg:x3; val_offset:52173*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52173*0 + 3*495*FLEN/8, x4, x1, x2)

inst_17392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000000000003f; valaddr_reg:x3; val_offset:52176*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52176*0 + 3*496*FLEN/8, x4, x1, x2)

inst_17393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000000000007f; valaddr_reg:x3; val_offset:52179*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52179*0 + 3*497*FLEN/8, x4, x1, x2)

inst_17394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00000000000ff; valaddr_reg:x3; val_offset:52182*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52182*0 + 3*498*FLEN/8, x4, x1, x2)

inst_17395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00000000001ff; valaddr_reg:x3; val_offset:52185*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52185*0 + 3*499*FLEN/8, x4, x1, x2)

inst_17396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00000000003ff; valaddr_reg:x3; val_offset:52188*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52188*0 + 3*500*FLEN/8, x4, x1, x2)

inst_17397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00000000007ff; valaddr_reg:x3; val_offset:52191*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52191*0 + 3*501*FLEN/8, x4, x1, x2)

inst_17398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000000000fff; valaddr_reg:x3; val_offset:52194*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52194*0 + 3*502*FLEN/8, x4, x1, x2)

inst_17399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000000001fff; valaddr_reg:x3; val_offset:52197*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52197*0 + 3*503*FLEN/8, x4, x1, x2)

inst_17400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000000003fff; valaddr_reg:x3; val_offset:52200*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52200*0 + 3*504*FLEN/8, x4, x1, x2)

inst_17401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000000007fff; valaddr_reg:x3; val_offset:52203*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52203*0 + 3*505*FLEN/8, x4, x1, x2)

inst_17402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000000000ffff; valaddr_reg:x3; val_offset:52206*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52206*0 + 3*506*FLEN/8, x4, x1, x2)

inst_17403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000000001ffff; valaddr_reg:x3; val_offset:52209*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52209*0 + 3*507*FLEN/8, x4, x1, x2)

inst_17404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000000003ffff; valaddr_reg:x3; val_offset:52212*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52212*0 + 3*508*FLEN/8, x4, x1, x2)

inst_17405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000000007ffff; valaddr_reg:x3; val_offset:52215*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52215*0 + 3*509*FLEN/8, x4, x1, x2)

inst_17406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00000000fffff; valaddr_reg:x3; val_offset:52218*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52218*0 + 3*510*FLEN/8, x4, x1, x2)

inst_17407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00000001fffff; valaddr_reg:x3; val_offset:52221*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52221*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_17408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00000003fffff; valaddr_reg:x3; val_offset:52224*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52224*0 + 3*512*FLEN/8, x4, x1, x2)

inst_17409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00000007fffff; valaddr_reg:x3; val_offset:52227*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52227*0 + 3*513*FLEN/8, x4, x1, x2)

inst_17410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000000ffffff; valaddr_reg:x3; val_offset:52230*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52230*0 + 3*514*FLEN/8, x4, x1, x2)

inst_17411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000001ffffff; valaddr_reg:x3; val_offset:52233*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52233*0 + 3*515*FLEN/8, x4, x1, x2)

inst_17412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000003ffffff; valaddr_reg:x3; val_offset:52236*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52236*0 + 3*516*FLEN/8, x4, x1, x2)

inst_17413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000007ffffff; valaddr_reg:x3; val_offset:52239*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52239*0 + 3*517*FLEN/8, x4, x1, x2)

inst_17414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000000fffffff; valaddr_reg:x3; val_offset:52242*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52242*0 + 3*518*FLEN/8, x4, x1, x2)

inst_17415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000001fffffff; valaddr_reg:x3; val_offset:52245*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52245*0 + 3*519*FLEN/8, x4, x1, x2)

inst_17416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000003fffffff; valaddr_reg:x3; val_offset:52248*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52248*0 + 3*520*FLEN/8, x4, x1, x2)

inst_17417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000007fffffff; valaddr_reg:x3; val_offset:52251*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52251*0 + 3*521*FLEN/8, x4, x1, x2)

inst_17418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00000ffffffff; valaddr_reg:x3; val_offset:52254*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52254*0 + 3*522*FLEN/8, x4, x1, x2)

inst_17419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00001ffffffff; valaddr_reg:x3; val_offset:52257*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52257*0 + 3*523*FLEN/8, x4, x1, x2)

inst_17420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00003ffffffff; valaddr_reg:x3; val_offset:52260*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52260*0 + 3*524*FLEN/8, x4, x1, x2)

inst_17421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00007ffffffff; valaddr_reg:x3; val_offset:52263*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52263*0 + 3*525*FLEN/8, x4, x1, x2)

inst_17422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0000fffffffff; valaddr_reg:x3; val_offset:52266*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52266*0 + 3*526*FLEN/8, x4, x1, x2)

inst_17423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0001fffffffff; valaddr_reg:x3; val_offset:52269*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52269*0 + 3*527*FLEN/8, x4, x1, x2)

inst_17424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0003fffffffff; valaddr_reg:x3; val_offset:52272*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52272*0 + 3*528*FLEN/8, x4, x1, x2)

inst_17425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0007fffffffff; valaddr_reg:x3; val_offset:52275*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52275*0 + 3*529*FLEN/8, x4, x1, x2)

inst_17426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a000ffffffffff; valaddr_reg:x3; val_offset:52278*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52278*0 + 3*530*FLEN/8, x4, x1, x2)

inst_17427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a001ffffffffff; valaddr_reg:x3; val_offset:52281*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52281*0 + 3*531*FLEN/8, x4, x1, x2)

inst_17428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a003ffffffffff; valaddr_reg:x3; val_offset:52284*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52284*0 + 3*532*FLEN/8, x4, x1, x2)

inst_17429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a007ffffffffff; valaddr_reg:x3; val_offset:52287*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52287*0 + 3*533*FLEN/8, x4, x1, x2)

inst_17430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a00fffffffffff; valaddr_reg:x3; val_offset:52290*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52290*0 + 3*534*FLEN/8, x4, x1, x2)

inst_17431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a01fffffffffff; valaddr_reg:x3; val_offset:52293*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52293*0 + 3*535*FLEN/8, x4, x1, x2)

inst_17432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a03fffffffffff; valaddr_reg:x3; val_offset:52296*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52296*0 + 3*536*FLEN/8, x4, x1, x2)

inst_17433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a07fffffffffff; valaddr_reg:x3; val_offset:52299*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52299*0 + 3*537*FLEN/8, x4, x1, x2)

inst_17434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a0ffffffffffff; valaddr_reg:x3; val_offset:52302*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52302*0 + 3*538*FLEN/8, x4, x1, x2)

inst_17435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a1ffffffffffff; valaddr_reg:x3; val_offset:52305*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52305*0 + 3*539*FLEN/8, x4, x1, x2)

inst_17436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a3ffffffffffff; valaddr_reg:x3; val_offset:52308*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52308*0 + 3*540*FLEN/8, x4, x1, x2)

inst_17437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a7ffffffffffff; valaddr_reg:x3; val_offset:52311*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52311*0 + 3*541*FLEN/8, x4, x1, x2)

inst_17438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2a8000000000000; valaddr_reg:x3; val_offset:52314*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52314*0 + 3*542*FLEN/8, x4, x1, x2)

inst_17439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2ac000000000000; valaddr_reg:x3; val_offset:52317*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52317*0 + 3*543*FLEN/8, x4, x1, x2)

inst_17440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2ae000000000000; valaddr_reg:x3; val_offset:52320*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52320*0 + 3*544*FLEN/8, x4, x1, x2)

inst_17441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2af000000000000; valaddr_reg:x3; val_offset:52323*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52323*0 + 3*545*FLEN/8, x4, x1, x2)

inst_17442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2af800000000000; valaddr_reg:x3; val_offset:52326*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52326*0 + 3*546*FLEN/8, x4, x1, x2)

inst_17443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afc00000000000; valaddr_reg:x3; val_offset:52329*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52329*0 + 3*547*FLEN/8, x4, x1, x2)

inst_17444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afe00000000000; valaddr_reg:x3; val_offset:52332*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52332*0 + 3*548*FLEN/8, x4, x1, x2)

inst_17445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2aff00000000000; valaddr_reg:x3; val_offset:52335*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52335*0 + 3*549*FLEN/8, x4, x1, x2)

inst_17446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2aff80000000000; valaddr_reg:x3; val_offset:52338*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52338*0 + 3*550*FLEN/8, x4, x1, x2)

inst_17447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affc0000000000; valaddr_reg:x3; val_offset:52341*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52341*0 + 3*551*FLEN/8, x4, x1, x2)

inst_17448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affe0000000000; valaddr_reg:x3; val_offset:52344*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52344*0 + 3*552*FLEN/8, x4, x1, x2)

inst_17449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afff0000000000; valaddr_reg:x3; val_offset:52347*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52347*0 + 3*553*FLEN/8, x4, x1, x2)

inst_17450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afff8000000000; valaddr_reg:x3; val_offset:52350*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52350*0 + 3*554*FLEN/8, x4, x1, x2)

inst_17451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffc000000000; valaddr_reg:x3; val_offset:52353*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52353*0 + 3*555*FLEN/8, x4, x1, x2)

inst_17452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffe000000000; valaddr_reg:x3; val_offset:52356*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52356*0 + 3*556*FLEN/8, x4, x1, x2)

inst_17453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affff000000000; valaddr_reg:x3; val_offset:52359*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52359*0 + 3*557*FLEN/8, x4, x1, x2)

inst_17454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affff800000000; valaddr_reg:x3; val_offset:52362*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52362*0 + 3*558*FLEN/8, x4, x1, x2)

inst_17455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffc00000000; valaddr_reg:x3; val_offset:52365*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52365*0 + 3*559*FLEN/8, x4, x1, x2)

inst_17456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffe00000000; valaddr_reg:x3; val_offset:52368*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52368*0 + 3*560*FLEN/8, x4, x1, x2)

inst_17457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffff00000000; valaddr_reg:x3; val_offset:52371*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52371*0 + 3*561*FLEN/8, x4, x1, x2)

inst_17458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffff80000000; valaddr_reg:x3; val_offset:52374*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52374*0 + 3*562*FLEN/8, x4, x1, x2)

inst_17459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffc0000000; valaddr_reg:x3; val_offset:52377*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52377*0 + 3*563*FLEN/8, x4, x1, x2)

inst_17460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffe0000000; valaddr_reg:x3; val_offset:52380*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52380*0 + 3*564*FLEN/8, x4, x1, x2)

inst_17461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffff0000000; valaddr_reg:x3; val_offset:52383*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52383*0 + 3*565*FLEN/8, x4, x1, x2)

inst_17462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffff8000000; valaddr_reg:x3; val_offset:52386*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52386*0 + 3*566*FLEN/8, x4, x1, x2)

inst_17463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffc000000; valaddr_reg:x3; val_offset:52389*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52389*0 + 3*567*FLEN/8, x4, x1, x2)

inst_17464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffe000000; valaddr_reg:x3; val_offset:52392*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52392*0 + 3*568*FLEN/8, x4, x1, x2)

inst_17465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffff000000; valaddr_reg:x3; val_offset:52395*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52395*0 + 3*569*FLEN/8, x4, x1, x2)

inst_17466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffff800000; valaddr_reg:x3; val_offset:52398*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52398*0 + 3*570*FLEN/8, x4, x1, x2)

inst_17467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffffc00000; valaddr_reg:x3; val_offset:52401*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52401*0 + 3*571*FLEN/8, x4, x1, x2)

inst_17468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffffe00000; valaddr_reg:x3; val_offset:52404*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52404*0 + 3*572*FLEN/8, x4, x1, x2)

inst_17469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffff00000; valaddr_reg:x3; val_offset:52407*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52407*0 + 3*573*FLEN/8, x4, x1, x2)

inst_17470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffff80000; valaddr_reg:x3; val_offset:52410*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52410*0 + 3*574*FLEN/8, x4, x1, x2)

inst_17471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffffc0000; valaddr_reg:x3; val_offset:52413*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52413*0 + 3*575*FLEN/8, x4, x1, x2)

inst_17472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffffe0000; valaddr_reg:x3; val_offset:52416*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52416*0 + 3*576*FLEN/8, x4, x1, x2)

inst_17473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffffff0000; valaddr_reg:x3; val_offset:52419*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52419*0 + 3*577*FLEN/8, x4, x1, x2)

inst_17474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffffff8000; valaddr_reg:x3; val_offset:52422*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52422*0 + 3*578*FLEN/8, x4, x1, x2)

inst_17475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffffffc000; valaddr_reg:x3; val_offset:52425*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52425*0 + 3*579*FLEN/8, x4, x1, x2)

inst_17476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffffffe000; valaddr_reg:x3; val_offset:52428*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52428*0 + 3*580*FLEN/8, x4, x1, x2)

inst_17477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffffff000; valaddr_reg:x3; val_offset:52431*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52431*0 + 3*581*FLEN/8, x4, x1, x2)

inst_17478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffffff800; valaddr_reg:x3; val_offset:52434*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52434*0 + 3*582*FLEN/8, x4, x1, x2)

inst_17479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffffffc00; valaddr_reg:x3; val_offset:52437*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52437*0 + 3*583*FLEN/8, x4, x1, x2)

inst_17480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffffffe00; valaddr_reg:x3; val_offset:52440*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52440*0 + 3*584*FLEN/8, x4, x1, x2)

inst_17481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffffffff00; valaddr_reg:x3; val_offset:52443*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52443*0 + 3*585*FLEN/8, x4, x1, x2)

inst_17482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffffffff80; valaddr_reg:x3; val_offset:52446*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52446*0 + 3*586*FLEN/8, x4, x1, x2)

inst_17483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffffffffc0; valaddr_reg:x3; val_offset:52449*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52449*0 + 3*587*FLEN/8, x4, x1, x2)

inst_17484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffffffffe0; valaddr_reg:x3; val_offset:52452*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52452*0 + 3*588*FLEN/8, x4, x1, x2)

inst_17485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffffffff0; valaddr_reg:x3; val_offset:52455*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52455*0 + 3*589*FLEN/8, x4, x1, x2)

inst_17486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffffffff8; valaddr_reg:x3; val_offset:52458*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52458*0 + 3*590*FLEN/8, x4, x1, x2)

inst_17487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffffffffc; valaddr_reg:x3; val_offset:52461*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52461*0 + 3*591*FLEN/8, x4, x1, x2)

inst_17488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2affffffffffffe; valaddr_reg:x3; val_offset:52464*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52464*0 + 3*592*FLEN/8, x4, x1, x2)

inst_17489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84a1b2df4767ef; op2val:0x0;
op3val:0x2afffffffffffff; valaddr_reg:x3; val_offset:52467*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52467*0 + 3*593*FLEN/8, x4, x1, x2)

inst_17490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:52470*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52470*0 + 3*594*FLEN/8, x4, x1, x2)

inst_17491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:52473*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52473*0 + 3*595*FLEN/8, x4, x1, x2)

inst_17492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:52476*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52476*0 + 3*596*FLEN/8, x4, x1, x2)

inst_17493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:52479*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52479*0 + 3*597*FLEN/8, x4, x1, x2)

inst_17494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:52482*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52482*0 + 3*598*FLEN/8, x4, x1, x2)

inst_17495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:52485*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52485*0 + 3*599*FLEN/8, x4, x1, x2)

inst_17496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:52488*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52488*0 + 3*600*FLEN/8, x4, x1, x2)

inst_17497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:52491*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52491*0 + 3*601*FLEN/8, x4, x1, x2)

inst_17498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:52494*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52494*0 + 3*602*FLEN/8, x4, x1, x2)

inst_17499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:52497*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52497*0 + 3*603*FLEN/8, x4, x1, x2)

inst_17500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:52500*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52500*0 + 3*604*FLEN/8, x4, x1, x2)

inst_17501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:52503*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52503*0 + 3*605*FLEN/8, x4, x1, x2)

inst_17502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:52506*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52506*0 + 3*606*FLEN/8, x4, x1, x2)

inst_17503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:52509*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52509*0 + 3*607*FLEN/8, x4, x1, x2)

inst_17504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:52512*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52512*0 + 3*608*FLEN/8, x4, x1, x2)

inst_17505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:52515*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52515*0 + 3*609*FLEN/8, x4, x1, x2)

inst_17506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:52518*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52518*0 + 3*610*FLEN/8, x4, x1, x2)

inst_17507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:52521*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52521*0 + 3*611*FLEN/8, x4, x1, x2)

inst_17508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:52524*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52524*0 + 3*612*FLEN/8, x4, x1, x2)

inst_17509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:52527*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52527*0 + 3*613*FLEN/8, x4, x1, x2)

inst_17510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:52530*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52530*0 + 3*614*FLEN/8, x4, x1, x2)

inst_17511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:52533*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52533*0 + 3*615*FLEN/8, x4, x1, x2)

inst_17512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000000000000; valaddr_reg:x3; val_offset:52536*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52536*0 + 3*616*FLEN/8, x4, x1, x2)

inst_17513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000000000001; valaddr_reg:x3; val_offset:52539*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52539*0 + 3*617*FLEN/8, x4, x1, x2)

inst_17514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000000000003; valaddr_reg:x3; val_offset:52542*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52542*0 + 3*618*FLEN/8, x4, x1, x2)

inst_17515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000000000007; valaddr_reg:x3; val_offset:52545*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52545*0 + 3*619*FLEN/8, x4, x1, x2)

inst_17516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000000000000f; valaddr_reg:x3; val_offset:52548*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52548*0 + 3*620*FLEN/8, x4, x1, x2)

inst_17517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000000000001f; valaddr_reg:x3; val_offset:52551*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52551*0 + 3*621*FLEN/8, x4, x1, x2)

inst_17518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000000000003f; valaddr_reg:x3; val_offset:52554*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52554*0 + 3*622*FLEN/8, x4, x1, x2)

inst_17519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000000000007f; valaddr_reg:x3; val_offset:52557*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52557*0 + 3*623*FLEN/8, x4, x1, x2)

inst_17520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00000000000ff; valaddr_reg:x3; val_offset:52560*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52560*0 + 3*624*FLEN/8, x4, x1, x2)

inst_17521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00000000001ff; valaddr_reg:x3; val_offset:52563*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52563*0 + 3*625*FLEN/8, x4, x1, x2)

inst_17522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00000000003ff; valaddr_reg:x3; val_offset:52566*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52566*0 + 3*626*FLEN/8, x4, x1, x2)

inst_17523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00000000007ff; valaddr_reg:x3; val_offset:52569*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52569*0 + 3*627*FLEN/8, x4, x1, x2)

inst_17524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000000000fff; valaddr_reg:x3; val_offset:52572*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52572*0 + 3*628*FLEN/8, x4, x1, x2)

inst_17525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000000001fff; valaddr_reg:x3; val_offset:52575*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52575*0 + 3*629*FLEN/8, x4, x1, x2)

inst_17526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000000003fff; valaddr_reg:x3; val_offset:52578*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52578*0 + 3*630*FLEN/8, x4, x1, x2)

inst_17527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000000007fff; valaddr_reg:x3; val_offset:52581*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52581*0 + 3*631*FLEN/8, x4, x1, x2)

inst_17528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000000000ffff; valaddr_reg:x3; val_offset:52584*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52584*0 + 3*632*FLEN/8, x4, x1, x2)

inst_17529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000000001ffff; valaddr_reg:x3; val_offset:52587*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52587*0 + 3*633*FLEN/8, x4, x1, x2)

inst_17530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000000003ffff; valaddr_reg:x3; val_offset:52590*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52590*0 + 3*634*FLEN/8, x4, x1, x2)

inst_17531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000000007ffff; valaddr_reg:x3; val_offset:52593*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52593*0 + 3*635*FLEN/8, x4, x1, x2)

inst_17532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00000000fffff; valaddr_reg:x3; val_offset:52596*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52596*0 + 3*636*FLEN/8, x4, x1, x2)

inst_17533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00000001fffff; valaddr_reg:x3; val_offset:52599*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52599*0 + 3*637*FLEN/8, x4, x1, x2)

inst_17534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00000003fffff; valaddr_reg:x3; val_offset:52602*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52602*0 + 3*638*FLEN/8, x4, x1, x2)

inst_17535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00000007fffff; valaddr_reg:x3; val_offset:52605*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52605*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_17536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000000ffffff; valaddr_reg:x3; val_offset:52608*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52608*0 + 3*640*FLEN/8, x4, x1, x2)

inst_17537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000001ffffff; valaddr_reg:x3; val_offset:52611*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52611*0 + 3*641*FLEN/8, x4, x1, x2)

inst_17538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000003ffffff; valaddr_reg:x3; val_offset:52614*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52614*0 + 3*642*FLEN/8, x4, x1, x2)

inst_17539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000007ffffff; valaddr_reg:x3; val_offset:52617*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52617*0 + 3*643*FLEN/8, x4, x1, x2)

inst_17540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000000fffffff; valaddr_reg:x3; val_offset:52620*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52620*0 + 3*644*FLEN/8, x4, x1, x2)

inst_17541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000001fffffff; valaddr_reg:x3; val_offset:52623*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52623*0 + 3*645*FLEN/8, x4, x1, x2)

inst_17542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000003fffffff; valaddr_reg:x3; val_offset:52626*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52626*0 + 3*646*FLEN/8, x4, x1, x2)

inst_17543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000007fffffff; valaddr_reg:x3; val_offset:52629*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52629*0 + 3*647*FLEN/8, x4, x1, x2)

inst_17544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00000ffffffff; valaddr_reg:x3; val_offset:52632*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52632*0 + 3*648*FLEN/8, x4, x1, x2)

inst_17545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00001ffffffff; valaddr_reg:x3; val_offset:52635*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52635*0 + 3*649*FLEN/8, x4, x1, x2)

inst_17546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00003ffffffff; valaddr_reg:x3; val_offset:52638*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52638*0 + 3*650*FLEN/8, x4, x1, x2)

inst_17547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00007ffffffff; valaddr_reg:x3; val_offset:52641*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52641*0 + 3*651*FLEN/8, x4, x1, x2)

inst_17548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0000fffffffff; valaddr_reg:x3; val_offset:52644*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52644*0 + 3*652*FLEN/8, x4, x1, x2)

inst_17549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0001fffffffff; valaddr_reg:x3; val_offset:52647*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52647*0 + 3*653*FLEN/8, x4, x1, x2)

inst_17550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0003fffffffff; valaddr_reg:x3; val_offset:52650*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52650*0 + 3*654*FLEN/8, x4, x1, x2)

inst_17551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0007fffffffff; valaddr_reg:x3; val_offset:52653*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52653*0 + 3*655*FLEN/8, x4, x1, x2)

inst_17552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d000ffffffffff; valaddr_reg:x3; val_offset:52656*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52656*0 + 3*656*FLEN/8, x4, x1, x2)

inst_17553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d001ffffffffff; valaddr_reg:x3; val_offset:52659*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52659*0 + 3*657*FLEN/8, x4, x1, x2)

inst_17554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d003ffffffffff; valaddr_reg:x3; val_offset:52662*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52662*0 + 3*658*FLEN/8, x4, x1, x2)

inst_17555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d007ffffffffff; valaddr_reg:x3; val_offset:52665*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52665*0 + 3*659*FLEN/8, x4, x1, x2)

inst_17556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d00fffffffffff; valaddr_reg:x3; val_offset:52668*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52668*0 + 3*660*FLEN/8, x4, x1, x2)

inst_17557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d01fffffffffff; valaddr_reg:x3; val_offset:52671*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52671*0 + 3*661*FLEN/8, x4, x1, x2)

inst_17558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d03fffffffffff; valaddr_reg:x3; val_offset:52674*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52674*0 + 3*662*FLEN/8, x4, x1, x2)

inst_17559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d07fffffffffff; valaddr_reg:x3; val_offset:52677*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52677*0 + 3*663*FLEN/8, x4, x1, x2)

inst_17560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d0ffffffffffff; valaddr_reg:x3; val_offset:52680*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52680*0 + 3*664*FLEN/8, x4, x1, x2)

inst_17561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d1ffffffffffff; valaddr_reg:x3; val_offset:52683*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52683*0 + 3*665*FLEN/8, x4, x1, x2)

inst_17562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d3ffffffffffff; valaddr_reg:x3; val_offset:52686*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52686*0 + 3*666*FLEN/8, x4, x1, x2)

inst_17563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d7ffffffffffff; valaddr_reg:x3; val_offset:52689*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52689*0 + 3*667*FLEN/8, x4, x1, x2)

inst_17564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83d8000000000000; valaddr_reg:x3; val_offset:52692*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52692*0 + 3*668*FLEN/8, x4, x1, x2)

inst_17565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dc000000000000; valaddr_reg:x3; val_offset:52695*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52695*0 + 3*669*FLEN/8, x4, x1, x2)

inst_17566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83de000000000000; valaddr_reg:x3; val_offset:52698*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52698*0 + 3*670*FLEN/8, x4, x1, x2)

inst_17567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83df000000000000; valaddr_reg:x3; val_offset:52701*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52701*0 + 3*671*FLEN/8, x4, x1, x2)

inst_17568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83df800000000000; valaddr_reg:x3; val_offset:52704*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52704*0 + 3*672*FLEN/8, x4, x1, x2)

inst_17569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfc00000000000; valaddr_reg:x3; val_offset:52707*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52707*0 + 3*673*FLEN/8, x4, x1, x2)

inst_17570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfe00000000000; valaddr_reg:x3; val_offset:52710*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52710*0 + 3*674*FLEN/8, x4, x1, x2)

inst_17571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dff00000000000; valaddr_reg:x3; val_offset:52713*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52713*0 + 3*675*FLEN/8, x4, x1, x2)

inst_17572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dff80000000000; valaddr_reg:x3; val_offset:52716*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52716*0 + 3*676*FLEN/8, x4, x1, x2)

inst_17573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffc0000000000; valaddr_reg:x3; val_offset:52719*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52719*0 + 3*677*FLEN/8, x4, x1, x2)

inst_17574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffe0000000000; valaddr_reg:x3; val_offset:52722*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52722*0 + 3*678*FLEN/8, x4, x1, x2)

inst_17575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfff0000000000; valaddr_reg:x3; val_offset:52725*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52725*0 + 3*679*FLEN/8, x4, x1, x2)

inst_17576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfff8000000000; valaddr_reg:x3; val_offset:52728*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52728*0 + 3*680*FLEN/8, x4, x1, x2)

inst_17577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffc000000000; valaddr_reg:x3; val_offset:52731*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52731*0 + 3*681*FLEN/8, x4, x1, x2)

inst_17578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffe000000000; valaddr_reg:x3; val_offset:52734*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52734*0 + 3*682*FLEN/8, x4, x1, x2)

inst_17579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffff000000000; valaddr_reg:x3; val_offset:52737*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52737*0 + 3*683*FLEN/8, x4, x1, x2)

inst_17580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffff800000000; valaddr_reg:x3; val_offset:52740*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52740*0 + 3*684*FLEN/8, x4, x1, x2)

inst_17581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffc00000000; valaddr_reg:x3; val_offset:52743*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52743*0 + 3*685*FLEN/8, x4, x1, x2)

inst_17582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffe00000000; valaddr_reg:x3; val_offset:52746*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52746*0 + 3*686*FLEN/8, x4, x1, x2)

inst_17583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffff00000000; valaddr_reg:x3; val_offset:52749*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52749*0 + 3*687*FLEN/8, x4, x1, x2)

inst_17584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffff80000000; valaddr_reg:x3; val_offset:52752*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52752*0 + 3*688*FLEN/8, x4, x1, x2)

inst_17585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffc0000000; valaddr_reg:x3; val_offset:52755*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52755*0 + 3*689*FLEN/8, x4, x1, x2)

inst_17586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffe0000000; valaddr_reg:x3; val_offset:52758*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52758*0 + 3*690*FLEN/8, x4, x1, x2)

inst_17587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffff0000000; valaddr_reg:x3; val_offset:52761*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52761*0 + 3*691*FLEN/8, x4, x1, x2)

inst_17588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffff8000000; valaddr_reg:x3; val_offset:52764*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52764*0 + 3*692*FLEN/8, x4, x1, x2)

inst_17589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffc000000; valaddr_reg:x3; val_offset:52767*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52767*0 + 3*693*FLEN/8, x4, x1, x2)

inst_17590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffe000000; valaddr_reg:x3; val_offset:52770*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52770*0 + 3*694*FLEN/8, x4, x1, x2)

inst_17591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffff000000; valaddr_reg:x3; val_offset:52773*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52773*0 + 3*695*FLEN/8, x4, x1, x2)

inst_17592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffff800000; valaddr_reg:x3; val_offset:52776*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52776*0 + 3*696*FLEN/8, x4, x1, x2)

inst_17593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffffc00000; valaddr_reg:x3; val_offset:52779*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52779*0 + 3*697*FLEN/8, x4, x1, x2)

inst_17594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffffe00000; valaddr_reg:x3; val_offset:52782*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52782*0 + 3*698*FLEN/8, x4, x1, x2)

inst_17595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffff00000; valaddr_reg:x3; val_offset:52785*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52785*0 + 3*699*FLEN/8, x4, x1, x2)

inst_17596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffff80000; valaddr_reg:x3; val_offset:52788*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52788*0 + 3*700*FLEN/8, x4, x1, x2)

inst_17597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffffc0000; valaddr_reg:x3; val_offset:52791*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52791*0 + 3*701*FLEN/8, x4, x1, x2)

inst_17598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffffe0000; valaddr_reg:x3; val_offset:52794*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52794*0 + 3*702*FLEN/8, x4, x1, x2)

inst_17599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffffff0000; valaddr_reg:x3; val_offset:52797*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52797*0 + 3*703*FLEN/8, x4, x1, x2)

inst_17600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffffff8000; valaddr_reg:x3; val_offset:52800*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52800*0 + 3*704*FLEN/8, x4, x1, x2)

inst_17601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffffffc000; valaddr_reg:x3; val_offset:52803*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52803*0 + 3*705*FLEN/8, x4, x1, x2)

inst_17602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffffffe000; valaddr_reg:x3; val_offset:52806*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52806*0 + 3*706*FLEN/8, x4, x1, x2)

inst_17603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffffff000; valaddr_reg:x3; val_offset:52809*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52809*0 + 3*707*FLEN/8, x4, x1, x2)

inst_17604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffffff800; valaddr_reg:x3; val_offset:52812*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52812*0 + 3*708*FLEN/8, x4, x1, x2)

inst_17605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffffffc00; valaddr_reg:x3; val_offset:52815*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52815*0 + 3*709*FLEN/8, x4, x1, x2)

inst_17606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffffffe00; valaddr_reg:x3; val_offset:52818*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52818*0 + 3*710*FLEN/8, x4, x1, x2)

inst_17607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffffffff00; valaddr_reg:x3; val_offset:52821*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52821*0 + 3*711*FLEN/8, x4, x1, x2)

inst_17608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffffffff80; valaddr_reg:x3; val_offset:52824*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52824*0 + 3*712*FLEN/8, x4, x1, x2)

inst_17609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffffffffc0; valaddr_reg:x3; val_offset:52827*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52827*0 + 3*713*FLEN/8, x4, x1, x2)

inst_17610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffffffffe0; valaddr_reg:x3; val_offset:52830*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52830*0 + 3*714*FLEN/8, x4, x1, x2)

inst_17611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffffffff0; valaddr_reg:x3; val_offset:52833*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52833*0 + 3*715*FLEN/8, x4, x1, x2)

inst_17612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffffffff8; valaddr_reg:x3; val_offset:52836*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52836*0 + 3*716*FLEN/8, x4, x1, x2)

inst_17613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffffffffc; valaddr_reg:x3; val_offset:52839*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52839*0 + 3*717*FLEN/8, x4, x1, x2)

inst_17614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dffffffffffffe; valaddr_reg:x3; val_offset:52842*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52842*0 + 3*718*FLEN/8, x4, x1, x2)

inst_17615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4c948f7edfa77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84c948f7edfa77; op2val:0x8000;
op3val:0x83dfffffffffffff; valaddr_reg:x3; val_offset:52845*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52845*0 + 3*719*FLEN/8, x4, x1, x2)

inst_17616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000000000000; valaddr_reg:x3; val_offset:52848*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52848*0 + 3*720*FLEN/8, x4, x1, x2)

inst_17617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000000000001; valaddr_reg:x3; val_offset:52851*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52851*0 + 3*721*FLEN/8, x4, x1, x2)

inst_17618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000000000003; valaddr_reg:x3; val_offset:52854*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52854*0 + 3*722*FLEN/8, x4, x1, x2)

inst_17619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000000000007; valaddr_reg:x3; val_offset:52857*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52857*0 + 3*723*FLEN/8, x4, x1, x2)

inst_17620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000000000000f; valaddr_reg:x3; val_offset:52860*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52860*0 + 3*724*FLEN/8, x4, x1, x2)

inst_17621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000000000001f; valaddr_reg:x3; val_offset:52863*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52863*0 + 3*725*FLEN/8, x4, x1, x2)

inst_17622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000000000003f; valaddr_reg:x3; val_offset:52866*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52866*0 + 3*726*FLEN/8, x4, x1, x2)

inst_17623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000000000007f; valaddr_reg:x3; val_offset:52869*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52869*0 + 3*727*FLEN/8, x4, x1, x2)

inst_17624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700000000000ff; valaddr_reg:x3; val_offset:52872*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52872*0 + 3*728*FLEN/8, x4, x1, x2)

inst_17625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700000000001ff; valaddr_reg:x3; val_offset:52875*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52875*0 + 3*729*FLEN/8, x4, x1, x2)

inst_17626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700000000003ff; valaddr_reg:x3; val_offset:52878*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52878*0 + 3*730*FLEN/8, x4, x1, x2)

inst_17627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700000000007ff; valaddr_reg:x3; val_offset:52881*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52881*0 + 3*731*FLEN/8, x4, x1, x2)

inst_17628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000000000fff; valaddr_reg:x3; val_offset:52884*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52884*0 + 3*732*FLEN/8, x4, x1, x2)

inst_17629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000000001fff; valaddr_reg:x3; val_offset:52887*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52887*0 + 3*733*FLEN/8, x4, x1, x2)

inst_17630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000000003fff; valaddr_reg:x3; val_offset:52890*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52890*0 + 3*734*FLEN/8, x4, x1, x2)

inst_17631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000000007fff; valaddr_reg:x3; val_offset:52893*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52893*0 + 3*735*FLEN/8, x4, x1, x2)

inst_17632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000000000ffff; valaddr_reg:x3; val_offset:52896*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52896*0 + 3*736*FLEN/8, x4, x1, x2)

inst_17633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000000001ffff; valaddr_reg:x3; val_offset:52899*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52899*0 + 3*737*FLEN/8, x4, x1, x2)

inst_17634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000000003ffff; valaddr_reg:x3; val_offset:52902*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52902*0 + 3*738*FLEN/8, x4, x1, x2)

inst_17635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000000007ffff; valaddr_reg:x3; val_offset:52905*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52905*0 + 3*739*FLEN/8, x4, x1, x2)

inst_17636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700000000fffff; valaddr_reg:x3; val_offset:52908*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52908*0 + 3*740*FLEN/8, x4, x1, x2)

inst_17637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700000001fffff; valaddr_reg:x3; val_offset:52911*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52911*0 + 3*741*FLEN/8, x4, x1, x2)

inst_17638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700000003fffff; valaddr_reg:x3; val_offset:52914*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52914*0 + 3*742*FLEN/8, x4, x1, x2)

inst_17639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700000007fffff; valaddr_reg:x3; val_offset:52917*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52917*0 + 3*743*FLEN/8, x4, x1, x2)

inst_17640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000000ffffff; valaddr_reg:x3; val_offset:52920*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52920*0 + 3*744*FLEN/8, x4, x1, x2)

inst_17641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000001ffffff; valaddr_reg:x3; val_offset:52923*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52923*0 + 3*745*FLEN/8, x4, x1, x2)

inst_17642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000003ffffff; valaddr_reg:x3; val_offset:52926*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52926*0 + 3*746*FLEN/8, x4, x1, x2)

inst_17643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000007ffffff; valaddr_reg:x3; val_offset:52929*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52929*0 + 3*747*FLEN/8, x4, x1, x2)

inst_17644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000000fffffff; valaddr_reg:x3; val_offset:52932*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52932*0 + 3*748*FLEN/8, x4, x1, x2)

inst_17645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000001fffffff; valaddr_reg:x3; val_offset:52935*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52935*0 + 3*749*FLEN/8, x4, x1, x2)

inst_17646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000003fffffff; valaddr_reg:x3; val_offset:52938*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52938*0 + 3*750*FLEN/8, x4, x1, x2)

inst_17647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000007fffffff; valaddr_reg:x3; val_offset:52941*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52941*0 + 3*751*FLEN/8, x4, x1, x2)

inst_17648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700000ffffffff; valaddr_reg:x3; val_offset:52944*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52944*0 + 3*752*FLEN/8, x4, x1, x2)

inst_17649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700001ffffffff; valaddr_reg:x3; val_offset:52947*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52947*0 + 3*753*FLEN/8, x4, x1, x2)

inst_17650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700003ffffffff; valaddr_reg:x3; val_offset:52950*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52950*0 + 3*754*FLEN/8, x4, x1, x2)

inst_17651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700007ffffffff; valaddr_reg:x3; val_offset:52953*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52953*0 + 3*755*FLEN/8, x4, x1, x2)

inst_17652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70000fffffffff; valaddr_reg:x3; val_offset:52956*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52956*0 + 3*756*FLEN/8, x4, x1, x2)

inst_17653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70001fffffffff; valaddr_reg:x3; val_offset:52959*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52959*0 + 3*757*FLEN/8, x4, x1, x2)

inst_17654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70003fffffffff; valaddr_reg:x3; val_offset:52962*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52962*0 + 3*758*FLEN/8, x4, x1, x2)

inst_17655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd70007fffffffff; valaddr_reg:x3; val_offset:52965*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52965*0 + 3*759*FLEN/8, x4, x1, x2)

inst_17656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7000ffffffffff; valaddr_reg:x3; val_offset:52968*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52968*0 + 3*760*FLEN/8, x4, x1, x2)

inst_17657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7001ffffffffff; valaddr_reg:x3; val_offset:52971*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52971*0 + 3*761*FLEN/8, x4, x1, x2)

inst_17658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7003ffffffffff; valaddr_reg:x3; val_offset:52974*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52974*0 + 3*762*FLEN/8, x4, x1, x2)

inst_17659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd7007ffffffffff; valaddr_reg:x3; val_offset:52977*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52977*0 + 3*763*FLEN/8, x4, x1, x2)

inst_17660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd700fffffffffff; valaddr_reg:x3; val_offset:52980*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52980*0 + 3*764*FLEN/8, x4, x1, x2)

inst_17661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd701fffffffffff; valaddr_reg:x3; val_offset:52983*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52983*0 + 3*765*FLEN/8, x4, x1, x2)

inst_17662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd703fffffffffff; valaddr_reg:x3; val_offset:52986*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52986*0 + 3*766*FLEN/8, x4, x1, x2)

inst_17663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x89ad1cb08abb6 and fs3 == 1 and fe3 == 0x3d7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84cf1937fde173; op2val:0x9fe89ad1cb08abb6;
op3val:0xbd707fffffffffff; valaddr_reg:x3; val_offset:52989*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 52989*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036871553023,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036888330239,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036921884671,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036988993535,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037123211263,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037391646719,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037928517631,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372039002259455,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372041149743103,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372045444710399,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372054034644991,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372071214514175,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372105574252543,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372174293729279,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372311732682751,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372586610589695,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223373136366403583,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223374235878031359,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223376434901286911,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223380832947798015,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223389629040820223,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223407221226864639,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223442405598953471,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223512774343131135,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223653511831486463,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223934986808197119,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224497936761618431,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461055,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461056,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226749736575303680,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227312686528724992,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227594161505435648,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227734898993790976,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227805267737968640,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227840452110057472,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227858044296101888,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227866840389124096,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227871238435635200,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227873437458890752,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227874536970518528,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875086726332416,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875361604239360,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875499043192832,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875567762669568,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875602122407936,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875619302277120,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875627892211712,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875632187179008,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875634334662656,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635408404480,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635945275392,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636213710848,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636347928576,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636415037440,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636448591872,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636465369088,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636473757696,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636477952000,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636480049152,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481097728,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481622016,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481884160,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482015232,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482080768,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482113536,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482129920,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482138112,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482142208,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482144256,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145280,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145792,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146048,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146176,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6882673032598361379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146303,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963968,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963969,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963971,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963975,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963983,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963999,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964031,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964095,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964223,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964479,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964991,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018966015,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018968063,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018972159,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018980351,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018996735,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019029503,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019095039,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019226111,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019488255,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797020012543,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797021061119,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797023158271,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797027352575,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797035741183,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797052518399,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797086072831,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797153181695,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797287399423,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797555834879,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028798092705791,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028799166447615,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028801313931263,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028805608898559,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028814198833151,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028831378702335,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028865738440703,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028934457917439,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029071896870911,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029346774777855,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029896530591743,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36030996042219519,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36033195065475071,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36037593111986175,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36046389205008383,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36063981391052799,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36099165763141631,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36169534507319295,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36310271995674623,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36591746972385279,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(37154696925806591,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649215,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649216,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39406496739491840,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39969446692913152,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40250921669623808,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40391659157979136,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40462027902156800,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40497212274245632,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40514804460290048,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40523600553312256,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40527998599823360,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40530197623078912,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531297134706688,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531846890520576,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532121768427520,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532259207380992,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532327926857728,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532362286596096,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532379466465280,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532388056399872,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532392351367168,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532394498850816,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532395572592640,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396109463552,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396377899008,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396512116736,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396579225600,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396612780032,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396629557248,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396637945856,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396642140160,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396644237312,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645285888,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645810176,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646072320,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646203392,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646268928,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646301696,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646318080,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646326272,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646330368,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646332416,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333440,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333952,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334208,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334336,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334400,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334432,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334448,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334456,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334460,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334462,64,FLEN)
NAN_BOXED(6882702975278438687,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334463,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075456,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075457,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075459,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075463,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075471,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075487,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075519,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075583,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075711,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075967,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901076479,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901077503,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901079551,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901083647,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901091839,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901108223,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901140991,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901206527,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901337599,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901599743,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595902124031,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595903172607,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595905269759,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595909464063,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595917852671,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595934629887,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595968184319,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596035293183,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596169510911,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596437946367,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596974817279,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539598048559103,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539600196042751,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539604491010047,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539613080944639,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539630260813823,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539664620552191,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539733340028927,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539870778982399,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49540145656889343,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49540695412703231,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49541794924331007,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49543993947586559,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49548391994097663,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49557188087119871,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49574780273164287,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49609964645253119,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49680333389430783,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49821070877786111,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(50102545854496767,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(50665495807918079,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(51791395714760703,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(51791395714760704,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(52917295621603328,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53480245575024640,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53761720551735296,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53902458040090624,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53972826784268288,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54008011156357120,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54025603342401536,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54034399435423744,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54038797481934848,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54040996505190400,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042096016818176,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042645772632064,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042920650539008,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043058089492480,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043126808969216,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043161168707584,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043178348576768,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043186938511360,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043191233478656,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043193380962304,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043194454704128,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043194991575040,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195260010496,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195394228224,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195461337088,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195494891520,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195511668736,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195520057344,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195524251648,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195526348800,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195527397376,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195527921664,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528183808,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528314880,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528380416,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528413184,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528429568,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528437760,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528441856,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528443904,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528444928,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445440,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445696,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445824,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445888,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445920,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445936,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445944,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445948,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445950,64,FLEN)
NAN_BOXED(6882724663011034707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445951,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279780864,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279780865,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279780867,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279780871,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279780879,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279780895,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279780927,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279780991,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279781119,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279781375,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279781887,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279782911,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279784959,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279789055,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279797247,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279813631,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279846399,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061279911935,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061280043007,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061280305151,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061280829439,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061281878015,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061283975167,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061288169471,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061296558079,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061313335295,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061346889727,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061413998591,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061548216319,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772061816651775,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772062353522687,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772063427264511,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772065574748159,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772069869715455,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772078459650047,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772095639519231,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772129999257599,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772198718734335,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772336157687807,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093772611035594751,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093773160791408639,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093774260303036415,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093776459326291967,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093780857372803071,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093789653465825279,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093807245651869695,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093842430023958527,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4093912798768136191,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4094053536256491519,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4094335011233202175,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4094897961186623487,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4096023861093466111,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4096023861093466112,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4097149761000308736,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4097712710953730048,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4097994185930440704,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098134923418796032,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098205292162973696,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098240476535062528,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098258068721106944,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098266864814129152,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098271262860640256,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098273461883895808,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098274561395523584,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275111151337472,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275386029244416,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275523468197888,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275592187674624,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275626547412992,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275643727282176,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275652317216768,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275656612184064,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275658759667712,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275659833409536,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660370280448,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660638715904,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660772933632,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660840042496,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660873596928,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660890374144,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660898762752,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660902957056,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660905054208,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660906102784,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660906627072,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660906889216,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907020288,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907085824,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907118592,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907134976,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907143168,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907147264,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907149312,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907150336,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907150848,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907151104,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907151232,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907151296,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907151328,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907151344,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907151352,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907151356,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907151358,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4098275660907151359,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6882803212613270323,64,FLEN)
NAN_BOXED(2330843414615406989,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560832,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560833,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560835,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560839,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560847,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560863,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560895,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560959,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561087,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561343,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561855,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349562879,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349564927,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349569023,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349577215,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349593599,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349626367,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349691903,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349822975,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350085119,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350609407,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184351657983,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184353755135,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184357949439,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184366338047,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184383115263,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184416669695,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184483778559,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184617996287,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184886431743,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151185423302655,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151186497044479,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151188644528127,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151192939495423,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151201529430015,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151218709299199,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151253069037567,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151321788514303,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151459227467775,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151734105374719,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189152283861188607,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189153383372816383,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189155582396071935,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189159980442583039,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189168776535605247,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189186368721649663,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189221553093738495,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189291921837916159,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189432659326271487,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189714134302982143,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(190277084256403455,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246079,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246080,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(192528884070088704,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193091834023510016,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193373309000220672,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193514046488576000,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193584415232753664,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193619599604842496,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193637191790886912,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193645987883909120,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193650385930420224,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193652584953675776,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193653684465303552,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654234221117440,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654509099024384,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654646537977856,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654715257454592,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654749617192960,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654766797062144,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654775386996736,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654779681964032,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654781829447680,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654782903189504,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783440060416,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783708495872,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783842713600,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783909822464,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783943376896,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783960154112,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783968542720,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783972737024,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783974834176,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783975882752,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976407040,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976669184,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976800256,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976865792,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976898560,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976914944,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976923136,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976927232,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976929280,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930304,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930816,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931072,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931200,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931264,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931296,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931312,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931320,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931324,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931326,64,FLEN)
NAN_BOXED(6882803920151209967,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931327,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376064,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376065,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376067,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376071,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376079,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376095,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376127,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376191,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376319,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376575,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124377087,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124378111,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124380159,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124384255,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124392447,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124408831,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124441599,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124507135,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124638207,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124900351,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614125424639,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614126473215,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614128570367,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614132764671,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614141153279,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614157930495,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614191484927,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614258593791,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614392811519,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614661246975,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091615198117887,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091616271859711,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091618419343359,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091622714310655,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091631304245247,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091648484114431,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091682843852799,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091751563329535,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091889002283007,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498092163880189951,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498092713636003839,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498093813147631615,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498096012170887167,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498100410217398271,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498109206310420479,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498126798496464895,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498161982868553727,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498232351612731391,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498373089101086719,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498654564077797375,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9499217514031218687,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9500343413938061311,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9500343413938061312,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9501469313844903936,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502032263798325248,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502313738775035904,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502454476263391232,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502524845007568896,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502560029379657728,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502577621565702144,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502586417658724352,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502590815705235456,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502593014728491008,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594114240118784,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594663995932672,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594938873839616,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595076312793088,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595145032269824,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595179392008192,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595196571877376,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595205161811968,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595209456779264,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595211604262912,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595212678004736,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213214875648,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213483311104,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213617528832,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213684637696,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213718192128,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213734969344,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213743357952,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213747552256,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213749649408,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213750697984,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751222272,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751484416,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751615488,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751681024,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751713792,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751730176,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751738368,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751742464,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751744512,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751745536,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746048,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746304,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746432,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746496,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746528,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746544,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746552,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746556,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746558,64,FLEN)
NAN_BOXED(6882847445763357303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746559,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559973376,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559973377,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559973379,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559973383,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559973391,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559973407,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559973439,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559973503,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559973631,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559973887,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559974399,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559975423,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559977471,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559981567,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470559989759,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470560006143,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470560038911,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470560104447,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470560235519,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470560497663,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470561021951,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470562070527,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470564167679,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470568361983,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470576750591,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470593527807,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470627082239,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470694191103,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410470828408831,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410471096844287,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410471633715199,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410472707457023,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410474854940671,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410479149907967,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410487739842559,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410504919711743,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410539279450111,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410607998926847,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650410745437880319,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650411020315787263,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650411570071601151,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650412669583228927,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650414868606484479,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650419266652995583,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650428062746017791,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650445654932062207,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650480839304151039,64,FLEN)
NAN_BOXED(6882853837749477747,64,FLEN)
NAN_BOXED(11522629872472599478,64,FLEN)
NAN_BOXED(13650551208048328703,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
