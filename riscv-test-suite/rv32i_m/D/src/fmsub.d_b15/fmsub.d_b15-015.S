
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_10752:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35ae000000000000; valaddr_reg:x3; val_offset:32256*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32256*0 + 3*0*FLEN/8, x4, x1, x2)

inst_10753:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35af000000000000; valaddr_reg:x3; val_offset:32259*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32259*0 + 3*1*FLEN/8, x4, x1, x2)

inst_10754:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35af800000000000; valaddr_reg:x3; val_offset:32262*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32262*0 + 3*2*FLEN/8, x4, x1, x2)

inst_10755:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afc00000000000; valaddr_reg:x3; val_offset:32265*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32265*0 + 3*3*FLEN/8, x4, x1, x2)

inst_10756:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afe00000000000; valaddr_reg:x3; val_offset:32268*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32268*0 + 3*4*FLEN/8, x4, x1, x2)

inst_10757:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35aff00000000000; valaddr_reg:x3; val_offset:32271*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32271*0 + 3*5*FLEN/8, x4, x1, x2)

inst_10758:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35aff80000000000; valaddr_reg:x3; val_offset:32274*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32274*0 + 3*6*FLEN/8, x4, x1, x2)

inst_10759:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affc0000000000; valaddr_reg:x3; val_offset:32277*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32277*0 + 3*7*FLEN/8, x4, x1, x2)

inst_10760:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affe0000000000; valaddr_reg:x3; val_offset:32280*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32280*0 + 3*8*FLEN/8, x4, x1, x2)

inst_10761:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afff0000000000; valaddr_reg:x3; val_offset:32283*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32283*0 + 3*9*FLEN/8, x4, x1, x2)

inst_10762:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afff8000000000; valaddr_reg:x3; val_offset:32286*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32286*0 + 3*10*FLEN/8, x4, x1, x2)

inst_10763:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffc000000000; valaddr_reg:x3; val_offset:32289*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32289*0 + 3*11*FLEN/8, x4, x1, x2)

inst_10764:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffe000000000; valaddr_reg:x3; val_offset:32292*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32292*0 + 3*12*FLEN/8, x4, x1, x2)

inst_10765:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affff000000000; valaddr_reg:x3; val_offset:32295*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32295*0 + 3*13*FLEN/8, x4, x1, x2)

inst_10766:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affff800000000; valaddr_reg:x3; val_offset:32298*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32298*0 + 3*14*FLEN/8, x4, x1, x2)

inst_10767:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffc00000000; valaddr_reg:x3; val_offset:32301*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32301*0 + 3*15*FLEN/8, x4, x1, x2)

inst_10768:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffe00000000; valaddr_reg:x3; val_offset:32304*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32304*0 + 3*16*FLEN/8, x4, x1, x2)

inst_10769:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffff00000000; valaddr_reg:x3; val_offset:32307*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32307*0 + 3*17*FLEN/8, x4, x1, x2)

inst_10770:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffff80000000; valaddr_reg:x3; val_offset:32310*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32310*0 + 3*18*FLEN/8, x4, x1, x2)

inst_10771:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffc0000000; valaddr_reg:x3; val_offset:32313*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32313*0 + 3*19*FLEN/8, x4, x1, x2)

inst_10772:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffe0000000; valaddr_reg:x3; val_offset:32316*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32316*0 + 3*20*FLEN/8, x4, x1, x2)

inst_10773:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffff0000000; valaddr_reg:x3; val_offset:32319*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32319*0 + 3*21*FLEN/8, x4, x1, x2)

inst_10774:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffff8000000; valaddr_reg:x3; val_offset:32322*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32322*0 + 3*22*FLEN/8, x4, x1, x2)

inst_10775:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffc000000; valaddr_reg:x3; val_offset:32325*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32325*0 + 3*23*FLEN/8, x4, x1, x2)

inst_10776:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffe000000; valaddr_reg:x3; val_offset:32328*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32328*0 + 3*24*FLEN/8, x4, x1, x2)

inst_10777:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffff000000; valaddr_reg:x3; val_offset:32331*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32331*0 + 3*25*FLEN/8, x4, x1, x2)

inst_10778:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffff800000; valaddr_reg:x3; val_offset:32334*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32334*0 + 3*26*FLEN/8, x4, x1, x2)

inst_10779:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffffc00000; valaddr_reg:x3; val_offset:32337*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32337*0 + 3*27*FLEN/8, x4, x1, x2)

inst_10780:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffffe00000; valaddr_reg:x3; val_offset:32340*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32340*0 + 3*28*FLEN/8, x4, x1, x2)

inst_10781:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffff00000; valaddr_reg:x3; val_offset:32343*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32343*0 + 3*29*FLEN/8, x4, x1, x2)

inst_10782:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffff80000; valaddr_reg:x3; val_offset:32346*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32346*0 + 3*30*FLEN/8, x4, x1, x2)

inst_10783:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffffc0000; valaddr_reg:x3; val_offset:32349*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32349*0 + 3*31*FLEN/8, x4, x1, x2)

inst_10784:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffffe0000; valaddr_reg:x3; val_offset:32352*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32352*0 + 3*32*FLEN/8, x4, x1, x2)

inst_10785:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffffff0000; valaddr_reg:x3; val_offset:32355*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32355*0 + 3*33*FLEN/8, x4, x1, x2)

inst_10786:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffffff8000; valaddr_reg:x3; val_offset:32358*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32358*0 + 3*34*FLEN/8, x4, x1, x2)

inst_10787:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffffffc000; valaddr_reg:x3; val_offset:32361*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32361*0 + 3*35*FLEN/8, x4, x1, x2)

inst_10788:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffffffe000; valaddr_reg:x3; val_offset:32364*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32364*0 + 3*36*FLEN/8, x4, x1, x2)

inst_10789:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffffff000; valaddr_reg:x3; val_offset:32367*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32367*0 + 3*37*FLEN/8, x4, x1, x2)

inst_10790:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffffff800; valaddr_reg:x3; val_offset:32370*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32370*0 + 3*38*FLEN/8, x4, x1, x2)

inst_10791:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffffffc00; valaddr_reg:x3; val_offset:32373*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32373*0 + 3*39*FLEN/8, x4, x1, x2)

inst_10792:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffffffe00; valaddr_reg:x3; val_offset:32376*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32376*0 + 3*40*FLEN/8, x4, x1, x2)

inst_10793:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffffffff00; valaddr_reg:x3; val_offset:32379*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32379*0 + 3*41*FLEN/8, x4, x1, x2)

inst_10794:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffffffff80; valaddr_reg:x3; val_offset:32382*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32382*0 + 3*42*FLEN/8, x4, x1, x2)

inst_10795:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffffffffc0; valaddr_reg:x3; val_offset:32385*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32385*0 + 3*43*FLEN/8, x4, x1, x2)

inst_10796:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffffffffe0; valaddr_reg:x3; val_offset:32388*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32388*0 + 3*44*FLEN/8, x4, x1, x2)

inst_10797:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffffffff0; valaddr_reg:x3; val_offset:32391*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32391*0 + 3*45*FLEN/8, x4, x1, x2)

inst_10798:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffffffff8; valaddr_reg:x3; val_offset:32394*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32394*0 + 3*46*FLEN/8, x4, x1, x2)

inst_10799:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffffffffc; valaddr_reg:x3; val_offset:32397*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32397*0 + 3*47*FLEN/8, x4, x1, x2)

inst_10800:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35affffffffffffe; valaddr_reg:x3; val_offset:32400*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32400*0 + 3*48*FLEN/8, x4, x1, x2)

inst_10801:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x35a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x35afffffffffffff; valaddr_reg:x3; val_offset:32403*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32403*0 + 3*49*FLEN/8, x4, x1, x2)

inst_10802:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:32406*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32406*0 + 3*50*FLEN/8, x4, x1, x2)

inst_10803:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:32409*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32409*0 + 3*51*FLEN/8, x4, x1, x2)

inst_10804:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:32412*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32412*0 + 3*52*FLEN/8, x4, x1, x2)

inst_10805:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:32415*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32415*0 + 3*53*FLEN/8, x4, x1, x2)

inst_10806:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:32418*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32418*0 + 3*54*FLEN/8, x4, x1, x2)

inst_10807:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:32421*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32421*0 + 3*55*FLEN/8, x4, x1, x2)

inst_10808:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:32424*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32424*0 + 3*56*FLEN/8, x4, x1, x2)

inst_10809:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:32427*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32427*0 + 3*57*FLEN/8, x4, x1, x2)

inst_10810:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:32430*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32430*0 + 3*58*FLEN/8, x4, x1, x2)

inst_10811:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:32433*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32433*0 + 3*59*FLEN/8, x4, x1, x2)

inst_10812:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:32436*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32436*0 + 3*60*FLEN/8, x4, x1, x2)

inst_10813:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:32439*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32439*0 + 3*61*FLEN/8, x4, x1, x2)

inst_10814:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:32442*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32442*0 + 3*62*FLEN/8, x4, x1, x2)

inst_10815:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:32445*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32445*0 + 3*63*FLEN/8, x4, x1, x2)

inst_10816:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:32448*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32448*0 + 3*64*FLEN/8, x4, x1, x2)

inst_10817:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:32451*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32451*0 + 3*65*FLEN/8, x4, x1, x2)

inst_10818:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:32454*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32454*0 + 3*66*FLEN/8, x4, x1, x2)

inst_10819:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:32457*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32457*0 + 3*67*FLEN/8, x4, x1, x2)

inst_10820:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:32460*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32460*0 + 3*68*FLEN/8, x4, x1, x2)

inst_10821:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:32463*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32463*0 + 3*69*FLEN/8, x4, x1, x2)

inst_10822:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:32466*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32466*0 + 3*70*FLEN/8, x4, x1, x2)

inst_10823:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x3993144cc6480 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a1fe3e0c64717; op2val:0x2063993144cc6480;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:32469*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32469*0 + 3*71*FLEN/8, x4, x1, x2)

inst_10824:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:32472*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32472*0 + 3*72*FLEN/8, x4, x1, x2)

inst_10825:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:32475*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32475*0 + 3*73*FLEN/8, x4, x1, x2)

inst_10826:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:32478*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32478*0 + 3*74*FLEN/8, x4, x1, x2)

inst_10827:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:32481*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32481*0 + 3*75*FLEN/8, x4, x1, x2)

inst_10828:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:32484*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32484*0 + 3*76*FLEN/8, x4, x1, x2)

inst_10829:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:32487*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32487*0 + 3*77*FLEN/8, x4, x1, x2)

inst_10830:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:32490*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32490*0 + 3*78*FLEN/8, x4, x1, x2)

inst_10831:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:32493*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32493*0 + 3*79*FLEN/8, x4, x1, x2)

inst_10832:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:32496*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32496*0 + 3*80*FLEN/8, x4, x1, x2)

inst_10833:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:32499*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32499*0 + 3*81*FLEN/8, x4, x1, x2)

inst_10834:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:32502*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32502*0 + 3*82*FLEN/8, x4, x1, x2)

inst_10835:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:32505*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32505*0 + 3*83*FLEN/8, x4, x1, x2)

inst_10836:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:32508*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32508*0 + 3*84*FLEN/8, x4, x1, x2)

inst_10837:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:32511*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32511*0 + 3*85*FLEN/8, x4, x1, x2)

inst_10838:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:32514*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32514*0 + 3*86*FLEN/8, x4, x1, x2)

inst_10839:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:32517*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32517*0 + 3*87*FLEN/8, x4, x1, x2)

inst_10840:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:32520*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32520*0 + 3*88*FLEN/8, x4, x1, x2)

inst_10841:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:32523*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32523*0 + 3*89*FLEN/8, x4, x1, x2)

inst_10842:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:32526*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32526*0 + 3*90*FLEN/8, x4, x1, x2)

inst_10843:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:32529*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32529*0 + 3*91*FLEN/8, x4, x1, x2)

inst_10844:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:32532*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32532*0 + 3*92*FLEN/8, x4, x1, x2)

inst_10845:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:32535*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32535*0 + 3*93*FLEN/8, x4, x1, x2)

inst_10846:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000000000000; valaddr_reg:x3; val_offset:32538*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32538*0 + 3*94*FLEN/8, x4, x1, x2)

inst_10847:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000000000001; valaddr_reg:x3; val_offset:32541*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32541*0 + 3*95*FLEN/8, x4, x1, x2)

inst_10848:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000000000003; valaddr_reg:x3; val_offset:32544*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32544*0 + 3*96*FLEN/8, x4, x1, x2)

inst_10849:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000000000007; valaddr_reg:x3; val_offset:32547*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32547*0 + 3*97*FLEN/8, x4, x1, x2)

inst_10850:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000000000000f; valaddr_reg:x3; val_offset:32550*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32550*0 + 3*98*FLEN/8, x4, x1, x2)

inst_10851:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000000000001f; valaddr_reg:x3; val_offset:32553*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32553*0 + 3*99*FLEN/8, x4, x1, x2)

inst_10852:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000000000003f; valaddr_reg:x3; val_offset:32556*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32556*0 + 3*100*FLEN/8, x4, x1, x2)

inst_10853:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000000000007f; valaddr_reg:x3; val_offset:32559*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32559*0 + 3*101*FLEN/8, x4, x1, x2)

inst_10854:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600000000000ff; valaddr_reg:x3; val_offset:32562*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32562*0 + 3*102*FLEN/8, x4, x1, x2)

inst_10855:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600000000001ff; valaddr_reg:x3; val_offset:32565*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32565*0 + 3*103*FLEN/8, x4, x1, x2)

inst_10856:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600000000003ff; valaddr_reg:x3; val_offset:32568*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32568*0 + 3*104*FLEN/8, x4, x1, x2)

inst_10857:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600000000007ff; valaddr_reg:x3; val_offset:32571*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32571*0 + 3*105*FLEN/8, x4, x1, x2)

inst_10858:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000000000fff; valaddr_reg:x3; val_offset:32574*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32574*0 + 3*106*FLEN/8, x4, x1, x2)

inst_10859:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000000001fff; valaddr_reg:x3; val_offset:32577*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32577*0 + 3*107*FLEN/8, x4, x1, x2)

inst_10860:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000000003fff; valaddr_reg:x3; val_offset:32580*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32580*0 + 3*108*FLEN/8, x4, x1, x2)

inst_10861:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000000007fff; valaddr_reg:x3; val_offset:32583*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32583*0 + 3*109*FLEN/8, x4, x1, x2)

inst_10862:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000000000ffff; valaddr_reg:x3; val_offset:32586*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32586*0 + 3*110*FLEN/8, x4, x1, x2)

inst_10863:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000000001ffff; valaddr_reg:x3; val_offset:32589*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32589*0 + 3*111*FLEN/8, x4, x1, x2)

inst_10864:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000000003ffff; valaddr_reg:x3; val_offset:32592*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32592*0 + 3*112*FLEN/8, x4, x1, x2)

inst_10865:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000000007ffff; valaddr_reg:x3; val_offset:32595*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32595*0 + 3*113*FLEN/8, x4, x1, x2)

inst_10866:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600000000fffff; valaddr_reg:x3; val_offset:32598*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32598*0 + 3*114*FLEN/8, x4, x1, x2)

inst_10867:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600000001fffff; valaddr_reg:x3; val_offset:32601*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32601*0 + 3*115*FLEN/8, x4, x1, x2)

inst_10868:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600000003fffff; valaddr_reg:x3; val_offset:32604*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32604*0 + 3*116*FLEN/8, x4, x1, x2)

inst_10869:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600000007fffff; valaddr_reg:x3; val_offset:32607*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32607*0 + 3*117*FLEN/8, x4, x1, x2)

inst_10870:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000000ffffff; valaddr_reg:x3; val_offset:32610*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32610*0 + 3*118*FLEN/8, x4, x1, x2)

inst_10871:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000001ffffff; valaddr_reg:x3; val_offset:32613*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32613*0 + 3*119*FLEN/8, x4, x1, x2)

inst_10872:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000003ffffff; valaddr_reg:x3; val_offset:32616*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32616*0 + 3*120*FLEN/8, x4, x1, x2)

inst_10873:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000007ffffff; valaddr_reg:x3; val_offset:32619*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32619*0 + 3*121*FLEN/8, x4, x1, x2)

inst_10874:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000000fffffff; valaddr_reg:x3; val_offset:32622*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32622*0 + 3*122*FLEN/8, x4, x1, x2)

inst_10875:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000001fffffff; valaddr_reg:x3; val_offset:32625*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32625*0 + 3*123*FLEN/8, x4, x1, x2)

inst_10876:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000003fffffff; valaddr_reg:x3; val_offset:32628*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32628*0 + 3*124*FLEN/8, x4, x1, x2)

inst_10877:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000007fffffff; valaddr_reg:x3; val_offset:32631*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32631*0 + 3*125*FLEN/8, x4, x1, x2)

inst_10878:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600000ffffffff; valaddr_reg:x3; val_offset:32634*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32634*0 + 3*126*FLEN/8, x4, x1, x2)

inst_10879:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600001ffffffff; valaddr_reg:x3; val_offset:32637*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32637*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_10880:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600003ffffffff; valaddr_reg:x3; val_offset:32640*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32640*0 + 3*128*FLEN/8, x4, x1, x2)

inst_10881:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600007ffffffff; valaddr_reg:x3; val_offset:32643*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32643*0 + 3*129*FLEN/8, x4, x1, x2)

inst_10882:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260000fffffffff; valaddr_reg:x3; val_offset:32646*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32646*0 + 3*130*FLEN/8, x4, x1, x2)

inst_10883:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260001fffffffff; valaddr_reg:x3; val_offset:32649*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32649*0 + 3*131*FLEN/8, x4, x1, x2)

inst_10884:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260003fffffffff; valaddr_reg:x3; val_offset:32652*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32652*0 + 3*132*FLEN/8, x4, x1, x2)

inst_10885:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260007fffffffff; valaddr_reg:x3; val_offset:32655*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32655*0 + 3*133*FLEN/8, x4, x1, x2)

inst_10886:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26000ffffffffff; valaddr_reg:x3; val_offset:32658*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32658*0 + 3*134*FLEN/8, x4, x1, x2)

inst_10887:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26001ffffffffff; valaddr_reg:x3; val_offset:32661*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32661*0 + 3*135*FLEN/8, x4, x1, x2)

inst_10888:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26003ffffffffff; valaddr_reg:x3; val_offset:32664*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32664*0 + 3*136*FLEN/8, x4, x1, x2)

inst_10889:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26007ffffffffff; valaddr_reg:x3; val_offset:32667*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32667*0 + 3*137*FLEN/8, x4, x1, x2)

inst_10890:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2600fffffffffff; valaddr_reg:x3; val_offset:32670*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32670*0 + 3*138*FLEN/8, x4, x1, x2)

inst_10891:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2601fffffffffff; valaddr_reg:x3; val_offset:32673*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32673*0 + 3*139*FLEN/8, x4, x1, x2)

inst_10892:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2603fffffffffff; valaddr_reg:x3; val_offset:32676*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32676*0 + 3*140*FLEN/8, x4, x1, x2)

inst_10893:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x2607fffffffffff; valaddr_reg:x3; val_offset:32679*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32679*0 + 3*141*FLEN/8, x4, x1, x2)

inst_10894:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x260ffffffffffff; valaddr_reg:x3; val_offset:32682*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32682*0 + 3*142*FLEN/8, x4, x1, x2)

inst_10895:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x261ffffffffffff; valaddr_reg:x3; val_offset:32685*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32685*0 + 3*143*FLEN/8, x4, x1, x2)

inst_10896:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x263ffffffffffff; valaddr_reg:x3; val_offset:32688*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32688*0 + 3*144*FLEN/8, x4, x1, x2)

inst_10897:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x267ffffffffffff; valaddr_reg:x3; val_offset:32691*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32691*0 + 3*145*FLEN/8, x4, x1, x2)

inst_10898:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x268000000000000; valaddr_reg:x3; val_offset:32694*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32694*0 + 3*146*FLEN/8, x4, x1, x2)

inst_10899:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26c000000000000; valaddr_reg:x3; val_offset:32697*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32697*0 + 3*147*FLEN/8, x4, x1, x2)

inst_10900:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26e000000000000; valaddr_reg:x3; val_offset:32700*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32700*0 + 3*148*FLEN/8, x4, x1, x2)

inst_10901:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26f000000000000; valaddr_reg:x3; val_offset:32703*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32703*0 + 3*149*FLEN/8, x4, x1, x2)

inst_10902:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26f800000000000; valaddr_reg:x3; val_offset:32706*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32706*0 + 3*150*FLEN/8, x4, x1, x2)

inst_10903:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fc00000000000; valaddr_reg:x3; val_offset:32709*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32709*0 + 3*151*FLEN/8, x4, x1, x2)

inst_10904:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fe00000000000; valaddr_reg:x3; val_offset:32712*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32712*0 + 3*152*FLEN/8, x4, x1, x2)

inst_10905:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ff00000000000; valaddr_reg:x3; val_offset:32715*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32715*0 + 3*153*FLEN/8, x4, x1, x2)

inst_10906:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ff80000000000; valaddr_reg:x3; val_offset:32718*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32718*0 + 3*154*FLEN/8, x4, x1, x2)

inst_10907:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffc0000000000; valaddr_reg:x3; val_offset:32721*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32721*0 + 3*155*FLEN/8, x4, x1, x2)

inst_10908:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffe0000000000; valaddr_reg:x3; val_offset:32724*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32724*0 + 3*156*FLEN/8, x4, x1, x2)

inst_10909:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fff0000000000; valaddr_reg:x3; val_offset:32727*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32727*0 + 3*157*FLEN/8, x4, x1, x2)

inst_10910:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fff8000000000; valaddr_reg:x3; val_offset:32730*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32730*0 + 3*158*FLEN/8, x4, x1, x2)

inst_10911:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffc000000000; valaddr_reg:x3; val_offset:32733*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32733*0 + 3*159*FLEN/8, x4, x1, x2)

inst_10912:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffe000000000; valaddr_reg:x3; val_offset:32736*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32736*0 + 3*160*FLEN/8, x4, x1, x2)

inst_10913:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffff000000000; valaddr_reg:x3; val_offset:32739*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32739*0 + 3*161*FLEN/8, x4, x1, x2)

inst_10914:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffff800000000; valaddr_reg:x3; val_offset:32742*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32742*0 + 3*162*FLEN/8, x4, x1, x2)

inst_10915:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffc00000000; valaddr_reg:x3; val_offset:32745*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32745*0 + 3*163*FLEN/8, x4, x1, x2)

inst_10916:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffe00000000; valaddr_reg:x3; val_offset:32748*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32748*0 + 3*164*FLEN/8, x4, x1, x2)

inst_10917:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffff00000000; valaddr_reg:x3; val_offset:32751*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32751*0 + 3*165*FLEN/8, x4, x1, x2)

inst_10918:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffff80000000; valaddr_reg:x3; val_offset:32754*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32754*0 + 3*166*FLEN/8, x4, x1, x2)

inst_10919:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffc0000000; valaddr_reg:x3; val_offset:32757*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32757*0 + 3*167*FLEN/8, x4, x1, x2)

inst_10920:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffe0000000; valaddr_reg:x3; val_offset:32760*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32760*0 + 3*168*FLEN/8, x4, x1, x2)

inst_10921:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffff0000000; valaddr_reg:x3; val_offset:32763*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32763*0 + 3*169*FLEN/8, x4, x1, x2)

inst_10922:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffff8000000; valaddr_reg:x3; val_offset:32766*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32766*0 + 3*170*FLEN/8, x4, x1, x2)

inst_10923:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffc000000; valaddr_reg:x3; val_offset:32769*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32769*0 + 3*171*FLEN/8, x4, x1, x2)

inst_10924:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffe000000; valaddr_reg:x3; val_offset:32772*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32772*0 + 3*172*FLEN/8, x4, x1, x2)

inst_10925:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffff000000; valaddr_reg:x3; val_offset:32775*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32775*0 + 3*173*FLEN/8, x4, x1, x2)

inst_10926:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffff800000; valaddr_reg:x3; val_offset:32778*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32778*0 + 3*174*FLEN/8, x4, x1, x2)

inst_10927:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffffc00000; valaddr_reg:x3; val_offset:32781*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32781*0 + 3*175*FLEN/8, x4, x1, x2)

inst_10928:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffffe00000; valaddr_reg:x3; val_offset:32784*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32784*0 + 3*176*FLEN/8, x4, x1, x2)

inst_10929:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffff00000; valaddr_reg:x3; val_offset:32787*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32787*0 + 3*177*FLEN/8, x4, x1, x2)

inst_10930:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffff80000; valaddr_reg:x3; val_offset:32790*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32790*0 + 3*178*FLEN/8, x4, x1, x2)

inst_10931:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffffc0000; valaddr_reg:x3; val_offset:32793*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32793*0 + 3*179*FLEN/8, x4, x1, x2)

inst_10932:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffffe0000; valaddr_reg:x3; val_offset:32796*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32796*0 + 3*180*FLEN/8, x4, x1, x2)

inst_10933:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffffff0000; valaddr_reg:x3; val_offset:32799*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32799*0 + 3*181*FLEN/8, x4, x1, x2)

inst_10934:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffffff8000; valaddr_reg:x3; val_offset:32802*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32802*0 + 3*182*FLEN/8, x4, x1, x2)

inst_10935:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffffffc000; valaddr_reg:x3; val_offset:32805*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32805*0 + 3*183*FLEN/8, x4, x1, x2)

inst_10936:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffffffe000; valaddr_reg:x3; val_offset:32808*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32808*0 + 3*184*FLEN/8, x4, x1, x2)

inst_10937:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffffff000; valaddr_reg:x3; val_offset:32811*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32811*0 + 3*185*FLEN/8, x4, x1, x2)

inst_10938:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffffff800; valaddr_reg:x3; val_offset:32814*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32814*0 + 3*186*FLEN/8, x4, x1, x2)

inst_10939:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffffffc00; valaddr_reg:x3; val_offset:32817*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32817*0 + 3*187*FLEN/8, x4, x1, x2)

inst_10940:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffffffe00; valaddr_reg:x3; val_offset:32820*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32820*0 + 3*188*FLEN/8, x4, x1, x2)

inst_10941:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffffffff00; valaddr_reg:x3; val_offset:32823*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32823*0 + 3*189*FLEN/8, x4, x1, x2)

inst_10942:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffffffff80; valaddr_reg:x3; val_offset:32826*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32826*0 + 3*190*FLEN/8, x4, x1, x2)

inst_10943:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffffffffc0; valaddr_reg:x3; val_offset:32829*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32829*0 + 3*191*FLEN/8, x4, x1, x2)

inst_10944:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffffffffe0; valaddr_reg:x3; val_offset:32832*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32832*0 + 3*192*FLEN/8, x4, x1, x2)

inst_10945:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffffffff0; valaddr_reg:x3; val_offset:32835*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32835*0 + 3*193*FLEN/8, x4, x1, x2)

inst_10946:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffffffff8; valaddr_reg:x3; val_offset:32838*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32838*0 + 3*194*FLEN/8, x4, x1, x2)

inst_10947:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffffffffc; valaddr_reg:x3; val_offset:32841*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32841*0 + 3*195*FLEN/8, x4, x1, x2)

inst_10948:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26ffffffffffffe; valaddr_reg:x3; val_offset:32844*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32844*0 + 3*196*FLEN/8, x4, x1, x2)

inst_10949:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa9e9760facc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a9e9760facc7f; op2val:0x0;
op3val:0x26fffffffffffff; valaddr_reg:x3; val_offset:32847*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32847*0 + 3*197*FLEN/8, x4, x1, x2)

inst_10950:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:32850*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32850*0 + 3*198*FLEN/8, x4, x1, x2)

inst_10951:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:32853*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32853*0 + 3*199*FLEN/8, x4, x1, x2)

inst_10952:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:32856*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32856*0 + 3*200*FLEN/8, x4, x1, x2)

inst_10953:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:32859*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32859*0 + 3*201*FLEN/8, x4, x1, x2)

inst_10954:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:32862*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32862*0 + 3*202*FLEN/8, x4, x1, x2)

inst_10955:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:32865*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32865*0 + 3*203*FLEN/8, x4, x1, x2)

inst_10956:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:32868*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32868*0 + 3*204*FLEN/8, x4, x1, x2)

inst_10957:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:32871*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32871*0 + 3*205*FLEN/8, x4, x1, x2)

inst_10958:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:32874*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32874*0 + 3*206*FLEN/8, x4, x1, x2)

inst_10959:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:32877*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32877*0 + 3*207*FLEN/8, x4, x1, x2)

inst_10960:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:32880*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32880*0 + 3*208*FLEN/8, x4, x1, x2)

inst_10961:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:32883*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32883*0 + 3*209*FLEN/8, x4, x1, x2)

inst_10962:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:32886*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32886*0 + 3*210*FLEN/8, x4, x1, x2)

inst_10963:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:32889*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32889*0 + 3*211*FLEN/8, x4, x1, x2)

inst_10964:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:32892*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32892*0 + 3*212*FLEN/8, x4, x1, x2)

inst_10965:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:32895*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32895*0 + 3*213*FLEN/8, x4, x1, x2)

inst_10966:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:32898*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32898*0 + 3*214*FLEN/8, x4, x1, x2)

inst_10967:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:32901*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32901*0 + 3*215*FLEN/8, x4, x1, x2)

inst_10968:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:32904*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32904*0 + 3*216*FLEN/8, x4, x1, x2)

inst_10969:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:32907*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32907*0 + 3*217*FLEN/8, x4, x1, x2)

inst_10970:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:32910*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32910*0 + 3*218*FLEN/8, x4, x1, x2)

inst_10971:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:32913*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32913*0 + 3*219*FLEN/8, x4, x1, x2)

inst_10972:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000000000000; valaddr_reg:x3; val_offset:32916*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32916*0 + 3*220*FLEN/8, x4, x1, x2)

inst_10973:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000000000001; valaddr_reg:x3; val_offset:32919*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32919*0 + 3*221*FLEN/8, x4, x1, x2)

inst_10974:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000000000003; valaddr_reg:x3; val_offset:32922*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32922*0 + 3*222*FLEN/8, x4, x1, x2)

inst_10975:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000000000007; valaddr_reg:x3; val_offset:32925*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32925*0 + 3*223*FLEN/8, x4, x1, x2)

inst_10976:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000000000000f; valaddr_reg:x3; val_offset:32928*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32928*0 + 3*224*FLEN/8, x4, x1, x2)

inst_10977:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000000000001f; valaddr_reg:x3; val_offset:32931*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32931*0 + 3*225*FLEN/8, x4, x1, x2)

inst_10978:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000000000003f; valaddr_reg:x3; val_offset:32934*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32934*0 + 3*226*FLEN/8, x4, x1, x2)

inst_10979:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000000000007f; valaddr_reg:x3; val_offset:32937*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32937*0 + 3*227*FLEN/8, x4, x1, x2)

inst_10980:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100000000000ff; valaddr_reg:x3; val_offset:32940*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32940*0 + 3*228*FLEN/8, x4, x1, x2)

inst_10981:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100000000001ff; valaddr_reg:x3; val_offset:32943*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32943*0 + 3*229*FLEN/8, x4, x1, x2)

inst_10982:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100000000003ff; valaddr_reg:x3; val_offset:32946*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32946*0 + 3*230*FLEN/8, x4, x1, x2)

inst_10983:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100000000007ff; valaddr_reg:x3; val_offset:32949*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32949*0 + 3*231*FLEN/8, x4, x1, x2)

inst_10984:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000000000fff; valaddr_reg:x3; val_offset:32952*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32952*0 + 3*232*FLEN/8, x4, x1, x2)

inst_10985:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000000001fff; valaddr_reg:x3; val_offset:32955*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32955*0 + 3*233*FLEN/8, x4, x1, x2)

inst_10986:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000000003fff; valaddr_reg:x3; val_offset:32958*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32958*0 + 3*234*FLEN/8, x4, x1, x2)

inst_10987:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000000007fff; valaddr_reg:x3; val_offset:32961*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32961*0 + 3*235*FLEN/8, x4, x1, x2)

inst_10988:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000000000ffff; valaddr_reg:x3; val_offset:32964*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32964*0 + 3*236*FLEN/8, x4, x1, x2)

inst_10989:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000000001ffff; valaddr_reg:x3; val_offset:32967*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32967*0 + 3*237*FLEN/8, x4, x1, x2)

inst_10990:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000000003ffff; valaddr_reg:x3; val_offset:32970*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32970*0 + 3*238*FLEN/8, x4, x1, x2)

inst_10991:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000000007ffff; valaddr_reg:x3; val_offset:32973*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32973*0 + 3*239*FLEN/8, x4, x1, x2)

inst_10992:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100000000fffff; valaddr_reg:x3; val_offset:32976*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32976*0 + 3*240*FLEN/8, x4, x1, x2)

inst_10993:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100000001fffff; valaddr_reg:x3; val_offset:32979*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32979*0 + 3*241*FLEN/8, x4, x1, x2)

inst_10994:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100000003fffff; valaddr_reg:x3; val_offset:32982*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32982*0 + 3*242*FLEN/8, x4, x1, x2)

inst_10995:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100000007fffff; valaddr_reg:x3; val_offset:32985*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32985*0 + 3*243*FLEN/8, x4, x1, x2)

inst_10996:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000000ffffff; valaddr_reg:x3; val_offset:32988*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32988*0 + 3*244*FLEN/8, x4, x1, x2)

inst_10997:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000001ffffff; valaddr_reg:x3; val_offset:32991*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32991*0 + 3*245*FLEN/8, x4, x1, x2)

inst_10998:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000003ffffff; valaddr_reg:x3; val_offset:32994*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32994*0 + 3*246*FLEN/8, x4, x1, x2)

inst_10999:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000007ffffff; valaddr_reg:x3; val_offset:32997*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 32997*0 + 3*247*FLEN/8, x4, x1, x2)

inst_11000:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000000fffffff; valaddr_reg:x3; val_offset:33000*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33000*0 + 3*248*FLEN/8, x4, x1, x2)

inst_11001:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000001fffffff; valaddr_reg:x3; val_offset:33003*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33003*0 + 3*249*FLEN/8, x4, x1, x2)

inst_11002:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000003fffffff; valaddr_reg:x3; val_offset:33006*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33006*0 + 3*250*FLEN/8, x4, x1, x2)

inst_11003:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000007fffffff; valaddr_reg:x3; val_offset:33009*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33009*0 + 3*251*FLEN/8, x4, x1, x2)

inst_11004:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100000ffffffff; valaddr_reg:x3; val_offset:33012*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33012*0 + 3*252*FLEN/8, x4, x1, x2)

inst_11005:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100001ffffffff; valaddr_reg:x3; val_offset:33015*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33015*0 + 3*253*FLEN/8, x4, x1, x2)

inst_11006:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100003ffffffff; valaddr_reg:x3; val_offset:33018*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33018*0 + 3*254*FLEN/8, x4, x1, x2)

inst_11007:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100007ffffffff; valaddr_reg:x3; val_offset:33021*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33021*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_11008:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310000fffffffff; valaddr_reg:x3; val_offset:33024*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33024*0 + 3*256*FLEN/8, x4, x1, x2)

inst_11009:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310001fffffffff; valaddr_reg:x3; val_offset:33027*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33027*0 + 3*257*FLEN/8, x4, x1, x2)

inst_11010:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310003fffffffff; valaddr_reg:x3; val_offset:33030*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33030*0 + 3*258*FLEN/8, x4, x1, x2)

inst_11011:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310007fffffffff; valaddr_reg:x3; val_offset:33033*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33033*0 + 3*259*FLEN/8, x4, x1, x2)

inst_11012:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31000ffffffffff; valaddr_reg:x3; val_offset:33036*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33036*0 + 3*260*FLEN/8, x4, x1, x2)

inst_11013:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31001ffffffffff; valaddr_reg:x3; val_offset:33039*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33039*0 + 3*261*FLEN/8, x4, x1, x2)

inst_11014:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31003ffffffffff; valaddr_reg:x3; val_offset:33042*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33042*0 + 3*262*FLEN/8, x4, x1, x2)

inst_11015:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31007ffffffffff; valaddr_reg:x3; val_offset:33045*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33045*0 + 3*263*FLEN/8, x4, x1, x2)

inst_11016:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3100fffffffffff; valaddr_reg:x3; val_offset:33048*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33048*0 + 3*264*FLEN/8, x4, x1, x2)

inst_11017:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3101fffffffffff; valaddr_reg:x3; val_offset:33051*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33051*0 + 3*265*FLEN/8, x4, x1, x2)

inst_11018:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3103fffffffffff; valaddr_reg:x3; val_offset:33054*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33054*0 + 3*266*FLEN/8, x4, x1, x2)

inst_11019:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x3107fffffffffff; valaddr_reg:x3; val_offset:33057*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33057*0 + 3*267*FLEN/8, x4, x1, x2)

inst_11020:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x310ffffffffffff; valaddr_reg:x3; val_offset:33060*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33060*0 + 3*268*FLEN/8, x4, x1, x2)

inst_11021:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x311ffffffffffff; valaddr_reg:x3; val_offset:33063*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33063*0 + 3*269*FLEN/8, x4, x1, x2)

inst_11022:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x313ffffffffffff; valaddr_reg:x3; val_offset:33066*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33066*0 + 3*270*FLEN/8, x4, x1, x2)

inst_11023:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x317ffffffffffff; valaddr_reg:x3; val_offset:33069*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33069*0 + 3*271*FLEN/8, x4, x1, x2)

inst_11024:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x318000000000000; valaddr_reg:x3; val_offset:33072*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33072*0 + 3*272*FLEN/8, x4, x1, x2)

inst_11025:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31c000000000000; valaddr_reg:x3; val_offset:33075*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33075*0 + 3*273*FLEN/8, x4, x1, x2)

inst_11026:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31e000000000000; valaddr_reg:x3; val_offset:33078*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33078*0 + 3*274*FLEN/8, x4, x1, x2)

inst_11027:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31f000000000000; valaddr_reg:x3; val_offset:33081*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33081*0 + 3*275*FLEN/8, x4, x1, x2)

inst_11028:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31f800000000000; valaddr_reg:x3; val_offset:33084*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33084*0 + 3*276*FLEN/8, x4, x1, x2)

inst_11029:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fc00000000000; valaddr_reg:x3; val_offset:33087*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33087*0 + 3*277*FLEN/8, x4, x1, x2)

inst_11030:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fe00000000000; valaddr_reg:x3; val_offset:33090*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33090*0 + 3*278*FLEN/8, x4, x1, x2)

inst_11031:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ff00000000000; valaddr_reg:x3; val_offset:33093*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33093*0 + 3*279*FLEN/8, x4, x1, x2)

inst_11032:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ff80000000000; valaddr_reg:x3; val_offset:33096*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33096*0 + 3*280*FLEN/8, x4, x1, x2)

inst_11033:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffc0000000000; valaddr_reg:x3; val_offset:33099*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33099*0 + 3*281*FLEN/8, x4, x1, x2)

inst_11034:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffe0000000000; valaddr_reg:x3; val_offset:33102*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33102*0 + 3*282*FLEN/8, x4, x1, x2)

inst_11035:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fff0000000000; valaddr_reg:x3; val_offset:33105*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33105*0 + 3*283*FLEN/8, x4, x1, x2)

inst_11036:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fff8000000000; valaddr_reg:x3; val_offset:33108*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33108*0 + 3*284*FLEN/8, x4, x1, x2)

inst_11037:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffc000000000; valaddr_reg:x3; val_offset:33111*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33111*0 + 3*285*FLEN/8, x4, x1, x2)

inst_11038:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffe000000000; valaddr_reg:x3; val_offset:33114*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33114*0 + 3*286*FLEN/8, x4, x1, x2)

inst_11039:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffff000000000; valaddr_reg:x3; val_offset:33117*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33117*0 + 3*287*FLEN/8, x4, x1, x2)

inst_11040:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffff800000000; valaddr_reg:x3; val_offset:33120*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33120*0 + 3*288*FLEN/8, x4, x1, x2)

inst_11041:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffc00000000; valaddr_reg:x3; val_offset:33123*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33123*0 + 3*289*FLEN/8, x4, x1, x2)

inst_11042:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffe00000000; valaddr_reg:x3; val_offset:33126*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33126*0 + 3*290*FLEN/8, x4, x1, x2)

inst_11043:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffff00000000; valaddr_reg:x3; val_offset:33129*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33129*0 + 3*291*FLEN/8, x4, x1, x2)

inst_11044:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffff80000000; valaddr_reg:x3; val_offset:33132*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33132*0 + 3*292*FLEN/8, x4, x1, x2)

inst_11045:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffc0000000; valaddr_reg:x3; val_offset:33135*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33135*0 + 3*293*FLEN/8, x4, x1, x2)

inst_11046:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffe0000000; valaddr_reg:x3; val_offset:33138*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33138*0 + 3*294*FLEN/8, x4, x1, x2)

inst_11047:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffff0000000; valaddr_reg:x3; val_offset:33141*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33141*0 + 3*295*FLEN/8, x4, x1, x2)

inst_11048:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffff8000000; valaddr_reg:x3; val_offset:33144*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33144*0 + 3*296*FLEN/8, x4, x1, x2)

inst_11049:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffc000000; valaddr_reg:x3; val_offset:33147*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33147*0 + 3*297*FLEN/8, x4, x1, x2)

inst_11050:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffe000000; valaddr_reg:x3; val_offset:33150*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33150*0 + 3*298*FLEN/8, x4, x1, x2)

inst_11051:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffff000000; valaddr_reg:x3; val_offset:33153*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33153*0 + 3*299*FLEN/8, x4, x1, x2)

inst_11052:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffff800000; valaddr_reg:x3; val_offset:33156*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33156*0 + 3*300*FLEN/8, x4, x1, x2)

inst_11053:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffffc00000; valaddr_reg:x3; val_offset:33159*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33159*0 + 3*301*FLEN/8, x4, x1, x2)

inst_11054:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffffe00000; valaddr_reg:x3; val_offset:33162*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33162*0 + 3*302*FLEN/8, x4, x1, x2)

inst_11055:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffff00000; valaddr_reg:x3; val_offset:33165*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33165*0 + 3*303*FLEN/8, x4, x1, x2)

inst_11056:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffff80000; valaddr_reg:x3; val_offset:33168*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33168*0 + 3*304*FLEN/8, x4, x1, x2)

inst_11057:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffffc0000; valaddr_reg:x3; val_offset:33171*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33171*0 + 3*305*FLEN/8, x4, x1, x2)

inst_11058:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffffe0000; valaddr_reg:x3; val_offset:33174*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33174*0 + 3*306*FLEN/8, x4, x1, x2)

inst_11059:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffffff0000; valaddr_reg:x3; val_offset:33177*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33177*0 + 3*307*FLEN/8, x4, x1, x2)

inst_11060:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffffff8000; valaddr_reg:x3; val_offset:33180*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33180*0 + 3*308*FLEN/8, x4, x1, x2)

inst_11061:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffffffc000; valaddr_reg:x3; val_offset:33183*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33183*0 + 3*309*FLEN/8, x4, x1, x2)

inst_11062:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffffffe000; valaddr_reg:x3; val_offset:33186*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33186*0 + 3*310*FLEN/8, x4, x1, x2)

inst_11063:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffffff000; valaddr_reg:x3; val_offset:33189*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33189*0 + 3*311*FLEN/8, x4, x1, x2)

inst_11064:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffffff800; valaddr_reg:x3; val_offset:33192*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33192*0 + 3*312*FLEN/8, x4, x1, x2)

inst_11065:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffffffc00; valaddr_reg:x3; val_offset:33195*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33195*0 + 3*313*FLEN/8, x4, x1, x2)

inst_11066:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffffffe00; valaddr_reg:x3; val_offset:33198*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33198*0 + 3*314*FLEN/8, x4, x1, x2)

inst_11067:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffffffff00; valaddr_reg:x3; val_offset:33201*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33201*0 + 3*315*FLEN/8, x4, x1, x2)

inst_11068:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffffffff80; valaddr_reg:x3; val_offset:33204*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33204*0 + 3*316*FLEN/8, x4, x1, x2)

inst_11069:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffffffffc0; valaddr_reg:x3; val_offset:33207*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33207*0 + 3*317*FLEN/8, x4, x1, x2)

inst_11070:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffffffffe0; valaddr_reg:x3; val_offset:33210*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33210*0 + 3*318*FLEN/8, x4, x1, x2)

inst_11071:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffffffff0; valaddr_reg:x3; val_offset:33213*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33213*0 + 3*319*FLEN/8, x4, x1, x2)

inst_11072:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffffffff8; valaddr_reg:x3; val_offset:33216*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33216*0 + 3*320*FLEN/8, x4, x1, x2)

inst_11073:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffffffffc; valaddr_reg:x3; val_offset:33219*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33219*0 + 3*321*FLEN/8, x4, x1, x2)

inst_11074:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31ffffffffffffe; valaddr_reg:x3; val_offset:33222*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33222*0 + 3*322*FLEN/8, x4, x1, x2)

inst_11075:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xab165ab3996f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ab165ab3996f7; op2val:0x0;
op3val:0x31fffffffffffff; valaddr_reg:x3; val_offset:33225*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33225*0 + 3*323*FLEN/8, x4, x1, x2)

inst_11076:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:33228*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33228*0 + 3*324*FLEN/8, x4, x1, x2)

inst_11077:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:33231*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33231*0 + 3*325*FLEN/8, x4, x1, x2)

inst_11078:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:33234*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33234*0 + 3*326*FLEN/8, x4, x1, x2)

inst_11079:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:33237*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33237*0 + 3*327*FLEN/8, x4, x1, x2)

inst_11080:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:33240*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33240*0 + 3*328*FLEN/8, x4, x1, x2)

inst_11081:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:33243*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33243*0 + 3*329*FLEN/8, x4, x1, x2)

inst_11082:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:33246*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33246*0 + 3*330*FLEN/8, x4, x1, x2)

inst_11083:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:33249*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33249*0 + 3*331*FLEN/8, x4, x1, x2)

inst_11084:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:33252*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33252*0 + 3*332*FLEN/8, x4, x1, x2)

inst_11085:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:33255*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33255*0 + 3*333*FLEN/8, x4, x1, x2)

inst_11086:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:33258*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33258*0 + 3*334*FLEN/8, x4, x1, x2)

inst_11087:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:33261*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33261*0 + 3*335*FLEN/8, x4, x1, x2)

inst_11088:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:33264*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33264*0 + 3*336*FLEN/8, x4, x1, x2)

inst_11089:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:33267*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33267*0 + 3*337*FLEN/8, x4, x1, x2)

inst_11090:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:33270*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33270*0 + 3*338*FLEN/8, x4, x1, x2)

inst_11091:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:33273*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33273*0 + 3*339*FLEN/8, x4, x1, x2)

inst_11092:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:33276*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33276*0 + 3*340*FLEN/8, x4, x1, x2)

inst_11093:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:33279*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33279*0 + 3*341*FLEN/8, x4, x1, x2)

inst_11094:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:33282*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33282*0 + 3*342*FLEN/8, x4, x1, x2)

inst_11095:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:33285*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33285*0 + 3*343*FLEN/8, x4, x1, x2)

inst_11096:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:33288*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33288*0 + 3*344*FLEN/8, x4, x1, x2)

inst_11097:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:33291*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33291*0 + 3*345*FLEN/8, x4, x1, x2)

inst_11098:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000000000000; valaddr_reg:x3; val_offset:33294*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33294*0 + 3*346*FLEN/8, x4, x1, x2)

inst_11099:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000000000001; valaddr_reg:x3; val_offset:33297*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33297*0 + 3*347*FLEN/8, x4, x1, x2)

inst_11100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000000000003; valaddr_reg:x3; val_offset:33300*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33300*0 + 3*348*FLEN/8, x4, x1, x2)

inst_11101:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000000000007; valaddr_reg:x3; val_offset:33303*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33303*0 + 3*349*FLEN/8, x4, x1, x2)

inst_11102:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000000000000f; valaddr_reg:x3; val_offset:33306*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33306*0 + 3*350*FLEN/8, x4, x1, x2)

inst_11103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000000000001f; valaddr_reg:x3; val_offset:33309*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33309*0 + 3*351*FLEN/8, x4, x1, x2)

inst_11104:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000000000003f; valaddr_reg:x3; val_offset:33312*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33312*0 + 3*352*FLEN/8, x4, x1, x2)

inst_11105:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000000000007f; valaddr_reg:x3; val_offset:33315*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33315*0 + 3*353*FLEN/8, x4, x1, x2)

inst_11106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000000000000ff; valaddr_reg:x3; val_offset:33318*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33318*0 + 3*354*FLEN/8, x4, x1, x2)

inst_11107:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000000000001ff; valaddr_reg:x3; val_offset:33321*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33321*0 + 3*355*FLEN/8, x4, x1, x2)

inst_11108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000000000003ff; valaddr_reg:x3; val_offset:33324*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33324*0 + 3*356*FLEN/8, x4, x1, x2)

inst_11109:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000000000007ff; valaddr_reg:x3; val_offset:33327*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33327*0 + 3*357*FLEN/8, x4, x1, x2)

inst_11110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000000000fff; valaddr_reg:x3; val_offset:33330*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33330*0 + 3*358*FLEN/8, x4, x1, x2)

inst_11111:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000000001fff; valaddr_reg:x3; val_offset:33333*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33333*0 + 3*359*FLEN/8, x4, x1, x2)

inst_11112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000000003fff; valaddr_reg:x3; val_offset:33336*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33336*0 + 3*360*FLEN/8, x4, x1, x2)

inst_11113:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000000007fff; valaddr_reg:x3; val_offset:33339*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33339*0 + 3*361*FLEN/8, x4, x1, x2)

inst_11114:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000000000ffff; valaddr_reg:x3; val_offset:33342*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33342*0 + 3*362*FLEN/8, x4, x1, x2)

inst_11115:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000000001ffff; valaddr_reg:x3; val_offset:33345*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33345*0 + 3*363*FLEN/8, x4, x1, x2)

inst_11116:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000000003ffff; valaddr_reg:x3; val_offset:33348*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33348*0 + 3*364*FLEN/8, x4, x1, x2)

inst_11117:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000000007ffff; valaddr_reg:x3; val_offset:33351*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33351*0 + 3*365*FLEN/8, x4, x1, x2)

inst_11118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000000000fffff; valaddr_reg:x3; val_offset:33354*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33354*0 + 3*366*FLEN/8, x4, x1, x2)

inst_11119:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000000001fffff; valaddr_reg:x3; val_offset:33357*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33357*0 + 3*367*FLEN/8, x4, x1, x2)

inst_11120:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000000003fffff; valaddr_reg:x3; val_offset:33360*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33360*0 + 3*368*FLEN/8, x4, x1, x2)

inst_11121:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000000007fffff; valaddr_reg:x3; val_offset:33363*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33363*0 + 3*369*FLEN/8, x4, x1, x2)

inst_11122:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000000ffffff; valaddr_reg:x3; val_offset:33366*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33366*0 + 3*370*FLEN/8, x4, x1, x2)

inst_11123:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000001ffffff; valaddr_reg:x3; val_offset:33369*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33369*0 + 3*371*FLEN/8, x4, x1, x2)

inst_11124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000003ffffff; valaddr_reg:x3; val_offset:33372*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33372*0 + 3*372*FLEN/8, x4, x1, x2)

inst_11125:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000007ffffff; valaddr_reg:x3; val_offset:33375*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33375*0 + 3*373*FLEN/8, x4, x1, x2)

inst_11126:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000000fffffff; valaddr_reg:x3; val_offset:33378*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33378*0 + 3*374*FLEN/8, x4, x1, x2)

inst_11127:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000001fffffff; valaddr_reg:x3; val_offset:33381*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33381*0 + 3*375*FLEN/8, x4, x1, x2)

inst_11128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000003fffffff; valaddr_reg:x3; val_offset:33384*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33384*0 + 3*376*FLEN/8, x4, x1, x2)

inst_11129:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000007fffffff; valaddr_reg:x3; val_offset:33387*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33387*0 + 3*377*FLEN/8, x4, x1, x2)

inst_11130:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000000ffffffff; valaddr_reg:x3; val_offset:33390*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33390*0 + 3*378*FLEN/8, x4, x1, x2)

inst_11131:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000001ffffffff; valaddr_reg:x3; val_offset:33393*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33393*0 + 3*379*FLEN/8, x4, x1, x2)

inst_11132:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000003ffffffff; valaddr_reg:x3; val_offset:33396*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33396*0 + 3*380*FLEN/8, x4, x1, x2)

inst_11133:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000007ffffffff; valaddr_reg:x3; val_offset:33399*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33399*0 + 3*381*FLEN/8, x4, x1, x2)

inst_11134:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300000fffffffff; valaddr_reg:x3; val_offset:33402*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33402*0 + 3*382*FLEN/8, x4, x1, x2)

inst_11135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300001fffffffff; valaddr_reg:x3; val_offset:33405*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33405*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_11136:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300003fffffffff; valaddr_reg:x3; val_offset:33408*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33408*0 + 3*384*FLEN/8, x4, x1, x2)

inst_11137:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300007fffffffff; valaddr_reg:x3; val_offset:33411*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33411*0 + 3*385*FLEN/8, x4, x1, x2)

inst_11138:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830000ffffffffff; valaddr_reg:x3; val_offset:33414*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33414*0 + 3*386*FLEN/8, x4, x1, x2)

inst_11139:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830001ffffffffff; valaddr_reg:x3; val_offset:33417*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33417*0 + 3*387*FLEN/8, x4, x1, x2)

inst_11140:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830003ffffffffff; valaddr_reg:x3; val_offset:33420*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33420*0 + 3*388*FLEN/8, x4, x1, x2)

inst_11141:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830007ffffffffff; valaddr_reg:x3; val_offset:33423*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33423*0 + 3*389*FLEN/8, x4, x1, x2)

inst_11142:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83000fffffffffff; valaddr_reg:x3; val_offset:33426*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33426*0 + 3*390*FLEN/8, x4, x1, x2)

inst_11143:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83001fffffffffff; valaddr_reg:x3; val_offset:33429*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33429*0 + 3*391*FLEN/8, x4, x1, x2)

inst_11144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83003fffffffffff; valaddr_reg:x3; val_offset:33432*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33432*0 + 3*392*FLEN/8, x4, x1, x2)

inst_11145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x83007fffffffffff; valaddr_reg:x3; val_offset:33435*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33435*0 + 3*393*FLEN/8, x4, x1, x2)

inst_11146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8300ffffffffffff; valaddr_reg:x3; val_offset:33438*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33438*0 + 3*394*FLEN/8, x4, x1, x2)

inst_11147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8301ffffffffffff; valaddr_reg:x3; val_offset:33441*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33441*0 + 3*395*FLEN/8, x4, x1, x2)

inst_11148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8303ffffffffffff; valaddr_reg:x3; val_offset:33444*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33444*0 + 3*396*FLEN/8, x4, x1, x2)

inst_11149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8307ffffffffffff; valaddr_reg:x3; val_offset:33447*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33447*0 + 3*397*FLEN/8, x4, x1, x2)

inst_11150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x8308000000000000; valaddr_reg:x3; val_offset:33450*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33450*0 + 3*398*FLEN/8, x4, x1, x2)

inst_11151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830c000000000000; valaddr_reg:x3; val_offset:33453*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33453*0 + 3*399*FLEN/8, x4, x1, x2)

inst_11152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830e000000000000; valaddr_reg:x3; val_offset:33456*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33456*0 + 3*400*FLEN/8, x4, x1, x2)

inst_11153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830f000000000000; valaddr_reg:x3; val_offset:33459*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33459*0 + 3*401*FLEN/8, x4, x1, x2)

inst_11154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830f800000000000; valaddr_reg:x3; val_offset:33462*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33462*0 + 3*402*FLEN/8, x4, x1, x2)

inst_11155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fc00000000000; valaddr_reg:x3; val_offset:33465*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33465*0 + 3*403*FLEN/8, x4, x1, x2)

inst_11156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fe00000000000; valaddr_reg:x3; val_offset:33468*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33468*0 + 3*404*FLEN/8, x4, x1, x2)

inst_11157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ff00000000000; valaddr_reg:x3; val_offset:33471*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33471*0 + 3*405*FLEN/8, x4, x1, x2)

inst_11158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ff80000000000; valaddr_reg:x3; val_offset:33474*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33474*0 + 3*406*FLEN/8, x4, x1, x2)

inst_11159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffc0000000000; valaddr_reg:x3; val_offset:33477*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33477*0 + 3*407*FLEN/8, x4, x1, x2)

inst_11160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffe0000000000; valaddr_reg:x3; val_offset:33480*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33480*0 + 3*408*FLEN/8, x4, x1, x2)

inst_11161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fff0000000000; valaddr_reg:x3; val_offset:33483*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33483*0 + 3*409*FLEN/8, x4, x1, x2)

inst_11162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fff8000000000; valaddr_reg:x3; val_offset:33486*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33486*0 + 3*410*FLEN/8, x4, x1, x2)

inst_11163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffc000000000; valaddr_reg:x3; val_offset:33489*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33489*0 + 3*411*FLEN/8, x4, x1, x2)

inst_11164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffe000000000; valaddr_reg:x3; val_offset:33492*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33492*0 + 3*412*FLEN/8, x4, x1, x2)

inst_11165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffff000000000; valaddr_reg:x3; val_offset:33495*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33495*0 + 3*413*FLEN/8, x4, x1, x2)

inst_11166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffff800000000; valaddr_reg:x3; val_offset:33498*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33498*0 + 3*414*FLEN/8, x4, x1, x2)

inst_11167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffc00000000; valaddr_reg:x3; val_offset:33501*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33501*0 + 3*415*FLEN/8, x4, x1, x2)

inst_11168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffe00000000; valaddr_reg:x3; val_offset:33504*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33504*0 + 3*416*FLEN/8, x4, x1, x2)

inst_11169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffff00000000; valaddr_reg:x3; val_offset:33507*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33507*0 + 3*417*FLEN/8, x4, x1, x2)

inst_11170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffff80000000; valaddr_reg:x3; val_offset:33510*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33510*0 + 3*418*FLEN/8, x4, x1, x2)

inst_11171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffc0000000; valaddr_reg:x3; val_offset:33513*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33513*0 + 3*419*FLEN/8, x4, x1, x2)

inst_11172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffe0000000; valaddr_reg:x3; val_offset:33516*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33516*0 + 3*420*FLEN/8, x4, x1, x2)

inst_11173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffff0000000; valaddr_reg:x3; val_offset:33519*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33519*0 + 3*421*FLEN/8, x4, x1, x2)

inst_11174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffff8000000; valaddr_reg:x3; val_offset:33522*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33522*0 + 3*422*FLEN/8, x4, x1, x2)

inst_11175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffc000000; valaddr_reg:x3; val_offset:33525*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33525*0 + 3*423*FLEN/8, x4, x1, x2)

inst_11176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffe000000; valaddr_reg:x3; val_offset:33528*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33528*0 + 3*424*FLEN/8, x4, x1, x2)

inst_11177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffff000000; valaddr_reg:x3; val_offset:33531*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33531*0 + 3*425*FLEN/8, x4, x1, x2)

inst_11178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffff800000; valaddr_reg:x3; val_offset:33534*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33534*0 + 3*426*FLEN/8, x4, x1, x2)

inst_11179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffffc00000; valaddr_reg:x3; val_offset:33537*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33537*0 + 3*427*FLEN/8, x4, x1, x2)

inst_11180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffffe00000; valaddr_reg:x3; val_offset:33540*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33540*0 + 3*428*FLEN/8, x4, x1, x2)

inst_11181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffff00000; valaddr_reg:x3; val_offset:33543*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33543*0 + 3*429*FLEN/8, x4, x1, x2)

inst_11182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffff80000; valaddr_reg:x3; val_offset:33546*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33546*0 + 3*430*FLEN/8, x4, x1, x2)

inst_11183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffffc0000; valaddr_reg:x3; val_offset:33549*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33549*0 + 3*431*FLEN/8, x4, x1, x2)

inst_11184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffffe0000; valaddr_reg:x3; val_offset:33552*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33552*0 + 3*432*FLEN/8, x4, x1, x2)

inst_11185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffffff0000; valaddr_reg:x3; val_offset:33555*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33555*0 + 3*433*FLEN/8, x4, x1, x2)

inst_11186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffffff8000; valaddr_reg:x3; val_offset:33558*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33558*0 + 3*434*FLEN/8, x4, x1, x2)

inst_11187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffffffc000; valaddr_reg:x3; val_offset:33561*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33561*0 + 3*435*FLEN/8, x4, x1, x2)

inst_11188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffffffe000; valaddr_reg:x3; val_offset:33564*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33564*0 + 3*436*FLEN/8, x4, x1, x2)

inst_11189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffffff000; valaddr_reg:x3; val_offset:33567*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33567*0 + 3*437*FLEN/8, x4, x1, x2)

inst_11190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffffff800; valaddr_reg:x3; val_offset:33570*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33570*0 + 3*438*FLEN/8, x4, x1, x2)

inst_11191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffffffc00; valaddr_reg:x3; val_offset:33573*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33573*0 + 3*439*FLEN/8, x4, x1, x2)

inst_11192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffffffe00; valaddr_reg:x3; val_offset:33576*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33576*0 + 3*440*FLEN/8, x4, x1, x2)

inst_11193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffffffff00; valaddr_reg:x3; val_offset:33579*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33579*0 + 3*441*FLEN/8, x4, x1, x2)

inst_11194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffffffff80; valaddr_reg:x3; val_offset:33582*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33582*0 + 3*442*FLEN/8, x4, x1, x2)

inst_11195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffffffffc0; valaddr_reg:x3; val_offset:33585*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33585*0 + 3*443*FLEN/8, x4, x1, x2)

inst_11196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffffffffe0; valaddr_reg:x3; val_offset:33588*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33588*0 + 3*444*FLEN/8, x4, x1, x2)

inst_11197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffffffff0; valaddr_reg:x3; val_offset:33591*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33591*0 + 3*445*FLEN/8, x4, x1, x2)

inst_11198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffffffff8; valaddr_reg:x3; val_offset:33594*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33594*0 + 3*446*FLEN/8, x4, x1, x2)

inst_11199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffffffffc; valaddr_reg:x3; val_offset:33597*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33597*0 + 3*447*FLEN/8, x4, x1, x2)

inst_11200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830ffffffffffffe; valaddr_reg:x3; val_offset:33600*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33600*0 + 3*448*FLEN/8, x4, x1, x2)

inst_11201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb20317565f227 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b20317565f227; op2val:0x8000;
op3val:0x830fffffffffffff; valaddr_reg:x3; val_offset:33603*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33603*0 + 3*449*FLEN/8, x4, x1, x2)

inst_11202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:33606*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33606*0 + 3*450*FLEN/8, x4, x1, x2)

inst_11203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:33609*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33609*0 + 3*451*FLEN/8, x4, x1, x2)

inst_11204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:33612*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33612*0 + 3*452*FLEN/8, x4, x1, x2)

inst_11205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:33615*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33615*0 + 3*453*FLEN/8, x4, x1, x2)

inst_11206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:33618*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33618*0 + 3*454*FLEN/8, x4, x1, x2)

inst_11207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:33621*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33621*0 + 3*455*FLEN/8, x4, x1, x2)

inst_11208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:33624*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33624*0 + 3*456*FLEN/8, x4, x1, x2)

inst_11209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:33627*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33627*0 + 3*457*FLEN/8, x4, x1, x2)

inst_11210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:33630*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33630*0 + 3*458*FLEN/8, x4, x1, x2)

inst_11211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:33633*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33633*0 + 3*459*FLEN/8, x4, x1, x2)

inst_11212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:33636*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33636*0 + 3*460*FLEN/8, x4, x1, x2)

inst_11213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:33639*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33639*0 + 3*461*FLEN/8, x4, x1, x2)

inst_11214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:33642*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33642*0 + 3*462*FLEN/8, x4, x1, x2)

inst_11215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:33645*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33645*0 + 3*463*FLEN/8, x4, x1, x2)

inst_11216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:33648*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33648*0 + 3*464*FLEN/8, x4, x1, x2)

inst_11217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:33651*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33651*0 + 3*465*FLEN/8, x4, x1, x2)

inst_11218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:33654*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33654*0 + 3*466*FLEN/8, x4, x1, x2)

inst_11219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:33657*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33657*0 + 3*467*FLEN/8, x4, x1, x2)

inst_11220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:33660*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33660*0 + 3*468*FLEN/8, x4, x1, x2)

inst_11221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:33663*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33663*0 + 3*469*FLEN/8, x4, x1, x2)

inst_11222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:33666*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33666*0 + 3*470*FLEN/8, x4, x1, x2)

inst_11223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:33669*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33669*0 + 3*471*FLEN/8, x4, x1, x2)

inst_11224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000000000000; valaddr_reg:x3; val_offset:33672*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33672*0 + 3*472*FLEN/8, x4, x1, x2)

inst_11225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000000000001; valaddr_reg:x3; val_offset:33675*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33675*0 + 3*473*FLEN/8, x4, x1, x2)

inst_11226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000000000003; valaddr_reg:x3; val_offset:33678*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33678*0 + 3*474*FLEN/8, x4, x1, x2)

inst_11227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000000000007; valaddr_reg:x3; val_offset:33681*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33681*0 + 3*475*FLEN/8, x4, x1, x2)

inst_11228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000000000000f; valaddr_reg:x3; val_offset:33684*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33684*0 + 3*476*FLEN/8, x4, x1, x2)

inst_11229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000000000001f; valaddr_reg:x3; val_offset:33687*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33687*0 + 3*477*FLEN/8, x4, x1, x2)

inst_11230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000000000003f; valaddr_reg:x3; val_offset:33690*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33690*0 + 3*478*FLEN/8, x4, x1, x2)

inst_11231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000000000007f; valaddr_reg:x3; val_offset:33693*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33693*0 + 3*479*FLEN/8, x4, x1, x2)

inst_11232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000000000000ff; valaddr_reg:x3; val_offset:33696*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33696*0 + 3*480*FLEN/8, x4, x1, x2)

inst_11233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000000000001ff; valaddr_reg:x3; val_offset:33699*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33699*0 + 3*481*FLEN/8, x4, x1, x2)

inst_11234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000000000003ff; valaddr_reg:x3; val_offset:33702*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33702*0 + 3*482*FLEN/8, x4, x1, x2)

inst_11235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000000000007ff; valaddr_reg:x3; val_offset:33705*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33705*0 + 3*483*FLEN/8, x4, x1, x2)

inst_11236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000000000fff; valaddr_reg:x3; val_offset:33708*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33708*0 + 3*484*FLEN/8, x4, x1, x2)

inst_11237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000000001fff; valaddr_reg:x3; val_offset:33711*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33711*0 + 3*485*FLEN/8, x4, x1, x2)

inst_11238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000000003fff; valaddr_reg:x3; val_offset:33714*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33714*0 + 3*486*FLEN/8, x4, x1, x2)

inst_11239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000000007fff; valaddr_reg:x3; val_offset:33717*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33717*0 + 3*487*FLEN/8, x4, x1, x2)

inst_11240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000000000ffff; valaddr_reg:x3; val_offset:33720*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33720*0 + 3*488*FLEN/8, x4, x1, x2)

inst_11241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000000001ffff; valaddr_reg:x3; val_offset:33723*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33723*0 + 3*489*FLEN/8, x4, x1, x2)

inst_11242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000000003ffff; valaddr_reg:x3; val_offset:33726*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33726*0 + 3*490*FLEN/8, x4, x1, x2)

inst_11243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000000007ffff; valaddr_reg:x3; val_offset:33729*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33729*0 + 3*491*FLEN/8, x4, x1, x2)

inst_11244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000000000fffff; valaddr_reg:x3; val_offset:33732*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33732*0 + 3*492*FLEN/8, x4, x1, x2)

inst_11245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000000001fffff; valaddr_reg:x3; val_offset:33735*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33735*0 + 3*493*FLEN/8, x4, x1, x2)

inst_11246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000000003fffff; valaddr_reg:x3; val_offset:33738*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33738*0 + 3*494*FLEN/8, x4, x1, x2)

inst_11247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000000007fffff; valaddr_reg:x3; val_offset:33741*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33741*0 + 3*495*FLEN/8, x4, x1, x2)

inst_11248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000000ffffff; valaddr_reg:x3; val_offset:33744*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33744*0 + 3*496*FLEN/8, x4, x1, x2)

inst_11249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000001ffffff; valaddr_reg:x3; val_offset:33747*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33747*0 + 3*497*FLEN/8, x4, x1, x2)

inst_11250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000003ffffff; valaddr_reg:x3; val_offset:33750*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33750*0 + 3*498*FLEN/8, x4, x1, x2)

inst_11251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000007ffffff; valaddr_reg:x3; val_offset:33753*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33753*0 + 3*499*FLEN/8, x4, x1, x2)

inst_11252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000000fffffff; valaddr_reg:x3; val_offset:33756*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33756*0 + 3*500*FLEN/8, x4, x1, x2)

inst_11253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000001fffffff; valaddr_reg:x3; val_offset:33759*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33759*0 + 3*501*FLEN/8, x4, x1, x2)

inst_11254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000003fffffff; valaddr_reg:x3; val_offset:33762*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33762*0 + 3*502*FLEN/8, x4, x1, x2)

inst_11255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000007fffffff; valaddr_reg:x3; val_offset:33765*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33765*0 + 3*503*FLEN/8, x4, x1, x2)

inst_11256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000000ffffffff; valaddr_reg:x3; val_offset:33768*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33768*0 + 3*504*FLEN/8, x4, x1, x2)

inst_11257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000001ffffffff; valaddr_reg:x3; val_offset:33771*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33771*0 + 3*505*FLEN/8, x4, x1, x2)

inst_11258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000003ffffffff; valaddr_reg:x3; val_offset:33774*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33774*0 + 3*506*FLEN/8, x4, x1, x2)

inst_11259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000007ffffffff; valaddr_reg:x3; val_offset:33777*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33777*0 + 3*507*FLEN/8, x4, x1, x2)

inst_11260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100000fffffffff; valaddr_reg:x3; val_offset:33780*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33780*0 + 3*508*FLEN/8, x4, x1, x2)

inst_11261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100001fffffffff; valaddr_reg:x3; val_offset:33783*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33783*0 + 3*509*FLEN/8, x4, x1, x2)

inst_11262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100003fffffffff; valaddr_reg:x3; val_offset:33786*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33786*0 + 3*510*FLEN/8, x4, x1, x2)

inst_11263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100007fffffffff; valaddr_reg:x3; val_offset:33789*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33789*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_11264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810000ffffffffff; valaddr_reg:x3; val_offset:33792*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33792*0 + 3*512*FLEN/8, x4, x1, x2)

inst_11265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810001ffffffffff; valaddr_reg:x3; val_offset:33795*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33795*0 + 3*513*FLEN/8, x4, x1, x2)

inst_11266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810003ffffffffff; valaddr_reg:x3; val_offset:33798*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33798*0 + 3*514*FLEN/8, x4, x1, x2)

inst_11267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810007ffffffffff; valaddr_reg:x3; val_offset:33801*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33801*0 + 3*515*FLEN/8, x4, x1, x2)

inst_11268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81000fffffffffff; valaddr_reg:x3; val_offset:33804*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33804*0 + 3*516*FLEN/8, x4, x1, x2)

inst_11269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81001fffffffffff; valaddr_reg:x3; val_offset:33807*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33807*0 + 3*517*FLEN/8, x4, x1, x2)

inst_11270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81003fffffffffff; valaddr_reg:x3; val_offset:33810*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33810*0 + 3*518*FLEN/8, x4, x1, x2)

inst_11271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x81007fffffffffff; valaddr_reg:x3; val_offset:33813*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33813*0 + 3*519*FLEN/8, x4, x1, x2)

inst_11272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8100ffffffffffff; valaddr_reg:x3; val_offset:33816*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33816*0 + 3*520*FLEN/8, x4, x1, x2)

inst_11273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8101ffffffffffff; valaddr_reg:x3; val_offset:33819*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33819*0 + 3*521*FLEN/8, x4, x1, x2)

inst_11274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8103ffffffffffff; valaddr_reg:x3; val_offset:33822*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33822*0 + 3*522*FLEN/8, x4, x1, x2)

inst_11275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8107ffffffffffff; valaddr_reg:x3; val_offset:33825*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33825*0 + 3*523*FLEN/8, x4, x1, x2)

inst_11276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x8108000000000000; valaddr_reg:x3; val_offset:33828*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33828*0 + 3*524*FLEN/8, x4, x1, x2)

inst_11277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810c000000000000; valaddr_reg:x3; val_offset:33831*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33831*0 + 3*525*FLEN/8, x4, x1, x2)

inst_11278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810e000000000000; valaddr_reg:x3; val_offset:33834*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33834*0 + 3*526*FLEN/8, x4, x1, x2)

inst_11279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810f000000000000; valaddr_reg:x3; val_offset:33837*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33837*0 + 3*527*FLEN/8, x4, x1, x2)

inst_11280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810f800000000000; valaddr_reg:x3; val_offset:33840*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33840*0 + 3*528*FLEN/8, x4, x1, x2)

inst_11281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fc00000000000; valaddr_reg:x3; val_offset:33843*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33843*0 + 3*529*FLEN/8, x4, x1, x2)

inst_11282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fe00000000000; valaddr_reg:x3; val_offset:33846*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33846*0 + 3*530*FLEN/8, x4, x1, x2)

inst_11283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ff00000000000; valaddr_reg:x3; val_offset:33849*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33849*0 + 3*531*FLEN/8, x4, x1, x2)

inst_11284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ff80000000000; valaddr_reg:x3; val_offset:33852*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33852*0 + 3*532*FLEN/8, x4, x1, x2)

inst_11285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffc0000000000; valaddr_reg:x3; val_offset:33855*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33855*0 + 3*533*FLEN/8, x4, x1, x2)

inst_11286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffe0000000000; valaddr_reg:x3; val_offset:33858*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33858*0 + 3*534*FLEN/8, x4, x1, x2)

inst_11287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fff0000000000; valaddr_reg:x3; val_offset:33861*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33861*0 + 3*535*FLEN/8, x4, x1, x2)

inst_11288:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fff8000000000; valaddr_reg:x3; val_offset:33864*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33864*0 + 3*536*FLEN/8, x4, x1, x2)

inst_11289:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffc000000000; valaddr_reg:x3; val_offset:33867*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33867*0 + 3*537*FLEN/8, x4, x1, x2)

inst_11290:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffe000000000; valaddr_reg:x3; val_offset:33870*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33870*0 + 3*538*FLEN/8, x4, x1, x2)

inst_11291:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffff000000000; valaddr_reg:x3; val_offset:33873*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33873*0 + 3*539*FLEN/8, x4, x1, x2)

inst_11292:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffff800000000; valaddr_reg:x3; val_offset:33876*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33876*0 + 3*540*FLEN/8, x4, x1, x2)

inst_11293:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffc00000000; valaddr_reg:x3; val_offset:33879*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33879*0 + 3*541*FLEN/8, x4, x1, x2)

inst_11294:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffe00000000; valaddr_reg:x3; val_offset:33882*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33882*0 + 3*542*FLEN/8, x4, x1, x2)

inst_11295:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffff00000000; valaddr_reg:x3; val_offset:33885*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33885*0 + 3*543*FLEN/8, x4, x1, x2)

inst_11296:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffff80000000; valaddr_reg:x3; val_offset:33888*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33888*0 + 3*544*FLEN/8, x4, x1, x2)

inst_11297:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffc0000000; valaddr_reg:x3; val_offset:33891*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33891*0 + 3*545*FLEN/8, x4, x1, x2)

inst_11298:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffe0000000; valaddr_reg:x3; val_offset:33894*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33894*0 + 3*546*FLEN/8, x4, x1, x2)

inst_11299:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffff0000000; valaddr_reg:x3; val_offset:33897*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33897*0 + 3*547*FLEN/8, x4, x1, x2)

inst_11300:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffff8000000; valaddr_reg:x3; val_offset:33900*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33900*0 + 3*548*FLEN/8, x4, x1, x2)

inst_11301:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffc000000; valaddr_reg:x3; val_offset:33903*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33903*0 + 3*549*FLEN/8, x4, x1, x2)

inst_11302:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffe000000; valaddr_reg:x3; val_offset:33906*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33906*0 + 3*550*FLEN/8, x4, x1, x2)

inst_11303:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffff000000; valaddr_reg:x3; val_offset:33909*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33909*0 + 3*551*FLEN/8, x4, x1, x2)

inst_11304:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffff800000; valaddr_reg:x3; val_offset:33912*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33912*0 + 3*552*FLEN/8, x4, x1, x2)

inst_11305:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffffc00000; valaddr_reg:x3; val_offset:33915*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33915*0 + 3*553*FLEN/8, x4, x1, x2)

inst_11306:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffffe00000; valaddr_reg:x3; val_offset:33918*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33918*0 + 3*554*FLEN/8, x4, x1, x2)

inst_11307:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffff00000; valaddr_reg:x3; val_offset:33921*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33921*0 + 3*555*FLEN/8, x4, x1, x2)

inst_11308:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffff80000; valaddr_reg:x3; val_offset:33924*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33924*0 + 3*556*FLEN/8, x4, x1, x2)

inst_11309:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffffc0000; valaddr_reg:x3; val_offset:33927*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33927*0 + 3*557*FLEN/8, x4, x1, x2)

inst_11310:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffffe0000; valaddr_reg:x3; val_offset:33930*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33930*0 + 3*558*FLEN/8, x4, x1, x2)

inst_11311:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffffff0000; valaddr_reg:x3; val_offset:33933*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33933*0 + 3*559*FLEN/8, x4, x1, x2)

inst_11312:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffffff8000; valaddr_reg:x3; val_offset:33936*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33936*0 + 3*560*FLEN/8, x4, x1, x2)

inst_11313:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffffffc000; valaddr_reg:x3; val_offset:33939*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33939*0 + 3*561*FLEN/8, x4, x1, x2)

inst_11314:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffffffe000; valaddr_reg:x3; val_offset:33942*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33942*0 + 3*562*FLEN/8, x4, x1, x2)

inst_11315:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffffff000; valaddr_reg:x3; val_offset:33945*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33945*0 + 3*563*FLEN/8, x4, x1, x2)

inst_11316:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffffff800; valaddr_reg:x3; val_offset:33948*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33948*0 + 3*564*FLEN/8, x4, x1, x2)

inst_11317:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffffffc00; valaddr_reg:x3; val_offset:33951*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33951*0 + 3*565*FLEN/8, x4, x1, x2)

inst_11318:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffffffe00; valaddr_reg:x3; val_offset:33954*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33954*0 + 3*566*FLEN/8, x4, x1, x2)

inst_11319:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffffffff00; valaddr_reg:x3; val_offset:33957*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33957*0 + 3*567*FLEN/8, x4, x1, x2)

inst_11320:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffffffff80; valaddr_reg:x3; val_offset:33960*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33960*0 + 3*568*FLEN/8, x4, x1, x2)

inst_11321:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffffffffc0; valaddr_reg:x3; val_offset:33963*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33963*0 + 3*569*FLEN/8, x4, x1, x2)

inst_11322:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffffffffe0; valaddr_reg:x3; val_offset:33966*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33966*0 + 3*570*FLEN/8, x4, x1, x2)

inst_11323:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffffffff0; valaddr_reg:x3; val_offset:33969*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33969*0 + 3*571*FLEN/8, x4, x1, x2)

inst_11324:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffffffff8; valaddr_reg:x3; val_offset:33972*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33972*0 + 3*572*FLEN/8, x4, x1, x2)

inst_11325:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffffffffc; valaddr_reg:x3; val_offset:33975*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33975*0 + 3*573*FLEN/8, x4, x1, x2)

inst_11326:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810ffffffffffffe; valaddr_reg:x3; val_offset:33978*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33978*0 + 3*574*FLEN/8, x4, x1, x2)

inst_11327:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xb2d19a1e15a4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7b2d19a1e15a4f; op2val:0x8000;
op3val:0x810fffffffffffff; valaddr_reg:x3; val_offset:33981*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33981*0 + 3*575*FLEN/8, x4, x1, x2)

inst_11328:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:33984*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33984*0 + 3*576*FLEN/8, x4, x1, x2)

inst_11329:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:33987*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33987*0 + 3*577*FLEN/8, x4, x1, x2)

inst_11330:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:33990*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33990*0 + 3*578*FLEN/8, x4, x1, x2)

inst_11331:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:33993*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33993*0 + 3*579*FLEN/8, x4, x1, x2)

inst_11332:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:33996*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33996*0 + 3*580*FLEN/8, x4, x1, x2)

inst_11333:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:33999*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 33999*0 + 3*581*FLEN/8, x4, x1, x2)

inst_11334:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:34002*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34002*0 + 3*582*FLEN/8, x4, x1, x2)

inst_11335:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:34005*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34005*0 + 3*583*FLEN/8, x4, x1, x2)

inst_11336:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:34008*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34008*0 + 3*584*FLEN/8, x4, x1, x2)

inst_11337:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:34011*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34011*0 + 3*585*FLEN/8, x4, x1, x2)

inst_11338:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:34014*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34014*0 + 3*586*FLEN/8, x4, x1, x2)

inst_11339:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:34017*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34017*0 + 3*587*FLEN/8, x4, x1, x2)

inst_11340:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:34020*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34020*0 + 3*588*FLEN/8, x4, x1, x2)

inst_11341:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:34023*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34023*0 + 3*589*FLEN/8, x4, x1, x2)

inst_11342:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:34026*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34026*0 + 3*590*FLEN/8, x4, x1, x2)

inst_11343:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:34029*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34029*0 + 3*591*FLEN/8, x4, x1, x2)

inst_11344:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:34032*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34032*0 + 3*592*FLEN/8, x4, x1, x2)

inst_11345:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:34035*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34035*0 + 3*593*FLEN/8, x4, x1, x2)

inst_11346:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:34038*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34038*0 + 3*594*FLEN/8, x4, x1, x2)

inst_11347:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:34041*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34041*0 + 3*595*FLEN/8, x4, x1, x2)

inst_11348:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:34044*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34044*0 + 3*596*FLEN/8, x4, x1, x2)

inst_11349:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:34047*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34047*0 + 3*597*FLEN/8, x4, x1, x2)

inst_11350:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000000000000; valaddr_reg:x3; val_offset:34050*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34050*0 + 3*598*FLEN/8, x4, x1, x2)

inst_11351:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000000000001; valaddr_reg:x3; val_offset:34053*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34053*0 + 3*599*FLEN/8, x4, x1, x2)

inst_11352:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000000000003; valaddr_reg:x3; val_offset:34056*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34056*0 + 3*600*FLEN/8, x4, x1, x2)

inst_11353:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000000000007; valaddr_reg:x3; val_offset:34059*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34059*0 + 3*601*FLEN/8, x4, x1, x2)

inst_11354:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000000000000f; valaddr_reg:x3; val_offset:34062*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34062*0 + 3*602*FLEN/8, x4, x1, x2)

inst_11355:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000000000001f; valaddr_reg:x3; val_offset:34065*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34065*0 + 3*603*FLEN/8, x4, x1, x2)

inst_11356:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000000000003f; valaddr_reg:x3; val_offset:34068*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34068*0 + 3*604*FLEN/8, x4, x1, x2)

inst_11357:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000000000007f; valaddr_reg:x3; val_offset:34071*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34071*0 + 3*605*FLEN/8, x4, x1, x2)

inst_11358:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600000000000ff; valaddr_reg:x3; val_offset:34074*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34074*0 + 3*606*FLEN/8, x4, x1, x2)

inst_11359:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600000000001ff; valaddr_reg:x3; val_offset:34077*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34077*0 + 3*607*FLEN/8, x4, x1, x2)

inst_11360:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600000000003ff; valaddr_reg:x3; val_offset:34080*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34080*0 + 3*608*FLEN/8, x4, x1, x2)

inst_11361:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600000000007ff; valaddr_reg:x3; val_offset:34083*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34083*0 + 3*609*FLEN/8, x4, x1, x2)

inst_11362:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000000000fff; valaddr_reg:x3; val_offset:34086*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34086*0 + 3*610*FLEN/8, x4, x1, x2)

inst_11363:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000000001fff; valaddr_reg:x3; val_offset:34089*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34089*0 + 3*611*FLEN/8, x4, x1, x2)

inst_11364:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000000003fff; valaddr_reg:x3; val_offset:34092*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34092*0 + 3*612*FLEN/8, x4, x1, x2)

inst_11365:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000000007fff; valaddr_reg:x3; val_offset:34095*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34095*0 + 3*613*FLEN/8, x4, x1, x2)

inst_11366:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000000000ffff; valaddr_reg:x3; val_offset:34098*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34098*0 + 3*614*FLEN/8, x4, x1, x2)

inst_11367:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000000001ffff; valaddr_reg:x3; val_offset:34101*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34101*0 + 3*615*FLEN/8, x4, x1, x2)

inst_11368:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000000003ffff; valaddr_reg:x3; val_offset:34104*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34104*0 + 3*616*FLEN/8, x4, x1, x2)

inst_11369:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000000007ffff; valaddr_reg:x3; val_offset:34107*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34107*0 + 3*617*FLEN/8, x4, x1, x2)

inst_11370:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600000000fffff; valaddr_reg:x3; val_offset:34110*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34110*0 + 3*618*FLEN/8, x4, x1, x2)

inst_11371:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600000001fffff; valaddr_reg:x3; val_offset:34113*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34113*0 + 3*619*FLEN/8, x4, x1, x2)

inst_11372:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600000003fffff; valaddr_reg:x3; val_offset:34116*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34116*0 + 3*620*FLEN/8, x4, x1, x2)

inst_11373:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600000007fffff; valaddr_reg:x3; val_offset:34119*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34119*0 + 3*621*FLEN/8, x4, x1, x2)

inst_11374:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000000ffffff; valaddr_reg:x3; val_offset:34122*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34122*0 + 3*622*FLEN/8, x4, x1, x2)

inst_11375:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000001ffffff; valaddr_reg:x3; val_offset:34125*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34125*0 + 3*623*FLEN/8, x4, x1, x2)

inst_11376:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000003ffffff; valaddr_reg:x3; val_offset:34128*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34128*0 + 3*624*FLEN/8, x4, x1, x2)

inst_11377:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000007ffffff; valaddr_reg:x3; val_offset:34131*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34131*0 + 3*625*FLEN/8, x4, x1, x2)

inst_11378:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000000fffffff; valaddr_reg:x3; val_offset:34134*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34134*0 + 3*626*FLEN/8, x4, x1, x2)

inst_11379:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000001fffffff; valaddr_reg:x3; val_offset:34137*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34137*0 + 3*627*FLEN/8, x4, x1, x2)

inst_11380:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000003fffffff; valaddr_reg:x3; val_offset:34140*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34140*0 + 3*628*FLEN/8, x4, x1, x2)

inst_11381:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000007fffffff; valaddr_reg:x3; val_offset:34143*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34143*0 + 3*629*FLEN/8, x4, x1, x2)

inst_11382:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600000ffffffff; valaddr_reg:x3; val_offset:34146*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34146*0 + 3*630*FLEN/8, x4, x1, x2)

inst_11383:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600001ffffffff; valaddr_reg:x3; val_offset:34149*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34149*0 + 3*631*FLEN/8, x4, x1, x2)

inst_11384:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600003ffffffff; valaddr_reg:x3; val_offset:34152*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34152*0 + 3*632*FLEN/8, x4, x1, x2)

inst_11385:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600007ffffffff; valaddr_reg:x3; val_offset:34155*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34155*0 + 3*633*FLEN/8, x4, x1, x2)

inst_11386:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260000fffffffff; valaddr_reg:x3; val_offset:34158*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34158*0 + 3*634*FLEN/8, x4, x1, x2)

inst_11387:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260001fffffffff; valaddr_reg:x3; val_offset:34161*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34161*0 + 3*635*FLEN/8, x4, x1, x2)

inst_11388:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260003fffffffff; valaddr_reg:x3; val_offset:34164*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34164*0 + 3*636*FLEN/8, x4, x1, x2)

inst_11389:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260007fffffffff; valaddr_reg:x3; val_offset:34167*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34167*0 + 3*637*FLEN/8, x4, x1, x2)

inst_11390:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826000ffffffffff; valaddr_reg:x3; val_offset:34170*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34170*0 + 3*638*FLEN/8, x4, x1, x2)

inst_11391:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826001ffffffffff; valaddr_reg:x3; val_offset:34173*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34173*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_11392:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826003ffffffffff; valaddr_reg:x3; val_offset:34176*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34176*0 + 3*640*FLEN/8, x4, x1, x2)

inst_11393:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826007ffffffffff; valaddr_reg:x3; val_offset:34179*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34179*0 + 3*641*FLEN/8, x4, x1, x2)

inst_11394:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82600fffffffffff; valaddr_reg:x3; val_offset:34182*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34182*0 + 3*642*FLEN/8, x4, x1, x2)

inst_11395:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82601fffffffffff; valaddr_reg:x3; val_offset:34185*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34185*0 + 3*643*FLEN/8, x4, x1, x2)

inst_11396:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82603fffffffffff; valaddr_reg:x3; val_offset:34188*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34188*0 + 3*644*FLEN/8, x4, x1, x2)

inst_11397:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x82607fffffffffff; valaddr_reg:x3; val_offset:34191*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34191*0 + 3*645*FLEN/8, x4, x1, x2)

inst_11398:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8260ffffffffffff; valaddr_reg:x3; val_offset:34194*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34194*0 + 3*646*FLEN/8, x4, x1, x2)

inst_11399:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8261ffffffffffff; valaddr_reg:x3; val_offset:34197*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34197*0 + 3*647*FLEN/8, x4, x1, x2)

inst_11400:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8263ffffffffffff; valaddr_reg:x3; val_offset:34200*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34200*0 + 3*648*FLEN/8, x4, x1, x2)

inst_11401:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8267ffffffffffff; valaddr_reg:x3; val_offset:34203*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34203*0 + 3*649*FLEN/8, x4, x1, x2)

inst_11402:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x8268000000000000; valaddr_reg:x3; val_offset:34206*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34206*0 + 3*650*FLEN/8, x4, x1, x2)

inst_11403:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826c000000000000; valaddr_reg:x3; val_offset:34209*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34209*0 + 3*651*FLEN/8, x4, x1, x2)

inst_11404:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826e000000000000; valaddr_reg:x3; val_offset:34212*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34212*0 + 3*652*FLEN/8, x4, x1, x2)

inst_11405:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826f000000000000; valaddr_reg:x3; val_offset:34215*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34215*0 + 3*653*FLEN/8, x4, x1, x2)

inst_11406:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826f800000000000; valaddr_reg:x3; val_offset:34218*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34218*0 + 3*654*FLEN/8, x4, x1, x2)

inst_11407:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fc00000000000; valaddr_reg:x3; val_offset:34221*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34221*0 + 3*655*FLEN/8, x4, x1, x2)

inst_11408:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fe00000000000; valaddr_reg:x3; val_offset:34224*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34224*0 + 3*656*FLEN/8, x4, x1, x2)

inst_11409:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ff00000000000; valaddr_reg:x3; val_offset:34227*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34227*0 + 3*657*FLEN/8, x4, x1, x2)

inst_11410:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ff80000000000; valaddr_reg:x3; val_offset:34230*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34230*0 + 3*658*FLEN/8, x4, x1, x2)

inst_11411:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffc0000000000; valaddr_reg:x3; val_offset:34233*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34233*0 + 3*659*FLEN/8, x4, x1, x2)

inst_11412:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffe0000000000; valaddr_reg:x3; val_offset:34236*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34236*0 + 3*660*FLEN/8, x4, x1, x2)

inst_11413:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fff0000000000; valaddr_reg:x3; val_offset:34239*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34239*0 + 3*661*FLEN/8, x4, x1, x2)

inst_11414:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fff8000000000; valaddr_reg:x3; val_offset:34242*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34242*0 + 3*662*FLEN/8, x4, x1, x2)

inst_11415:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffc000000000; valaddr_reg:x3; val_offset:34245*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34245*0 + 3*663*FLEN/8, x4, x1, x2)

inst_11416:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffe000000000; valaddr_reg:x3; val_offset:34248*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34248*0 + 3*664*FLEN/8, x4, x1, x2)

inst_11417:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffff000000000; valaddr_reg:x3; val_offset:34251*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34251*0 + 3*665*FLEN/8, x4, x1, x2)

inst_11418:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffff800000000; valaddr_reg:x3; val_offset:34254*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34254*0 + 3*666*FLEN/8, x4, x1, x2)

inst_11419:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffc00000000; valaddr_reg:x3; val_offset:34257*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34257*0 + 3*667*FLEN/8, x4, x1, x2)

inst_11420:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffe00000000; valaddr_reg:x3; val_offset:34260*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34260*0 + 3*668*FLEN/8, x4, x1, x2)

inst_11421:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffff00000000; valaddr_reg:x3; val_offset:34263*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34263*0 + 3*669*FLEN/8, x4, x1, x2)

inst_11422:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffff80000000; valaddr_reg:x3; val_offset:34266*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34266*0 + 3*670*FLEN/8, x4, x1, x2)

inst_11423:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffc0000000; valaddr_reg:x3; val_offset:34269*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34269*0 + 3*671*FLEN/8, x4, x1, x2)

inst_11424:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffe0000000; valaddr_reg:x3; val_offset:34272*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34272*0 + 3*672*FLEN/8, x4, x1, x2)

inst_11425:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffff0000000; valaddr_reg:x3; val_offset:34275*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34275*0 + 3*673*FLEN/8, x4, x1, x2)

inst_11426:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffff8000000; valaddr_reg:x3; val_offset:34278*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34278*0 + 3*674*FLEN/8, x4, x1, x2)

inst_11427:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffc000000; valaddr_reg:x3; val_offset:34281*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34281*0 + 3*675*FLEN/8, x4, x1, x2)

inst_11428:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffe000000; valaddr_reg:x3; val_offset:34284*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34284*0 + 3*676*FLEN/8, x4, x1, x2)

inst_11429:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffff000000; valaddr_reg:x3; val_offset:34287*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34287*0 + 3*677*FLEN/8, x4, x1, x2)

inst_11430:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffff800000; valaddr_reg:x3; val_offset:34290*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34290*0 + 3*678*FLEN/8, x4, x1, x2)

inst_11431:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffffc00000; valaddr_reg:x3; val_offset:34293*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34293*0 + 3*679*FLEN/8, x4, x1, x2)

inst_11432:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffffe00000; valaddr_reg:x3; val_offset:34296*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34296*0 + 3*680*FLEN/8, x4, x1, x2)

inst_11433:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffff00000; valaddr_reg:x3; val_offset:34299*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34299*0 + 3*681*FLEN/8, x4, x1, x2)

inst_11434:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffff80000; valaddr_reg:x3; val_offset:34302*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34302*0 + 3*682*FLEN/8, x4, x1, x2)

inst_11435:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffffc0000; valaddr_reg:x3; val_offset:34305*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34305*0 + 3*683*FLEN/8, x4, x1, x2)

inst_11436:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffffe0000; valaddr_reg:x3; val_offset:34308*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34308*0 + 3*684*FLEN/8, x4, x1, x2)

inst_11437:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffffff0000; valaddr_reg:x3; val_offset:34311*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34311*0 + 3*685*FLEN/8, x4, x1, x2)

inst_11438:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffffff8000; valaddr_reg:x3; val_offset:34314*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34314*0 + 3*686*FLEN/8, x4, x1, x2)

inst_11439:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffffffc000; valaddr_reg:x3; val_offset:34317*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34317*0 + 3*687*FLEN/8, x4, x1, x2)

inst_11440:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffffffe000; valaddr_reg:x3; val_offset:34320*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34320*0 + 3*688*FLEN/8, x4, x1, x2)

inst_11441:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffffff000; valaddr_reg:x3; val_offset:34323*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34323*0 + 3*689*FLEN/8, x4, x1, x2)

inst_11442:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffffff800; valaddr_reg:x3; val_offset:34326*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34326*0 + 3*690*FLEN/8, x4, x1, x2)

inst_11443:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffffffc00; valaddr_reg:x3; val_offset:34329*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34329*0 + 3*691*FLEN/8, x4, x1, x2)

inst_11444:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffffffe00; valaddr_reg:x3; val_offset:34332*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34332*0 + 3*692*FLEN/8, x4, x1, x2)

inst_11445:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffffffff00; valaddr_reg:x3; val_offset:34335*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34335*0 + 3*693*FLEN/8, x4, x1, x2)

inst_11446:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffffffff80; valaddr_reg:x3; val_offset:34338*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34338*0 + 3*694*FLEN/8, x4, x1, x2)

inst_11447:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffffffffc0; valaddr_reg:x3; val_offset:34341*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34341*0 + 3*695*FLEN/8, x4, x1, x2)

inst_11448:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffffffffe0; valaddr_reg:x3; val_offset:34344*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34344*0 + 3*696*FLEN/8, x4, x1, x2)

inst_11449:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffffffff0; valaddr_reg:x3; val_offset:34347*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34347*0 + 3*697*FLEN/8, x4, x1, x2)

inst_11450:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffffffff8; valaddr_reg:x3; val_offset:34350*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34350*0 + 3*698*FLEN/8, x4, x1, x2)

inst_11451:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffffffffc; valaddr_reg:x3; val_offset:34353*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34353*0 + 3*699*FLEN/8, x4, x1, x2)

inst_11452:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826ffffffffffffe; valaddr_reg:x3; val_offset:34356*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34356*0 + 3*700*FLEN/8, x4, x1, x2)

inst_11453:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbb68e4e714e57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bb68e4e714e57; op2val:0x8000;
op3val:0x826fffffffffffff; valaddr_reg:x3; val_offset:34359*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34359*0 + 3*701*FLEN/8, x4, x1, x2)

inst_11454:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:34362*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34362*0 + 3*702*FLEN/8, x4, x1, x2)

inst_11455:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:34365*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34365*0 + 3*703*FLEN/8, x4, x1, x2)

inst_11456:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:34368*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34368*0 + 3*704*FLEN/8, x4, x1, x2)

inst_11457:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:34371*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34371*0 + 3*705*FLEN/8, x4, x1, x2)

inst_11458:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:34374*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34374*0 + 3*706*FLEN/8, x4, x1, x2)

inst_11459:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:34377*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34377*0 + 3*707*FLEN/8, x4, x1, x2)

inst_11460:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:34380*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34380*0 + 3*708*FLEN/8, x4, x1, x2)

inst_11461:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:34383*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34383*0 + 3*709*FLEN/8, x4, x1, x2)

inst_11462:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:34386*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34386*0 + 3*710*FLEN/8, x4, x1, x2)

inst_11463:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:34389*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34389*0 + 3*711*FLEN/8, x4, x1, x2)

inst_11464:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:34392*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34392*0 + 3*712*FLEN/8, x4, x1, x2)

inst_11465:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:34395*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34395*0 + 3*713*FLEN/8, x4, x1, x2)

inst_11466:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:34398*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34398*0 + 3*714*FLEN/8, x4, x1, x2)

inst_11467:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:34401*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34401*0 + 3*715*FLEN/8, x4, x1, x2)

inst_11468:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:34404*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34404*0 + 3*716*FLEN/8, x4, x1, x2)

inst_11469:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:34407*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34407*0 + 3*717*FLEN/8, x4, x1, x2)

inst_11470:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:34410*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34410*0 + 3*718*FLEN/8, x4, x1, x2)

inst_11471:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:34413*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34413*0 + 3*719*FLEN/8, x4, x1, x2)

inst_11472:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:34416*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34416*0 + 3*720*FLEN/8, x4, x1, x2)

inst_11473:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:34419*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34419*0 + 3*721*FLEN/8, x4, x1, x2)

inst_11474:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:34422*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34422*0 + 3*722*FLEN/8, x4, x1, x2)

inst_11475:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:34425*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34425*0 + 3*723*FLEN/8, x4, x1, x2)

inst_11476:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000000000000; valaddr_reg:x3; val_offset:34428*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34428*0 + 3*724*FLEN/8, x4, x1, x2)

inst_11477:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000000000001; valaddr_reg:x3; val_offset:34431*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34431*0 + 3*725*FLEN/8, x4, x1, x2)

inst_11478:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000000000003; valaddr_reg:x3; val_offset:34434*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34434*0 + 3*726*FLEN/8, x4, x1, x2)

inst_11479:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000000000007; valaddr_reg:x3; val_offset:34437*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34437*0 + 3*727*FLEN/8, x4, x1, x2)

inst_11480:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000000000000f; valaddr_reg:x3; val_offset:34440*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34440*0 + 3*728*FLEN/8, x4, x1, x2)

inst_11481:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000000000001f; valaddr_reg:x3; val_offset:34443*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34443*0 + 3*729*FLEN/8, x4, x1, x2)

inst_11482:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000000000003f; valaddr_reg:x3; val_offset:34446*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34446*0 + 3*730*FLEN/8, x4, x1, x2)

inst_11483:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000000000007f; valaddr_reg:x3; val_offset:34449*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34449*0 + 3*731*FLEN/8, x4, x1, x2)

inst_11484:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200000000000ff; valaddr_reg:x3; val_offset:34452*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34452*0 + 3*732*FLEN/8, x4, x1, x2)

inst_11485:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200000000001ff; valaddr_reg:x3; val_offset:34455*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34455*0 + 3*733*FLEN/8, x4, x1, x2)

inst_11486:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200000000003ff; valaddr_reg:x3; val_offset:34458*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34458*0 + 3*734*FLEN/8, x4, x1, x2)

inst_11487:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200000000007ff; valaddr_reg:x3; val_offset:34461*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34461*0 + 3*735*FLEN/8, x4, x1, x2)

inst_11488:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000000000fff; valaddr_reg:x3; val_offset:34464*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34464*0 + 3*736*FLEN/8, x4, x1, x2)

inst_11489:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000000001fff; valaddr_reg:x3; val_offset:34467*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34467*0 + 3*737*FLEN/8, x4, x1, x2)

inst_11490:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000000003fff; valaddr_reg:x3; val_offset:34470*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34470*0 + 3*738*FLEN/8, x4, x1, x2)

inst_11491:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000000007fff; valaddr_reg:x3; val_offset:34473*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34473*0 + 3*739*FLEN/8, x4, x1, x2)

inst_11492:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000000000ffff; valaddr_reg:x3; val_offset:34476*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34476*0 + 3*740*FLEN/8, x4, x1, x2)

inst_11493:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000000001ffff; valaddr_reg:x3; val_offset:34479*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34479*0 + 3*741*FLEN/8, x4, x1, x2)

inst_11494:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000000003ffff; valaddr_reg:x3; val_offset:34482*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34482*0 + 3*742*FLEN/8, x4, x1, x2)

inst_11495:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000000007ffff; valaddr_reg:x3; val_offset:34485*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34485*0 + 3*743*FLEN/8, x4, x1, x2)

inst_11496:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200000000fffff; valaddr_reg:x3; val_offset:34488*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34488*0 + 3*744*FLEN/8, x4, x1, x2)

inst_11497:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200000001fffff; valaddr_reg:x3; val_offset:34491*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34491*0 + 3*745*FLEN/8, x4, x1, x2)

inst_11498:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200000003fffff; valaddr_reg:x3; val_offset:34494*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34494*0 + 3*746*FLEN/8, x4, x1, x2)

inst_11499:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200000007fffff; valaddr_reg:x3; val_offset:34497*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34497*0 + 3*747*FLEN/8, x4, x1, x2)

inst_11500:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000000ffffff; valaddr_reg:x3; val_offset:34500*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34500*0 + 3*748*FLEN/8, x4, x1, x2)

inst_11501:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000001ffffff; valaddr_reg:x3; val_offset:34503*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34503*0 + 3*749*FLEN/8, x4, x1, x2)

inst_11502:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000003ffffff; valaddr_reg:x3; val_offset:34506*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34506*0 + 3*750*FLEN/8, x4, x1, x2)

inst_11503:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000007ffffff; valaddr_reg:x3; val_offset:34509*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34509*0 + 3*751*FLEN/8, x4, x1, x2)

inst_11504:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000000fffffff; valaddr_reg:x3; val_offset:34512*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34512*0 + 3*752*FLEN/8, x4, x1, x2)

inst_11505:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000001fffffff; valaddr_reg:x3; val_offset:34515*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34515*0 + 3*753*FLEN/8, x4, x1, x2)

inst_11506:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000003fffffff; valaddr_reg:x3; val_offset:34518*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34518*0 + 3*754*FLEN/8, x4, x1, x2)

inst_11507:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000007fffffff; valaddr_reg:x3; val_offset:34521*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34521*0 + 3*755*FLEN/8, x4, x1, x2)

inst_11508:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200000ffffffff; valaddr_reg:x3; val_offset:34524*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34524*0 + 3*756*FLEN/8, x4, x1, x2)

inst_11509:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200001ffffffff; valaddr_reg:x3; val_offset:34527*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34527*0 + 3*757*FLEN/8, x4, x1, x2)

inst_11510:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200003ffffffff; valaddr_reg:x3; val_offset:34530*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34530*0 + 3*758*FLEN/8, x4, x1, x2)

inst_11511:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x82200007ffffffff; valaddr_reg:x3; val_offset:34533*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34533*0 + 3*759*FLEN/8, x4, x1, x2)

inst_11512:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220000fffffffff; valaddr_reg:x3; val_offset:34536*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34536*0 + 3*760*FLEN/8, x4, x1, x2)

inst_11513:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220001fffffffff; valaddr_reg:x3; val_offset:34539*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34539*0 + 3*761*FLEN/8, x4, x1, x2)

inst_11514:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220003fffffffff; valaddr_reg:x3; val_offset:34542*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34542*0 + 3*762*FLEN/8, x4, x1, x2)

inst_11515:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x8220007fffffffff; valaddr_reg:x3; val_offset:34545*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34545*0 + 3*763*FLEN/8, x4, x1, x2)

inst_11516:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822000ffffffffff; valaddr_reg:x3; val_offset:34548*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34548*0 + 3*764*FLEN/8, x4, x1, x2)

inst_11517:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822001ffffffffff; valaddr_reg:x3; val_offset:34551*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34551*0 + 3*765*FLEN/8, x4, x1, x2)

inst_11518:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822003ffffffffff; valaddr_reg:x3; val_offset:34554*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34554*0 + 3*766*FLEN/8, x4, x1, x2)

inst_11519:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc61519dbd4ccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c61519dbd4ccf; op2val:0x8000;
op3val:0x822007ffffffffff; valaddr_reg:x3; val_offset:34557*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34557*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868029129957834752,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868310604934545408,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868451342422900736,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868521711167078400,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868556895539167232,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868574487725211648,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868583283818233856,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868587681864744960,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868589880888000512,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868590980399628288,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868591530155442176,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868591805033349120,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868591942472302592,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592011191779328,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592045551517696,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592062731386880,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592071321321472,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592075616288768,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592077763772416,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592078837514240,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079374385152,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079642820608,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079777038336,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079844147200,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079877701632,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079894478848,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079902867456,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079907061760,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079909158912,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079910207488,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079910731776,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079910993920,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911124992,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911190528,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911223296,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911239680,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911247872,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911251968,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911254016,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911255040,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911255552,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911255808,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911255936,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911256000,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911256032,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911256048,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911256056,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911256060,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911256062,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(3868592079911256063,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6879846444350981911,64,FLEN)
NAN_BOXED(2333877468794741888,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078848,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078849,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078851,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078855,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078863,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078879,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078911,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078975,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079103,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079359,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079871,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840080895,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840082943,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840087039,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840095231,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840111615,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840144383,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840209919,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840340991,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840603135,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785841127423,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785842175999,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785844273151,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785848467455,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785856856063,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785873633279,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785907187711,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785974296575,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786108514303,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786376949759,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786913820671,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136787987562495,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136790135046143,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136794430013439,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136803019948031,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136820199817215,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136854559555583,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136923279032319,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137060717985791,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137335595892735,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137885351706623,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171138984863334399,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171141183886589951,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171145581933101055,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171154378026123263,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171171970212167679,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171207154584256511,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171277523328434175,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171418260816789503,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171699735793500159,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(172262685746921471,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764095,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764096,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(174514485560606720,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175077435514028032,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175358910490738688,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175499647979094016,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175570016723271680,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175605201095360512,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175622793281404928,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175631589374427136,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175635987420938240,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175638186444193792,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639285955821568,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639835711635456,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640110589542400,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640248028495872,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640316747972608,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640351107710976,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640368287580160,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640376877514752,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640381172482048,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640383319965696,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384393707520,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384930578432,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385199013888,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385333231616,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385400340480,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385433894912,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385450672128,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385459060736,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385463255040,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385465352192,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466400768,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466925056,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467187200,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467318272,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467383808,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467416576,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467432960,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467441152,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467445248,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467447296,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448320,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448832,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449088,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449216,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449280,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449312,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449328,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449336,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449340,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449342,64,FLEN)
NAN_BOXED(6879985753766153343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449343,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154304,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154305,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154307,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154311,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154319,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154335,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154367,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154431,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154559,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154815,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741155327,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741156351,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741158399,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741162495,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741170687,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741187071,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741219839,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741285375,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741416447,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741678591,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381742202879,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381743251455,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381745348607,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381749542911,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381757931519,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381774708735,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381808263167,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381875372031,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382009589759,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382278025215,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382814896127,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676383888637951,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676386036121599,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676390331088895,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676398921023487,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676416100892671,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676450460631039,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676519180107775,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676656619061247,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676931496968191,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220677481252782079,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220678580764409855,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220680779787665407,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220685177834176511,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220693973927198719,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220711566113243135,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220746750485331967,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220817119229509631,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220957856717864959,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221239331694575615,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221802281647996927,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839551,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839552,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224054081461682176,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224617031415103488,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224898506391814144,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225039243880169472,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225109612624347136,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225144796996435968,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225162389182480384,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225171185275502592,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225175583322013696,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225177782345269248,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225178881856897024,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179431612710912,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179706490617856,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179843929571328,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179912649048064,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179947008786432,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179964188655616,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179972778590208,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179977073557504,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179979221041152,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980294782976,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980831653888,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981100089344,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981234307072,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981301415936,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981334970368,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981351747584,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981360136192,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981364330496,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981366427648,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981367476224,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368000512,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368262656,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368393728,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368459264,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368492032,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368508416,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368516608,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368520704,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368522752,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368523776,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524288,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524544,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524672,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524736,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524768,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524784,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524792,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524796,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524798,64,FLEN)
NAN_BOXED(6880006430984345335,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524799,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559616,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559617,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559619,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559623,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559631,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559647,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559679,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559743,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559871,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968560127,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968560639,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968561663,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968563711,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968567807,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968575999,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968592383,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968625151,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968690687,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968821759,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818969083903,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818969608191,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818970656767,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818972753919,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818976948223,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818985336831,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819002114047,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819035668479,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819102777343,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819236995071,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819505430527,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544820042301439,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544821116043263,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544823263526911,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544827558494207,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544836148428799,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544853328297983,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544887688036351,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544956407513087,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545093846466559,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545368724373503,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545918480187391,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439547017991815167,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439549217015070719,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439553615061581823,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439562411154604031,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439580003340648447,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439615187712737279,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439685556456914943,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439826293945270271,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9440107768921980927,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9440670718875402239,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9441796618782244863,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9441796618782244864,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9442922518689087488,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443485468642508800,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443766943619219456,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443907681107574784,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443978049851752448,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444013234223841280,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444030826409885696,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444039622502907904,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444044020549419008,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444046219572674560,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444047319084302336,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444047868840116224,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048143718023168,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048281156976640,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048349876453376,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048384236191744,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048401416060928,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048410005995520,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048414300962816,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048416448446464,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048417522188288,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418059059200,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418327494656,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418461712384,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418528821248,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418562375680,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418579152896,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418587541504,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418591735808,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418593832960,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418594881536,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595405824,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595667968,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595799040,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595864576,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595897344,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595913728,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595921920,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595926016,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595928064,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929088,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929600,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929856,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929984,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930048,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930080,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930096,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930104,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930108,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930110,64,FLEN)
NAN_BOXED(6880128252533666343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930111,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703744,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703745,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703747,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703751,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703759,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703775,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703807,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703871,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703999,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892704255,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892704767,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892705791,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892707839,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892711935,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892720127,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892736511,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892769279,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892834815,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892965887,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630893228031,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630893752319,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630894800895,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630896898047,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630901092351,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630909480959,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630926258175,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630959812607,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631026921471,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631161139199,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631429574655,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631966445567,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429633040187391,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429635187671039,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429639482638335,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429648072572927,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429665252442111,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429699612180479,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429768331657215,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429905770610687,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295430180648517631,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295430730404331519,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295431829915959295,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295434028939214847,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295438426985725951,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295447223078748159,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295464815264792575,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295499999636881407,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295570368381059071,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295711105869414399,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295992580846125055,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9296555530799546367,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9297681430706388991,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9297681430706388992,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9298807330613231616,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299370280566652928,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299651755543363584,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299792493031718912,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299862861775896576,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299898046147985408,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299915638334029824,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299924434427052032,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299928832473563136,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299931031496818688,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932131008446464,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932680764260352,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932955642167296,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933093081120768,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933161800597504,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933196160335872,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933213340205056,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933221930139648,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933226225106944,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933228372590592,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933229446332416,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933229983203328,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230251638784,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230385856512,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230452965376,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230486519808,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230503297024,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230511685632,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230515879936,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230517977088,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519025664,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519549952,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519812096,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519943168,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520008704,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520041472,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520057856,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520066048,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520070144,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520072192,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073216,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073728,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073984,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074112,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074176,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074208,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074224,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074232,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074236,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074238,64,FLEN)
NAN_BOXED(6880142443851897423,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074239,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854656,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854657,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854659,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854663,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854671,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854687,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854719,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854783,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854911,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694855167,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694855679,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694856703,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694858751,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694862847,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694871039,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694887423,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694920191,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694985727,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695116799,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695378943,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695903231,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822696951807,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822699048959,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822703243263,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822711631871,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822728409087,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822761963519,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822829072383,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822963290111,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508823231725567,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508823768596479,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508824842338303,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508826989821951,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508831284789247,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508839874723839,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508857054593023,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508891414331391,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508960133808127,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509097572761599,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509372450668543,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509922206482431,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394511021718110207,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394513220741365759,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394517618787876863,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394526414880899071,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394544007066943487,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394579191439032319,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394649560183209983,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394790297671565311,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9395071772648275967,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9395634722601697279,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9396760622508539903,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9396760622508539904,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9397886522415382528,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398449472368803840,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398730947345514496,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398871684833869824,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398942053578047488,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398977237950136320,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398994830136180736,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399003626229202944,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399008024275714048,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399010223298969600,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399011322810597376,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399011872566411264,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012147444318208,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012284883271680,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012353602748416,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012387962486784,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012405142355968,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012413732290560,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012418027257856,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012420174741504,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012421248483328,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012421785354240,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422053789696,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422188007424,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422255116288,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422288670720,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422305447936,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422313836544,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422318030848,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422320128000,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321176576,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321700864,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321963008,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322094080,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322159616,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322192384,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322208768,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322216960,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322221056,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322223104,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224128,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224640,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224896,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225024,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225088,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225120,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225136,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225144,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225148,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225150,64,FLEN)
NAN_BOXED(6880293578056224343,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225151,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372672,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372673,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372675,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372679,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372687,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372703,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372735,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372799,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372927,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185373183,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185373695,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185374719,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185376767,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185380863,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185389055,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185405439,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185438207,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185503743,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185634815,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185896959,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424186421247,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424187469823,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424189566975,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424193761279,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424202149887,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424218927103,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424252481535,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424319590399,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424453808127,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424722243583,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494425259114495,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494426332856319,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494428480339967,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494432775307263,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494441365241855,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494458545111039,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494492904849407,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494561624326143,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494699063279615,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494973941186559,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376495523697000447,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376496623208628223,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376498822231883775,64,FLEN)
NAN_BOXED(6880481333881949391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376503220278394879,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
