
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_13824:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffff800000; valaddr_reg:x3; val_offset:41472*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41472*0 + 3*0*FLEN/8, x4, x1, x2)

inst_13825:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffffc00000; valaddr_reg:x3; val_offset:41475*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41475*0 + 3*1*FLEN/8, x4, x1, x2)

inst_13826:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffffe00000; valaddr_reg:x3; val_offset:41478*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41478*0 + 3*2*FLEN/8, x4, x1, x2)

inst_13827:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffff00000; valaddr_reg:x3; val_offset:41481*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41481*0 + 3*3*FLEN/8, x4, x1, x2)

inst_13828:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffff80000; valaddr_reg:x3; val_offset:41484*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41484*0 + 3*4*FLEN/8, x4, x1, x2)

inst_13829:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffffc0000; valaddr_reg:x3; val_offset:41487*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41487*0 + 3*5*FLEN/8, x4, x1, x2)

inst_13830:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffffe0000; valaddr_reg:x3; val_offset:41490*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41490*0 + 3*6*FLEN/8, x4, x1, x2)

inst_13831:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffffff0000; valaddr_reg:x3; val_offset:41493*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41493*0 + 3*7*FLEN/8, x4, x1, x2)

inst_13832:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffffff8000; valaddr_reg:x3; val_offset:41496*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41496*0 + 3*8*FLEN/8, x4, x1, x2)

inst_13833:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffffffc000; valaddr_reg:x3; val_offset:41499*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41499*0 + 3*9*FLEN/8, x4, x1, x2)

inst_13834:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffffffe000; valaddr_reg:x3; val_offset:41502*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41502*0 + 3*10*FLEN/8, x4, x1, x2)

inst_13835:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffffff000; valaddr_reg:x3; val_offset:41505*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41505*0 + 3*11*FLEN/8, x4, x1, x2)

inst_13836:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffffff800; valaddr_reg:x3; val_offset:41508*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41508*0 + 3*12*FLEN/8, x4, x1, x2)

inst_13837:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffffffc00; valaddr_reg:x3; val_offset:41511*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41511*0 + 3*13*FLEN/8, x4, x1, x2)

inst_13838:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffffffe00; valaddr_reg:x3; val_offset:41514*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41514*0 + 3*14*FLEN/8, x4, x1, x2)

inst_13839:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffffffff00; valaddr_reg:x3; val_offset:41517*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41517*0 + 3*15*FLEN/8, x4, x1, x2)

inst_13840:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffffffff80; valaddr_reg:x3; val_offset:41520*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41520*0 + 3*16*FLEN/8, x4, x1, x2)

inst_13841:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffffffffc0; valaddr_reg:x3; val_offset:41523*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41523*0 + 3*17*FLEN/8, x4, x1, x2)

inst_13842:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffffffffe0; valaddr_reg:x3; val_offset:41526*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41526*0 + 3*18*FLEN/8, x4, x1, x2)

inst_13843:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffffffff0; valaddr_reg:x3; val_offset:41529*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41529*0 + 3*19*FLEN/8, x4, x1, x2)

inst_13844:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffffffff8; valaddr_reg:x3; val_offset:41532*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41532*0 + 3*20*FLEN/8, x4, x1, x2)

inst_13845:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffffffffc; valaddr_reg:x3; val_offset:41535*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41535*0 + 3*21*FLEN/8, x4, x1, x2)

inst_13846:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6ffffffffffffe; valaddr_reg:x3; val_offset:41538*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41538*0 + 3*22*FLEN/8, x4, x1, x2)

inst_13847:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1224d7ebf74ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81224d7ebf74ff; op2val:0x0;
op3val:0x6fffffffffffff; valaddr_reg:x3; val_offset:41541*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41541*0 + 3*23*FLEN/8, x4, x1, x2)

inst_13848:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000000000000; valaddr_reg:x3; val_offset:41544*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41544*0 + 3*24*FLEN/8, x4, x1, x2)

inst_13849:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000000000001; valaddr_reg:x3; val_offset:41547*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41547*0 + 3*25*FLEN/8, x4, x1, x2)

inst_13850:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000000000003; valaddr_reg:x3; val_offset:41550*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41550*0 + 3*26*FLEN/8, x4, x1, x2)

inst_13851:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000000000007; valaddr_reg:x3; val_offset:41553*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41553*0 + 3*27*FLEN/8, x4, x1, x2)

inst_13852:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000000000000f; valaddr_reg:x3; val_offset:41556*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41556*0 + 3*28*FLEN/8, x4, x1, x2)

inst_13853:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000000000001f; valaddr_reg:x3; val_offset:41559*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41559*0 + 3*29*FLEN/8, x4, x1, x2)

inst_13854:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000000000003f; valaddr_reg:x3; val_offset:41562*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41562*0 + 3*30*FLEN/8, x4, x1, x2)

inst_13855:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000000000007f; valaddr_reg:x3; val_offset:41565*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41565*0 + 3*31*FLEN/8, x4, x1, x2)

inst_13856:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600000000000ff; valaddr_reg:x3; val_offset:41568*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41568*0 + 3*32*FLEN/8, x4, x1, x2)

inst_13857:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600000000001ff; valaddr_reg:x3; val_offset:41571*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41571*0 + 3*33*FLEN/8, x4, x1, x2)

inst_13858:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600000000003ff; valaddr_reg:x3; val_offset:41574*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41574*0 + 3*34*FLEN/8, x4, x1, x2)

inst_13859:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600000000007ff; valaddr_reg:x3; val_offset:41577*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41577*0 + 3*35*FLEN/8, x4, x1, x2)

inst_13860:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000000000fff; valaddr_reg:x3; val_offset:41580*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41580*0 + 3*36*FLEN/8, x4, x1, x2)

inst_13861:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000000001fff; valaddr_reg:x3; val_offset:41583*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41583*0 + 3*37*FLEN/8, x4, x1, x2)

inst_13862:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000000003fff; valaddr_reg:x3; val_offset:41586*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41586*0 + 3*38*FLEN/8, x4, x1, x2)

inst_13863:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000000007fff; valaddr_reg:x3; val_offset:41589*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41589*0 + 3*39*FLEN/8, x4, x1, x2)

inst_13864:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000000000ffff; valaddr_reg:x3; val_offset:41592*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41592*0 + 3*40*FLEN/8, x4, x1, x2)

inst_13865:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000000001ffff; valaddr_reg:x3; val_offset:41595*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41595*0 + 3*41*FLEN/8, x4, x1, x2)

inst_13866:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000000003ffff; valaddr_reg:x3; val_offset:41598*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41598*0 + 3*42*FLEN/8, x4, x1, x2)

inst_13867:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000000007ffff; valaddr_reg:x3; val_offset:41601*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41601*0 + 3*43*FLEN/8, x4, x1, x2)

inst_13868:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600000000fffff; valaddr_reg:x3; val_offset:41604*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41604*0 + 3*44*FLEN/8, x4, x1, x2)

inst_13869:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600000001fffff; valaddr_reg:x3; val_offset:41607*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41607*0 + 3*45*FLEN/8, x4, x1, x2)

inst_13870:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600000003fffff; valaddr_reg:x3; val_offset:41610*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41610*0 + 3*46*FLEN/8, x4, x1, x2)

inst_13871:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600000007fffff; valaddr_reg:x3; val_offset:41613*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41613*0 + 3*47*FLEN/8, x4, x1, x2)

inst_13872:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000000ffffff; valaddr_reg:x3; val_offset:41616*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41616*0 + 3*48*FLEN/8, x4, x1, x2)

inst_13873:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000001ffffff; valaddr_reg:x3; val_offset:41619*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41619*0 + 3*49*FLEN/8, x4, x1, x2)

inst_13874:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000003ffffff; valaddr_reg:x3; val_offset:41622*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41622*0 + 3*50*FLEN/8, x4, x1, x2)

inst_13875:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000007ffffff; valaddr_reg:x3; val_offset:41625*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41625*0 + 3*51*FLEN/8, x4, x1, x2)

inst_13876:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000000fffffff; valaddr_reg:x3; val_offset:41628*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41628*0 + 3*52*FLEN/8, x4, x1, x2)

inst_13877:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000001fffffff; valaddr_reg:x3; val_offset:41631*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41631*0 + 3*53*FLEN/8, x4, x1, x2)

inst_13878:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000003fffffff; valaddr_reg:x3; val_offset:41634*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41634*0 + 3*54*FLEN/8, x4, x1, x2)

inst_13879:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000007fffffff; valaddr_reg:x3; val_offset:41637*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41637*0 + 3*55*FLEN/8, x4, x1, x2)

inst_13880:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600000ffffffff; valaddr_reg:x3; val_offset:41640*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41640*0 + 3*56*FLEN/8, x4, x1, x2)

inst_13881:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600001ffffffff; valaddr_reg:x3; val_offset:41643*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41643*0 + 3*57*FLEN/8, x4, x1, x2)

inst_13882:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600003ffffffff; valaddr_reg:x3; val_offset:41646*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41646*0 + 3*58*FLEN/8, x4, x1, x2)

inst_13883:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600007ffffffff; valaddr_reg:x3; val_offset:41649*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41649*0 + 3*59*FLEN/8, x4, x1, x2)

inst_13884:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60000fffffffff; valaddr_reg:x3; val_offset:41652*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41652*0 + 3*60*FLEN/8, x4, x1, x2)

inst_13885:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60001fffffffff; valaddr_reg:x3; val_offset:41655*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41655*0 + 3*61*FLEN/8, x4, x1, x2)

inst_13886:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60003fffffffff; valaddr_reg:x3; val_offset:41658*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41658*0 + 3*62*FLEN/8, x4, x1, x2)

inst_13887:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60007fffffffff; valaddr_reg:x3; val_offset:41661*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41661*0 + 3*63*FLEN/8, x4, x1, x2)

inst_13888:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6000ffffffffff; valaddr_reg:x3; val_offset:41664*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41664*0 + 3*64*FLEN/8, x4, x1, x2)

inst_13889:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6001ffffffffff; valaddr_reg:x3; val_offset:41667*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41667*0 + 3*65*FLEN/8, x4, x1, x2)

inst_13890:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6003ffffffffff; valaddr_reg:x3; val_offset:41670*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41670*0 + 3*66*FLEN/8, x4, x1, x2)

inst_13891:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6007ffffffffff; valaddr_reg:x3; val_offset:41673*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41673*0 + 3*67*FLEN/8, x4, x1, x2)

inst_13892:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd600fffffffffff; valaddr_reg:x3; val_offset:41676*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41676*0 + 3*68*FLEN/8, x4, x1, x2)

inst_13893:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd601fffffffffff; valaddr_reg:x3; val_offset:41679*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41679*0 + 3*69*FLEN/8, x4, x1, x2)

inst_13894:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd603fffffffffff; valaddr_reg:x3; val_offset:41682*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41682*0 + 3*70*FLEN/8, x4, x1, x2)

inst_13895:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd607fffffffffff; valaddr_reg:x3; val_offset:41685*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41685*0 + 3*71*FLEN/8, x4, x1, x2)

inst_13896:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd60ffffffffffff; valaddr_reg:x3; val_offset:41688*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41688*0 + 3*72*FLEN/8, x4, x1, x2)

inst_13897:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd61ffffffffffff; valaddr_reg:x3; val_offset:41691*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41691*0 + 3*73*FLEN/8, x4, x1, x2)

inst_13898:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd63ffffffffffff; valaddr_reg:x3; val_offset:41694*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41694*0 + 3*74*FLEN/8, x4, x1, x2)

inst_13899:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd67ffffffffffff; valaddr_reg:x3; val_offset:41697*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41697*0 + 3*75*FLEN/8, x4, x1, x2)

inst_13900:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd68000000000000; valaddr_reg:x3; val_offset:41700*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41700*0 + 3*76*FLEN/8, x4, x1, x2)

inst_13901:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6c000000000000; valaddr_reg:x3; val_offset:41703*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41703*0 + 3*77*FLEN/8, x4, x1, x2)

inst_13902:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6e000000000000; valaddr_reg:x3; val_offset:41706*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41706*0 + 3*78*FLEN/8, x4, x1, x2)

inst_13903:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6f000000000000; valaddr_reg:x3; val_offset:41709*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41709*0 + 3*79*FLEN/8, x4, x1, x2)

inst_13904:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6f800000000000; valaddr_reg:x3; val_offset:41712*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41712*0 + 3*80*FLEN/8, x4, x1, x2)

inst_13905:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fc00000000000; valaddr_reg:x3; val_offset:41715*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41715*0 + 3*81*FLEN/8, x4, x1, x2)

inst_13906:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fe00000000000; valaddr_reg:x3; val_offset:41718*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41718*0 + 3*82*FLEN/8, x4, x1, x2)

inst_13907:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ff00000000000; valaddr_reg:x3; val_offset:41721*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41721*0 + 3*83*FLEN/8, x4, x1, x2)

inst_13908:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ff80000000000; valaddr_reg:x3; val_offset:41724*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41724*0 + 3*84*FLEN/8, x4, x1, x2)

inst_13909:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffc0000000000; valaddr_reg:x3; val_offset:41727*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41727*0 + 3*85*FLEN/8, x4, x1, x2)

inst_13910:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffe0000000000; valaddr_reg:x3; val_offset:41730*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41730*0 + 3*86*FLEN/8, x4, x1, x2)

inst_13911:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fff0000000000; valaddr_reg:x3; val_offset:41733*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41733*0 + 3*87*FLEN/8, x4, x1, x2)

inst_13912:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fff8000000000; valaddr_reg:x3; val_offset:41736*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41736*0 + 3*88*FLEN/8, x4, x1, x2)

inst_13913:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffc000000000; valaddr_reg:x3; val_offset:41739*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41739*0 + 3*89*FLEN/8, x4, x1, x2)

inst_13914:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffe000000000; valaddr_reg:x3; val_offset:41742*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41742*0 + 3*90*FLEN/8, x4, x1, x2)

inst_13915:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffff000000000; valaddr_reg:x3; val_offset:41745*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41745*0 + 3*91*FLEN/8, x4, x1, x2)

inst_13916:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffff800000000; valaddr_reg:x3; val_offset:41748*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41748*0 + 3*92*FLEN/8, x4, x1, x2)

inst_13917:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffc00000000; valaddr_reg:x3; val_offset:41751*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41751*0 + 3*93*FLEN/8, x4, x1, x2)

inst_13918:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffe00000000; valaddr_reg:x3; val_offset:41754*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41754*0 + 3*94*FLEN/8, x4, x1, x2)

inst_13919:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffff00000000; valaddr_reg:x3; val_offset:41757*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41757*0 + 3*95*FLEN/8, x4, x1, x2)

inst_13920:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffff80000000; valaddr_reg:x3; val_offset:41760*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41760*0 + 3*96*FLEN/8, x4, x1, x2)

inst_13921:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffc0000000; valaddr_reg:x3; val_offset:41763*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41763*0 + 3*97*FLEN/8, x4, x1, x2)

inst_13922:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffe0000000; valaddr_reg:x3; val_offset:41766*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41766*0 + 3*98*FLEN/8, x4, x1, x2)

inst_13923:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffff0000000; valaddr_reg:x3; val_offset:41769*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41769*0 + 3*99*FLEN/8, x4, x1, x2)

inst_13924:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffff8000000; valaddr_reg:x3; val_offset:41772*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41772*0 + 3*100*FLEN/8, x4, x1, x2)

inst_13925:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffc000000; valaddr_reg:x3; val_offset:41775*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41775*0 + 3*101*FLEN/8, x4, x1, x2)

inst_13926:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffe000000; valaddr_reg:x3; val_offset:41778*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41778*0 + 3*102*FLEN/8, x4, x1, x2)

inst_13927:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffff000000; valaddr_reg:x3; val_offset:41781*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41781*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13928:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffff800000; valaddr_reg:x3; val_offset:41784*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41784*0 + 3*104*FLEN/8, x4, x1, x2)

inst_13929:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffffc00000; valaddr_reg:x3; val_offset:41787*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41787*0 + 3*105*FLEN/8, x4, x1, x2)

inst_13930:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffffe00000; valaddr_reg:x3; val_offset:41790*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41790*0 + 3*106*FLEN/8, x4, x1, x2)

inst_13931:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffff00000; valaddr_reg:x3; val_offset:41793*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41793*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13932:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffff80000; valaddr_reg:x3; val_offset:41796*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41796*0 + 3*108*FLEN/8, x4, x1, x2)

inst_13933:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffffc0000; valaddr_reg:x3; val_offset:41799*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41799*0 + 3*109*FLEN/8, x4, x1, x2)

inst_13934:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffffe0000; valaddr_reg:x3; val_offset:41802*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41802*0 + 3*110*FLEN/8, x4, x1, x2)

inst_13935:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffffff0000; valaddr_reg:x3; val_offset:41805*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41805*0 + 3*111*FLEN/8, x4, x1, x2)

inst_13936:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffffff8000; valaddr_reg:x3; val_offset:41808*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41808*0 + 3*112*FLEN/8, x4, x1, x2)

inst_13937:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffffffc000; valaddr_reg:x3; val_offset:41811*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41811*0 + 3*113*FLEN/8, x4, x1, x2)

inst_13938:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffffffe000; valaddr_reg:x3; val_offset:41814*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41814*0 + 3*114*FLEN/8, x4, x1, x2)

inst_13939:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffffff000; valaddr_reg:x3; val_offset:41817*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41817*0 + 3*115*FLEN/8, x4, x1, x2)

inst_13940:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffffff800; valaddr_reg:x3; val_offset:41820*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41820*0 + 3*116*FLEN/8, x4, x1, x2)

inst_13941:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffffffc00; valaddr_reg:x3; val_offset:41823*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41823*0 + 3*117*FLEN/8, x4, x1, x2)

inst_13942:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffffffe00; valaddr_reg:x3; val_offset:41826*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41826*0 + 3*118*FLEN/8, x4, x1, x2)

inst_13943:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffffffff00; valaddr_reg:x3; val_offset:41829*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41829*0 + 3*119*FLEN/8, x4, x1, x2)

inst_13944:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffffffff80; valaddr_reg:x3; val_offset:41832*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41832*0 + 3*120*FLEN/8, x4, x1, x2)

inst_13945:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffffffffc0; valaddr_reg:x3; val_offset:41835*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41835*0 + 3*121*FLEN/8, x4, x1, x2)

inst_13946:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffffffffe0; valaddr_reg:x3; val_offset:41838*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41838*0 + 3*122*FLEN/8, x4, x1, x2)

inst_13947:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffffffff0; valaddr_reg:x3; val_offset:41841*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41841*0 + 3*123*FLEN/8, x4, x1, x2)

inst_13948:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffffffff8; valaddr_reg:x3; val_offset:41844*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41844*0 + 3*124*FLEN/8, x4, x1, x2)

inst_13949:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffffffffc; valaddr_reg:x3; val_offset:41847*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41847*0 + 3*125*FLEN/8, x4, x1, x2)

inst_13950:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6ffffffffffffe; valaddr_reg:x3; val_offset:41850*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41850*0 + 3*126*FLEN/8, x4, x1, x2)

inst_13951:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3d6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbd6fffffffffffff; valaddr_reg:x3; val_offset:41853*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41853*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_13952:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:41856*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41856*0 + 3*128*FLEN/8, x4, x1, x2)

inst_13953:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:41859*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41859*0 + 3*129*FLEN/8, x4, x1, x2)

inst_13954:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:41862*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41862*0 + 3*130*FLEN/8, x4, x1, x2)

inst_13955:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:41865*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41865*0 + 3*131*FLEN/8, x4, x1, x2)

inst_13956:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:41868*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41868*0 + 3*132*FLEN/8, x4, x1, x2)

inst_13957:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:41871*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41871*0 + 3*133*FLEN/8, x4, x1, x2)

inst_13958:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:41874*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41874*0 + 3*134*FLEN/8, x4, x1, x2)

inst_13959:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:41877*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41877*0 + 3*135*FLEN/8, x4, x1, x2)

inst_13960:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:41880*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41880*0 + 3*136*FLEN/8, x4, x1, x2)

inst_13961:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:41883*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41883*0 + 3*137*FLEN/8, x4, x1, x2)

inst_13962:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:41886*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41886*0 + 3*138*FLEN/8, x4, x1, x2)

inst_13963:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:41889*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41889*0 + 3*139*FLEN/8, x4, x1, x2)

inst_13964:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:41892*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41892*0 + 3*140*FLEN/8, x4, x1, x2)

inst_13965:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:41895*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41895*0 + 3*141*FLEN/8, x4, x1, x2)

inst_13966:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:41898*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41898*0 + 3*142*FLEN/8, x4, x1, x2)

inst_13967:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:41901*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41901*0 + 3*143*FLEN/8, x4, x1, x2)

inst_13968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:41904*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41904*0 + 3*144*FLEN/8, x4, x1, x2)

inst_13969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:41907*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41907*0 + 3*145*FLEN/8, x4, x1, x2)

inst_13970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:41910*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41910*0 + 3*146*FLEN/8, x4, x1, x2)

inst_13971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:41913*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41913*0 + 3*147*FLEN/8, x4, x1, x2)

inst_13972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:41916*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41916*0 + 3*148*FLEN/8, x4, x1, x2)

inst_13973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1436db0dd8267 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xda87b70713d42 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81436db0dd8267; op2val:0x9feda87b70713d42;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:41919*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41919*0 + 3*149*FLEN/8, x4, x1, x2)

inst_13974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:41922*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41922*0 + 3*150*FLEN/8, x4, x1, x2)

inst_13975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:41925*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41925*0 + 3*151*FLEN/8, x4, x1, x2)

inst_13976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:41928*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41928*0 + 3*152*FLEN/8, x4, x1, x2)

inst_13977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:41931*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41931*0 + 3*153*FLEN/8, x4, x1, x2)

inst_13978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:41934*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41934*0 + 3*154*FLEN/8, x4, x1, x2)

inst_13979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:41937*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41937*0 + 3*155*FLEN/8, x4, x1, x2)

inst_13980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:41940*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41940*0 + 3*156*FLEN/8, x4, x1, x2)

inst_13981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:41943*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41943*0 + 3*157*FLEN/8, x4, x1, x2)

inst_13982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:41946*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41946*0 + 3*158*FLEN/8, x4, x1, x2)

inst_13983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:41949*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41949*0 + 3*159*FLEN/8, x4, x1, x2)

inst_13984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:41952*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41952*0 + 3*160*FLEN/8, x4, x1, x2)

inst_13985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:41955*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41955*0 + 3*161*FLEN/8, x4, x1, x2)

inst_13986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:41958*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41958*0 + 3*162*FLEN/8, x4, x1, x2)

inst_13987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:41961*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41961*0 + 3*163*FLEN/8, x4, x1, x2)

inst_13988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:41964*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41964*0 + 3*164*FLEN/8, x4, x1, x2)

inst_13989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:41967*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41967*0 + 3*165*FLEN/8, x4, x1, x2)

inst_13990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:41970*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41970*0 + 3*166*FLEN/8, x4, x1, x2)

inst_13991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:41973*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41973*0 + 3*167*FLEN/8, x4, x1, x2)

inst_13992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:41976*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41976*0 + 3*168*FLEN/8, x4, x1, x2)

inst_13993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:41979*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41979*0 + 3*169*FLEN/8, x4, x1, x2)

inst_13994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:41982*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41982*0 + 3*170*FLEN/8, x4, x1, x2)

inst_13995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:41985*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41985*0 + 3*171*FLEN/8, x4, x1, x2)

inst_13996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000000000000; valaddr_reg:x3; val_offset:41988*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41988*0 + 3*172*FLEN/8, x4, x1, x2)

inst_13997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000000000001; valaddr_reg:x3; val_offset:41991*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41991*0 + 3*173*FLEN/8, x4, x1, x2)

inst_13998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000000000003; valaddr_reg:x3; val_offset:41994*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41994*0 + 3*174*FLEN/8, x4, x1, x2)

inst_13999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000000000007; valaddr_reg:x3; val_offset:41997*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41997*0 + 3*175*FLEN/8, x4, x1, x2)

inst_14000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000000000000f; valaddr_reg:x3; val_offset:42000*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42000*0 + 3*176*FLEN/8, x4, x1, x2)

inst_14001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000000000001f; valaddr_reg:x3; val_offset:42003*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42003*0 + 3*177*FLEN/8, x4, x1, x2)

inst_14002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000000000003f; valaddr_reg:x3; val_offset:42006*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42006*0 + 3*178*FLEN/8, x4, x1, x2)

inst_14003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000000000007f; valaddr_reg:x3; val_offset:42009*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42009*0 + 3*179*FLEN/8, x4, x1, x2)

inst_14004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200000000000ff; valaddr_reg:x3; val_offset:42012*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42012*0 + 3*180*FLEN/8, x4, x1, x2)

inst_14005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200000000001ff; valaddr_reg:x3; val_offset:42015*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42015*0 + 3*181*FLEN/8, x4, x1, x2)

inst_14006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200000000003ff; valaddr_reg:x3; val_offset:42018*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42018*0 + 3*182*FLEN/8, x4, x1, x2)

inst_14007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200000000007ff; valaddr_reg:x3; val_offset:42021*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42021*0 + 3*183*FLEN/8, x4, x1, x2)

inst_14008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000000000fff; valaddr_reg:x3; val_offset:42024*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42024*0 + 3*184*FLEN/8, x4, x1, x2)

inst_14009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000000001fff; valaddr_reg:x3; val_offset:42027*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42027*0 + 3*185*FLEN/8, x4, x1, x2)

inst_14010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000000003fff; valaddr_reg:x3; val_offset:42030*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42030*0 + 3*186*FLEN/8, x4, x1, x2)

inst_14011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000000007fff; valaddr_reg:x3; val_offset:42033*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42033*0 + 3*187*FLEN/8, x4, x1, x2)

inst_14012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000000000ffff; valaddr_reg:x3; val_offset:42036*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42036*0 + 3*188*FLEN/8, x4, x1, x2)

inst_14013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000000001ffff; valaddr_reg:x3; val_offset:42039*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42039*0 + 3*189*FLEN/8, x4, x1, x2)

inst_14014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000000003ffff; valaddr_reg:x3; val_offset:42042*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42042*0 + 3*190*FLEN/8, x4, x1, x2)

inst_14015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000000007ffff; valaddr_reg:x3; val_offset:42045*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42045*0 + 3*191*FLEN/8, x4, x1, x2)

inst_14016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200000000fffff; valaddr_reg:x3; val_offset:42048*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42048*0 + 3*192*FLEN/8, x4, x1, x2)

inst_14017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200000001fffff; valaddr_reg:x3; val_offset:42051*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42051*0 + 3*193*FLEN/8, x4, x1, x2)

inst_14018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200000003fffff; valaddr_reg:x3; val_offset:42054*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42054*0 + 3*194*FLEN/8, x4, x1, x2)

inst_14019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200000007fffff; valaddr_reg:x3; val_offset:42057*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42057*0 + 3*195*FLEN/8, x4, x1, x2)

inst_14020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000000ffffff; valaddr_reg:x3; val_offset:42060*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42060*0 + 3*196*FLEN/8, x4, x1, x2)

inst_14021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000001ffffff; valaddr_reg:x3; val_offset:42063*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42063*0 + 3*197*FLEN/8, x4, x1, x2)

inst_14022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000003ffffff; valaddr_reg:x3; val_offset:42066*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42066*0 + 3*198*FLEN/8, x4, x1, x2)

inst_14023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000007ffffff; valaddr_reg:x3; val_offset:42069*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42069*0 + 3*199*FLEN/8, x4, x1, x2)

inst_14024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000000fffffff; valaddr_reg:x3; val_offset:42072*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42072*0 + 3*200*FLEN/8, x4, x1, x2)

inst_14025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000001fffffff; valaddr_reg:x3; val_offset:42075*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42075*0 + 3*201*FLEN/8, x4, x1, x2)

inst_14026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000003fffffff; valaddr_reg:x3; val_offset:42078*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42078*0 + 3*202*FLEN/8, x4, x1, x2)

inst_14027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000007fffffff; valaddr_reg:x3; val_offset:42081*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42081*0 + 3*203*FLEN/8, x4, x1, x2)

inst_14028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200000ffffffff; valaddr_reg:x3; val_offset:42084*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42084*0 + 3*204*FLEN/8, x4, x1, x2)

inst_14029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200001ffffffff; valaddr_reg:x3; val_offset:42087*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42087*0 + 3*205*FLEN/8, x4, x1, x2)

inst_14030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200003ffffffff; valaddr_reg:x3; val_offset:42090*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42090*0 + 3*206*FLEN/8, x4, x1, x2)

inst_14031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200007ffffffff; valaddr_reg:x3; val_offset:42093*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42093*0 + 3*207*FLEN/8, x4, x1, x2)

inst_14032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120000fffffffff; valaddr_reg:x3; val_offset:42096*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42096*0 + 3*208*FLEN/8, x4, x1, x2)

inst_14033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120001fffffffff; valaddr_reg:x3; val_offset:42099*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42099*0 + 3*209*FLEN/8, x4, x1, x2)

inst_14034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120003fffffffff; valaddr_reg:x3; val_offset:42102*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42102*0 + 3*210*FLEN/8, x4, x1, x2)

inst_14035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120007fffffffff; valaddr_reg:x3; val_offset:42105*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42105*0 + 3*211*FLEN/8, x4, x1, x2)

inst_14036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12000ffffffffff; valaddr_reg:x3; val_offset:42108*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42108*0 + 3*212*FLEN/8, x4, x1, x2)

inst_14037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12001ffffffffff; valaddr_reg:x3; val_offset:42111*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42111*0 + 3*213*FLEN/8, x4, x1, x2)

inst_14038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12003ffffffffff; valaddr_reg:x3; val_offset:42114*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42114*0 + 3*214*FLEN/8, x4, x1, x2)

inst_14039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12007ffffffffff; valaddr_reg:x3; val_offset:42117*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42117*0 + 3*215*FLEN/8, x4, x1, x2)

inst_14040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1200fffffffffff; valaddr_reg:x3; val_offset:42120*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42120*0 + 3*216*FLEN/8, x4, x1, x2)

inst_14041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1201fffffffffff; valaddr_reg:x3; val_offset:42123*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42123*0 + 3*217*FLEN/8, x4, x1, x2)

inst_14042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1203fffffffffff; valaddr_reg:x3; val_offset:42126*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42126*0 + 3*218*FLEN/8, x4, x1, x2)

inst_14043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x1207fffffffffff; valaddr_reg:x3; val_offset:42129*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42129*0 + 3*219*FLEN/8, x4, x1, x2)

inst_14044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x120ffffffffffff; valaddr_reg:x3; val_offset:42132*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42132*0 + 3*220*FLEN/8, x4, x1, x2)

inst_14045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x121ffffffffffff; valaddr_reg:x3; val_offset:42135*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42135*0 + 3*221*FLEN/8, x4, x1, x2)

inst_14046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x123ffffffffffff; valaddr_reg:x3; val_offset:42138*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42138*0 + 3*222*FLEN/8, x4, x1, x2)

inst_14047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x127ffffffffffff; valaddr_reg:x3; val_offset:42141*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42141*0 + 3*223*FLEN/8, x4, x1, x2)

inst_14048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x128000000000000; valaddr_reg:x3; val_offset:42144*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42144*0 + 3*224*FLEN/8, x4, x1, x2)

inst_14049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12c000000000000; valaddr_reg:x3; val_offset:42147*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42147*0 + 3*225*FLEN/8, x4, x1, x2)

inst_14050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12e000000000000; valaddr_reg:x3; val_offset:42150*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42150*0 + 3*226*FLEN/8, x4, x1, x2)

inst_14051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12f000000000000; valaddr_reg:x3; val_offset:42153*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42153*0 + 3*227*FLEN/8, x4, x1, x2)

inst_14052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12f800000000000; valaddr_reg:x3; val_offset:42156*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42156*0 + 3*228*FLEN/8, x4, x1, x2)

inst_14053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fc00000000000; valaddr_reg:x3; val_offset:42159*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42159*0 + 3*229*FLEN/8, x4, x1, x2)

inst_14054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fe00000000000; valaddr_reg:x3; val_offset:42162*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42162*0 + 3*230*FLEN/8, x4, x1, x2)

inst_14055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ff00000000000; valaddr_reg:x3; val_offset:42165*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42165*0 + 3*231*FLEN/8, x4, x1, x2)

inst_14056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ff80000000000; valaddr_reg:x3; val_offset:42168*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42168*0 + 3*232*FLEN/8, x4, x1, x2)

inst_14057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffc0000000000; valaddr_reg:x3; val_offset:42171*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42171*0 + 3*233*FLEN/8, x4, x1, x2)

inst_14058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffe0000000000; valaddr_reg:x3; val_offset:42174*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42174*0 + 3*234*FLEN/8, x4, x1, x2)

inst_14059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fff0000000000; valaddr_reg:x3; val_offset:42177*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42177*0 + 3*235*FLEN/8, x4, x1, x2)

inst_14060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fff8000000000; valaddr_reg:x3; val_offset:42180*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42180*0 + 3*236*FLEN/8, x4, x1, x2)

inst_14061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffc000000000; valaddr_reg:x3; val_offset:42183*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42183*0 + 3*237*FLEN/8, x4, x1, x2)

inst_14062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffe000000000; valaddr_reg:x3; val_offset:42186*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42186*0 + 3*238*FLEN/8, x4, x1, x2)

inst_14063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffff000000000; valaddr_reg:x3; val_offset:42189*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42189*0 + 3*239*FLEN/8, x4, x1, x2)

inst_14064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffff800000000; valaddr_reg:x3; val_offset:42192*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42192*0 + 3*240*FLEN/8, x4, x1, x2)

inst_14065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffc00000000; valaddr_reg:x3; val_offset:42195*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42195*0 + 3*241*FLEN/8, x4, x1, x2)

inst_14066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffe00000000; valaddr_reg:x3; val_offset:42198*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42198*0 + 3*242*FLEN/8, x4, x1, x2)

inst_14067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffff00000000; valaddr_reg:x3; val_offset:42201*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42201*0 + 3*243*FLEN/8, x4, x1, x2)

inst_14068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffff80000000; valaddr_reg:x3; val_offset:42204*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42204*0 + 3*244*FLEN/8, x4, x1, x2)

inst_14069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffc0000000; valaddr_reg:x3; val_offset:42207*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42207*0 + 3*245*FLEN/8, x4, x1, x2)

inst_14070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffe0000000; valaddr_reg:x3; val_offset:42210*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42210*0 + 3*246*FLEN/8, x4, x1, x2)

inst_14071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffff0000000; valaddr_reg:x3; val_offset:42213*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42213*0 + 3*247*FLEN/8, x4, x1, x2)

inst_14072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffff8000000; valaddr_reg:x3; val_offset:42216*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42216*0 + 3*248*FLEN/8, x4, x1, x2)

inst_14073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffc000000; valaddr_reg:x3; val_offset:42219*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42219*0 + 3*249*FLEN/8, x4, x1, x2)

inst_14074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffe000000; valaddr_reg:x3; val_offset:42222*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42222*0 + 3*250*FLEN/8, x4, x1, x2)

inst_14075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffff000000; valaddr_reg:x3; val_offset:42225*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42225*0 + 3*251*FLEN/8, x4, x1, x2)

inst_14076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffff800000; valaddr_reg:x3; val_offset:42228*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42228*0 + 3*252*FLEN/8, x4, x1, x2)

inst_14077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffffc00000; valaddr_reg:x3; val_offset:42231*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42231*0 + 3*253*FLEN/8, x4, x1, x2)

inst_14078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffffe00000; valaddr_reg:x3; val_offset:42234*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42234*0 + 3*254*FLEN/8, x4, x1, x2)

inst_14079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffff00000; valaddr_reg:x3; val_offset:42237*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42237*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_14080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffff80000; valaddr_reg:x3; val_offset:42240*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42240*0 + 3*256*FLEN/8, x4, x1, x2)

inst_14081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffffc0000; valaddr_reg:x3; val_offset:42243*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42243*0 + 3*257*FLEN/8, x4, x1, x2)

inst_14082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffffe0000; valaddr_reg:x3; val_offset:42246*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42246*0 + 3*258*FLEN/8, x4, x1, x2)

inst_14083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffffff0000; valaddr_reg:x3; val_offset:42249*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42249*0 + 3*259*FLEN/8, x4, x1, x2)

inst_14084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffffff8000; valaddr_reg:x3; val_offset:42252*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42252*0 + 3*260*FLEN/8, x4, x1, x2)

inst_14085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffffffc000; valaddr_reg:x3; val_offset:42255*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42255*0 + 3*261*FLEN/8, x4, x1, x2)

inst_14086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffffffe000; valaddr_reg:x3; val_offset:42258*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42258*0 + 3*262*FLEN/8, x4, x1, x2)

inst_14087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffffff000; valaddr_reg:x3; val_offset:42261*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42261*0 + 3*263*FLEN/8, x4, x1, x2)

inst_14088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffffff800; valaddr_reg:x3; val_offset:42264*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42264*0 + 3*264*FLEN/8, x4, x1, x2)

inst_14089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffffffc00; valaddr_reg:x3; val_offset:42267*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42267*0 + 3*265*FLEN/8, x4, x1, x2)

inst_14090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffffffe00; valaddr_reg:x3; val_offset:42270*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42270*0 + 3*266*FLEN/8, x4, x1, x2)

inst_14091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffffffff00; valaddr_reg:x3; val_offset:42273*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42273*0 + 3*267*FLEN/8, x4, x1, x2)

inst_14092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffffffff80; valaddr_reg:x3; val_offset:42276*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42276*0 + 3*268*FLEN/8, x4, x1, x2)

inst_14093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffffffffc0; valaddr_reg:x3; val_offset:42279*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42279*0 + 3*269*FLEN/8, x4, x1, x2)

inst_14094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffffffffe0; valaddr_reg:x3; val_offset:42282*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42282*0 + 3*270*FLEN/8, x4, x1, x2)

inst_14095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffffffff0; valaddr_reg:x3; val_offset:42285*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42285*0 + 3*271*FLEN/8, x4, x1, x2)

inst_14096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffffffff8; valaddr_reg:x3; val_offset:42288*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42288*0 + 3*272*FLEN/8, x4, x1, x2)

inst_14097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffffffffc; valaddr_reg:x3; val_offset:42291*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42291*0 + 3*273*FLEN/8, x4, x1, x2)

inst_14098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12ffffffffffffe; valaddr_reg:x3; val_offset:42294*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42294*0 + 3*274*FLEN/8, x4, x1, x2)

inst_14099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1542a43bb12a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81542a43bb12a3; op2val:0x0;
op3val:0x12fffffffffffff; valaddr_reg:x3; val_offset:42297*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42297*0 + 3*275*FLEN/8, x4, x1, x2)

inst_14100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:42300*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42300*0 + 3*276*FLEN/8, x4, x1, x2)

inst_14101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:42303*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42303*0 + 3*277*FLEN/8, x4, x1, x2)

inst_14102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:42306*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42306*0 + 3*278*FLEN/8, x4, x1, x2)

inst_14103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:42309*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42309*0 + 3*279*FLEN/8, x4, x1, x2)

inst_14104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:42312*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42312*0 + 3*280*FLEN/8, x4, x1, x2)

inst_14105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:42315*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42315*0 + 3*281*FLEN/8, x4, x1, x2)

inst_14106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:42318*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42318*0 + 3*282*FLEN/8, x4, x1, x2)

inst_14107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:42321*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42321*0 + 3*283*FLEN/8, x4, x1, x2)

inst_14108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:42324*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42324*0 + 3*284*FLEN/8, x4, x1, x2)

inst_14109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:42327*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42327*0 + 3*285*FLEN/8, x4, x1, x2)

inst_14110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:42330*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42330*0 + 3*286*FLEN/8, x4, x1, x2)

inst_14111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:42333*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42333*0 + 3*287*FLEN/8, x4, x1, x2)

inst_14112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:42336*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42336*0 + 3*288*FLEN/8, x4, x1, x2)

inst_14113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:42339*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42339*0 + 3*289*FLEN/8, x4, x1, x2)

inst_14114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:42342*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42342*0 + 3*290*FLEN/8, x4, x1, x2)

inst_14115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:42345*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42345*0 + 3*291*FLEN/8, x4, x1, x2)

inst_14116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:42348*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42348*0 + 3*292*FLEN/8, x4, x1, x2)

inst_14117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:42351*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42351*0 + 3*293*FLEN/8, x4, x1, x2)

inst_14118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:42354*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42354*0 + 3*294*FLEN/8, x4, x1, x2)

inst_14119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:42357*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42357*0 + 3*295*FLEN/8, x4, x1, x2)

inst_14120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:42360*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42360*0 + 3*296*FLEN/8, x4, x1, x2)

inst_14121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:42363*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42363*0 + 3*297*FLEN/8, x4, x1, x2)

inst_14122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000000000000; valaddr_reg:x3; val_offset:42366*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42366*0 + 3*298*FLEN/8, x4, x1, x2)

inst_14123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000000000001; valaddr_reg:x3; val_offset:42369*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42369*0 + 3*299*FLEN/8, x4, x1, x2)

inst_14124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000000000003; valaddr_reg:x3; val_offset:42372*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42372*0 + 3*300*FLEN/8, x4, x1, x2)

inst_14125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000000000007; valaddr_reg:x3; val_offset:42375*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42375*0 + 3*301*FLEN/8, x4, x1, x2)

inst_14126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000000000000f; valaddr_reg:x3; val_offset:42378*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42378*0 + 3*302*FLEN/8, x4, x1, x2)

inst_14127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000000000001f; valaddr_reg:x3; val_offset:42381*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42381*0 + 3*303*FLEN/8, x4, x1, x2)

inst_14128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000000000003f; valaddr_reg:x3; val_offset:42384*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42384*0 + 3*304*FLEN/8, x4, x1, x2)

inst_14129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000000000007f; valaddr_reg:x3; val_offset:42387*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42387*0 + 3*305*FLEN/8, x4, x1, x2)

inst_14130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700000000000ff; valaddr_reg:x3; val_offset:42390*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42390*0 + 3*306*FLEN/8, x4, x1, x2)

inst_14131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700000000001ff; valaddr_reg:x3; val_offset:42393*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42393*0 + 3*307*FLEN/8, x4, x1, x2)

inst_14132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700000000003ff; valaddr_reg:x3; val_offset:42396*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42396*0 + 3*308*FLEN/8, x4, x1, x2)

inst_14133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700000000007ff; valaddr_reg:x3; val_offset:42399*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42399*0 + 3*309*FLEN/8, x4, x1, x2)

inst_14134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000000000fff; valaddr_reg:x3; val_offset:42402*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42402*0 + 3*310*FLEN/8, x4, x1, x2)

inst_14135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000000001fff; valaddr_reg:x3; val_offset:42405*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42405*0 + 3*311*FLEN/8, x4, x1, x2)

inst_14136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000000003fff; valaddr_reg:x3; val_offset:42408*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42408*0 + 3*312*FLEN/8, x4, x1, x2)

inst_14137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000000007fff; valaddr_reg:x3; val_offset:42411*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42411*0 + 3*313*FLEN/8, x4, x1, x2)

inst_14138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000000000ffff; valaddr_reg:x3; val_offset:42414*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42414*0 + 3*314*FLEN/8, x4, x1, x2)

inst_14139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000000001ffff; valaddr_reg:x3; val_offset:42417*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42417*0 + 3*315*FLEN/8, x4, x1, x2)

inst_14140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000000003ffff; valaddr_reg:x3; val_offset:42420*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42420*0 + 3*316*FLEN/8, x4, x1, x2)

inst_14141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000000007ffff; valaddr_reg:x3; val_offset:42423*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42423*0 + 3*317*FLEN/8, x4, x1, x2)

inst_14142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700000000fffff; valaddr_reg:x3; val_offset:42426*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42426*0 + 3*318*FLEN/8, x4, x1, x2)

inst_14143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700000001fffff; valaddr_reg:x3; val_offset:42429*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42429*0 + 3*319*FLEN/8, x4, x1, x2)

inst_14144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700000003fffff; valaddr_reg:x3; val_offset:42432*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42432*0 + 3*320*FLEN/8, x4, x1, x2)

inst_14145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700000007fffff; valaddr_reg:x3; val_offset:42435*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42435*0 + 3*321*FLEN/8, x4, x1, x2)

inst_14146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000000ffffff; valaddr_reg:x3; val_offset:42438*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42438*0 + 3*322*FLEN/8, x4, x1, x2)

inst_14147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000001ffffff; valaddr_reg:x3; val_offset:42441*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42441*0 + 3*323*FLEN/8, x4, x1, x2)

inst_14148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000003ffffff; valaddr_reg:x3; val_offset:42444*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42444*0 + 3*324*FLEN/8, x4, x1, x2)

inst_14149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000007ffffff; valaddr_reg:x3; val_offset:42447*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42447*0 + 3*325*FLEN/8, x4, x1, x2)

inst_14150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000000fffffff; valaddr_reg:x3; val_offset:42450*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42450*0 + 3*326*FLEN/8, x4, x1, x2)

inst_14151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000001fffffff; valaddr_reg:x3; val_offset:42453*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42453*0 + 3*327*FLEN/8, x4, x1, x2)

inst_14152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000003fffffff; valaddr_reg:x3; val_offset:42456*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42456*0 + 3*328*FLEN/8, x4, x1, x2)

inst_14153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000007fffffff; valaddr_reg:x3; val_offset:42459*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42459*0 + 3*329*FLEN/8, x4, x1, x2)

inst_14154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700000ffffffff; valaddr_reg:x3; val_offset:42462*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42462*0 + 3*330*FLEN/8, x4, x1, x2)

inst_14155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700001ffffffff; valaddr_reg:x3; val_offset:42465*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42465*0 + 3*331*FLEN/8, x4, x1, x2)

inst_14156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700003ffffffff; valaddr_reg:x3; val_offset:42468*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42468*0 + 3*332*FLEN/8, x4, x1, x2)

inst_14157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700007ffffffff; valaddr_reg:x3; val_offset:42471*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42471*0 + 3*333*FLEN/8, x4, x1, x2)

inst_14158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370000fffffffff; valaddr_reg:x3; val_offset:42474*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42474*0 + 3*334*FLEN/8, x4, x1, x2)

inst_14159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370001fffffffff; valaddr_reg:x3; val_offset:42477*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42477*0 + 3*335*FLEN/8, x4, x1, x2)

inst_14160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370003fffffffff; valaddr_reg:x3; val_offset:42480*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42480*0 + 3*336*FLEN/8, x4, x1, x2)

inst_14161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370007fffffffff; valaddr_reg:x3; val_offset:42483*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42483*0 + 3*337*FLEN/8, x4, x1, x2)

inst_14162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37000ffffffffff; valaddr_reg:x3; val_offset:42486*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42486*0 + 3*338*FLEN/8, x4, x1, x2)

inst_14163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37001ffffffffff; valaddr_reg:x3; val_offset:42489*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42489*0 + 3*339*FLEN/8, x4, x1, x2)

inst_14164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37003ffffffffff; valaddr_reg:x3; val_offset:42492*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42492*0 + 3*340*FLEN/8, x4, x1, x2)

inst_14165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37007ffffffffff; valaddr_reg:x3; val_offset:42495*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42495*0 + 3*341*FLEN/8, x4, x1, x2)

inst_14166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3700fffffffffff; valaddr_reg:x3; val_offset:42498*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42498*0 + 3*342*FLEN/8, x4, x1, x2)

inst_14167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3701fffffffffff; valaddr_reg:x3; val_offset:42501*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42501*0 + 3*343*FLEN/8, x4, x1, x2)

inst_14168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3703fffffffffff; valaddr_reg:x3; val_offset:42504*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42504*0 + 3*344*FLEN/8, x4, x1, x2)

inst_14169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x3707fffffffffff; valaddr_reg:x3; val_offset:42507*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42507*0 + 3*345*FLEN/8, x4, x1, x2)

inst_14170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x370ffffffffffff; valaddr_reg:x3; val_offset:42510*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42510*0 + 3*346*FLEN/8, x4, x1, x2)

inst_14171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x371ffffffffffff; valaddr_reg:x3; val_offset:42513*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42513*0 + 3*347*FLEN/8, x4, x1, x2)

inst_14172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x373ffffffffffff; valaddr_reg:x3; val_offset:42516*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42516*0 + 3*348*FLEN/8, x4, x1, x2)

inst_14173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x377ffffffffffff; valaddr_reg:x3; val_offset:42519*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42519*0 + 3*349*FLEN/8, x4, x1, x2)

inst_14174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x378000000000000; valaddr_reg:x3; val_offset:42522*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42522*0 + 3*350*FLEN/8, x4, x1, x2)

inst_14175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37c000000000000; valaddr_reg:x3; val_offset:42525*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42525*0 + 3*351*FLEN/8, x4, x1, x2)

inst_14176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37e000000000000; valaddr_reg:x3; val_offset:42528*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42528*0 + 3*352*FLEN/8, x4, x1, x2)

inst_14177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37f000000000000; valaddr_reg:x3; val_offset:42531*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42531*0 + 3*353*FLEN/8, x4, x1, x2)

inst_14178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37f800000000000; valaddr_reg:x3; val_offset:42534*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42534*0 + 3*354*FLEN/8, x4, x1, x2)

inst_14179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fc00000000000; valaddr_reg:x3; val_offset:42537*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42537*0 + 3*355*FLEN/8, x4, x1, x2)

inst_14180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fe00000000000; valaddr_reg:x3; val_offset:42540*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42540*0 + 3*356*FLEN/8, x4, x1, x2)

inst_14181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ff00000000000; valaddr_reg:x3; val_offset:42543*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42543*0 + 3*357*FLEN/8, x4, x1, x2)

inst_14182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ff80000000000; valaddr_reg:x3; val_offset:42546*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42546*0 + 3*358*FLEN/8, x4, x1, x2)

inst_14183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffc0000000000; valaddr_reg:x3; val_offset:42549*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42549*0 + 3*359*FLEN/8, x4, x1, x2)

inst_14184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffe0000000000; valaddr_reg:x3; val_offset:42552*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42552*0 + 3*360*FLEN/8, x4, x1, x2)

inst_14185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fff0000000000; valaddr_reg:x3; val_offset:42555*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42555*0 + 3*361*FLEN/8, x4, x1, x2)

inst_14186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fff8000000000; valaddr_reg:x3; val_offset:42558*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42558*0 + 3*362*FLEN/8, x4, x1, x2)

inst_14187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffc000000000; valaddr_reg:x3; val_offset:42561*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42561*0 + 3*363*FLEN/8, x4, x1, x2)

inst_14188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffe000000000; valaddr_reg:x3; val_offset:42564*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42564*0 + 3*364*FLEN/8, x4, x1, x2)

inst_14189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffff000000000; valaddr_reg:x3; val_offset:42567*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42567*0 + 3*365*FLEN/8, x4, x1, x2)

inst_14190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffff800000000; valaddr_reg:x3; val_offset:42570*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42570*0 + 3*366*FLEN/8, x4, x1, x2)

inst_14191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffc00000000; valaddr_reg:x3; val_offset:42573*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42573*0 + 3*367*FLEN/8, x4, x1, x2)

inst_14192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffe00000000; valaddr_reg:x3; val_offset:42576*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42576*0 + 3*368*FLEN/8, x4, x1, x2)

inst_14193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffff00000000; valaddr_reg:x3; val_offset:42579*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42579*0 + 3*369*FLEN/8, x4, x1, x2)

inst_14194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffff80000000; valaddr_reg:x3; val_offset:42582*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42582*0 + 3*370*FLEN/8, x4, x1, x2)

inst_14195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffc0000000; valaddr_reg:x3; val_offset:42585*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42585*0 + 3*371*FLEN/8, x4, x1, x2)

inst_14196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffe0000000; valaddr_reg:x3; val_offset:42588*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42588*0 + 3*372*FLEN/8, x4, x1, x2)

inst_14197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffff0000000; valaddr_reg:x3; val_offset:42591*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42591*0 + 3*373*FLEN/8, x4, x1, x2)

inst_14198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffff8000000; valaddr_reg:x3; val_offset:42594*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42594*0 + 3*374*FLEN/8, x4, x1, x2)

inst_14199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffc000000; valaddr_reg:x3; val_offset:42597*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42597*0 + 3*375*FLEN/8, x4, x1, x2)

inst_14200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffe000000; valaddr_reg:x3; val_offset:42600*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42600*0 + 3*376*FLEN/8, x4, x1, x2)

inst_14201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffff000000; valaddr_reg:x3; val_offset:42603*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42603*0 + 3*377*FLEN/8, x4, x1, x2)

inst_14202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffff800000; valaddr_reg:x3; val_offset:42606*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42606*0 + 3*378*FLEN/8, x4, x1, x2)

inst_14203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffffc00000; valaddr_reg:x3; val_offset:42609*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42609*0 + 3*379*FLEN/8, x4, x1, x2)

inst_14204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffffe00000; valaddr_reg:x3; val_offset:42612*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42612*0 + 3*380*FLEN/8, x4, x1, x2)

inst_14205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffff00000; valaddr_reg:x3; val_offset:42615*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42615*0 + 3*381*FLEN/8, x4, x1, x2)

inst_14206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffff80000; valaddr_reg:x3; val_offset:42618*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42618*0 + 3*382*FLEN/8, x4, x1, x2)

inst_14207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffffc0000; valaddr_reg:x3; val_offset:42621*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42621*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_14208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffffe0000; valaddr_reg:x3; val_offset:42624*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42624*0 + 3*384*FLEN/8, x4, x1, x2)

inst_14209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffffff0000; valaddr_reg:x3; val_offset:42627*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42627*0 + 3*385*FLEN/8, x4, x1, x2)

inst_14210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffffff8000; valaddr_reg:x3; val_offset:42630*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42630*0 + 3*386*FLEN/8, x4, x1, x2)

inst_14211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffffffc000; valaddr_reg:x3; val_offset:42633*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42633*0 + 3*387*FLEN/8, x4, x1, x2)

inst_14212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffffffe000; valaddr_reg:x3; val_offset:42636*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42636*0 + 3*388*FLEN/8, x4, x1, x2)

inst_14213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffffff000; valaddr_reg:x3; val_offset:42639*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42639*0 + 3*389*FLEN/8, x4, x1, x2)

inst_14214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffffff800; valaddr_reg:x3; val_offset:42642*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42642*0 + 3*390*FLEN/8, x4, x1, x2)

inst_14215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffffffc00; valaddr_reg:x3; val_offset:42645*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42645*0 + 3*391*FLEN/8, x4, x1, x2)

inst_14216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffffffe00; valaddr_reg:x3; val_offset:42648*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42648*0 + 3*392*FLEN/8, x4, x1, x2)

inst_14217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffffffff00; valaddr_reg:x3; val_offset:42651*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42651*0 + 3*393*FLEN/8, x4, x1, x2)

inst_14218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffffffff80; valaddr_reg:x3; val_offset:42654*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42654*0 + 3*394*FLEN/8, x4, x1, x2)

inst_14219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffffffffc0; valaddr_reg:x3; val_offset:42657*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42657*0 + 3*395*FLEN/8, x4, x1, x2)

inst_14220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffffffffe0; valaddr_reg:x3; val_offset:42660*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42660*0 + 3*396*FLEN/8, x4, x1, x2)

inst_14221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffffffff0; valaddr_reg:x3; val_offset:42663*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42663*0 + 3*397*FLEN/8, x4, x1, x2)

inst_14222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffffffff8; valaddr_reg:x3; val_offset:42666*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42666*0 + 3*398*FLEN/8, x4, x1, x2)

inst_14223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffffffffc; valaddr_reg:x3; val_offset:42669*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42669*0 + 3*399*FLEN/8, x4, x1, x2)

inst_14224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37ffffffffffffe; valaddr_reg:x3; val_offset:42672*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42672*0 + 3*400*FLEN/8, x4, x1, x2)

inst_14225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1753da6ff8cab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f81753da6ff8cab; op2val:0x0;
op3val:0x37fffffffffffff; valaddr_reg:x3; val_offset:42675*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42675*0 + 3*401*FLEN/8, x4, x1, x2)

inst_14226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:42678*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42678*0 + 3*402*FLEN/8, x4, x1, x2)

inst_14227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:42681*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42681*0 + 3*403*FLEN/8, x4, x1, x2)

inst_14228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:42684*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42684*0 + 3*404*FLEN/8, x4, x1, x2)

inst_14229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:42687*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42687*0 + 3*405*FLEN/8, x4, x1, x2)

inst_14230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:42690*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42690*0 + 3*406*FLEN/8, x4, x1, x2)

inst_14231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:42693*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42693*0 + 3*407*FLEN/8, x4, x1, x2)

inst_14232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:42696*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42696*0 + 3*408*FLEN/8, x4, x1, x2)

inst_14233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:42699*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42699*0 + 3*409*FLEN/8, x4, x1, x2)

inst_14234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:42702*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42702*0 + 3*410*FLEN/8, x4, x1, x2)

inst_14235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:42705*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42705*0 + 3*411*FLEN/8, x4, x1, x2)

inst_14236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:42708*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42708*0 + 3*412*FLEN/8, x4, x1, x2)

inst_14237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:42711*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42711*0 + 3*413*FLEN/8, x4, x1, x2)

inst_14238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:42714*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42714*0 + 3*414*FLEN/8, x4, x1, x2)

inst_14239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:42717*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42717*0 + 3*415*FLEN/8, x4, x1, x2)

inst_14240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:42720*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42720*0 + 3*416*FLEN/8, x4, x1, x2)

inst_14241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:42723*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42723*0 + 3*417*FLEN/8, x4, x1, x2)

inst_14242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:42726*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42726*0 + 3*418*FLEN/8, x4, x1, x2)

inst_14243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:42729*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42729*0 + 3*419*FLEN/8, x4, x1, x2)

inst_14244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:42732*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42732*0 + 3*420*FLEN/8, x4, x1, x2)

inst_14245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:42735*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42735*0 + 3*421*FLEN/8, x4, x1, x2)

inst_14246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:42738*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42738*0 + 3*422*FLEN/8, x4, x1, x2)

inst_14247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:42741*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42741*0 + 3*423*FLEN/8, x4, x1, x2)

inst_14248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000000000000; valaddr_reg:x3; val_offset:42744*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42744*0 + 3*424*FLEN/8, x4, x1, x2)

inst_14249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000000000001; valaddr_reg:x3; val_offset:42747*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42747*0 + 3*425*FLEN/8, x4, x1, x2)

inst_14250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000000000003; valaddr_reg:x3; val_offset:42750*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42750*0 + 3*426*FLEN/8, x4, x1, x2)

inst_14251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000000000007; valaddr_reg:x3; val_offset:42753*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42753*0 + 3*427*FLEN/8, x4, x1, x2)

inst_14252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000000000000f; valaddr_reg:x3; val_offset:42756*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42756*0 + 3*428*FLEN/8, x4, x1, x2)

inst_14253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000000000001f; valaddr_reg:x3; val_offset:42759*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42759*0 + 3*429*FLEN/8, x4, x1, x2)

inst_14254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000000000003f; valaddr_reg:x3; val_offset:42762*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42762*0 + 3*430*FLEN/8, x4, x1, x2)

inst_14255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000000000007f; valaddr_reg:x3; val_offset:42765*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42765*0 + 3*431*FLEN/8, x4, x1, x2)

inst_14256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700000000000ff; valaddr_reg:x3; val_offset:42768*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42768*0 + 3*432*FLEN/8, x4, x1, x2)

inst_14257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700000000001ff; valaddr_reg:x3; val_offset:42771*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42771*0 + 3*433*FLEN/8, x4, x1, x2)

inst_14258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700000000003ff; valaddr_reg:x3; val_offset:42774*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42774*0 + 3*434*FLEN/8, x4, x1, x2)

inst_14259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700000000007ff; valaddr_reg:x3; val_offset:42777*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42777*0 + 3*435*FLEN/8, x4, x1, x2)

inst_14260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000000000fff; valaddr_reg:x3; val_offset:42780*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42780*0 + 3*436*FLEN/8, x4, x1, x2)

inst_14261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000000001fff; valaddr_reg:x3; val_offset:42783*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42783*0 + 3*437*FLEN/8, x4, x1, x2)

inst_14262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000000003fff; valaddr_reg:x3; val_offset:42786*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42786*0 + 3*438*FLEN/8, x4, x1, x2)

inst_14263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000000007fff; valaddr_reg:x3; val_offset:42789*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42789*0 + 3*439*FLEN/8, x4, x1, x2)

inst_14264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000000000ffff; valaddr_reg:x3; val_offset:42792*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42792*0 + 3*440*FLEN/8, x4, x1, x2)

inst_14265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000000001ffff; valaddr_reg:x3; val_offset:42795*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42795*0 + 3*441*FLEN/8, x4, x1, x2)

inst_14266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000000003ffff; valaddr_reg:x3; val_offset:42798*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42798*0 + 3*442*FLEN/8, x4, x1, x2)

inst_14267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000000007ffff; valaddr_reg:x3; val_offset:42801*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42801*0 + 3*443*FLEN/8, x4, x1, x2)

inst_14268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700000000fffff; valaddr_reg:x3; val_offset:42804*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42804*0 + 3*444*FLEN/8, x4, x1, x2)

inst_14269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700000001fffff; valaddr_reg:x3; val_offset:42807*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42807*0 + 3*445*FLEN/8, x4, x1, x2)

inst_14270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700000003fffff; valaddr_reg:x3; val_offset:42810*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42810*0 + 3*446*FLEN/8, x4, x1, x2)

inst_14271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700000007fffff; valaddr_reg:x3; val_offset:42813*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42813*0 + 3*447*FLEN/8, x4, x1, x2)

inst_14272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000000ffffff; valaddr_reg:x3; val_offset:42816*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42816*0 + 3*448*FLEN/8, x4, x1, x2)

inst_14273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000001ffffff; valaddr_reg:x3; val_offset:42819*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42819*0 + 3*449*FLEN/8, x4, x1, x2)

inst_14274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000003ffffff; valaddr_reg:x3; val_offset:42822*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42822*0 + 3*450*FLEN/8, x4, x1, x2)

inst_14275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000007ffffff; valaddr_reg:x3; val_offset:42825*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42825*0 + 3*451*FLEN/8, x4, x1, x2)

inst_14276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000000fffffff; valaddr_reg:x3; val_offset:42828*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42828*0 + 3*452*FLEN/8, x4, x1, x2)

inst_14277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000001fffffff; valaddr_reg:x3; val_offset:42831*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42831*0 + 3*453*FLEN/8, x4, x1, x2)

inst_14278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000003fffffff; valaddr_reg:x3; val_offset:42834*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42834*0 + 3*454*FLEN/8, x4, x1, x2)

inst_14279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000007fffffff; valaddr_reg:x3; val_offset:42837*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42837*0 + 3*455*FLEN/8, x4, x1, x2)

inst_14280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700000ffffffff; valaddr_reg:x3; val_offset:42840*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42840*0 + 3*456*FLEN/8, x4, x1, x2)

inst_14281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700001ffffffff; valaddr_reg:x3; val_offset:42843*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42843*0 + 3*457*FLEN/8, x4, x1, x2)

inst_14282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700003ffffffff; valaddr_reg:x3; val_offset:42846*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42846*0 + 3*458*FLEN/8, x4, x1, x2)

inst_14283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700007ffffffff; valaddr_reg:x3; val_offset:42849*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42849*0 + 3*459*FLEN/8, x4, x1, x2)

inst_14284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170000fffffffff; valaddr_reg:x3; val_offset:42852*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42852*0 + 3*460*FLEN/8, x4, x1, x2)

inst_14285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170001fffffffff; valaddr_reg:x3; val_offset:42855*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42855*0 + 3*461*FLEN/8, x4, x1, x2)

inst_14286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170003fffffffff; valaddr_reg:x3; val_offset:42858*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42858*0 + 3*462*FLEN/8, x4, x1, x2)

inst_14287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170007fffffffff; valaddr_reg:x3; val_offset:42861*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42861*0 + 3*463*FLEN/8, x4, x1, x2)

inst_14288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817000ffffffffff; valaddr_reg:x3; val_offset:42864*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42864*0 + 3*464*FLEN/8, x4, x1, x2)

inst_14289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817001ffffffffff; valaddr_reg:x3; val_offset:42867*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42867*0 + 3*465*FLEN/8, x4, x1, x2)

inst_14290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817003ffffffffff; valaddr_reg:x3; val_offset:42870*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42870*0 + 3*466*FLEN/8, x4, x1, x2)

inst_14291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817007ffffffffff; valaddr_reg:x3; val_offset:42873*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42873*0 + 3*467*FLEN/8, x4, x1, x2)

inst_14292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81700fffffffffff; valaddr_reg:x3; val_offset:42876*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42876*0 + 3*468*FLEN/8, x4, x1, x2)

inst_14293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81701fffffffffff; valaddr_reg:x3; val_offset:42879*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42879*0 + 3*469*FLEN/8, x4, x1, x2)

inst_14294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81703fffffffffff; valaddr_reg:x3; val_offset:42882*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42882*0 + 3*470*FLEN/8, x4, x1, x2)

inst_14295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x81707fffffffffff; valaddr_reg:x3; val_offset:42885*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42885*0 + 3*471*FLEN/8, x4, x1, x2)

inst_14296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8170ffffffffffff; valaddr_reg:x3; val_offset:42888*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42888*0 + 3*472*FLEN/8, x4, x1, x2)

inst_14297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8171ffffffffffff; valaddr_reg:x3; val_offset:42891*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42891*0 + 3*473*FLEN/8, x4, x1, x2)

inst_14298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8173ffffffffffff; valaddr_reg:x3; val_offset:42894*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42894*0 + 3*474*FLEN/8, x4, x1, x2)

inst_14299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8177ffffffffffff; valaddr_reg:x3; val_offset:42897*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42897*0 + 3*475*FLEN/8, x4, x1, x2)

inst_14300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x8178000000000000; valaddr_reg:x3; val_offset:42900*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42900*0 + 3*476*FLEN/8, x4, x1, x2)

inst_14301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817c000000000000; valaddr_reg:x3; val_offset:42903*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42903*0 + 3*477*FLEN/8, x4, x1, x2)

inst_14302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817e000000000000; valaddr_reg:x3; val_offset:42906*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42906*0 + 3*478*FLEN/8, x4, x1, x2)

inst_14303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817f000000000000; valaddr_reg:x3; val_offset:42909*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42909*0 + 3*479*FLEN/8, x4, x1, x2)

inst_14304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817f800000000000; valaddr_reg:x3; val_offset:42912*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42912*0 + 3*480*FLEN/8, x4, x1, x2)

inst_14305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fc00000000000; valaddr_reg:x3; val_offset:42915*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42915*0 + 3*481*FLEN/8, x4, x1, x2)

inst_14306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fe00000000000; valaddr_reg:x3; val_offset:42918*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42918*0 + 3*482*FLEN/8, x4, x1, x2)

inst_14307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ff00000000000; valaddr_reg:x3; val_offset:42921*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42921*0 + 3*483*FLEN/8, x4, x1, x2)

inst_14308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ff80000000000; valaddr_reg:x3; val_offset:42924*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42924*0 + 3*484*FLEN/8, x4, x1, x2)

inst_14309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffc0000000000; valaddr_reg:x3; val_offset:42927*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42927*0 + 3*485*FLEN/8, x4, x1, x2)

inst_14310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffe0000000000; valaddr_reg:x3; val_offset:42930*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42930*0 + 3*486*FLEN/8, x4, x1, x2)

inst_14311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fff0000000000; valaddr_reg:x3; val_offset:42933*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42933*0 + 3*487*FLEN/8, x4, x1, x2)

inst_14312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fff8000000000; valaddr_reg:x3; val_offset:42936*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42936*0 + 3*488*FLEN/8, x4, x1, x2)

inst_14313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffc000000000; valaddr_reg:x3; val_offset:42939*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42939*0 + 3*489*FLEN/8, x4, x1, x2)

inst_14314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffe000000000; valaddr_reg:x3; val_offset:42942*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42942*0 + 3*490*FLEN/8, x4, x1, x2)

inst_14315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffff000000000; valaddr_reg:x3; val_offset:42945*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42945*0 + 3*491*FLEN/8, x4, x1, x2)

inst_14316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffff800000000; valaddr_reg:x3; val_offset:42948*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42948*0 + 3*492*FLEN/8, x4, x1, x2)

inst_14317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffc00000000; valaddr_reg:x3; val_offset:42951*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42951*0 + 3*493*FLEN/8, x4, x1, x2)

inst_14318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffe00000000; valaddr_reg:x3; val_offset:42954*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42954*0 + 3*494*FLEN/8, x4, x1, x2)

inst_14319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffff00000000; valaddr_reg:x3; val_offset:42957*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42957*0 + 3*495*FLEN/8, x4, x1, x2)

inst_14320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffff80000000; valaddr_reg:x3; val_offset:42960*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42960*0 + 3*496*FLEN/8, x4, x1, x2)

inst_14321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffc0000000; valaddr_reg:x3; val_offset:42963*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42963*0 + 3*497*FLEN/8, x4, x1, x2)

inst_14322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffe0000000; valaddr_reg:x3; val_offset:42966*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42966*0 + 3*498*FLEN/8, x4, x1, x2)

inst_14323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffff0000000; valaddr_reg:x3; val_offset:42969*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42969*0 + 3*499*FLEN/8, x4, x1, x2)

inst_14324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffff8000000; valaddr_reg:x3; val_offset:42972*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42972*0 + 3*500*FLEN/8, x4, x1, x2)

inst_14325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffc000000; valaddr_reg:x3; val_offset:42975*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42975*0 + 3*501*FLEN/8, x4, x1, x2)

inst_14326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffe000000; valaddr_reg:x3; val_offset:42978*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42978*0 + 3*502*FLEN/8, x4, x1, x2)

inst_14327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffff000000; valaddr_reg:x3; val_offset:42981*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42981*0 + 3*503*FLEN/8, x4, x1, x2)

inst_14328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffff800000; valaddr_reg:x3; val_offset:42984*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42984*0 + 3*504*FLEN/8, x4, x1, x2)

inst_14329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffffc00000; valaddr_reg:x3; val_offset:42987*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42987*0 + 3*505*FLEN/8, x4, x1, x2)

inst_14330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffffe00000; valaddr_reg:x3; val_offset:42990*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42990*0 + 3*506*FLEN/8, x4, x1, x2)

inst_14331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffff00000; valaddr_reg:x3; val_offset:42993*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42993*0 + 3*507*FLEN/8, x4, x1, x2)

inst_14332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffff80000; valaddr_reg:x3; val_offset:42996*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42996*0 + 3*508*FLEN/8, x4, x1, x2)

inst_14333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffffc0000; valaddr_reg:x3; val_offset:42999*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42999*0 + 3*509*FLEN/8, x4, x1, x2)

inst_14334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffffe0000; valaddr_reg:x3; val_offset:43002*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43002*0 + 3*510*FLEN/8, x4, x1, x2)

inst_14335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffffff0000; valaddr_reg:x3; val_offset:43005*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43005*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_14336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffffff8000; valaddr_reg:x3; val_offset:43008*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43008*0 + 3*512*FLEN/8, x4, x1, x2)

inst_14337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffffffc000; valaddr_reg:x3; val_offset:43011*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43011*0 + 3*513*FLEN/8, x4, x1, x2)

inst_14338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffffffe000; valaddr_reg:x3; val_offset:43014*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43014*0 + 3*514*FLEN/8, x4, x1, x2)

inst_14339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffffff000; valaddr_reg:x3; val_offset:43017*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43017*0 + 3*515*FLEN/8, x4, x1, x2)

inst_14340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffffff800; valaddr_reg:x3; val_offset:43020*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43020*0 + 3*516*FLEN/8, x4, x1, x2)

inst_14341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffffffc00; valaddr_reg:x3; val_offset:43023*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43023*0 + 3*517*FLEN/8, x4, x1, x2)

inst_14342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffffffe00; valaddr_reg:x3; val_offset:43026*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43026*0 + 3*518*FLEN/8, x4, x1, x2)

inst_14343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffffffff00; valaddr_reg:x3; val_offset:43029*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43029*0 + 3*519*FLEN/8, x4, x1, x2)

inst_14344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffffffff80; valaddr_reg:x3; val_offset:43032*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43032*0 + 3*520*FLEN/8, x4, x1, x2)

inst_14345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffffffffc0; valaddr_reg:x3; val_offset:43035*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43035*0 + 3*521*FLEN/8, x4, x1, x2)

inst_14346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffffffffe0; valaddr_reg:x3; val_offset:43038*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43038*0 + 3*522*FLEN/8, x4, x1, x2)

inst_14347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffffffff0; valaddr_reg:x3; val_offset:43041*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43041*0 + 3*523*FLEN/8, x4, x1, x2)

inst_14348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffffffff8; valaddr_reg:x3; val_offset:43044*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43044*0 + 3*524*FLEN/8, x4, x1, x2)

inst_14349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffffffffc; valaddr_reg:x3; val_offset:43047*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43047*0 + 3*525*FLEN/8, x4, x1, x2)

inst_14350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817ffffffffffffe; valaddr_reg:x3; val_offset:43050*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43050*0 + 3*526*FLEN/8, x4, x1, x2)

inst_14351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x178d41da9c023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8178d41da9c023; op2val:0x8000;
op3val:0x817fffffffffffff; valaddr_reg:x3; val_offset:43053*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43053*0 + 3*527*FLEN/8, x4, x1, x2)

inst_14352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:43056*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43056*0 + 3*528*FLEN/8, x4, x1, x2)

inst_14353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:43059*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43059*0 + 3*529*FLEN/8, x4, x1, x2)

inst_14354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:43062*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43062*0 + 3*530*FLEN/8, x4, x1, x2)

inst_14355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:43065*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43065*0 + 3*531*FLEN/8, x4, x1, x2)

inst_14356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:43068*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43068*0 + 3*532*FLEN/8, x4, x1, x2)

inst_14357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:43071*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43071*0 + 3*533*FLEN/8, x4, x1, x2)

inst_14358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:43074*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43074*0 + 3*534*FLEN/8, x4, x1, x2)

inst_14359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:43077*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43077*0 + 3*535*FLEN/8, x4, x1, x2)

inst_14360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:43080*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43080*0 + 3*536*FLEN/8, x4, x1, x2)

inst_14361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:43083*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43083*0 + 3*537*FLEN/8, x4, x1, x2)

inst_14362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:43086*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43086*0 + 3*538*FLEN/8, x4, x1, x2)

inst_14363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:43089*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43089*0 + 3*539*FLEN/8, x4, x1, x2)

inst_14364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:43092*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43092*0 + 3*540*FLEN/8, x4, x1, x2)

inst_14365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:43095*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43095*0 + 3*541*FLEN/8, x4, x1, x2)

inst_14366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:43098*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43098*0 + 3*542*FLEN/8, x4, x1, x2)

inst_14367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:43101*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43101*0 + 3*543*FLEN/8, x4, x1, x2)

inst_14368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:43104*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43104*0 + 3*544*FLEN/8, x4, x1, x2)

inst_14369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:43107*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43107*0 + 3*545*FLEN/8, x4, x1, x2)

inst_14370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:43110*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43110*0 + 3*546*FLEN/8, x4, x1, x2)

inst_14371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:43113*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43113*0 + 3*547*FLEN/8, x4, x1, x2)

inst_14372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:43116*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43116*0 + 3*548*FLEN/8, x4, x1, x2)

inst_14373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:43119*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43119*0 + 3*549*FLEN/8, x4, x1, x2)

inst_14374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000000000000; valaddr_reg:x3; val_offset:43122*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43122*0 + 3*550*FLEN/8, x4, x1, x2)

inst_14375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000000000001; valaddr_reg:x3; val_offset:43125*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43125*0 + 3*551*FLEN/8, x4, x1, x2)

inst_14376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000000000003; valaddr_reg:x3; val_offset:43128*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43128*0 + 3*552*FLEN/8, x4, x1, x2)

inst_14377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000000000007; valaddr_reg:x3; val_offset:43131*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43131*0 + 3*553*FLEN/8, x4, x1, x2)

inst_14378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000000000000f; valaddr_reg:x3; val_offset:43134*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43134*0 + 3*554*FLEN/8, x4, x1, x2)

inst_14379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000000000001f; valaddr_reg:x3; val_offset:43137*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43137*0 + 3*555*FLEN/8, x4, x1, x2)

inst_14380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000000000003f; valaddr_reg:x3; val_offset:43140*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43140*0 + 3*556*FLEN/8, x4, x1, x2)

inst_14381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000000000007f; valaddr_reg:x3; val_offset:43143*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43143*0 + 3*557*FLEN/8, x4, x1, x2)

inst_14382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00000000000ff; valaddr_reg:x3; val_offset:43146*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43146*0 + 3*558*FLEN/8, x4, x1, x2)

inst_14383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00000000001ff; valaddr_reg:x3; val_offset:43149*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43149*0 + 3*559*FLEN/8, x4, x1, x2)

inst_14384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00000000003ff; valaddr_reg:x3; val_offset:43152*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43152*0 + 3*560*FLEN/8, x4, x1, x2)

inst_14385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00000000007ff; valaddr_reg:x3; val_offset:43155*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43155*0 + 3*561*FLEN/8, x4, x1, x2)

inst_14386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000000000fff; valaddr_reg:x3; val_offset:43158*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43158*0 + 3*562*FLEN/8, x4, x1, x2)

inst_14387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000000001fff; valaddr_reg:x3; val_offset:43161*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43161*0 + 3*563*FLEN/8, x4, x1, x2)

inst_14388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000000003fff; valaddr_reg:x3; val_offset:43164*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43164*0 + 3*564*FLEN/8, x4, x1, x2)

inst_14389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000000007fff; valaddr_reg:x3; val_offset:43167*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43167*0 + 3*565*FLEN/8, x4, x1, x2)

inst_14390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000000000ffff; valaddr_reg:x3; val_offset:43170*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43170*0 + 3*566*FLEN/8, x4, x1, x2)

inst_14391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000000001ffff; valaddr_reg:x3; val_offset:43173*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43173*0 + 3*567*FLEN/8, x4, x1, x2)

inst_14392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000000003ffff; valaddr_reg:x3; val_offset:43176*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43176*0 + 3*568*FLEN/8, x4, x1, x2)

inst_14393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000000007ffff; valaddr_reg:x3; val_offset:43179*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43179*0 + 3*569*FLEN/8, x4, x1, x2)

inst_14394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00000000fffff; valaddr_reg:x3; val_offset:43182*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43182*0 + 3*570*FLEN/8, x4, x1, x2)

inst_14395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00000001fffff; valaddr_reg:x3; val_offset:43185*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43185*0 + 3*571*FLEN/8, x4, x1, x2)

inst_14396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00000003fffff; valaddr_reg:x3; val_offset:43188*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43188*0 + 3*572*FLEN/8, x4, x1, x2)

inst_14397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00000007fffff; valaddr_reg:x3; val_offset:43191*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43191*0 + 3*573*FLEN/8, x4, x1, x2)

inst_14398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000000ffffff; valaddr_reg:x3; val_offset:43194*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43194*0 + 3*574*FLEN/8, x4, x1, x2)

inst_14399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000001ffffff; valaddr_reg:x3; val_offset:43197*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43197*0 + 3*575*FLEN/8, x4, x1, x2)

inst_14400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000003ffffff; valaddr_reg:x3; val_offset:43200*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43200*0 + 3*576*FLEN/8, x4, x1, x2)

inst_14401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000007ffffff; valaddr_reg:x3; val_offset:43203*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43203*0 + 3*577*FLEN/8, x4, x1, x2)

inst_14402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000000fffffff; valaddr_reg:x3; val_offset:43206*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43206*0 + 3*578*FLEN/8, x4, x1, x2)

inst_14403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000001fffffff; valaddr_reg:x3; val_offset:43209*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43209*0 + 3*579*FLEN/8, x4, x1, x2)

inst_14404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000003fffffff; valaddr_reg:x3; val_offset:43212*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43212*0 + 3*580*FLEN/8, x4, x1, x2)

inst_14405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000007fffffff; valaddr_reg:x3; val_offset:43215*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43215*0 + 3*581*FLEN/8, x4, x1, x2)

inst_14406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00000ffffffff; valaddr_reg:x3; val_offset:43218*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43218*0 + 3*582*FLEN/8, x4, x1, x2)

inst_14407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00001ffffffff; valaddr_reg:x3; val_offset:43221*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43221*0 + 3*583*FLEN/8, x4, x1, x2)

inst_14408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00003ffffffff; valaddr_reg:x3; val_offset:43224*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43224*0 + 3*584*FLEN/8, x4, x1, x2)

inst_14409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00007ffffffff; valaddr_reg:x3; val_offset:43227*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43227*0 + 3*585*FLEN/8, x4, x1, x2)

inst_14410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0000fffffffff; valaddr_reg:x3; val_offset:43230*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43230*0 + 3*586*FLEN/8, x4, x1, x2)

inst_14411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0001fffffffff; valaddr_reg:x3; val_offset:43233*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43233*0 + 3*587*FLEN/8, x4, x1, x2)

inst_14412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0003fffffffff; valaddr_reg:x3; val_offset:43236*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43236*0 + 3*588*FLEN/8, x4, x1, x2)

inst_14413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0007fffffffff; valaddr_reg:x3; val_offset:43239*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43239*0 + 3*589*FLEN/8, x4, x1, x2)

inst_14414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c000ffffffffff; valaddr_reg:x3; val_offset:43242*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43242*0 + 3*590*FLEN/8, x4, x1, x2)

inst_14415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c001ffffffffff; valaddr_reg:x3; val_offset:43245*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43245*0 + 3*591*FLEN/8, x4, x1, x2)

inst_14416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c003ffffffffff; valaddr_reg:x3; val_offset:43248*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43248*0 + 3*592*FLEN/8, x4, x1, x2)

inst_14417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c007ffffffffff; valaddr_reg:x3; val_offset:43251*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43251*0 + 3*593*FLEN/8, x4, x1, x2)

inst_14418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c00fffffffffff; valaddr_reg:x3; val_offset:43254*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43254*0 + 3*594*FLEN/8, x4, x1, x2)

inst_14419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c01fffffffffff; valaddr_reg:x3; val_offset:43257*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43257*0 + 3*595*FLEN/8, x4, x1, x2)

inst_14420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c03fffffffffff; valaddr_reg:x3; val_offset:43260*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43260*0 + 3*596*FLEN/8, x4, x1, x2)

inst_14421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c07fffffffffff; valaddr_reg:x3; val_offset:43263*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43263*0 + 3*597*FLEN/8, x4, x1, x2)

inst_14422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c0ffffffffffff; valaddr_reg:x3; val_offset:43266*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43266*0 + 3*598*FLEN/8, x4, x1, x2)

inst_14423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c1ffffffffffff; valaddr_reg:x3; val_offset:43269*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43269*0 + 3*599*FLEN/8, x4, x1, x2)

inst_14424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c3ffffffffffff; valaddr_reg:x3; val_offset:43272*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43272*0 + 3*600*FLEN/8, x4, x1, x2)

inst_14425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c7ffffffffffff; valaddr_reg:x3; val_offset:43275*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43275*0 + 3*601*FLEN/8, x4, x1, x2)

inst_14426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1c8000000000000; valaddr_reg:x3; val_offset:43278*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43278*0 + 3*602*FLEN/8, x4, x1, x2)

inst_14427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cc000000000000; valaddr_reg:x3; val_offset:43281*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43281*0 + 3*603*FLEN/8, x4, x1, x2)

inst_14428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1ce000000000000; valaddr_reg:x3; val_offset:43284*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43284*0 + 3*604*FLEN/8, x4, x1, x2)

inst_14429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cf000000000000; valaddr_reg:x3; val_offset:43287*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43287*0 + 3*605*FLEN/8, x4, x1, x2)

inst_14430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cf800000000000; valaddr_reg:x3; val_offset:43290*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43290*0 + 3*606*FLEN/8, x4, x1, x2)

inst_14431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfc00000000000; valaddr_reg:x3; val_offset:43293*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43293*0 + 3*607*FLEN/8, x4, x1, x2)

inst_14432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfe00000000000; valaddr_reg:x3; val_offset:43296*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43296*0 + 3*608*FLEN/8, x4, x1, x2)

inst_14433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cff00000000000; valaddr_reg:x3; val_offset:43299*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43299*0 + 3*609*FLEN/8, x4, x1, x2)

inst_14434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cff80000000000; valaddr_reg:x3; val_offset:43302*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43302*0 + 3*610*FLEN/8, x4, x1, x2)

inst_14435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffc0000000000; valaddr_reg:x3; val_offset:43305*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43305*0 + 3*611*FLEN/8, x4, x1, x2)

inst_14436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffe0000000000; valaddr_reg:x3; val_offset:43308*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43308*0 + 3*612*FLEN/8, x4, x1, x2)

inst_14437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfff0000000000; valaddr_reg:x3; val_offset:43311*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43311*0 + 3*613*FLEN/8, x4, x1, x2)

inst_14438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfff8000000000; valaddr_reg:x3; val_offset:43314*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43314*0 + 3*614*FLEN/8, x4, x1, x2)

inst_14439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffc000000000; valaddr_reg:x3; val_offset:43317*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43317*0 + 3*615*FLEN/8, x4, x1, x2)

inst_14440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffe000000000; valaddr_reg:x3; val_offset:43320*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43320*0 + 3*616*FLEN/8, x4, x1, x2)

inst_14441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffff000000000; valaddr_reg:x3; val_offset:43323*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43323*0 + 3*617*FLEN/8, x4, x1, x2)

inst_14442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffff800000000; valaddr_reg:x3; val_offset:43326*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43326*0 + 3*618*FLEN/8, x4, x1, x2)

inst_14443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffc00000000; valaddr_reg:x3; val_offset:43329*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43329*0 + 3*619*FLEN/8, x4, x1, x2)

inst_14444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffe00000000; valaddr_reg:x3; val_offset:43332*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43332*0 + 3*620*FLEN/8, x4, x1, x2)

inst_14445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffff00000000; valaddr_reg:x3; val_offset:43335*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43335*0 + 3*621*FLEN/8, x4, x1, x2)

inst_14446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffff80000000; valaddr_reg:x3; val_offset:43338*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43338*0 + 3*622*FLEN/8, x4, x1, x2)

inst_14447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffc0000000; valaddr_reg:x3; val_offset:43341*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43341*0 + 3*623*FLEN/8, x4, x1, x2)

inst_14448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffe0000000; valaddr_reg:x3; val_offset:43344*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43344*0 + 3*624*FLEN/8, x4, x1, x2)

inst_14449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffff0000000; valaddr_reg:x3; val_offset:43347*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43347*0 + 3*625*FLEN/8, x4, x1, x2)

inst_14450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffff8000000; valaddr_reg:x3; val_offset:43350*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43350*0 + 3*626*FLEN/8, x4, x1, x2)

inst_14451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffc000000; valaddr_reg:x3; val_offset:43353*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43353*0 + 3*627*FLEN/8, x4, x1, x2)

inst_14452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffe000000; valaddr_reg:x3; val_offset:43356*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43356*0 + 3*628*FLEN/8, x4, x1, x2)

inst_14453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffff000000; valaddr_reg:x3; val_offset:43359*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43359*0 + 3*629*FLEN/8, x4, x1, x2)

inst_14454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffff800000; valaddr_reg:x3; val_offset:43362*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43362*0 + 3*630*FLEN/8, x4, x1, x2)

inst_14455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffffc00000; valaddr_reg:x3; val_offset:43365*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43365*0 + 3*631*FLEN/8, x4, x1, x2)

inst_14456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffffe00000; valaddr_reg:x3; val_offset:43368*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43368*0 + 3*632*FLEN/8, x4, x1, x2)

inst_14457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffff00000; valaddr_reg:x3; val_offset:43371*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43371*0 + 3*633*FLEN/8, x4, x1, x2)

inst_14458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffff80000; valaddr_reg:x3; val_offset:43374*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43374*0 + 3*634*FLEN/8, x4, x1, x2)

inst_14459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffffc0000; valaddr_reg:x3; val_offset:43377*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43377*0 + 3*635*FLEN/8, x4, x1, x2)

inst_14460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffffe0000; valaddr_reg:x3; val_offset:43380*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43380*0 + 3*636*FLEN/8, x4, x1, x2)

inst_14461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffffff0000; valaddr_reg:x3; val_offset:43383*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43383*0 + 3*637*FLEN/8, x4, x1, x2)

inst_14462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffffff8000; valaddr_reg:x3; val_offset:43386*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43386*0 + 3*638*FLEN/8, x4, x1, x2)

inst_14463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffffffc000; valaddr_reg:x3; val_offset:43389*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43389*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_14464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffffffe000; valaddr_reg:x3; val_offset:43392*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43392*0 + 3*640*FLEN/8, x4, x1, x2)

inst_14465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffffff000; valaddr_reg:x3; val_offset:43395*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43395*0 + 3*641*FLEN/8, x4, x1, x2)

inst_14466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffffff800; valaddr_reg:x3; val_offset:43398*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43398*0 + 3*642*FLEN/8, x4, x1, x2)

inst_14467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffffffc00; valaddr_reg:x3; val_offset:43401*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43401*0 + 3*643*FLEN/8, x4, x1, x2)

inst_14468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffffffe00; valaddr_reg:x3; val_offset:43404*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43404*0 + 3*644*FLEN/8, x4, x1, x2)

inst_14469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffffffff00; valaddr_reg:x3; val_offset:43407*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43407*0 + 3*645*FLEN/8, x4, x1, x2)

inst_14470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffffffff80; valaddr_reg:x3; val_offset:43410*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43410*0 + 3*646*FLEN/8, x4, x1, x2)

inst_14471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffffffffc0; valaddr_reg:x3; val_offset:43413*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43413*0 + 3*647*FLEN/8, x4, x1, x2)

inst_14472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffffffffe0; valaddr_reg:x3; val_offset:43416*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43416*0 + 3*648*FLEN/8, x4, x1, x2)

inst_14473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffffffff0; valaddr_reg:x3; val_offset:43419*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43419*0 + 3*649*FLEN/8, x4, x1, x2)

inst_14474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffffffff8; valaddr_reg:x3; val_offset:43422*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43422*0 + 3*650*FLEN/8, x4, x1, x2)

inst_14475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffffffffc; valaddr_reg:x3; val_offset:43425*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43425*0 + 3*651*FLEN/8, x4, x1, x2)

inst_14476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cffffffffffffe; valaddr_reg:x3; val_offset:43428*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43428*0 + 3*652*FLEN/8, x4, x1, x2)

inst_14477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f817f4cd829a48b; op2val:0x0;
op3val:0x1cfffffffffffff; valaddr_reg:x3; val_offset:43431*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43431*0 + 3*653*FLEN/8, x4, x1, x2)

inst_14478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:43434*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43434*0 + 3*654*FLEN/8, x4, x1, x2)

inst_14479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:43437*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43437*0 + 3*655*FLEN/8, x4, x1, x2)

inst_14480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:43440*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43440*0 + 3*656*FLEN/8, x4, x1, x2)

inst_14481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:43443*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43443*0 + 3*657*FLEN/8, x4, x1, x2)

inst_14482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:43446*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43446*0 + 3*658*FLEN/8, x4, x1, x2)

inst_14483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:43449*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43449*0 + 3*659*FLEN/8, x4, x1, x2)

inst_14484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:43452*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43452*0 + 3*660*FLEN/8, x4, x1, x2)

inst_14485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:43455*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43455*0 + 3*661*FLEN/8, x4, x1, x2)

inst_14486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:43458*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43458*0 + 3*662*FLEN/8, x4, x1, x2)

inst_14487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:43461*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43461*0 + 3*663*FLEN/8, x4, x1, x2)

inst_14488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:43464*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43464*0 + 3*664*FLEN/8, x4, x1, x2)

inst_14489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:43467*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43467*0 + 3*665*FLEN/8, x4, x1, x2)

inst_14490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:43470*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43470*0 + 3*666*FLEN/8, x4, x1, x2)

inst_14491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:43473*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43473*0 + 3*667*FLEN/8, x4, x1, x2)

inst_14492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:43476*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43476*0 + 3*668*FLEN/8, x4, x1, x2)

inst_14493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:43479*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43479*0 + 3*669*FLEN/8, x4, x1, x2)

inst_14494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:43482*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43482*0 + 3*670*FLEN/8, x4, x1, x2)

inst_14495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:43485*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43485*0 + 3*671*FLEN/8, x4, x1, x2)

inst_14496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:43488*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43488*0 + 3*672*FLEN/8, x4, x1, x2)

inst_14497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:43491*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43491*0 + 3*673*FLEN/8, x4, x1, x2)

inst_14498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:43494*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43494*0 + 3*674*FLEN/8, x4, x1, x2)

inst_14499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:43497*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43497*0 + 3*675*FLEN/8, x4, x1, x2)

inst_14500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000000000000; valaddr_reg:x3; val_offset:43500*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43500*0 + 3*676*FLEN/8, x4, x1, x2)

inst_14501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000000000001; valaddr_reg:x3; val_offset:43503*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43503*0 + 3*677*FLEN/8, x4, x1, x2)

inst_14502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000000000003; valaddr_reg:x3; val_offset:43506*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43506*0 + 3*678*FLEN/8, x4, x1, x2)

inst_14503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000000000007; valaddr_reg:x3; val_offset:43509*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43509*0 + 3*679*FLEN/8, x4, x1, x2)

inst_14504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000000000000f; valaddr_reg:x3; val_offset:43512*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43512*0 + 3*680*FLEN/8, x4, x1, x2)

inst_14505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000000000001f; valaddr_reg:x3; val_offset:43515*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43515*0 + 3*681*FLEN/8, x4, x1, x2)

inst_14506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000000000003f; valaddr_reg:x3; val_offset:43518*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43518*0 + 3*682*FLEN/8, x4, x1, x2)

inst_14507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000000000007f; valaddr_reg:x3; val_offset:43521*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43521*0 + 3*683*FLEN/8, x4, x1, x2)

inst_14508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400000000000ff; valaddr_reg:x3; val_offset:43524*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43524*0 + 3*684*FLEN/8, x4, x1, x2)

inst_14509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400000000001ff; valaddr_reg:x3; val_offset:43527*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43527*0 + 3*685*FLEN/8, x4, x1, x2)

inst_14510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400000000003ff; valaddr_reg:x3; val_offset:43530*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43530*0 + 3*686*FLEN/8, x4, x1, x2)

inst_14511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400000000007ff; valaddr_reg:x3; val_offset:43533*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43533*0 + 3*687*FLEN/8, x4, x1, x2)

inst_14512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000000000fff; valaddr_reg:x3; val_offset:43536*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43536*0 + 3*688*FLEN/8, x4, x1, x2)

inst_14513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000000001fff; valaddr_reg:x3; val_offset:43539*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43539*0 + 3*689*FLEN/8, x4, x1, x2)

inst_14514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000000003fff; valaddr_reg:x3; val_offset:43542*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43542*0 + 3*690*FLEN/8, x4, x1, x2)

inst_14515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000000007fff; valaddr_reg:x3; val_offset:43545*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43545*0 + 3*691*FLEN/8, x4, x1, x2)

inst_14516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000000000ffff; valaddr_reg:x3; val_offset:43548*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43548*0 + 3*692*FLEN/8, x4, x1, x2)

inst_14517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000000001ffff; valaddr_reg:x3; val_offset:43551*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43551*0 + 3*693*FLEN/8, x4, x1, x2)

inst_14518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000000003ffff; valaddr_reg:x3; val_offset:43554*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43554*0 + 3*694*FLEN/8, x4, x1, x2)

inst_14519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000000007ffff; valaddr_reg:x3; val_offset:43557*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43557*0 + 3*695*FLEN/8, x4, x1, x2)

inst_14520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400000000fffff; valaddr_reg:x3; val_offset:43560*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43560*0 + 3*696*FLEN/8, x4, x1, x2)

inst_14521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400000001fffff; valaddr_reg:x3; val_offset:43563*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43563*0 + 3*697*FLEN/8, x4, x1, x2)

inst_14522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400000003fffff; valaddr_reg:x3; val_offset:43566*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43566*0 + 3*698*FLEN/8, x4, x1, x2)

inst_14523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400000007fffff; valaddr_reg:x3; val_offset:43569*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43569*0 + 3*699*FLEN/8, x4, x1, x2)

inst_14524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000000ffffff; valaddr_reg:x3; val_offset:43572*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43572*0 + 3*700*FLEN/8, x4, x1, x2)

inst_14525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000001ffffff; valaddr_reg:x3; val_offset:43575*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43575*0 + 3*701*FLEN/8, x4, x1, x2)

inst_14526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000003ffffff; valaddr_reg:x3; val_offset:43578*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43578*0 + 3*702*FLEN/8, x4, x1, x2)

inst_14527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000007ffffff; valaddr_reg:x3; val_offset:43581*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43581*0 + 3*703*FLEN/8, x4, x1, x2)

inst_14528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000000fffffff; valaddr_reg:x3; val_offset:43584*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43584*0 + 3*704*FLEN/8, x4, x1, x2)

inst_14529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000001fffffff; valaddr_reg:x3; val_offset:43587*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43587*0 + 3*705*FLEN/8, x4, x1, x2)

inst_14530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000003fffffff; valaddr_reg:x3; val_offset:43590*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43590*0 + 3*706*FLEN/8, x4, x1, x2)

inst_14531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000007fffffff; valaddr_reg:x3; val_offset:43593*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43593*0 + 3*707*FLEN/8, x4, x1, x2)

inst_14532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400000ffffffff; valaddr_reg:x3; val_offset:43596*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43596*0 + 3*708*FLEN/8, x4, x1, x2)

inst_14533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400001ffffffff; valaddr_reg:x3; val_offset:43599*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43599*0 + 3*709*FLEN/8, x4, x1, x2)

inst_14534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400003ffffffff; valaddr_reg:x3; val_offset:43602*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43602*0 + 3*710*FLEN/8, x4, x1, x2)

inst_14535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400007ffffffff; valaddr_reg:x3; val_offset:43605*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43605*0 + 3*711*FLEN/8, x4, x1, x2)

inst_14536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240000fffffffff; valaddr_reg:x3; val_offset:43608*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43608*0 + 3*712*FLEN/8, x4, x1, x2)

inst_14537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240001fffffffff; valaddr_reg:x3; val_offset:43611*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43611*0 + 3*713*FLEN/8, x4, x1, x2)

inst_14538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240003fffffffff; valaddr_reg:x3; val_offset:43614*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43614*0 + 3*714*FLEN/8, x4, x1, x2)

inst_14539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240007fffffffff; valaddr_reg:x3; val_offset:43617*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43617*0 + 3*715*FLEN/8, x4, x1, x2)

inst_14540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24000ffffffffff; valaddr_reg:x3; val_offset:43620*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43620*0 + 3*716*FLEN/8, x4, x1, x2)

inst_14541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24001ffffffffff; valaddr_reg:x3; val_offset:43623*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43623*0 + 3*717*FLEN/8, x4, x1, x2)

inst_14542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24003ffffffffff; valaddr_reg:x3; val_offset:43626*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43626*0 + 3*718*FLEN/8, x4, x1, x2)

inst_14543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24007ffffffffff; valaddr_reg:x3; val_offset:43629*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43629*0 + 3*719*FLEN/8, x4, x1, x2)

inst_14544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2400fffffffffff; valaddr_reg:x3; val_offset:43632*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43632*0 + 3*720*FLEN/8, x4, x1, x2)

inst_14545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2401fffffffffff; valaddr_reg:x3; val_offset:43635*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43635*0 + 3*721*FLEN/8, x4, x1, x2)

inst_14546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2403fffffffffff; valaddr_reg:x3; val_offset:43638*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43638*0 + 3*722*FLEN/8, x4, x1, x2)

inst_14547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x2407fffffffffff; valaddr_reg:x3; val_offset:43641*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43641*0 + 3*723*FLEN/8, x4, x1, x2)

inst_14548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x240ffffffffffff; valaddr_reg:x3; val_offset:43644*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43644*0 + 3*724*FLEN/8, x4, x1, x2)

inst_14549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x241ffffffffffff; valaddr_reg:x3; val_offset:43647*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43647*0 + 3*725*FLEN/8, x4, x1, x2)

inst_14550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x243ffffffffffff; valaddr_reg:x3; val_offset:43650*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43650*0 + 3*726*FLEN/8, x4, x1, x2)

inst_14551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x247ffffffffffff; valaddr_reg:x3; val_offset:43653*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43653*0 + 3*727*FLEN/8, x4, x1, x2)

inst_14552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x248000000000000; valaddr_reg:x3; val_offset:43656*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43656*0 + 3*728*FLEN/8, x4, x1, x2)

inst_14553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24c000000000000; valaddr_reg:x3; val_offset:43659*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43659*0 + 3*729*FLEN/8, x4, x1, x2)

inst_14554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24e000000000000; valaddr_reg:x3; val_offset:43662*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43662*0 + 3*730*FLEN/8, x4, x1, x2)

inst_14555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24f000000000000; valaddr_reg:x3; val_offset:43665*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43665*0 + 3*731*FLEN/8, x4, x1, x2)

inst_14556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24f800000000000; valaddr_reg:x3; val_offset:43668*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43668*0 + 3*732*FLEN/8, x4, x1, x2)

inst_14557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fc00000000000; valaddr_reg:x3; val_offset:43671*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43671*0 + 3*733*FLEN/8, x4, x1, x2)

inst_14558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fe00000000000; valaddr_reg:x3; val_offset:43674*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43674*0 + 3*734*FLEN/8, x4, x1, x2)

inst_14559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ff00000000000; valaddr_reg:x3; val_offset:43677*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43677*0 + 3*735*FLEN/8, x4, x1, x2)

inst_14560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ff80000000000; valaddr_reg:x3; val_offset:43680*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43680*0 + 3*736*FLEN/8, x4, x1, x2)

inst_14561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffc0000000000; valaddr_reg:x3; val_offset:43683*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43683*0 + 3*737*FLEN/8, x4, x1, x2)

inst_14562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffe0000000000; valaddr_reg:x3; val_offset:43686*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43686*0 + 3*738*FLEN/8, x4, x1, x2)

inst_14563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fff0000000000; valaddr_reg:x3; val_offset:43689*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43689*0 + 3*739*FLEN/8, x4, x1, x2)

inst_14564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fff8000000000; valaddr_reg:x3; val_offset:43692*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43692*0 + 3*740*FLEN/8, x4, x1, x2)

inst_14565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffc000000000; valaddr_reg:x3; val_offset:43695*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43695*0 + 3*741*FLEN/8, x4, x1, x2)

inst_14566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffe000000000; valaddr_reg:x3; val_offset:43698*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43698*0 + 3*742*FLEN/8, x4, x1, x2)

inst_14567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffff000000000; valaddr_reg:x3; val_offset:43701*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43701*0 + 3*743*FLEN/8, x4, x1, x2)

inst_14568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffff800000000; valaddr_reg:x3; val_offset:43704*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43704*0 + 3*744*FLEN/8, x4, x1, x2)

inst_14569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffffc00000000; valaddr_reg:x3; val_offset:43707*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43707*0 + 3*745*FLEN/8, x4, x1, x2)

inst_14570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffffe00000000; valaddr_reg:x3; val_offset:43710*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43710*0 + 3*746*FLEN/8, x4, x1, x2)

inst_14571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffff00000000; valaddr_reg:x3; val_offset:43713*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43713*0 + 3*747*FLEN/8, x4, x1, x2)

inst_14572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffff80000000; valaddr_reg:x3; val_offset:43716*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43716*0 + 3*748*FLEN/8, x4, x1, x2)

inst_14573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffffc0000000; valaddr_reg:x3; val_offset:43719*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43719*0 + 3*749*FLEN/8, x4, x1, x2)

inst_14574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffffe0000000; valaddr_reg:x3; val_offset:43722*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43722*0 + 3*750*FLEN/8, x4, x1, x2)

inst_14575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffffff0000000; valaddr_reg:x3; val_offset:43725*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43725*0 + 3*751*FLEN/8, x4, x1, x2)

inst_14576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffffff8000000; valaddr_reg:x3; val_offset:43728*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43728*0 + 3*752*FLEN/8, x4, x1, x2)

inst_14577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffffffc000000; valaddr_reg:x3; val_offset:43731*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43731*0 + 3*753*FLEN/8, x4, x1, x2)

inst_14578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffffffe000000; valaddr_reg:x3; val_offset:43734*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43734*0 + 3*754*FLEN/8, x4, x1, x2)

inst_14579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffffff000000; valaddr_reg:x3; val_offset:43737*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43737*0 + 3*755*FLEN/8, x4, x1, x2)

inst_14580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffffff800000; valaddr_reg:x3; val_offset:43740*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43740*0 + 3*756*FLEN/8, x4, x1, x2)

inst_14581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffffffc00000; valaddr_reg:x3; val_offset:43743*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43743*0 + 3*757*FLEN/8, x4, x1, x2)

inst_14582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffffffe00000; valaddr_reg:x3; val_offset:43746*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43746*0 + 3*758*FLEN/8, x4, x1, x2)

inst_14583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffffffff00000; valaddr_reg:x3; val_offset:43749*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43749*0 + 3*759*FLEN/8, x4, x1, x2)

inst_14584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffffffff80000; valaddr_reg:x3; val_offset:43752*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43752*0 + 3*760*FLEN/8, x4, x1, x2)

inst_14585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffffffffc0000; valaddr_reg:x3; val_offset:43755*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43755*0 + 3*761*FLEN/8, x4, x1, x2)

inst_14586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffffffffe0000; valaddr_reg:x3; val_offset:43758*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43758*0 + 3*762*FLEN/8, x4, x1, x2)

inst_14587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffffffff0000; valaddr_reg:x3; val_offset:43761*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43761*0 + 3*763*FLEN/8, x4, x1, x2)

inst_14588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffffffff8000; valaddr_reg:x3; val_offset:43764*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43764*0 + 3*764*FLEN/8, x4, x1, x2)

inst_14589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffffffffc000; valaddr_reg:x3; val_offset:43767*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43767*0 + 3*765*FLEN/8, x4, x1, x2)

inst_14590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24fffffffffe000; valaddr_reg:x3; val_offset:43770*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43770*0 + 3*766*FLEN/8, x4, x1, x2)

inst_14591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x19d560b2f554b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f819d560b2f554b; op2val:0x0;
op3val:0x24ffffffffff000; valaddr_reg:x3; val_offset:43773*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43773*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197383204864,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197387399168,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197389496320,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197390544896,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391069184,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391331328,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391462400,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391527936,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391560704,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391577088,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391585280,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391589376,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391591424,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391592448,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391592960,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593216,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593344,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593408,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593440,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593456,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593464,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593468,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593470,64,FLEN)
NAN_BOXED(6881819421833131263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593471,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932602880,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932602881,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932602883,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932602887,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932602895,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932602911,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932602943,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932603007,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932603135,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932603391,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932603903,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932604927,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932606975,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932611071,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932619263,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932635647,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932668415,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932733951,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870932865023,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870933127167,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870933651455,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870934700031,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870936797183,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870940991487,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870949380095,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870966157311,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906870999711743,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906871066820607,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906871201038335,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906871469473791,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906872006344703,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906873080086527,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906875227570175,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906879522537471,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906888112472063,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906905292341247,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645906939652079615,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645907008371556351,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645907145810509823,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645907420688416767,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645907970444230655,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645909069955858431,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645911268979113983,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645915667025625087,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645924463118647295,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645942055304691711,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13645977239676780543,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13646047608420958207,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13646188345909313535,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13646469820886024191,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13647032770839445503,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13648158670746288127,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13648158670746288128,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13649284570653130752,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13649847520606552064,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650128995583262720,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650269733071618048,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650340101815795712,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650375286187884544,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650392878373928960,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650401674466951168,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650406072513462272,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650408271536717824,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650409371048345600,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650409920804159488,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410195682066432,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410333121019904,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410401840496640,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410436200235008,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410453380104192,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410461970038784,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410466265006080,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410468412489728,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410469486231552,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470023102464,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470291537920,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470425755648,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470492864512,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470526418944,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470543196160,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470551584768,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470555779072,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470557876224,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470558924800,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559449088,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559711232,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559842304,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559907840,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559940608,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559956992,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559965184,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559969280,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559971328,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559972352,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559972864,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559973120,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559973248,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559973312,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559973344,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559973360,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559973368,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559973372,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559973374,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13650410470559973375,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6881855843996631655,64,FLEN)
NAN_BOXED(11524052269631880514,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668928,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668929,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668931,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668935,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668943,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668959,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668991,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669055,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669183,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669439,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669951,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292670975,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292673023,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292677119,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292685311,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292701695,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292734463,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292799999,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292931071,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293193215,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293717503,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793294766079,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793296863231,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793301057535,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793309446143,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793326223359,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793359777791,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793426886655,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793561104383,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793829539839,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064794366410751,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064795440152575,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064797587636223,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064801882603519,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064810472538111,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064827652407295,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064862012145663,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064930731622399,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065068170575871,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065343048482815,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065892804296703,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81066992315924479,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81069191339180031,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81073589385691135,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81082385478713343,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81099977664757759,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81135162036846591,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81205530781024255,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81346268269379583,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81627743246090239,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(82190693199511551,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354175,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354176,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(84442493013196800,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85005442966618112,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85286917943328768,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85427655431684096,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85498024175861760,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85533208547950592,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85550800733995008,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85559596827017216,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85563994873528320,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85566193896783872,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567293408411648,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567843164225536,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568118042132480,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568255481085952,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568324200562688,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568358560301056,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568375740170240,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568384330104832,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568388625072128,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568390772555776,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568391846297600,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392383168512,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392651603968,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392785821696,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392852930560,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392886484992,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392903262208,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392911650816,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392915845120,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392917942272,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392918990848,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919515136,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919777280,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919908352,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919973888,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920006656,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920023040,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920031232,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920035328,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920037376,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038400,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038912,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039168,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039296,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039360,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039392,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039408,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039416,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039420,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039422,64,FLEN)
NAN_BOXED(6881874246100521635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039423,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377280,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377281,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377283,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377287,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377295,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377311,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377343,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377407,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377535,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377791,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505378303,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505379327,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505381375,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505385471,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505393663,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505410047,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505442815,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505508351,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505639423,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505901567,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979506425855,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979507474431,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979509571583,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979513765887,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979522154495,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979538931711,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979572486143,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979639595007,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979773812735,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980042248191,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980579119103,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697981652860927,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697983800344575,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697988095311871,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697996685246463,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698013865115647,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698048224854015,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698116944330751,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698254383284223,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698529261191167,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247699079017005055,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247700178528632831,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247702377551888383,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247706775598399487,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247715571691421695,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247733163877466111,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247768348249554943,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247838716993732607,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247979454482087935,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248260929458798591,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248823879412219903,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062527,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062528,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251075679225905152,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251638629179326464,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251920104156037120,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252060841644392448,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252131210388570112,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252166394760658944,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252183986946703360,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252192783039725568,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252197181086236672,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252199380109492224,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252200479621120000,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201029376933888,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201304254840832,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201441693794304,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201510413271040,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201544773009408,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201561952878592,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201570542813184,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201574837780480,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201576985264128,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578059005952,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578595876864,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578864312320,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578998530048,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579065638912,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579099193344,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579115970560,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579124359168,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579128553472,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579130650624,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579131699200,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132223488,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132485632,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132616704,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132682240,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132715008,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132731392,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132739584,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132743680,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132745728,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132746752,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747264,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747520,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747648,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747712,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747744,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747760,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747768,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747772,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747774,64,FLEN)
NAN_BOXED(6881910613254048939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747775,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297216,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297217,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297219,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297223,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297231,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297247,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297279,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297343,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297471,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297727,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284298239,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284299263,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284301311,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284305407,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284313599,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284329983,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284362751,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284428287,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284559359,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284821503,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828285345791,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828286394367,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828288491519,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828292685823,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828301074431,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828317851647,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828351406079,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828418514943,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828552732671,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828821168127,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954829358039039,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954830431780863,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954832579264511,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954836874231807,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954845464166399,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954862644035583,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954897003773951,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954965723250687,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326955103162204159,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326955378040111103,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326955927795924991,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326957027307552767,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326959226330808319,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326963624377319423,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326972420470341631,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326990012656386047,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327025197028474879,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327095565772652543,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327236303261007871,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327517778237718527,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9328080728191139839,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9329206628097982463,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9329206628097982464,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9330332528004825088,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9330895477958246400,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331176952934957056,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331317690423312384,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331388059167490048,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331423243539578880,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331440835725623296,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331449631818645504,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331454029865156608,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331456228888412160,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331457328400039936,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331457878155853824,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458153033760768,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458290472714240,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458359192190976,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458393551929344,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458410731798528,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458419321733120,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458423616700416,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458425764184064,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458426837925888,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427374796800,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427643232256,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427777449984,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427844558848,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427878113280,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427894890496,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427903279104,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427907473408,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427909570560,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427910619136,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911143424,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911405568,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911536640,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911602176,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911634944,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911651328,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911659520,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911663616,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911665664,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911666688,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667200,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667456,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667584,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667648,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667680,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667696,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667704,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667708,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667710,64,FLEN)
NAN_BOXED(6881914558024892451,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667711,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373888,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373889,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373891,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373895,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373903,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373919,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373951,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374015,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374143,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374399,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374911,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566375935,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566377983,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566382079,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566390271,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566406655,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566439423,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566504959,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566636031,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566898175,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789567422463,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789568471039,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789570568191,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789574762495,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789583151103,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789599928319,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789633482751,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789700591615,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789834809343,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790103244799,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790640115711,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100791713857535,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100793861341183,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100798156308479,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100806746243071,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100823926112255,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100858285850623,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100927005327359,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101064444280831,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101339322187775,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101889078001663,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126102988589629439,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126105187612884991,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126109585659396095,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126118381752418303,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126135973938462719,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126171158310551551,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126241527054729215,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126382264543084543,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126663739519795199,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127226689473216511,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059135,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059136,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(129478489286901760,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130041439240323072,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130322914217033728,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130463651705389056,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130534020449566720,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130569204821655552,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130586797007699968,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130595593100722176,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130599991147233280,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130602190170488832,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603289682116608,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603839437930496,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604114315837440,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604251754790912,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604320474267648,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604354834006016,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604372013875200,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604380603809792,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604384898777088,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604387046260736,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388120002560,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388656873472,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388925308928,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389059526656,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389126635520,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389160189952,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389176967168,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389185355776,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389189550080,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389191647232,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389192695808,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193220096,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193482240,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193613312,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193678848,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193711616,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193728000,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193736192,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193740288,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193742336,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743360,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743872,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744128,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744256,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744320,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744352,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744368,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744376,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744380,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744382,64,FLEN)
NAN_BOXED(6881921673619678347,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744383,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337856,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337857,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337859,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337863,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337871,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337887,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337919,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337983,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338111,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338367,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338879,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585339903,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585341951,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585346047,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585354239,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585370623,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585403391,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585468927,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585599999,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585862143,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586586386431,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586587435007,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586589532159,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586593726463,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586602115071,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586618892287,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586652446719,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586719555583,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586853773311,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129587122208767,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129587659079679,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129588732821503,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129590880305151,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129595175272447,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129603765207039,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129620945076223,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129655304814591,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129724024291327,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129861463244799,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162130136341151743,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162130686096965631,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162131785608593407,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162133984631848959,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162138382678360063,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162147178771382271,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162164770957426687,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162199955329515519,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162270324073693183,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162411061562048511,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162692536538759167,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(163255486492180479,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(164381386399023103,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(164381386399023104,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(165507286305865728,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166070236259287040,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166351711235997696,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166492448724353024,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166562817468530688,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166598001840619520,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166615594026663936,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166624390119686144,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166628788166197248,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166630987189452800,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632086701080576,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632636456894464,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632911334801408,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633048773754880,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633117493231616,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633151852969984,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633169032839168,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633177622773760,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633181917741056,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633184065224704,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185138966528,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185675837440,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185944272896,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186078490624,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186145599488,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186179153920,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186195931136,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186204319744,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186208514048,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186210611200,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186211659776,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212184064,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212446208,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212577280,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212642816,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212675584,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212691968,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212700160,64,FLEN)
NAN_BOXED(6881954698479228235,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212704256,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
