
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_9216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000003fffffff; valaddr_reg:x3; val_offset:27648*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27648*0 + 3*0*FLEN/8, x4, x1, x2)

inst_9217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000007fffffff; valaddr_reg:x3; val_offset:27651*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27651*0 + 3*1*FLEN/8, x4, x1, x2)

inst_9218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000000ffffffff; valaddr_reg:x3; val_offset:27654*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27654*0 + 3*2*FLEN/8, x4, x1, x2)

inst_9219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000001ffffffff; valaddr_reg:x3; val_offset:27657*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27657*0 + 3*3*FLEN/8, x4, x1, x2)

inst_9220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000003ffffffff; valaddr_reg:x3; val_offset:27660*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27660*0 + 3*4*FLEN/8, x4, x1, x2)

inst_9221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000007ffffffff; valaddr_reg:x3; val_offset:27663*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27663*0 + 3*5*FLEN/8, x4, x1, x2)

inst_9222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00000fffffffff; valaddr_reg:x3; val_offset:27666*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27666*0 + 3*6*FLEN/8, x4, x1, x2)

inst_9223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00001fffffffff; valaddr_reg:x3; val_offset:27669*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27669*0 + 3*7*FLEN/8, x4, x1, x2)

inst_9224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00003fffffffff; valaddr_reg:x3; val_offset:27672*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27672*0 + 3*8*FLEN/8, x4, x1, x2)

inst_9225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00007fffffffff; valaddr_reg:x3; val_offset:27675*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27675*0 + 3*9*FLEN/8, x4, x1, x2)

inst_9226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0000ffffffffff; valaddr_reg:x3; val_offset:27678*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27678*0 + 3*10*FLEN/8, x4, x1, x2)

inst_9227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0001ffffffffff; valaddr_reg:x3; val_offset:27681*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27681*0 + 3*11*FLEN/8, x4, x1, x2)

inst_9228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0003ffffffffff; valaddr_reg:x3; val_offset:27684*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27684*0 + 3*12*FLEN/8, x4, x1, x2)

inst_9229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0007ffffffffff; valaddr_reg:x3; val_offset:27687*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27687*0 + 3*13*FLEN/8, x4, x1, x2)

inst_9230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf000fffffffffff; valaddr_reg:x3; val_offset:27690*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27690*0 + 3*14*FLEN/8, x4, x1, x2)

inst_9231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf001fffffffffff; valaddr_reg:x3; val_offset:27693*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27693*0 + 3*15*FLEN/8, x4, x1, x2)

inst_9232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf003fffffffffff; valaddr_reg:x3; val_offset:27696*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27696*0 + 3*16*FLEN/8, x4, x1, x2)

inst_9233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf007fffffffffff; valaddr_reg:x3; val_offset:27699*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27699*0 + 3*17*FLEN/8, x4, x1, x2)

inst_9234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf00ffffffffffff; valaddr_reg:x3; val_offset:27702*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27702*0 + 3*18*FLEN/8, x4, x1, x2)

inst_9235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf01ffffffffffff; valaddr_reg:x3; val_offset:27705*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27705*0 + 3*19*FLEN/8, x4, x1, x2)

inst_9236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf03ffffffffffff; valaddr_reg:x3; val_offset:27708*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27708*0 + 3*20*FLEN/8, x4, x1, x2)

inst_9237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf07ffffffffffff; valaddr_reg:x3; val_offset:27711*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27711*0 + 3*21*FLEN/8, x4, x1, x2)

inst_9238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf08000000000000; valaddr_reg:x3; val_offset:27714*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27714*0 + 3*22*FLEN/8, x4, x1, x2)

inst_9239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0c000000000000; valaddr_reg:x3; val_offset:27717*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27717*0 + 3*23*FLEN/8, x4, x1, x2)

inst_9240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0e000000000000; valaddr_reg:x3; val_offset:27720*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27720*0 + 3*24*FLEN/8, x4, x1, x2)

inst_9241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0f000000000000; valaddr_reg:x3; val_offset:27723*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27723*0 + 3*25*FLEN/8, x4, x1, x2)

inst_9242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0f800000000000; valaddr_reg:x3; val_offset:27726*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27726*0 + 3*26*FLEN/8, x4, x1, x2)

inst_9243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fc00000000000; valaddr_reg:x3; val_offset:27729*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27729*0 + 3*27*FLEN/8, x4, x1, x2)

inst_9244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fe00000000000; valaddr_reg:x3; val_offset:27732*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27732*0 + 3*28*FLEN/8, x4, x1, x2)

inst_9245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ff00000000000; valaddr_reg:x3; val_offset:27735*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27735*0 + 3*29*FLEN/8, x4, x1, x2)

inst_9246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ff80000000000; valaddr_reg:x3; val_offset:27738*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27738*0 + 3*30*FLEN/8, x4, x1, x2)

inst_9247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffc0000000000; valaddr_reg:x3; val_offset:27741*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27741*0 + 3*31*FLEN/8, x4, x1, x2)

inst_9248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffe0000000000; valaddr_reg:x3; val_offset:27744*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27744*0 + 3*32*FLEN/8, x4, x1, x2)

inst_9249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fff0000000000; valaddr_reg:x3; val_offset:27747*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27747*0 + 3*33*FLEN/8, x4, x1, x2)

inst_9250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fff8000000000; valaddr_reg:x3; val_offset:27750*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27750*0 + 3*34*FLEN/8, x4, x1, x2)

inst_9251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffc000000000; valaddr_reg:x3; val_offset:27753*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27753*0 + 3*35*FLEN/8, x4, x1, x2)

inst_9252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffe000000000; valaddr_reg:x3; val_offset:27756*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27756*0 + 3*36*FLEN/8, x4, x1, x2)

inst_9253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffff000000000; valaddr_reg:x3; val_offset:27759*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27759*0 + 3*37*FLEN/8, x4, x1, x2)

inst_9254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffff800000000; valaddr_reg:x3; val_offset:27762*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27762*0 + 3*38*FLEN/8, x4, x1, x2)

inst_9255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffc00000000; valaddr_reg:x3; val_offset:27765*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27765*0 + 3*39*FLEN/8, x4, x1, x2)

inst_9256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffe00000000; valaddr_reg:x3; val_offset:27768*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27768*0 + 3*40*FLEN/8, x4, x1, x2)

inst_9257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffff00000000; valaddr_reg:x3; val_offset:27771*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27771*0 + 3*41*FLEN/8, x4, x1, x2)

inst_9258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffff80000000; valaddr_reg:x3; val_offset:27774*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27774*0 + 3*42*FLEN/8, x4, x1, x2)

inst_9259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffc0000000; valaddr_reg:x3; val_offset:27777*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27777*0 + 3*43*FLEN/8, x4, x1, x2)

inst_9260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffe0000000; valaddr_reg:x3; val_offset:27780*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27780*0 + 3*44*FLEN/8, x4, x1, x2)

inst_9261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffff0000000; valaddr_reg:x3; val_offset:27783*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27783*0 + 3*45*FLEN/8, x4, x1, x2)

inst_9262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffff8000000; valaddr_reg:x3; val_offset:27786*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27786*0 + 3*46*FLEN/8, x4, x1, x2)

inst_9263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffc000000; valaddr_reg:x3; val_offset:27789*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27789*0 + 3*47*FLEN/8, x4, x1, x2)

inst_9264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffe000000; valaddr_reg:x3; val_offset:27792*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27792*0 + 3*48*FLEN/8, x4, x1, x2)

inst_9265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffff000000; valaddr_reg:x3; val_offset:27795*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27795*0 + 3*49*FLEN/8, x4, x1, x2)

inst_9266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffff800000; valaddr_reg:x3; val_offset:27798*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27798*0 + 3*50*FLEN/8, x4, x1, x2)

inst_9267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffffc00000; valaddr_reg:x3; val_offset:27801*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27801*0 + 3*51*FLEN/8, x4, x1, x2)

inst_9268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffffe00000; valaddr_reg:x3; val_offset:27804*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27804*0 + 3*52*FLEN/8, x4, x1, x2)

inst_9269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffff00000; valaddr_reg:x3; val_offset:27807*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27807*0 + 3*53*FLEN/8, x4, x1, x2)

inst_9270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffff80000; valaddr_reg:x3; val_offset:27810*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27810*0 + 3*54*FLEN/8, x4, x1, x2)

inst_9271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffffc0000; valaddr_reg:x3; val_offset:27813*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27813*0 + 3*55*FLEN/8, x4, x1, x2)

inst_9272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffffe0000; valaddr_reg:x3; val_offset:27816*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27816*0 + 3*56*FLEN/8, x4, x1, x2)

inst_9273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffffff0000; valaddr_reg:x3; val_offset:27819*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27819*0 + 3*57*FLEN/8, x4, x1, x2)

inst_9274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffffff8000; valaddr_reg:x3; val_offset:27822*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27822*0 + 3*58*FLEN/8, x4, x1, x2)

inst_9275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffffffc000; valaddr_reg:x3; val_offset:27825*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27825*0 + 3*59*FLEN/8, x4, x1, x2)

inst_9276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffffffe000; valaddr_reg:x3; val_offset:27828*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27828*0 + 3*60*FLEN/8, x4, x1, x2)

inst_9277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffffff000; valaddr_reg:x3; val_offset:27831*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27831*0 + 3*61*FLEN/8, x4, x1, x2)

inst_9278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffffff800; valaddr_reg:x3; val_offset:27834*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27834*0 + 3*62*FLEN/8, x4, x1, x2)

inst_9279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffffffc00; valaddr_reg:x3; val_offset:27837*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27837*0 + 3*63*FLEN/8, x4, x1, x2)

inst_9280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffffffe00; valaddr_reg:x3; val_offset:27840*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27840*0 + 3*64*FLEN/8, x4, x1, x2)

inst_9281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffffffff00; valaddr_reg:x3; val_offset:27843*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27843*0 + 3*65*FLEN/8, x4, x1, x2)

inst_9282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffffffff80; valaddr_reg:x3; val_offset:27846*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27846*0 + 3*66*FLEN/8, x4, x1, x2)

inst_9283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffffffffc0; valaddr_reg:x3; val_offset:27849*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27849*0 + 3*67*FLEN/8, x4, x1, x2)

inst_9284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffffffffe0; valaddr_reg:x3; val_offset:27852*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27852*0 + 3*68*FLEN/8, x4, x1, x2)

inst_9285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffffffff0; valaddr_reg:x3; val_offset:27855*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27855*0 + 3*69*FLEN/8, x4, x1, x2)

inst_9286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffffffff8; valaddr_reg:x3; val_offset:27858*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27858*0 + 3*70*FLEN/8, x4, x1, x2)

inst_9287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffffffffc; valaddr_reg:x3; val_offset:27861*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27861*0 + 3*71*FLEN/8, x4, x1, x2)

inst_9288:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0ffffffffffffe; valaddr_reg:x3; val_offset:27864*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27864*0 + 3*72*FLEN/8, x4, x1, x2)

inst_9289:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf0fffffffffffff; valaddr_reg:x3; val_offset:27867*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27867*0 + 3*73*FLEN/8, x4, x1, x2)

inst_9290:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:27870*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27870*0 + 3*74*FLEN/8, x4, x1, x2)

inst_9291:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:27873*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27873*0 + 3*75*FLEN/8, x4, x1, x2)

inst_9292:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:27876*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27876*0 + 3*76*FLEN/8, x4, x1, x2)

inst_9293:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:27879*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27879*0 + 3*77*FLEN/8, x4, x1, x2)

inst_9294:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:27882*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27882*0 + 3*78*FLEN/8, x4, x1, x2)

inst_9295:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:27885*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27885*0 + 3*79*FLEN/8, x4, x1, x2)

inst_9296:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:27888*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27888*0 + 3*80*FLEN/8, x4, x1, x2)

inst_9297:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:27891*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27891*0 + 3*81*FLEN/8, x4, x1, x2)

inst_9298:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:27894*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27894*0 + 3*82*FLEN/8, x4, x1, x2)

inst_9299:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:27897*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27897*0 + 3*83*FLEN/8, x4, x1, x2)

inst_9300:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:27900*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27900*0 + 3*84*FLEN/8, x4, x1, x2)

inst_9301:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:27903*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27903*0 + 3*85*FLEN/8, x4, x1, x2)

inst_9302:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:27906*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27906*0 + 3*86*FLEN/8, x4, x1, x2)

inst_9303:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:27909*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27909*0 + 3*87*FLEN/8, x4, x1, x2)

inst_9304:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:27912*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27912*0 + 3*88*FLEN/8, x4, x1, x2)

inst_9305:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:27915*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27915*0 + 3*89*FLEN/8, x4, x1, x2)

inst_9306:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:27918*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27918*0 + 3*90*FLEN/8, x4, x1, x2)

inst_9307:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:27921*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27921*0 + 3*91*FLEN/8, x4, x1, x2)

inst_9308:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:27924*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27924*0 + 3*92*FLEN/8, x4, x1, x2)

inst_9309:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:27927*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27927*0 + 3*93*FLEN/8, x4, x1, x2)

inst_9310:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:27930*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27930*0 + 3*94*FLEN/8, x4, x1, x2)

inst_9311:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7cb7e10454cbf and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x58468b6d79f9f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77cb7e10454cbf; op2val:0x9ff58468b6d79f9f;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:27933*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27933*0 + 3*95*FLEN/8, x4, x1, x2)

inst_9312:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:27936*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27936*0 + 3*96*FLEN/8, x4, x1, x2)

inst_9313:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:27939*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27939*0 + 3*97*FLEN/8, x4, x1, x2)

inst_9314:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:27942*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27942*0 + 3*98*FLEN/8, x4, x1, x2)

inst_9315:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:27945*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27945*0 + 3*99*FLEN/8, x4, x1, x2)

inst_9316:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:27948*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27948*0 + 3*100*FLEN/8, x4, x1, x2)

inst_9317:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:27951*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27951*0 + 3*101*FLEN/8, x4, x1, x2)

inst_9318:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:27954*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27954*0 + 3*102*FLEN/8, x4, x1, x2)

inst_9319:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:27957*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27957*0 + 3*103*FLEN/8, x4, x1, x2)

inst_9320:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:27960*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27960*0 + 3*104*FLEN/8, x4, x1, x2)

inst_9321:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:27963*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27963*0 + 3*105*FLEN/8, x4, x1, x2)

inst_9322:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:27966*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27966*0 + 3*106*FLEN/8, x4, x1, x2)

inst_9323:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:27969*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27969*0 + 3*107*FLEN/8, x4, x1, x2)

inst_9324:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:27972*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27972*0 + 3*108*FLEN/8, x4, x1, x2)

inst_9325:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:27975*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27975*0 + 3*109*FLEN/8, x4, x1, x2)

inst_9326:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:27978*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27978*0 + 3*110*FLEN/8, x4, x1, x2)

inst_9327:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:27981*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27981*0 + 3*111*FLEN/8, x4, x1, x2)

inst_9328:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:27984*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27984*0 + 3*112*FLEN/8, x4, x1, x2)

inst_9329:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:27987*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27987*0 + 3*113*FLEN/8, x4, x1, x2)

inst_9330:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:27990*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27990*0 + 3*114*FLEN/8, x4, x1, x2)

inst_9331:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:27993*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27993*0 + 3*115*FLEN/8, x4, x1, x2)

inst_9332:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:27996*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27996*0 + 3*116*FLEN/8, x4, x1, x2)

inst_9333:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:27999*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 27999*0 + 3*117*FLEN/8, x4, x1, x2)

inst_9334:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000000000000; valaddr_reg:x3; val_offset:28002*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28002*0 + 3*118*FLEN/8, x4, x1, x2)

inst_9335:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000000000001; valaddr_reg:x3; val_offset:28005*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28005*0 + 3*119*FLEN/8, x4, x1, x2)

inst_9336:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000000000003; valaddr_reg:x3; val_offset:28008*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28008*0 + 3*120*FLEN/8, x4, x1, x2)

inst_9337:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000000000007; valaddr_reg:x3; val_offset:28011*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28011*0 + 3*121*FLEN/8, x4, x1, x2)

inst_9338:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000000000000f; valaddr_reg:x3; val_offset:28014*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28014*0 + 3*122*FLEN/8, x4, x1, x2)

inst_9339:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000000000001f; valaddr_reg:x3; val_offset:28017*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28017*0 + 3*123*FLEN/8, x4, x1, x2)

inst_9340:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000000000003f; valaddr_reg:x3; val_offset:28020*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28020*0 + 3*124*FLEN/8, x4, x1, x2)

inst_9341:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000000000007f; valaddr_reg:x3; val_offset:28023*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28023*0 + 3*125*FLEN/8, x4, x1, x2)

inst_9342:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00000000000ff; valaddr_reg:x3; val_offset:28026*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28026*0 + 3*126*FLEN/8, x4, x1, x2)

inst_9343:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00000000001ff; valaddr_reg:x3; val_offset:28029*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28029*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_9344:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00000000003ff; valaddr_reg:x3; val_offset:28032*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28032*0 + 3*128*FLEN/8, x4, x1, x2)

inst_9345:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00000000007ff; valaddr_reg:x3; val_offset:28035*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28035*0 + 3*129*FLEN/8, x4, x1, x2)

inst_9346:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000000000fff; valaddr_reg:x3; val_offset:28038*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28038*0 + 3*130*FLEN/8, x4, x1, x2)

inst_9347:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000000001fff; valaddr_reg:x3; val_offset:28041*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28041*0 + 3*131*FLEN/8, x4, x1, x2)

inst_9348:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000000003fff; valaddr_reg:x3; val_offset:28044*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28044*0 + 3*132*FLEN/8, x4, x1, x2)

inst_9349:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000000007fff; valaddr_reg:x3; val_offset:28047*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28047*0 + 3*133*FLEN/8, x4, x1, x2)

inst_9350:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000000000ffff; valaddr_reg:x3; val_offset:28050*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28050*0 + 3*134*FLEN/8, x4, x1, x2)

inst_9351:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000000001ffff; valaddr_reg:x3; val_offset:28053*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28053*0 + 3*135*FLEN/8, x4, x1, x2)

inst_9352:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000000003ffff; valaddr_reg:x3; val_offset:28056*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28056*0 + 3*136*FLEN/8, x4, x1, x2)

inst_9353:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000000007ffff; valaddr_reg:x3; val_offset:28059*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28059*0 + 3*137*FLEN/8, x4, x1, x2)

inst_9354:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00000000fffff; valaddr_reg:x3; val_offset:28062*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28062*0 + 3*138*FLEN/8, x4, x1, x2)

inst_9355:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00000001fffff; valaddr_reg:x3; val_offset:28065*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28065*0 + 3*139*FLEN/8, x4, x1, x2)

inst_9356:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00000003fffff; valaddr_reg:x3; val_offset:28068*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28068*0 + 3*140*FLEN/8, x4, x1, x2)

inst_9357:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00000007fffff; valaddr_reg:x3; val_offset:28071*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28071*0 + 3*141*FLEN/8, x4, x1, x2)

inst_9358:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000000ffffff; valaddr_reg:x3; val_offset:28074*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28074*0 + 3*142*FLEN/8, x4, x1, x2)

inst_9359:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000001ffffff; valaddr_reg:x3; val_offset:28077*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28077*0 + 3*143*FLEN/8, x4, x1, x2)

inst_9360:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000003ffffff; valaddr_reg:x3; val_offset:28080*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28080*0 + 3*144*FLEN/8, x4, x1, x2)

inst_9361:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000007ffffff; valaddr_reg:x3; val_offset:28083*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28083*0 + 3*145*FLEN/8, x4, x1, x2)

inst_9362:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000000fffffff; valaddr_reg:x3; val_offset:28086*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28086*0 + 3*146*FLEN/8, x4, x1, x2)

inst_9363:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000001fffffff; valaddr_reg:x3; val_offset:28089*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28089*0 + 3*147*FLEN/8, x4, x1, x2)

inst_9364:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000003fffffff; valaddr_reg:x3; val_offset:28092*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28092*0 + 3*148*FLEN/8, x4, x1, x2)

inst_9365:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000007fffffff; valaddr_reg:x3; val_offset:28095*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28095*0 + 3*149*FLEN/8, x4, x1, x2)

inst_9366:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00000ffffffff; valaddr_reg:x3; val_offset:28098*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28098*0 + 3*150*FLEN/8, x4, x1, x2)

inst_9367:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00001ffffffff; valaddr_reg:x3; val_offset:28101*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28101*0 + 3*151*FLEN/8, x4, x1, x2)

inst_9368:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00003ffffffff; valaddr_reg:x3; val_offset:28104*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28104*0 + 3*152*FLEN/8, x4, x1, x2)

inst_9369:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00007ffffffff; valaddr_reg:x3; val_offset:28107*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28107*0 + 3*153*FLEN/8, x4, x1, x2)

inst_9370:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0000fffffffff; valaddr_reg:x3; val_offset:28110*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28110*0 + 3*154*FLEN/8, x4, x1, x2)

inst_9371:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0001fffffffff; valaddr_reg:x3; val_offset:28113*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28113*0 + 3*155*FLEN/8, x4, x1, x2)

inst_9372:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0003fffffffff; valaddr_reg:x3; val_offset:28116*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28116*0 + 3*156*FLEN/8, x4, x1, x2)

inst_9373:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0007fffffffff; valaddr_reg:x3; val_offset:28119*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28119*0 + 3*157*FLEN/8, x4, x1, x2)

inst_9374:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f000ffffffffff; valaddr_reg:x3; val_offset:28122*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28122*0 + 3*158*FLEN/8, x4, x1, x2)

inst_9375:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f001ffffffffff; valaddr_reg:x3; val_offset:28125*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28125*0 + 3*159*FLEN/8, x4, x1, x2)

inst_9376:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f003ffffffffff; valaddr_reg:x3; val_offset:28128*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28128*0 + 3*160*FLEN/8, x4, x1, x2)

inst_9377:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f007ffffffffff; valaddr_reg:x3; val_offset:28131*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28131*0 + 3*161*FLEN/8, x4, x1, x2)

inst_9378:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f00fffffffffff; valaddr_reg:x3; val_offset:28134*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28134*0 + 3*162*FLEN/8, x4, x1, x2)

inst_9379:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f01fffffffffff; valaddr_reg:x3; val_offset:28137*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28137*0 + 3*163*FLEN/8, x4, x1, x2)

inst_9380:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f03fffffffffff; valaddr_reg:x3; val_offset:28140*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28140*0 + 3*164*FLEN/8, x4, x1, x2)

inst_9381:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f07fffffffffff; valaddr_reg:x3; val_offset:28143*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28143*0 + 3*165*FLEN/8, x4, x1, x2)

inst_9382:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f0ffffffffffff; valaddr_reg:x3; val_offset:28146*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28146*0 + 3*166*FLEN/8, x4, x1, x2)

inst_9383:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f1ffffffffffff; valaddr_reg:x3; val_offset:28149*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28149*0 + 3*167*FLEN/8, x4, x1, x2)

inst_9384:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f3ffffffffffff; valaddr_reg:x3; val_offset:28152*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28152*0 + 3*168*FLEN/8, x4, x1, x2)

inst_9385:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f7ffffffffffff; valaddr_reg:x3; val_offset:28155*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28155*0 + 3*169*FLEN/8, x4, x1, x2)

inst_9386:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83f8000000000000; valaddr_reg:x3; val_offset:28158*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28158*0 + 3*170*FLEN/8, x4, x1, x2)

inst_9387:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fc000000000000; valaddr_reg:x3; val_offset:28161*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28161*0 + 3*171*FLEN/8, x4, x1, x2)

inst_9388:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fe000000000000; valaddr_reg:x3; val_offset:28164*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28164*0 + 3*172*FLEN/8, x4, x1, x2)

inst_9389:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ff000000000000; valaddr_reg:x3; val_offset:28167*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28167*0 + 3*173*FLEN/8, x4, x1, x2)

inst_9390:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ff800000000000; valaddr_reg:x3; val_offset:28170*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28170*0 + 3*174*FLEN/8, x4, x1, x2)

inst_9391:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffc00000000000; valaddr_reg:x3; val_offset:28173*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28173*0 + 3*175*FLEN/8, x4, x1, x2)

inst_9392:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffe00000000000; valaddr_reg:x3; val_offset:28176*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28176*0 + 3*176*FLEN/8, x4, x1, x2)

inst_9393:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fff00000000000; valaddr_reg:x3; val_offset:28179*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28179*0 + 3*177*FLEN/8, x4, x1, x2)

inst_9394:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fff80000000000; valaddr_reg:x3; val_offset:28182*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28182*0 + 3*178*FLEN/8, x4, x1, x2)

inst_9395:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffc0000000000; valaddr_reg:x3; val_offset:28185*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28185*0 + 3*179*FLEN/8, x4, x1, x2)

inst_9396:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffe0000000000; valaddr_reg:x3; val_offset:28188*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28188*0 + 3*180*FLEN/8, x4, x1, x2)

inst_9397:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffff0000000000; valaddr_reg:x3; val_offset:28191*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28191*0 + 3*181*FLEN/8, x4, x1, x2)

inst_9398:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffff8000000000; valaddr_reg:x3; val_offset:28194*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28194*0 + 3*182*FLEN/8, x4, x1, x2)

inst_9399:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffc000000000; valaddr_reg:x3; val_offset:28197*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28197*0 + 3*183*FLEN/8, x4, x1, x2)

inst_9400:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffe000000000; valaddr_reg:x3; val_offset:28200*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28200*0 + 3*184*FLEN/8, x4, x1, x2)

inst_9401:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffff000000000; valaddr_reg:x3; val_offset:28203*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28203*0 + 3*185*FLEN/8, x4, x1, x2)

inst_9402:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffff800000000; valaddr_reg:x3; val_offset:28206*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28206*0 + 3*186*FLEN/8, x4, x1, x2)

inst_9403:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffc00000000; valaddr_reg:x3; val_offset:28209*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28209*0 + 3*187*FLEN/8, x4, x1, x2)

inst_9404:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffe00000000; valaddr_reg:x3; val_offset:28212*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28212*0 + 3*188*FLEN/8, x4, x1, x2)

inst_9405:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffff00000000; valaddr_reg:x3; val_offset:28215*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28215*0 + 3*189*FLEN/8, x4, x1, x2)

inst_9406:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffff80000000; valaddr_reg:x3; val_offset:28218*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28218*0 + 3*190*FLEN/8, x4, x1, x2)

inst_9407:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffc0000000; valaddr_reg:x3; val_offset:28221*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28221*0 + 3*191*FLEN/8, x4, x1, x2)

inst_9408:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffe0000000; valaddr_reg:x3; val_offset:28224*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28224*0 + 3*192*FLEN/8, x4, x1, x2)

inst_9409:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffff0000000; valaddr_reg:x3; val_offset:28227*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28227*0 + 3*193*FLEN/8, x4, x1, x2)

inst_9410:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffff8000000; valaddr_reg:x3; val_offset:28230*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28230*0 + 3*194*FLEN/8, x4, x1, x2)

inst_9411:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffc000000; valaddr_reg:x3; val_offset:28233*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28233*0 + 3*195*FLEN/8, x4, x1, x2)

inst_9412:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffe000000; valaddr_reg:x3; val_offset:28236*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28236*0 + 3*196*FLEN/8, x4, x1, x2)

inst_9413:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffff000000; valaddr_reg:x3; val_offset:28239*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28239*0 + 3*197*FLEN/8, x4, x1, x2)

inst_9414:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffff800000; valaddr_reg:x3; val_offset:28242*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28242*0 + 3*198*FLEN/8, x4, x1, x2)

inst_9415:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffffc00000; valaddr_reg:x3; val_offset:28245*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28245*0 + 3*199*FLEN/8, x4, x1, x2)

inst_9416:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffffe00000; valaddr_reg:x3; val_offset:28248*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28248*0 + 3*200*FLEN/8, x4, x1, x2)

inst_9417:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffff00000; valaddr_reg:x3; val_offset:28251*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28251*0 + 3*201*FLEN/8, x4, x1, x2)

inst_9418:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffff80000; valaddr_reg:x3; val_offset:28254*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28254*0 + 3*202*FLEN/8, x4, x1, x2)

inst_9419:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffffc0000; valaddr_reg:x3; val_offset:28257*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28257*0 + 3*203*FLEN/8, x4, x1, x2)

inst_9420:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffffe0000; valaddr_reg:x3; val_offset:28260*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28260*0 + 3*204*FLEN/8, x4, x1, x2)

inst_9421:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffffff0000; valaddr_reg:x3; val_offset:28263*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28263*0 + 3*205*FLEN/8, x4, x1, x2)

inst_9422:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffffff8000; valaddr_reg:x3; val_offset:28266*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28266*0 + 3*206*FLEN/8, x4, x1, x2)

inst_9423:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffffffc000; valaddr_reg:x3; val_offset:28269*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28269*0 + 3*207*FLEN/8, x4, x1, x2)

inst_9424:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffffffe000; valaddr_reg:x3; val_offset:28272*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28272*0 + 3*208*FLEN/8, x4, x1, x2)

inst_9425:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffffff000; valaddr_reg:x3; val_offset:28275*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28275*0 + 3*209*FLEN/8, x4, x1, x2)

inst_9426:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffffff800; valaddr_reg:x3; val_offset:28278*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28278*0 + 3*210*FLEN/8, x4, x1, x2)

inst_9427:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffffffc00; valaddr_reg:x3; val_offset:28281*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28281*0 + 3*211*FLEN/8, x4, x1, x2)

inst_9428:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffffffe00; valaddr_reg:x3; val_offset:28284*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28284*0 + 3*212*FLEN/8, x4, x1, x2)

inst_9429:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffffffff00; valaddr_reg:x3; val_offset:28287*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28287*0 + 3*213*FLEN/8, x4, x1, x2)

inst_9430:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffffffff80; valaddr_reg:x3; val_offset:28290*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28290*0 + 3*214*FLEN/8, x4, x1, x2)

inst_9431:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffffffffc0; valaddr_reg:x3; val_offset:28293*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28293*0 + 3*215*FLEN/8, x4, x1, x2)

inst_9432:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffffffffe0; valaddr_reg:x3; val_offset:28296*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28296*0 + 3*216*FLEN/8, x4, x1, x2)

inst_9433:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffffffff0; valaddr_reg:x3; val_offset:28299*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28299*0 + 3*217*FLEN/8, x4, x1, x2)

inst_9434:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffffffff8; valaddr_reg:x3; val_offset:28302*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28302*0 + 3*218*FLEN/8, x4, x1, x2)

inst_9435:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffffffffc; valaddr_reg:x3; val_offset:28305*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28305*0 + 3*219*FLEN/8, x4, x1, x2)

inst_9436:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83fffffffffffffe; valaddr_reg:x3; val_offset:28308*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28308*0 + 3*220*FLEN/8, x4, x1, x2)

inst_9437:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ec94152581c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ec94152581c7; op2val:0x8000;
op3val:0x83ffffffffffffff; valaddr_reg:x3; val_offset:28311*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28311*0 + 3*221*FLEN/8, x4, x1, x2)

inst_9438:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000000000000; valaddr_reg:x3; val_offset:28314*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28314*0 + 3*222*FLEN/8, x4, x1, x2)

inst_9439:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000000000001; valaddr_reg:x3; val_offset:28317*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28317*0 + 3*223*FLEN/8, x4, x1, x2)

inst_9440:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000000000003; valaddr_reg:x3; val_offset:28320*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28320*0 + 3*224*FLEN/8, x4, x1, x2)

inst_9441:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000000000007; valaddr_reg:x3; val_offset:28323*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28323*0 + 3*225*FLEN/8, x4, x1, x2)

inst_9442:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000000000000f; valaddr_reg:x3; val_offset:28326*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28326*0 + 3*226*FLEN/8, x4, x1, x2)

inst_9443:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000000000001f; valaddr_reg:x3; val_offset:28329*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28329*0 + 3*227*FLEN/8, x4, x1, x2)

inst_9444:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000000000003f; valaddr_reg:x3; val_offset:28332*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28332*0 + 3*228*FLEN/8, x4, x1, x2)

inst_9445:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000000000007f; valaddr_reg:x3; val_offset:28335*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28335*0 + 3*229*FLEN/8, x4, x1, x2)

inst_9446:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700000000000ff; valaddr_reg:x3; val_offset:28338*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28338*0 + 3*230*FLEN/8, x4, x1, x2)

inst_9447:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700000000001ff; valaddr_reg:x3; val_offset:28341*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28341*0 + 3*231*FLEN/8, x4, x1, x2)

inst_9448:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700000000003ff; valaddr_reg:x3; val_offset:28344*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28344*0 + 3*232*FLEN/8, x4, x1, x2)

inst_9449:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700000000007ff; valaddr_reg:x3; val_offset:28347*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28347*0 + 3*233*FLEN/8, x4, x1, x2)

inst_9450:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000000000fff; valaddr_reg:x3; val_offset:28350*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28350*0 + 3*234*FLEN/8, x4, x1, x2)

inst_9451:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000000001fff; valaddr_reg:x3; val_offset:28353*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28353*0 + 3*235*FLEN/8, x4, x1, x2)

inst_9452:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000000003fff; valaddr_reg:x3; val_offset:28356*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28356*0 + 3*236*FLEN/8, x4, x1, x2)

inst_9453:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000000007fff; valaddr_reg:x3; val_offset:28359*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28359*0 + 3*237*FLEN/8, x4, x1, x2)

inst_9454:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000000000ffff; valaddr_reg:x3; val_offset:28362*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28362*0 + 3*238*FLEN/8, x4, x1, x2)

inst_9455:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000000001ffff; valaddr_reg:x3; val_offset:28365*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28365*0 + 3*239*FLEN/8, x4, x1, x2)

inst_9456:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000000003ffff; valaddr_reg:x3; val_offset:28368*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28368*0 + 3*240*FLEN/8, x4, x1, x2)

inst_9457:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000000007ffff; valaddr_reg:x3; val_offset:28371*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28371*0 + 3*241*FLEN/8, x4, x1, x2)

inst_9458:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700000000fffff; valaddr_reg:x3; val_offset:28374*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28374*0 + 3*242*FLEN/8, x4, x1, x2)

inst_9459:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700000001fffff; valaddr_reg:x3; val_offset:28377*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28377*0 + 3*243*FLEN/8, x4, x1, x2)

inst_9460:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700000003fffff; valaddr_reg:x3; val_offset:28380*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28380*0 + 3*244*FLEN/8, x4, x1, x2)

inst_9461:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700000007fffff; valaddr_reg:x3; val_offset:28383*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28383*0 + 3*245*FLEN/8, x4, x1, x2)

inst_9462:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000000ffffff; valaddr_reg:x3; val_offset:28386*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28386*0 + 3*246*FLEN/8, x4, x1, x2)

inst_9463:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000001ffffff; valaddr_reg:x3; val_offset:28389*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28389*0 + 3*247*FLEN/8, x4, x1, x2)

inst_9464:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000003ffffff; valaddr_reg:x3; val_offset:28392*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28392*0 + 3*248*FLEN/8, x4, x1, x2)

inst_9465:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000007ffffff; valaddr_reg:x3; val_offset:28395*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28395*0 + 3*249*FLEN/8, x4, x1, x2)

inst_9466:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000000fffffff; valaddr_reg:x3; val_offset:28398*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28398*0 + 3*250*FLEN/8, x4, x1, x2)

inst_9467:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000001fffffff; valaddr_reg:x3; val_offset:28401*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28401*0 + 3*251*FLEN/8, x4, x1, x2)

inst_9468:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000003fffffff; valaddr_reg:x3; val_offset:28404*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28404*0 + 3*252*FLEN/8, x4, x1, x2)

inst_9469:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000007fffffff; valaddr_reg:x3; val_offset:28407*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28407*0 + 3*253*FLEN/8, x4, x1, x2)

inst_9470:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700000ffffffff; valaddr_reg:x3; val_offset:28410*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28410*0 + 3*254*FLEN/8, x4, x1, x2)

inst_9471:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700001ffffffff; valaddr_reg:x3; val_offset:28413*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28413*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_9472:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700003ffffffff; valaddr_reg:x3; val_offset:28416*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28416*0 + 3*256*FLEN/8, x4, x1, x2)

inst_9473:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700007ffffffff; valaddr_reg:x3; val_offset:28419*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28419*0 + 3*257*FLEN/8, x4, x1, x2)

inst_9474:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70000fffffffff; valaddr_reg:x3; val_offset:28422*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28422*0 + 3*258*FLEN/8, x4, x1, x2)

inst_9475:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70001fffffffff; valaddr_reg:x3; val_offset:28425*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28425*0 + 3*259*FLEN/8, x4, x1, x2)

inst_9476:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70003fffffffff; valaddr_reg:x3; val_offset:28428*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28428*0 + 3*260*FLEN/8, x4, x1, x2)

inst_9477:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70007fffffffff; valaddr_reg:x3; val_offset:28431*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28431*0 + 3*261*FLEN/8, x4, x1, x2)

inst_9478:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7000ffffffffff; valaddr_reg:x3; val_offset:28434*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28434*0 + 3*262*FLEN/8, x4, x1, x2)

inst_9479:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7001ffffffffff; valaddr_reg:x3; val_offset:28437*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28437*0 + 3*263*FLEN/8, x4, x1, x2)

inst_9480:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7003ffffffffff; valaddr_reg:x3; val_offset:28440*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28440*0 + 3*264*FLEN/8, x4, x1, x2)

inst_9481:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7007ffffffffff; valaddr_reg:x3; val_offset:28443*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28443*0 + 3*265*FLEN/8, x4, x1, x2)

inst_9482:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b700fffffffffff; valaddr_reg:x3; val_offset:28446*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28446*0 + 3*266*FLEN/8, x4, x1, x2)

inst_9483:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b701fffffffffff; valaddr_reg:x3; val_offset:28449*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28449*0 + 3*267*FLEN/8, x4, x1, x2)

inst_9484:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b703fffffffffff; valaddr_reg:x3; val_offset:28452*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28452*0 + 3*268*FLEN/8, x4, x1, x2)

inst_9485:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b707fffffffffff; valaddr_reg:x3; val_offset:28455*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28455*0 + 3*269*FLEN/8, x4, x1, x2)

inst_9486:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b70ffffffffffff; valaddr_reg:x3; val_offset:28458*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28458*0 + 3*270*FLEN/8, x4, x1, x2)

inst_9487:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b71ffffffffffff; valaddr_reg:x3; val_offset:28461*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28461*0 + 3*271*FLEN/8, x4, x1, x2)

inst_9488:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b73ffffffffffff; valaddr_reg:x3; val_offset:28464*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28464*0 + 3*272*FLEN/8, x4, x1, x2)

inst_9489:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b77ffffffffffff; valaddr_reg:x3; val_offset:28467*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28467*0 + 3*273*FLEN/8, x4, x1, x2)

inst_9490:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b78000000000000; valaddr_reg:x3; val_offset:28470*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28470*0 + 3*274*FLEN/8, x4, x1, x2)

inst_9491:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7c000000000000; valaddr_reg:x3; val_offset:28473*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28473*0 + 3*275*FLEN/8, x4, x1, x2)

inst_9492:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7e000000000000; valaddr_reg:x3; val_offset:28476*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28476*0 + 3*276*FLEN/8, x4, x1, x2)

inst_9493:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7f000000000000; valaddr_reg:x3; val_offset:28479*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28479*0 + 3*277*FLEN/8, x4, x1, x2)

inst_9494:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7f800000000000; valaddr_reg:x3; val_offset:28482*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28482*0 + 3*278*FLEN/8, x4, x1, x2)

inst_9495:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fc00000000000; valaddr_reg:x3; val_offset:28485*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28485*0 + 3*279*FLEN/8, x4, x1, x2)

inst_9496:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fe00000000000; valaddr_reg:x3; val_offset:28488*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28488*0 + 3*280*FLEN/8, x4, x1, x2)

inst_9497:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ff00000000000; valaddr_reg:x3; val_offset:28491*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28491*0 + 3*281*FLEN/8, x4, x1, x2)

inst_9498:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ff80000000000; valaddr_reg:x3; val_offset:28494*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28494*0 + 3*282*FLEN/8, x4, x1, x2)

inst_9499:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffc0000000000; valaddr_reg:x3; val_offset:28497*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28497*0 + 3*283*FLEN/8, x4, x1, x2)

inst_9500:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffe0000000000; valaddr_reg:x3; val_offset:28500*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28500*0 + 3*284*FLEN/8, x4, x1, x2)

inst_9501:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fff0000000000; valaddr_reg:x3; val_offset:28503*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28503*0 + 3*285*FLEN/8, x4, x1, x2)

inst_9502:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fff8000000000; valaddr_reg:x3; val_offset:28506*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28506*0 + 3*286*FLEN/8, x4, x1, x2)

inst_9503:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffc000000000; valaddr_reg:x3; val_offset:28509*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28509*0 + 3*287*FLEN/8, x4, x1, x2)

inst_9504:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffe000000000; valaddr_reg:x3; val_offset:28512*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28512*0 + 3*288*FLEN/8, x4, x1, x2)

inst_9505:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffff000000000; valaddr_reg:x3; val_offset:28515*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28515*0 + 3*289*FLEN/8, x4, x1, x2)

inst_9506:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffff800000000; valaddr_reg:x3; val_offset:28518*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28518*0 + 3*290*FLEN/8, x4, x1, x2)

inst_9507:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffc00000000; valaddr_reg:x3; val_offset:28521*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28521*0 + 3*291*FLEN/8, x4, x1, x2)

inst_9508:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffe00000000; valaddr_reg:x3; val_offset:28524*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28524*0 + 3*292*FLEN/8, x4, x1, x2)

inst_9509:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffff00000000; valaddr_reg:x3; val_offset:28527*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28527*0 + 3*293*FLEN/8, x4, x1, x2)

inst_9510:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffff80000000; valaddr_reg:x3; val_offset:28530*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28530*0 + 3*294*FLEN/8, x4, x1, x2)

inst_9511:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffc0000000; valaddr_reg:x3; val_offset:28533*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28533*0 + 3*295*FLEN/8, x4, x1, x2)

inst_9512:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffe0000000; valaddr_reg:x3; val_offset:28536*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28536*0 + 3*296*FLEN/8, x4, x1, x2)

inst_9513:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffff0000000; valaddr_reg:x3; val_offset:28539*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28539*0 + 3*297*FLEN/8, x4, x1, x2)

inst_9514:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffff8000000; valaddr_reg:x3; val_offset:28542*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28542*0 + 3*298*FLEN/8, x4, x1, x2)

inst_9515:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffc000000; valaddr_reg:x3; val_offset:28545*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28545*0 + 3*299*FLEN/8, x4, x1, x2)

inst_9516:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffe000000; valaddr_reg:x3; val_offset:28548*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28548*0 + 3*300*FLEN/8, x4, x1, x2)

inst_9517:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffff000000; valaddr_reg:x3; val_offset:28551*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28551*0 + 3*301*FLEN/8, x4, x1, x2)

inst_9518:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffff800000; valaddr_reg:x3; val_offset:28554*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28554*0 + 3*302*FLEN/8, x4, x1, x2)

inst_9519:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffffc00000; valaddr_reg:x3; val_offset:28557*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28557*0 + 3*303*FLEN/8, x4, x1, x2)

inst_9520:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffffe00000; valaddr_reg:x3; val_offset:28560*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28560*0 + 3*304*FLEN/8, x4, x1, x2)

inst_9521:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffff00000; valaddr_reg:x3; val_offset:28563*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28563*0 + 3*305*FLEN/8, x4, x1, x2)

inst_9522:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffff80000; valaddr_reg:x3; val_offset:28566*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28566*0 + 3*306*FLEN/8, x4, x1, x2)

inst_9523:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffffc0000; valaddr_reg:x3; val_offset:28569*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28569*0 + 3*307*FLEN/8, x4, x1, x2)

inst_9524:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffffe0000; valaddr_reg:x3; val_offset:28572*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28572*0 + 3*308*FLEN/8, x4, x1, x2)

inst_9525:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffffff0000; valaddr_reg:x3; val_offset:28575*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28575*0 + 3*309*FLEN/8, x4, x1, x2)

inst_9526:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffffff8000; valaddr_reg:x3; val_offset:28578*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28578*0 + 3*310*FLEN/8, x4, x1, x2)

inst_9527:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffffffc000; valaddr_reg:x3; val_offset:28581*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28581*0 + 3*311*FLEN/8, x4, x1, x2)

inst_9528:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffffffe000; valaddr_reg:x3; val_offset:28584*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28584*0 + 3*312*FLEN/8, x4, x1, x2)

inst_9529:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffffff000; valaddr_reg:x3; val_offset:28587*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28587*0 + 3*313*FLEN/8, x4, x1, x2)

inst_9530:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffffff800; valaddr_reg:x3; val_offset:28590*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28590*0 + 3*314*FLEN/8, x4, x1, x2)

inst_9531:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffffffc00; valaddr_reg:x3; val_offset:28593*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28593*0 + 3*315*FLEN/8, x4, x1, x2)

inst_9532:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffffffe00; valaddr_reg:x3; val_offset:28596*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28596*0 + 3*316*FLEN/8, x4, x1, x2)

inst_9533:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffffffff00; valaddr_reg:x3; val_offset:28599*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28599*0 + 3*317*FLEN/8, x4, x1, x2)

inst_9534:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffffffff80; valaddr_reg:x3; val_offset:28602*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28602*0 + 3*318*FLEN/8, x4, x1, x2)

inst_9535:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffffffffc0; valaddr_reg:x3; val_offset:28605*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28605*0 + 3*319*FLEN/8, x4, x1, x2)

inst_9536:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffffffffe0; valaddr_reg:x3; val_offset:28608*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28608*0 + 3*320*FLEN/8, x4, x1, x2)

inst_9537:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffffffff0; valaddr_reg:x3; val_offset:28611*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28611*0 + 3*321*FLEN/8, x4, x1, x2)

inst_9538:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffffffff8; valaddr_reg:x3; val_offset:28614*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28614*0 + 3*322*FLEN/8, x4, x1, x2)

inst_9539:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffffffffc; valaddr_reg:x3; val_offset:28617*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28617*0 + 3*323*FLEN/8, x4, x1, x2)

inst_9540:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7ffffffffffffe; valaddr_reg:x3; val_offset:28620*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28620*0 + 3*324*FLEN/8, x4, x1, x2)

inst_9541:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3b7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3b7fffffffffffff; valaddr_reg:x3; val_offset:28623*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28623*0 + 3*325*FLEN/8, x4, x1, x2)

inst_9542:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:28626*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28626*0 + 3*326*FLEN/8, x4, x1, x2)

inst_9543:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:28629*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28629*0 + 3*327*FLEN/8, x4, x1, x2)

inst_9544:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:28632*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28632*0 + 3*328*FLEN/8, x4, x1, x2)

inst_9545:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:28635*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28635*0 + 3*329*FLEN/8, x4, x1, x2)

inst_9546:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:28638*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28638*0 + 3*330*FLEN/8, x4, x1, x2)

inst_9547:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:28641*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28641*0 + 3*331*FLEN/8, x4, x1, x2)

inst_9548:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:28644*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28644*0 + 3*332*FLEN/8, x4, x1, x2)

inst_9549:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:28647*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28647*0 + 3*333*FLEN/8, x4, x1, x2)

inst_9550:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:28650*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28650*0 + 3*334*FLEN/8, x4, x1, x2)

inst_9551:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:28653*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28653*0 + 3*335*FLEN/8, x4, x1, x2)

inst_9552:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:28656*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28656*0 + 3*336*FLEN/8, x4, x1, x2)

inst_9553:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:28659*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28659*0 + 3*337*FLEN/8, x4, x1, x2)

inst_9554:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:28662*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28662*0 + 3*338*FLEN/8, x4, x1, x2)

inst_9555:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:28665*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28665*0 + 3*339*FLEN/8, x4, x1, x2)

inst_9556:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:28668*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28668*0 + 3*340*FLEN/8, x4, x1, x2)

inst_9557:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:28671*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28671*0 + 3*341*FLEN/8, x4, x1, x2)

inst_9558:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:28674*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28674*0 + 3*342*FLEN/8, x4, x1, x2)

inst_9559:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:28677*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28677*0 + 3*343*FLEN/8, x4, x1, x2)

inst_9560:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:28680*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28680*0 + 3*344*FLEN/8, x4, x1, x2)

inst_9561:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:28683*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28683*0 + 3*345*FLEN/8, x4, x1, x2)

inst_9562:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:28686*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28686*0 + 3*346*FLEN/8, x4, x1, x2)

inst_9563:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x55330eb560f94 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7802693539b05f; op2val:0x20655330eb560f94;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:28689*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28689*0 + 3*347*FLEN/8, x4, x1, x2)

inst_9564:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000000000000; valaddr_reg:x3; val_offset:28692*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28692*0 + 3*348*FLEN/8, x4, x1, x2)

inst_9565:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000000000001; valaddr_reg:x3; val_offset:28695*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28695*0 + 3*349*FLEN/8, x4, x1, x2)

inst_9566:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000000000003; valaddr_reg:x3; val_offset:28698*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28698*0 + 3*350*FLEN/8, x4, x1, x2)

inst_9567:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000000000007; valaddr_reg:x3; val_offset:28701*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28701*0 + 3*351*FLEN/8, x4, x1, x2)

inst_9568:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000000000000f; valaddr_reg:x3; val_offset:28704*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28704*0 + 3*352*FLEN/8, x4, x1, x2)

inst_9569:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000000000001f; valaddr_reg:x3; val_offset:28707*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28707*0 + 3*353*FLEN/8, x4, x1, x2)

inst_9570:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000000000003f; valaddr_reg:x3; val_offset:28710*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28710*0 + 3*354*FLEN/8, x4, x1, x2)

inst_9571:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000000000007f; valaddr_reg:x3; val_offset:28713*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28713*0 + 3*355*FLEN/8, x4, x1, x2)

inst_9572:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00000000000ff; valaddr_reg:x3; val_offset:28716*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28716*0 + 3*356*FLEN/8, x4, x1, x2)

inst_9573:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00000000001ff; valaddr_reg:x3; val_offset:28719*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28719*0 + 3*357*FLEN/8, x4, x1, x2)

inst_9574:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00000000003ff; valaddr_reg:x3; val_offset:28722*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28722*0 + 3*358*FLEN/8, x4, x1, x2)

inst_9575:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00000000007ff; valaddr_reg:x3; val_offset:28725*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28725*0 + 3*359*FLEN/8, x4, x1, x2)

inst_9576:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000000000fff; valaddr_reg:x3; val_offset:28728*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28728*0 + 3*360*FLEN/8, x4, x1, x2)

inst_9577:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000000001fff; valaddr_reg:x3; val_offset:28731*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28731*0 + 3*361*FLEN/8, x4, x1, x2)

inst_9578:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000000003fff; valaddr_reg:x3; val_offset:28734*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28734*0 + 3*362*FLEN/8, x4, x1, x2)

inst_9579:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000000007fff; valaddr_reg:x3; val_offset:28737*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28737*0 + 3*363*FLEN/8, x4, x1, x2)

inst_9580:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000000000ffff; valaddr_reg:x3; val_offset:28740*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28740*0 + 3*364*FLEN/8, x4, x1, x2)

inst_9581:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000000001ffff; valaddr_reg:x3; val_offset:28743*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28743*0 + 3*365*FLEN/8, x4, x1, x2)

inst_9582:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000000003ffff; valaddr_reg:x3; val_offset:28746*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28746*0 + 3*366*FLEN/8, x4, x1, x2)

inst_9583:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000000007ffff; valaddr_reg:x3; val_offset:28749*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28749*0 + 3*367*FLEN/8, x4, x1, x2)

inst_9584:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00000000fffff; valaddr_reg:x3; val_offset:28752*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28752*0 + 3*368*FLEN/8, x4, x1, x2)

inst_9585:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00000001fffff; valaddr_reg:x3; val_offset:28755*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28755*0 + 3*369*FLEN/8, x4, x1, x2)

inst_9586:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00000003fffff; valaddr_reg:x3; val_offset:28758*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28758*0 + 3*370*FLEN/8, x4, x1, x2)

inst_9587:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00000007fffff; valaddr_reg:x3; val_offset:28761*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28761*0 + 3*371*FLEN/8, x4, x1, x2)

inst_9588:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000000ffffff; valaddr_reg:x3; val_offset:28764*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28764*0 + 3*372*FLEN/8, x4, x1, x2)

inst_9589:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000001ffffff; valaddr_reg:x3; val_offset:28767*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28767*0 + 3*373*FLEN/8, x4, x1, x2)

inst_9590:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000003ffffff; valaddr_reg:x3; val_offset:28770*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28770*0 + 3*374*FLEN/8, x4, x1, x2)

inst_9591:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000007ffffff; valaddr_reg:x3; val_offset:28773*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28773*0 + 3*375*FLEN/8, x4, x1, x2)

inst_9592:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000000fffffff; valaddr_reg:x3; val_offset:28776*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28776*0 + 3*376*FLEN/8, x4, x1, x2)

inst_9593:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000001fffffff; valaddr_reg:x3; val_offset:28779*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28779*0 + 3*377*FLEN/8, x4, x1, x2)

inst_9594:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000003fffffff; valaddr_reg:x3; val_offset:28782*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28782*0 + 3*378*FLEN/8, x4, x1, x2)

inst_9595:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000007fffffff; valaddr_reg:x3; val_offset:28785*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28785*0 + 3*379*FLEN/8, x4, x1, x2)

inst_9596:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00000ffffffff; valaddr_reg:x3; val_offset:28788*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28788*0 + 3*380*FLEN/8, x4, x1, x2)

inst_9597:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00001ffffffff; valaddr_reg:x3; val_offset:28791*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28791*0 + 3*381*FLEN/8, x4, x1, x2)

inst_9598:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00003ffffffff; valaddr_reg:x3; val_offset:28794*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28794*0 + 3*382*FLEN/8, x4, x1, x2)

inst_9599:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00007ffffffff; valaddr_reg:x3; val_offset:28797*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28797*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_9600:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0000fffffffff; valaddr_reg:x3; val_offset:28800*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28800*0 + 3*384*FLEN/8, x4, x1, x2)

inst_9601:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0001fffffffff; valaddr_reg:x3; val_offset:28803*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28803*0 + 3*385*FLEN/8, x4, x1, x2)

inst_9602:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0003fffffffff; valaddr_reg:x3; val_offset:28806*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28806*0 + 3*386*FLEN/8, x4, x1, x2)

inst_9603:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0007fffffffff; valaddr_reg:x3; val_offset:28809*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28809*0 + 3*387*FLEN/8, x4, x1, x2)

inst_9604:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e000ffffffffff; valaddr_reg:x3; val_offset:28812*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28812*0 + 3*388*FLEN/8, x4, x1, x2)

inst_9605:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e001ffffffffff; valaddr_reg:x3; val_offset:28815*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28815*0 + 3*389*FLEN/8, x4, x1, x2)

inst_9606:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e003ffffffffff; valaddr_reg:x3; val_offset:28818*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28818*0 + 3*390*FLEN/8, x4, x1, x2)

inst_9607:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e007ffffffffff; valaddr_reg:x3; val_offset:28821*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28821*0 + 3*391*FLEN/8, x4, x1, x2)

inst_9608:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e00fffffffffff; valaddr_reg:x3; val_offset:28824*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28824*0 + 3*392*FLEN/8, x4, x1, x2)

inst_9609:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e01fffffffffff; valaddr_reg:x3; val_offset:28827*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28827*0 + 3*393*FLEN/8, x4, x1, x2)

inst_9610:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e03fffffffffff; valaddr_reg:x3; val_offset:28830*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28830*0 + 3*394*FLEN/8, x4, x1, x2)

inst_9611:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e07fffffffffff; valaddr_reg:x3; val_offset:28833*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28833*0 + 3*395*FLEN/8, x4, x1, x2)

inst_9612:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e0ffffffffffff; valaddr_reg:x3; val_offset:28836*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28836*0 + 3*396*FLEN/8, x4, x1, x2)

inst_9613:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e1ffffffffffff; valaddr_reg:x3; val_offset:28839*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28839*0 + 3*397*FLEN/8, x4, x1, x2)

inst_9614:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e3ffffffffffff; valaddr_reg:x3; val_offset:28842*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28842*0 + 3*398*FLEN/8, x4, x1, x2)

inst_9615:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e7ffffffffffff; valaddr_reg:x3; val_offset:28845*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28845*0 + 3*399*FLEN/8, x4, x1, x2)

inst_9616:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38e8000000000000; valaddr_reg:x3; val_offset:28848*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28848*0 + 3*400*FLEN/8, x4, x1, x2)

inst_9617:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38ec000000000000; valaddr_reg:x3; val_offset:28851*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28851*0 + 3*401*FLEN/8, x4, x1, x2)

inst_9618:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38ee000000000000; valaddr_reg:x3; val_offset:28854*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28854*0 + 3*402*FLEN/8, x4, x1, x2)

inst_9619:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38ef000000000000; valaddr_reg:x3; val_offset:28857*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28857*0 + 3*403*FLEN/8, x4, x1, x2)

inst_9620:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38ef800000000000; valaddr_reg:x3; val_offset:28860*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28860*0 + 3*404*FLEN/8, x4, x1, x2)

inst_9621:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efc00000000000; valaddr_reg:x3; val_offset:28863*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28863*0 + 3*405*FLEN/8, x4, x1, x2)

inst_9622:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efe00000000000; valaddr_reg:x3; val_offset:28866*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28866*0 + 3*406*FLEN/8, x4, x1, x2)

inst_9623:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38eff00000000000; valaddr_reg:x3; val_offset:28869*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28869*0 + 3*407*FLEN/8, x4, x1, x2)

inst_9624:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38eff80000000000; valaddr_reg:x3; val_offset:28872*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28872*0 + 3*408*FLEN/8, x4, x1, x2)

inst_9625:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effc0000000000; valaddr_reg:x3; val_offset:28875*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28875*0 + 3*409*FLEN/8, x4, x1, x2)

inst_9626:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effe0000000000; valaddr_reg:x3; val_offset:28878*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28878*0 + 3*410*FLEN/8, x4, x1, x2)

inst_9627:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efff0000000000; valaddr_reg:x3; val_offset:28881*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28881*0 + 3*411*FLEN/8, x4, x1, x2)

inst_9628:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efff8000000000; valaddr_reg:x3; val_offset:28884*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28884*0 + 3*412*FLEN/8, x4, x1, x2)

inst_9629:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffc000000000; valaddr_reg:x3; val_offset:28887*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28887*0 + 3*413*FLEN/8, x4, x1, x2)

inst_9630:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffe000000000; valaddr_reg:x3; val_offset:28890*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28890*0 + 3*414*FLEN/8, x4, x1, x2)

inst_9631:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effff000000000; valaddr_reg:x3; val_offset:28893*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28893*0 + 3*415*FLEN/8, x4, x1, x2)

inst_9632:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effff800000000; valaddr_reg:x3; val_offset:28896*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28896*0 + 3*416*FLEN/8, x4, x1, x2)

inst_9633:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffc00000000; valaddr_reg:x3; val_offset:28899*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28899*0 + 3*417*FLEN/8, x4, x1, x2)

inst_9634:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffe00000000; valaddr_reg:x3; val_offset:28902*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28902*0 + 3*418*FLEN/8, x4, x1, x2)

inst_9635:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffff00000000; valaddr_reg:x3; val_offset:28905*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28905*0 + 3*419*FLEN/8, x4, x1, x2)

inst_9636:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffff80000000; valaddr_reg:x3; val_offset:28908*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28908*0 + 3*420*FLEN/8, x4, x1, x2)

inst_9637:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffc0000000; valaddr_reg:x3; val_offset:28911*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28911*0 + 3*421*FLEN/8, x4, x1, x2)

inst_9638:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffe0000000; valaddr_reg:x3; val_offset:28914*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28914*0 + 3*422*FLEN/8, x4, x1, x2)

inst_9639:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffff0000000; valaddr_reg:x3; val_offset:28917*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28917*0 + 3*423*FLEN/8, x4, x1, x2)

inst_9640:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffff8000000; valaddr_reg:x3; val_offset:28920*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28920*0 + 3*424*FLEN/8, x4, x1, x2)

inst_9641:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffc000000; valaddr_reg:x3; val_offset:28923*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28923*0 + 3*425*FLEN/8, x4, x1, x2)

inst_9642:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffe000000; valaddr_reg:x3; val_offset:28926*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28926*0 + 3*426*FLEN/8, x4, x1, x2)

inst_9643:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffff000000; valaddr_reg:x3; val_offset:28929*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28929*0 + 3*427*FLEN/8, x4, x1, x2)

inst_9644:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffff800000; valaddr_reg:x3; val_offset:28932*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28932*0 + 3*428*FLEN/8, x4, x1, x2)

inst_9645:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffffc00000; valaddr_reg:x3; val_offset:28935*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28935*0 + 3*429*FLEN/8, x4, x1, x2)

inst_9646:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffffe00000; valaddr_reg:x3; val_offset:28938*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28938*0 + 3*430*FLEN/8, x4, x1, x2)

inst_9647:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffff00000; valaddr_reg:x3; val_offset:28941*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28941*0 + 3*431*FLEN/8, x4, x1, x2)

inst_9648:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffff80000; valaddr_reg:x3; val_offset:28944*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28944*0 + 3*432*FLEN/8, x4, x1, x2)

inst_9649:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffffc0000; valaddr_reg:x3; val_offset:28947*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28947*0 + 3*433*FLEN/8, x4, x1, x2)

inst_9650:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffffe0000; valaddr_reg:x3; val_offset:28950*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28950*0 + 3*434*FLEN/8, x4, x1, x2)

inst_9651:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffffff0000; valaddr_reg:x3; val_offset:28953*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28953*0 + 3*435*FLEN/8, x4, x1, x2)

inst_9652:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffffff8000; valaddr_reg:x3; val_offset:28956*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28956*0 + 3*436*FLEN/8, x4, x1, x2)

inst_9653:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffffffc000; valaddr_reg:x3; val_offset:28959*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28959*0 + 3*437*FLEN/8, x4, x1, x2)

inst_9654:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffffffe000; valaddr_reg:x3; val_offset:28962*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28962*0 + 3*438*FLEN/8, x4, x1, x2)

inst_9655:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffffff000; valaddr_reg:x3; val_offset:28965*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28965*0 + 3*439*FLEN/8, x4, x1, x2)

inst_9656:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffffff800; valaddr_reg:x3; val_offset:28968*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28968*0 + 3*440*FLEN/8, x4, x1, x2)

inst_9657:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffffffc00; valaddr_reg:x3; val_offset:28971*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28971*0 + 3*441*FLEN/8, x4, x1, x2)

inst_9658:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffffffe00; valaddr_reg:x3; val_offset:28974*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28974*0 + 3*442*FLEN/8, x4, x1, x2)

inst_9659:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffffffff00; valaddr_reg:x3; val_offset:28977*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28977*0 + 3*443*FLEN/8, x4, x1, x2)

inst_9660:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffffffff80; valaddr_reg:x3; val_offset:28980*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28980*0 + 3*444*FLEN/8, x4, x1, x2)

inst_9661:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffffffffc0; valaddr_reg:x3; val_offset:28983*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28983*0 + 3*445*FLEN/8, x4, x1, x2)

inst_9662:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffffffffe0; valaddr_reg:x3; val_offset:28986*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28986*0 + 3*446*FLEN/8, x4, x1, x2)

inst_9663:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffffffff0; valaddr_reg:x3; val_offset:28989*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28989*0 + 3*447*FLEN/8, x4, x1, x2)

inst_9664:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffffffff8; valaddr_reg:x3; val_offset:28992*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28992*0 + 3*448*FLEN/8, x4, x1, x2)

inst_9665:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffffffffc; valaddr_reg:x3; val_offset:28995*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28995*0 + 3*449*FLEN/8, x4, x1, x2)

inst_9666:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38effffffffffffe; valaddr_reg:x3; val_offset:28998*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 28998*0 + 3*450*FLEN/8, x4, x1, x2)

inst_9667:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x38efffffffffffff; valaddr_reg:x3; val_offset:29001*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29001*0 + 3*451*FLEN/8, x4, x1, x2)

inst_9668:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:29004*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29004*0 + 3*452*FLEN/8, x4, x1, x2)

inst_9669:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:29007*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29007*0 + 3*453*FLEN/8, x4, x1, x2)

inst_9670:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:29010*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29010*0 + 3*454*FLEN/8, x4, x1, x2)

inst_9671:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:29013*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29013*0 + 3*455*FLEN/8, x4, x1, x2)

inst_9672:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:29016*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29016*0 + 3*456*FLEN/8, x4, x1, x2)

inst_9673:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:29019*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29019*0 + 3*457*FLEN/8, x4, x1, x2)

inst_9674:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:29022*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29022*0 + 3*458*FLEN/8, x4, x1, x2)

inst_9675:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:29025*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29025*0 + 3*459*FLEN/8, x4, x1, x2)

inst_9676:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:29028*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29028*0 + 3*460*FLEN/8, x4, x1, x2)

inst_9677:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:29031*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29031*0 + 3*461*FLEN/8, x4, x1, x2)

inst_9678:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:29034*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29034*0 + 3*462*FLEN/8, x4, x1, x2)

inst_9679:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:29037*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29037*0 + 3*463*FLEN/8, x4, x1, x2)

inst_9680:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:29040*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29040*0 + 3*464*FLEN/8, x4, x1, x2)

inst_9681:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:29043*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29043*0 + 3*465*FLEN/8, x4, x1, x2)

inst_9682:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:29046*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29046*0 + 3*466*FLEN/8, x4, x1, x2)

inst_9683:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:29049*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29049*0 + 3*467*FLEN/8, x4, x1, x2)

inst_9684:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:29052*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29052*0 + 3*468*FLEN/8, x4, x1, x2)

inst_9685:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:29055*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29055*0 + 3*469*FLEN/8, x4, x1, x2)

inst_9686:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:29058*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29058*0 + 3*470*FLEN/8, x4, x1, x2)

inst_9687:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:29061*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29061*0 + 3*471*FLEN/8, x4, x1, x2)

inst_9688:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:29064*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29064*0 + 3*472*FLEN/8, x4, x1, x2)

inst_9689:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4dc750317c7ea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f788b104e822b8f; op2val:0x2064dc750317c7ea;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:29067*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29067*0 + 3*473*FLEN/8, x4, x1, x2)

inst_9690:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000000000000; valaddr_reg:x3; val_offset:29070*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29070*0 + 3*474*FLEN/8, x4, x1, x2)

inst_9691:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000000000001; valaddr_reg:x3; val_offset:29073*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29073*0 + 3*475*FLEN/8, x4, x1, x2)

inst_9692:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000000000003; valaddr_reg:x3; val_offset:29076*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29076*0 + 3*476*FLEN/8, x4, x1, x2)

inst_9693:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000000000007; valaddr_reg:x3; val_offset:29079*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29079*0 + 3*477*FLEN/8, x4, x1, x2)

inst_9694:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000000000000f; valaddr_reg:x3; val_offset:29082*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29082*0 + 3*478*FLEN/8, x4, x1, x2)

inst_9695:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000000000001f; valaddr_reg:x3; val_offset:29085*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29085*0 + 3*479*FLEN/8, x4, x1, x2)

inst_9696:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000000000003f; valaddr_reg:x3; val_offset:29088*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29088*0 + 3*480*FLEN/8, x4, x1, x2)

inst_9697:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000000000007f; valaddr_reg:x3; val_offset:29091*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29091*0 + 3*481*FLEN/8, x4, x1, x2)

inst_9698:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700000000000ff; valaddr_reg:x3; val_offset:29094*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29094*0 + 3*482*FLEN/8, x4, x1, x2)

inst_9699:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700000000001ff; valaddr_reg:x3; val_offset:29097*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29097*0 + 3*483*FLEN/8, x4, x1, x2)

inst_9700:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700000000003ff; valaddr_reg:x3; val_offset:29100*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29100*0 + 3*484*FLEN/8, x4, x1, x2)

inst_9701:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700000000007ff; valaddr_reg:x3; val_offset:29103*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29103*0 + 3*485*FLEN/8, x4, x1, x2)

inst_9702:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000000000fff; valaddr_reg:x3; val_offset:29106*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29106*0 + 3*486*FLEN/8, x4, x1, x2)

inst_9703:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000000001fff; valaddr_reg:x3; val_offset:29109*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29109*0 + 3*487*FLEN/8, x4, x1, x2)

inst_9704:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000000003fff; valaddr_reg:x3; val_offset:29112*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29112*0 + 3*488*FLEN/8, x4, x1, x2)

inst_9705:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000000007fff; valaddr_reg:x3; val_offset:29115*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29115*0 + 3*489*FLEN/8, x4, x1, x2)

inst_9706:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000000000ffff; valaddr_reg:x3; val_offset:29118*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29118*0 + 3*490*FLEN/8, x4, x1, x2)

inst_9707:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000000001ffff; valaddr_reg:x3; val_offset:29121*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29121*0 + 3*491*FLEN/8, x4, x1, x2)

inst_9708:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000000003ffff; valaddr_reg:x3; val_offset:29124*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29124*0 + 3*492*FLEN/8, x4, x1, x2)

inst_9709:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000000007ffff; valaddr_reg:x3; val_offset:29127*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29127*0 + 3*493*FLEN/8, x4, x1, x2)

inst_9710:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700000000fffff; valaddr_reg:x3; val_offset:29130*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29130*0 + 3*494*FLEN/8, x4, x1, x2)

inst_9711:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700000001fffff; valaddr_reg:x3; val_offset:29133*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29133*0 + 3*495*FLEN/8, x4, x1, x2)

inst_9712:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700000003fffff; valaddr_reg:x3; val_offset:29136*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29136*0 + 3*496*FLEN/8, x4, x1, x2)

inst_9713:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700000007fffff; valaddr_reg:x3; val_offset:29139*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29139*0 + 3*497*FLEN/8, x4, x1, x2)

inst_9714:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000000ffffff; valaddr_reg:x3; val_offset:29142*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29142*0 + 3*498*FLEN/8, x4, x1, x2)

inst_9715:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000001ffffff; valaddr_reg:x3; val_offset:29145*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29145*0 + 3*499*FLEN/8, x4, x1, x2)

inst_9716:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000003ffffff; valaddr_reg:x3; val_offset:29148*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29148*0 + 3*500*FLEN/8, x4, x1, x2)

inst_9717:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000007ffffff; valaddr_reg:x3; val_offset:29151*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29151*0 + 3*501*FLEN/8, x4, x1, x2)

inst_9718:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000000fffffff; valaddr_reg:x3; val_offset:29154*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29154*0 + 3*502*FLEN/8, x4, x1, x2)

inst_9719:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000001fffffff; valaddr_reg:x3; val_offset:29157*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29157*0 + 3*503*FLEN/8, x4, x1, x2)

inst_9720:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000003fffffff; valaddr_reg:x3; val_offset:29160*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29160*0 + 3*504*FLEN/8, x4, x1, x2)

inst_9721:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000007fffffff; valaddr_reg:x3; val_offset:29163*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29163*0 + 3*505*FLEN/8, x4, x1, x2)

inst_9722:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700000ffffffff; valaddr_reg:x3; val_offset:29166*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29166*0 + 3*506*FLEN/8, x4, x1, x2)

inst_9723:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700001ffffffff; valaddr_reg:x3; val_offset:29169*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29169*0 + 3*507*FLEN/8, x4, x1, x2)

inst_9724:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700003ffffffff; valaddr_reg:x3; val_offset:29172*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29172*0 + 3*508*FLEN/8, x4, x1, x2)

inst_9725:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700007ffffffff; valaddr_reg:x3; val_offset:29175*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29175*0 + 3*509*FLEN/8, x4, x1, x2)

inst_9726:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70000fffffffff; valaddr_reg:x3; val_offset:29178*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29178*0 + 3*510*FLEN/8, x4, x1, x2)

inst_9727:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70001fffffffff; valaddr_reg:x3; val_offset:29181*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29181*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_9728:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70003fffffffff; valaddr_reg:x3; val_offset:29184*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29184*0 + 3*512*FLEN/8, x4, x1, x2)

inst_9729:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70007fffffffff; valaddr_reg:x3; val_offset:29187*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29187*0 + 3*513*FLEN/8, x4, x1, x2)

inst_9730:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7000ffffffffff; valaddr_reg:x3; val_offset:29190*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29190*0 + 3*514*FLEN/8, x4, x1, x2)

inst_9731:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7001ffffffffff; valaddr_reg:x3; val_offset:29193*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29193*0 + 3*515*FLEN/8, x4, x1, x2)

inst_9732:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7003ffffffffff; valaddr_reg:x3; val_offset:29196*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29196*0 + 3*516*FLEN/8, x4, x1, x2)

inst_9733:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7007ffffffffff; valaddr_reg:x3; val_offset:29199*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29199*0 + 3*517*FLEN/8, x4, x1, x2)

inst_9734:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f700fffffffffff; valaddr_reg:x3; val_offset:29202*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29202*0 + 3*518*FLEN/8, x4, x1, x2)

inst_9735:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f701fffffffffff; valaddr_reg:x3; val_offset:29205*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29205*0 + 3*519*FLEN/8, x4, x1, x2)

inst_9736:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f703fffffffffff; valaddr_reg:x3; val_offset:29208*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29208*0 + 3*520*FLEN/8, x4, x1, x2)

inst_9737:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f707fffffffffff; valaddr_reg:x3; val_offset:29211*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29211*0 + 3*521*FLEN/8, x4, x1, x2)

inst_9738:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f70ffffffffffff; valaddr_reg:x3; val_offset:29214*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29214*0 + 3*522*FLEN/8, x4, x1, x2)

inst_9739:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f71ffffffffffff; valaddr_reg:x3; val_offset:29217*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29217*0 + 3*523*FLEN/8, x4, x1, x2)

inst_9740:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f73ffffffffffff; valaddr_reg:x3; val_offset:29220*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29220*0 + 3*524*FLEN/8, x4, x1, x2)

inst_9741:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f77ffffffffffff; valaddr_reg:x3; val_offset:29223*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29223*0 + 3*525*FLEN/8, x4, x1, x2)

inst_9742:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f78000000000000; valaddr_reg:x3; val_offset:29226*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29226*0 + 3*526*FLEN/8, x4, x1, x2)

inst_9743:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7c000000000000; valaddr_reg:x3; val_offset:29229*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29229*0 + 3*527*FLEN/8, x4, x1, x2)

inst_9744:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7e000000000000; valaddr_reg:x3; val_offset:29232*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29232*0 + 3*528*FLEN/8, x4, x1, x2)

inst_9745:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7f000000000000; valaddr_reg:x3; val_offset:29235*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29235*0 + 3*529*FLEN/8, x4, x1, x2)

inst_9746:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7f800000000000; valaddr_reg:x3; val_offset:29238*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29238*0 + 3*530*FLEN/8, x4, x1, x2)

inst_9747:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fc00000000000; valaddr_reg:x3; val_offset:29241*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29241*0 + 3*531*FLEN/8, x4, x1, x2)

inst_9748:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fe00000000000; valaddr_reg:x3; val_offset:29244*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29244*0 + 3*532*FLEN/8, x4, x1, x2)

inst_9749:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ff00000000000; valaddr_reg:x3; val_offset:29247*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29247*0 + 3*533*FLEN/8, x4, x1, x2)

inst_9750:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ff80000000000; valaddr_reg:x3; val_offset:29250*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29250*0 + 3*534*FLEN/8, x4, x1, x2)

inst_9751:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffc0000000000; valaddr_reg:x3; val_offset:29253*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29253*0 + 3*535*FLEN/8, x4, x1, x2)

inst_9752:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffe0000000000; valaddr_reg:x3; val_offset:29256*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29256*0 + 3*536*FLEN/8, x4, x1, x2)

inst_9753:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fff0000000000; valaddr_reg:x3; val_offset:29259*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29259*0 + 3*537*FLEN/8, x4, x1, x2)

inst_9754:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fff8000000000; valaddr_reg:x3; val_offset:29262*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29262*0 + 3*538*FLEN/8, x4, x1, x2)

inst_9755:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffc000000000; valaddr_reg:x3; val_offset:29265*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29265*0 + 3*539*FLEN/8, x4, x1, x2)

inst_9756:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffe000000000; valaddr_reg:x3; val_offset:29268*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29268*0 + 3*540*FLEN/8, x4, x1, x2)

inst_9757:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffff000000000; valaddr_reg:x3; val_offset:29271*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29271*0 + 3*541*FLEN/8, x4, x1, x2)

inst_9758:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffff800000000; valaddr_reg:x3; val_offset:29274*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29274*0 + 3*542*FLEN/8, x4, x1, x2)

inst_9759:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffc00000000; valaddr_reg:x3; val_offset:29277*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29277*0 + 3*543*FLEN/8, x4, x1, x2)

inst_9760:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffe00000000; valaddr_reg:x3; val_offset:29280*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29280*0 + 3*544*FLEN/8, x4, x1, x2)

inst_9761:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffff00000000; valaddr_reg:x3; val_offset:29283*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29283*0 + 3*545*FLEN/8, x4, x1, x2)

inst_9762:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffff80000000; valaddr_reg:x3; val_offset:29286*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29286*0 + 3*546*FLEN/8, x4, x1, x2)

inst_9763:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffc0000000; valaddr_reg:x3; val_offset:29289*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29289*0 + 3*547*FLEN/8, x4, x1, x2)

inst_9764:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffe0000000; valaddr_reg:x3; val_offset:29292*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29292*0 + 3*548*FLEN/8, x4, x1, x2)

inst_9765:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffff0000000; valaddr_reg:x3; val_offset:29295*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29295*0 + 3*549*FLEN/8, x4, x1, x2)

inst_9766:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffff8000000; valaddr_reg:x3; val_offset:29298*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29298*0 + 3*550*FLEN/8, x4, x1, x2)

inst_9767:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffc000000; valaddr_reg:x3; val_offset:29301*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29301*0 + 3*551*FLEN/8, x4, x1, x2)

inst_9768:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffe000000; valaddr_reg:x3; val_offset:29304*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29304*0 + 3*552*FLEN/8, x4, x1, x2)

inst_9769:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffff000000; valaddr_reg:x3; val_offset:29307*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29307*0 + 3*553*FLEN/8, x4, x1, x2)

inst_9770:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffff800000; valaddr_reg:x3; val_offset:29310*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29310*0 + 3*554*FLEN/8, x4, x1, x2)

inst_9771:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffffc00000; valaddr_reg:x3; val_offset:29313*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29313*0 + 3*555*FLEN/8, x4, x1, x2)

inst_9772:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffffe00000; valaddr_reg:x3; val_offset:29316*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29316*0 + 3*556*FLEN/8, x4, x1, x2)

inst_9773:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffff00000; valaddr_reg:x3; val_offset:29319*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29319*0 + 3*557*FLEN/8, x4, x1, x2)

inst_9774:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffff80000; valaddr_reg:x3; val_offset:29322*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29322*0 + 3*558*FLEN/8, x4, x1, x2)

inst_9775:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffffc0000; valaddr_reg:x3; val_offset:29325*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29325*0 + 3*559*FLEN/8, x4, x1, x2)

inst_9776:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffffe0000; valaddr_reg:x3; val_offset:29328*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29328*0 + 3*560*FLEN/8, x4, x1, x2)

inst_9777:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffffff0000; valaddr_reg:x3; val_offset:29331*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29331*0 + 3*561*FLEN/8, x4, x1, x2)

inst_9778:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffffff8000; valaddr_reg:x3; val_offset:29334*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29334*0 + 3*562*FLEN/8, x4, x1, x2)

inst_9779:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffffffc000; valaddr_reg:x3; val_offset:29337*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29337*0 + 3*563*FLEN/8, x4, x1, x2)

inst_9780:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffffffe000; valaddr_reg:x3; val_offset:29340*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29340*0 + 3*564*FLEN/8, x4, x1, x2)

inst_9781:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffffff000; valaddr_reg:x3; val_offset:29343*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29343*0 + 3*565*FLEN/8, x4, x1, x2)

inst_9782:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffffff800; valaddr_reg:x3; val_offset:29346*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29346*0 + 3*566*FLEN/8, x4, x1, x2)

inst_9783:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffffffc00; valaddr_reg:x3; val_offset:29349*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29349*0 + 3*567*FLEN/8, x4, x1, x2)

inst_9784:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffffffe00; valaddr_reg:x3; val_offset:29352*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29352*0 + 3*568*FLEN/8, x4, x1, x2)

inst_9785:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffffffff00; valaddr_reg:x3; val_offset:29355*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29355*0 + 3*569*FLEN/8, x4, x1, x2)

inst_9786:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffffffff80; valaddr_reg:x3; val_offset:29358*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29358*0 + 3*570*FLEN/8, x4, x1, x2)

inst_9787:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffffffffc0; valaddr_reg:x3; val_offset:29361*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29361*0 + 3*571*FLEN/8, x4, x1, x2)

inst_9788:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffffffffe0; valaddr_reg:x3; val_offset:29364*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29364*0 + 3*572*FLEN/8, x4, x1, x2)

inst_9789:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffffffff0; valaddr_reg:x3; val_offset:29367*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29367*0 + 3*573*FLEN/8, x4, x1, x2)

inst_9790:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffffffff8; valaddr_reg:x3; val_offset:29370*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29370*0 + 3*574*FLEN/8, x4, x1, x2)

inst_9791:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffffffffc; valaddr_reg:x3; val_offset:29373*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29373*0 + 3*575*FLEN/8, x4, x1, x2)

inst_9792:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7ffffffffffffe; valaddr_reg:x3; val_offset:29376*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29376*0 + 3*576*FLEN/8, x4, x1, x2)

inst_9793:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3f7fffffffffffff; valaddr_reg:x3; val_offset:29379*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29379*0 + 3*577*FLEN/8, x4, x1, x2)

inst_9794:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:29382*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29382*0 + 3*578*FLEN/8, x4, x1, x2)

inst_9795:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:29385*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29385*0 + 3*579*FLEN/8, x4, x1, x2)

inst_9796:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:29388*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29388*0 + 3*580*FLEN/8, x4, x1, x2)

inst_9797:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:29391*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29391*0 + 3*581*FLEN/8, x4, x1, x2)

inst_9798:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:29394*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29394*0 + 3*582*FLEN/8, x4, x1, x2)

inst_9799:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:29397*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29397*0 + 3*583*FLEN/8, x4, x1, x2)

inst_9800:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:29400*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29400*0 + 3*584*FLEN/8, x4, x1, x2)

inst_9801:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:29403*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29403*0 + 3*585*FLEN/8, x4, x1, x2)

inst_9802:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:29406*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29406*0 + 3*586*FLEN/8, x4, x1, x2)

inst_9803:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:29409*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29409*0 + 3*587*FLEN/8, x4, x1, x2)

inst_9804:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:29412*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29412*0 + 3*588*FLEN/8, x4, x1, x2)

inst_9805:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:29415*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29415*0 + 3*589*FLEN/8, x4, x1, x2)

inst_9806:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:29418*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29418*0 + 3*590*FLEN/8, x4, x1, x2)

inst_9807:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:29421*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29421*0 + 3*591*FLEN/8, x4, x1, x2)

inst_9808:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:29424*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29424*0 + 3*592*FLEN/8, x4, x1, x2)

inst_9809:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:29427*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29427*0 + 3*593*FLEN/8, x4, x1, x2)

inst_9810:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:29430*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29430*0 + 3*594*FLEN/8, x4, x1, x2)

inst_9811:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:29433*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29433*0 + 3*595*FLEN/8, x4, x1, x2)

inst_9812:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:29436*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29436*0 + 3*596*FLEN/8, x4, x1, x2)

inst_9813:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:29439*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29439*0 + 3*597*FLEN/8, x4, x1, x2)

inst_9814:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:29442*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29442*0 + 3*598*FLEN/8, x4, x1, x2)

inst_9815:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x4d84319fd00ce and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789000c246f107; op2val:0x2064d84319fd00ce;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:29445*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29445*0 + 3*599*FLEN/8, x4, x1, x2)

inst_9816:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000000000000; valaddr_reg:x3; val_offset:29448*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29448*0 + 3*600*FLEN/8, x4, x1, x2)

inst_9817:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000000000001; valaddr_reg:x3; val_offset:29451*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29451*0 + 3*601*FLEN/8, x4, x1, x2)

inst_9818:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000000000003; valaddr_reg:x3; val_offset:29454*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29454*0 + 3*602*FLEN/8, x4, x1, x2)

inst_9819:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000000000007; valaddr_reg:x3; val_offset:29457*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29457*0 + 3*603*FLEN/8, x4, x1, x2)

inst_9820:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000000000000f; valaddr_reg:x3; val_offset:29460*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29460*0 + 3*604*FLEN/8, x4, x1, x2)

inst_9821:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000000000001f; valaddr_reg:x3; val_offset:29463*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29463*0 + 3*605*FLEN/8, x4, x1, x2)

inst_9822:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000000000003f; valaddr_reg:x3; val_offset:29466*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29466*0 + 3*606*FLEN/8, x4, x1, x2)

inst_9823:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000000000007f; valaddr_reg:x3; val_offset:29469*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29469*0 + 3*607*FLEN/8, x4, x1, x2)

inst_9824:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100000000000ff; valaddr_reg:x3; val_offset:29472*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29472*0 + 3*608*FLEN/8, x4, x1, x2)

inst_9825:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100000000001ff; valaddr_reg:x3; val_offset:29475*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29475*0 + 3*609*FLEN/8, x4, x1, x2)

inst_9826:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100000000003ff; valaddr_reg:x3; val_offset:29478*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29478*0 + 3*610*FLEN/8, x4, x1, x2)

inst_9827:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100000000007ff; valaddr_reg:x3; val_offset:29481*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29481*0 + 3*611*FLEN/8, x4, x1, x2)

inst_9828:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000000000fff; valaddr_reg:x3; val_offset:29484*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29484*0 + 3*612*FLEN/8, x4, x1, x2)

inst_9829:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000000001fff; valaddr_reg:x3; val_offset:29487*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29487*0 + 3*613*FLEN/8, x4, x1, x2)

inst_9830:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000000003fff; valaddr_reg:x3; val_offset:29490*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29490*0 + 3*614*FLEN/8, x4, x1, x2)

inst_9831:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000000007fff; valaddr_reg:x3; val_offset:29493*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29493*0 + 3*615*FLEN/8, x4, x1, x2)

inst_9832:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000000000ffff; valaddr_reg:x3; val_offset:29496*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29496*0 + 3*616*FLEN/8, x4, x1, x2)

inst_9833:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000000001ffff; valaddr_reg:x3; val_offset:29499*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29499*0 + 3*617*FLEN/8, x4, x1, x2)

inst_9834:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000000003ffff; valaddr_reg:x3; val_offset:29502*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29502*0 + 3*618*FLEN/8, x4, x1, x2)

inst_9835:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000000007ffff; valaddr_reg:x3; val_offset:29505*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29505*0 + 3*619*FLEN/8, x4, x1, x2)

inst_9836:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100000000fffff; valaddr_reg:x3; val_offset:29508*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29508*0 + 3*620*FLEN/8, x4, x1, x2)

inst_9837:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100000001fffff; valaddr_reg:x3; val_offset:29511*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29511*0 + 3*621*FLEN/8, x4, x1, x2)

inst_9838:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100000003fffff; valaddr_reg:x3; val_offset:29514*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29514*0 + 3*622*FLEN/8, x4, x1, x2)

inst_9839:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100000007fffff; valaddr_reg:x3; val_offset:29517*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29517*0 + 3*623*FLEN/8, x4, x1, x2)

inst_9840:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000000ffffff; valaddr_reg:x3; val_offset:29520*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29520*0 + 3*624*FLEN/8, x4, x1, x2)

inst_9841:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000001ffffff; valaddr_reg:x3; val_offset:29523*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29523*0 + 3*625*FLEN/8, x4, x1, x2)

inst_9842:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000003ffffff; valaddr_reg:x3; val_offset:29526*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29526*0 + 3*626*FLEN/8, x4, x1, x2)

inst_9843:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000007ffffff; valaddr_reg:x3; val_offset:29529*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29529*0 + 3*627*FLEN/8, x4, x1, x2)

inst_9844:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000000fffffff; valaddr_reg:x3; val_offset:29532*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29532*0 + 3*628*FLEN/8, x4, x1, x2)

inst_9845:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000001fffffff; valaddr_reg:x3; val_offset:29535*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29535*0 + 3*629*FLEN/8, x4, x1, x2)

inst_9846:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000003fffffff; valaddr_reg:x3; val_offset:29538*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29538*0 + 3*630*FLEN/8, x4, x1, x2)

inst_9847:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000007fffffff; valaddr_reg:x3; val_offset:29541*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29541*0 + 3*631*FLEN/8, x4, x1, x2)

inst_9848:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100000ffffffff; valaddr_reg:x3; val_offset:29544*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29544*0 + 3*632*FLEN/8, x4, x1, x2)

inst_9849:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100001ffffffff; valaddr_reg:x3; val_offset:29547*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29547*0 + 3*633*FLEN/8, x4, x1, x2)

inst_9850:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100003ffffffff; valaddr_reg:x3; val_offset:29550*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29550*0 + 3*634*FLEN/8, x4, x1, x2)

inst_9851:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100007ffffffff; valaddr_reg:x3; val_offset:29553*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29553*0 + 3*635*FLEN/8, x4, x1, x2)

inst_9852:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810000fffffffff; valaddr_reg:x3; val_offset:29556*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29556*0 + 3*636*FLEN/8, x4, x1, x2)

inst_9853:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810001fffffffff; valaddr_reg:x3; val_offset:29559*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29559*0 + 3*637*FLEN/8, x4, x1, x2)

inst_9854:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810003fffffffff; valaddr_reg:x3; val_offset:29562*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29562*0 + 3*638*FLEN/8, x4, x1, x2)

inst_9855:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810007fffffffff; valaddr_reg:x3; val_offset:29565*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29565*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_9856:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81000ffffffffff; valaddr_reg:x3; val_offset:29568*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29568*0 + 3*640*FLEN/8, x4, x1, x2)

inst_9857:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81001ffffffffff; valaddr_reg:x3; val_offset:29571*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29571*0 + 3*641*FLEN/8, x4, x1, x2)

inst_9858:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81003ffffffffff; valaddr_reg:x3; val_offset:29574*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29574*0 + 3*642*FLEN/8, x4, x1, x2)

inst_9859:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81007ffffffffff; valaddr_reg:x3; val_offset:29577*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29577*0 + 3*643*FLEN/8, x4, x1, x2)

inst_9860:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8100fffffffffff; valaddr_reg:x3; val_offset:29580*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29580*0 + 3*644*FLEN/8, x4, x1, x2)

inst_9861:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8101fffffffffff; valaddr_reg:x3; val_offset:29583*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29583*0 + 3*645*FLEN/8, x4, x1, x2)

inst_9862:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8103fffffffffff; valaddr_reg:x3; val_offset:29586*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29586*0 + 3*646*FLEN/8, x4, x1, x2)

inst_9863:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb8107fffffffffff; valaddr_reg:x3; val_offset:29589*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29589*0 + 3*647*FLEN/8, x4, x1, x2)

inst_9864:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb810ffffffffffff; valaddr_reg:x3; val_offset:29592*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29592*0 + 3*648*FLEN/8, x4, x1, x2)

inst_9865:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb811ffffffffffff; valaddr_reg:x3; val_offset:29595*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29595*0 + 3*649*FLEN/8, x4, x1, x2)

inst_9866:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb813ffffffffffff; valaddr_reg:x3; val_offset:29598*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29598*0 + 3*650*FLEN/8, x4, x1, x2)

inst_9867:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb817ffffffffffff; valaddr_reg:x3; val_offset:29601*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29601*0 + 3*651*FLEN/8, x4, x1, x2)

inst_9868:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb818000000000000; valaddr_reg:x3; val_offset:29604*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29604*0 + 3*652*FLEN/8, x4, x1, x2)

inst_9869:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81c000000000000; valaddr_reg:x3; val_offset:29607*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29607*0 + 3*653*FLEN/8, x4, x1, x2)

inst_9870:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81e000000000000; valaddr_reg:x3; val_offset:29610*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29610*0 + 3*654*FLEN/8, x4, x1, x2)

inst_9871:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81f000000000000; valaddr_reg:x3; val_offset:29613*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29613*0 + 3*655*FLEN/8, x4, x1, x2)

inst_9872:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81f800000000000; valaddr_reg:x3; val_offset:29616*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29616*0 + 3*656*FLEN/8, x4, x1, x2)

inst_9873:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fc00000000000; valaddr_reg:x3; val_offset:29619*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29619*0 + 3*657*FLEN/8, x4, x1, x2)

inst_9874:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fe00000000000; valaddr_reg:x3; val_offset:29622*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29622*0 + 3*658*FLEN/8, x4, x1, x2)

inst_9875:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ff00000000000; valaddr_reg:x3; val_offset:29625*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29625*0 + 3*659*FLEN/8, x4, x1, x2)

inst_9876:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ff80000000000; valaddr_reg:x3; val_offset:29628*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29628*0 + 3*660*FLEN/8, x4, x1, x2)

inst_9877:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffc0000000000; valaddr_reg:x3; val_offset:29631*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29631*0 + 3*661*FLEN/8, x4, x1, x2)

inst_9878:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffe0000000000; valaddr_reg:x3; val_offset:29634*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29634*0 + 3*662*FLEN/8, x4, x1, x2)

inst_9879:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fff0000000000; valaddr_reg:x3; val_offset:29637*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29637*0 + 3*663*FLEN/8, x4, x1, x2)

inst_9880:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fff8000000000; valaddr_reg:x3; val_offset:29640*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29640*0 + 3*664*FLEN/8, x4, x1, x2)

inst_9881:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffc000000000; valaddr_reg:x3; val_offset:29643*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29643*0 + 3*665*FLEN/8, x4, x1, x2)

inst_9882:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffe000000000; valaddr_reg:x3; val_offset:29646*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29646*0 + 3*666*FLEN/8, x4, x1, x2)

inst_9883:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffff000000000; valaddr_reg:x3; val_offset:29649*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29649*0 + 3*667*FLEN/8, x4, x1, x2)

inst_9884:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffff800000000; valaddr_reg:x3; val_offset:29652*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29652*0 + 3*668*FLEN/8, x4, x1, x2)

inst_9885:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffc00000000; valaddr_reg:x3; val_offset:29655*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29655*0 + 3*669*FLEN/8, x4, x1, x2)

inst_9886:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffe00000000; valaddr_reg:x3; val_offset:29658*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29658*0 + 3*670*FLEN/8, x4, x1, x2)

inst_9887:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffff00000000; valaddr_reg:x3; val_offset:29661*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29661*0 + 3*671*FLEN/8, x4, x1, x2)

inst_9888:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffff80000000; valaddr_reg:x3; val_offset:29664*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29664*0 + 3*672*FLEN/8, x4, x1, x2)

inst_9889:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffc0000000; valaddr_reg:x3; val_offset:29667*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29667*0 + 3*673*FLEN/8, x4, x1, x2)

inst_9890:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffe0000000; valaddr_reg:x3; val_offset:29670*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29670*0 + 3*674*FLEN/8, x4, x1, x2)

inst_9891:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffff0000000; valaddr_reg:x3; val_offset:29673*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29673*0 + 3*675*FLEN/8, x4, x1, x2)

inst_9892:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffff8000000; valaddr_reg:x3; val_offset:29676*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29676*0 + 3*676*FLEN/8, x4, x1, x2)

inst_9893:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffc000000; valaddr_reg:x3; val_offset:29679*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29679*0 + 3*677*FLEN/8, x4, x1, x2)

inst_9894:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffe000000; valaddr_reg:x3; val_offset:29682*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29682*0 + 3*678*FLEN/8, x4, x1, x2)

inst_9895:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffff000000; valaddr_reg:x3; val_offset:29685*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29685*0 + 3*679*FLEN/8, x4, x1, x2)

inst_9896:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffff800000; valaddr_reg:x3; val_offset:29688*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29688*0 + 3*680*FLEN/8, x4, x1, x2)

inst_9897:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffffc00000; valaddr_reg:x3; val_offset:29691*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29691*0 + 3*681*FLEN/8, x4, x1, x2)

inst_9898:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffffe00000; valaddr_reg:x3; val_offset:29694*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29694*0 + 3*682*FLEN/8, x4, x1, x2)

inst_9899:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffff00000; valaddr_reg:x3; val_offset:29697*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29697*0 + 3*683*FLEN/8, x4, x1, x2)

inst_9900:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffff80000; valaddr_reg:x3; val_offset:29700*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29700*0 + 3*684*FLEN/8, x4, x1, x2)

inst_9901:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffffc0000; valaddr_reg:x3; val_offset:29703*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29703*0 + 3*685*FLEN/8, x4, x1, x2)

inst_9902:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffffe0000; valaddr_reg:x3; val_offset:29706*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29706*0 + 3*686*FLEN/8, x4, x1, x2)

inst_9903:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffffff0000; valaddr_reg:x3; val_offset:29709*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29709*0 + 3*687*FLEN/8, x4, x1, x2)

inst_9904:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffffff8000; valaddr_reg:x3; val_offset:29712*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29712*0 + 3*688*FLEN/8, x4, x1, x2)

inst_9905:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffffffc000; valaddr_reg:x3; val_offset:29715*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29715*0 + 3*689*FLEN/8, x4, x1, x2)

inst_9906:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffffffe000; valaddr_reg:x3; val_offset:29718*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29718*0 + 3*690*FLEN/8, x4, x1, x2)

inst_9907:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffffff000; valaddr_reg:x3; val_offset:29721*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29721*0 + 3*691*FLEN/8, x4, x1, x2)

inst_9908:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffffff800; valaddr_reg:x3; val_offset:29724*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29724*0 + 3*692*FLEN/8, x4, x1, x2)

inst_9909:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffffffc00; valaddr_reg:x3; val_offset:29727*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29727*0 + 3*693*FLEN/8, x4, x1, x2)

inst_9910:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffffffe00; valaddr_reg:x3; val_offset:29730*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29730*0 + 3*694*FLEN/8, x4, x1, x2)

inst_9911:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffffffff00; valaddr_reg:x3; val_offset:29733*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29733*0 + 3*695*FLEN/8, x4, x1, x2)

inst_9912:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffffffff80; valaddr_reg:x3; val_offset:29736*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29736*0 + 3*696*FLEN/8, x4, x1, x2)

inst_9913:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffffffffc0; valaddr_reg:x3; val_offset:29739*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29739*0 + 3*697*FLEN/8, x4, x1, x2)

inst_9914:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffffffffe0; valaddr_reg:x3; val_offset:29742*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29742*0 + 3*698*FLEN/8, x4, x1, x2)

inst_9915:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffffffff0; valaddr_reg:x3; val_offset:29745*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29745*0 + 3*699*FLEN/8, x4, x1, x2)

inst_9916:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffffffff8; valaddr_reg:x3; val_offset:29748*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29748*0 + 3*700*FLEN/8, x4, x1, x2)

inst_9917:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffffffffc; valaddr_reg:x3; val_offset:29751*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29751*0 + 3*701*FLEN/8, x4, x1, x2)

inst_9918:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81ffffffffffffe; valaddr_reg:x3; val_offset:29754*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29754*0 + 3*702*FLEN/8, x4, x1, x2)

inst_9919:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x381 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xb81fffffffffffff; valaddr_reg:x3; val_offset:29757*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29757*0 + 3*703*FLEN/8, x4, x1, x2)

inst_9920:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:29760*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29760*0 + 3*704*FLEN/8, x4, x1, x2)

inst_9921:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:29763*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29763*0 + 3*705*FLEN/8, x4, x1, x2)

inst_9922:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:29766*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29766*0 + 3*706*FLEN/8, x4, x1, x2)

inst_9923:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:29769*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29769*0 + 3*707*FLEN/8, x4, x1, x2)

inst_9924:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:29772*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29772*0 + 3*708*FLEN/8, x4, x1, x2)

inst_9925:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:29775*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29775*0 + 3*709*FLEN/8, x4, x1, x2)

inst_9926:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:29778*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29778*0 + 3*710*FLEN/8, x4, x1, x2)

inst_9927:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:29781*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29781*0 + 3*711*FLEN/8, x4, x1, x2)

inst_9928:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:29784*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29784*0 + 3*712*FLEN/8, x4, x1, x2)

inst_9929:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:29787*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29787*0 + 3*713*FLEN/8, x4, x1, x2)

inst_9930:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:29790*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29790*0 + 3*714*FLEN/8, x4, x1, x2)

inst_9931:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:29793*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29793*0 + 3*715*FLEN/8, x4, x1, x2)

inst_9932:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:29796*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29796*0 + 3*716*FLEN/8, x4, x1, x2)

inst_9933:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:29799*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29799*0 + 3*717*FLEN/8, x4, x1, x2)

inst_9934:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:29802*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29802*0 + 3*718*FLEN/8, x4, x1, x2)

inst_9935:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:29805*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29805*0 + 3*719*FLEN/8, x4, x1, x2)

inst_9936:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:29808*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29808*0 + 3*720*FLEN/8, x4, x1, x2)

inst_9937:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:29811*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29811*0 + 3*721*FLEN/8, x4, x1, x2)

inst_9938:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:29814*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29814*0 + 3*722*FLEN/8, x4, x1, x2)

inst_9939:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:29817*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29817*0 + 3*723*FLEN/8, x4, x1, x2)

inst_9940:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:29820*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29820*0 + 3*724*FLEN/8, x4, x1, x2)

inst_9941:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x89d942a85e30f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4ccc414670062 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f789d942a85e30f; op2val:0x9ff4ccc414670062;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:29823*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29823*0 + 3*725*FLEN/8, x4, x1, x2)

inst_9942:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:29826*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29826*0 + 3*726*FLEN/8, x4, x1, x2)

inst_9943:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:29829*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29829*0 + 3*727*FLEN/8, x4, x1, x2)

inst_9944:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:29832*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29832*0 + 3*728*FLEN/8, x4, x1, x2)

inst_9945:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:29835*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29835*0 + 3*729*FLEN/8, x4, x1, x2)

inst_9946:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:29838*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29838*0 + 3*730*FLEN/8, x4, x1, x2)

inst_9947:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:29841*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29841*0 + 3*731*FLEN/8, x4, x1, x2)

inst_9948:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:29844*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29844*0 + 3*732*FLEN/8, x4, x1, x2)

inst_9949:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:29847*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29847*0 + 3*733*FLEN/8, x4, x1, x2)

inst_9950:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:29850*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29850*0 + 3*734*FLEN/8, x4, x1, x2)

inst_9951:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:29853*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29853*0 + 3*735*FLEN/8, x4, x1, x2)

inst_9952:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:29856*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29856*0 + 3*736*FLEN/8, x4, x1, x2)

inst_9953:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:29859*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29859*0 + 3*737*FLEN/8, x4, x1, x2)

inst_9954:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:29862*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29862*0 + 3*738*FLEN/8, x4, x1, x2)

inst_9955:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:29865*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29865*0 + 3*739*FLEN/8, x4, x1, x2)

inst_9956:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:29868*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29868*0 + 3*740*FLEN/8, x4, x1, x2)

inst_9957:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:29871*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29871*0 + 3*741*FLEN/8, x4, x1, x2)

inst_9958:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:29874*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29874*0 + 3*742*FLEN/8, x4, x1, x2)

inst_9959:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:29877*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29877*0 + 3*743*FLEN/8, x4, x1, x2)

inst_9960:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:29880*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29880*0 + 3*744*FLEN/8, x4, x1, x2)

inst_9961:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:29883*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29883*0 + 3*745*FLEN/8, x4, x1, x2)

inst_9962:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:29886*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29886*0 + 3*746*FLEN/8, x4, x1, x2)

inst_9963:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:29889*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29889*0 + 3*747*FLEN/8, x4, x1, x2)

inst_9964:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x400000000000000; valaddr_reg:x3; val_offset:29892*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29892*0 + 3*748*FLEN/8, x4, x1, x2)

inst_9965:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x400000000000001; valaddr_reg:x3; val_offset:29895*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29895*0 + 3*749*FLEN/8, x4, x1, x2)

inst_9966:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x400000000000003; valaddr_reg:x3; val_offset:29898*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29898*0 + 3*750*FLEN/8, x4, x1, x2)

inst_9967:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x400000000000007; valaddr_reg:x3; val_offset:29901*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29901*0 + 3*751*FLEN/8, x4, x1, x2)

inst_9968:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x40000000000000f; valaddr_reg:x3; val_offset:29904*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29904*0 + 3*752*FLEN/8, x4, x1, x2)

inst_9969:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x40000000000001f; valaddr_reg:x3; val_offset:29907*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29907*0 + 3*753*FLEN/8, x4, x1, x2)

inst_9970:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x40000000000003f; valaddr_reg:x3; val_offset:29910*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29910*0 + 3*754*FLEN/8, x4, x1, x2)

inst_9971:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x40000000000007f; valaddr_reg:x3; val_offset:29913*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29913*0 + 3*755*FLEN/8, x4, x1, x2)

inst_9972:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x4000000000000ff; valaddr_reg:x3; val_offset:29916*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29916*0 + 3*756*FLEN/8, x4, x1, x2)

inst_9973:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x4000000000001ff; valaddr_reg:x3; val_offset:29919*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29919*0 + 3*757*FLEN/8, x4, x1, x2)

inst_9974:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x4000000000003ff; valaddr_reg:x3; val_offset:29922*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29922*0 + 3*758*FLEN/8, x4, x1, x2)

inst_9975:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x4000000000007ff; valaddr_reg:x3; val_offset:29925*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29925*0 + 3*759*FLEN/8, x4, x1, x2)

inst_9976:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x400000000000fff; valaddr_reg:x3; val_offset:29928*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29928*0 + 3*760*FLEN/8, x4, x1, x2)

inst_9977:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x400000000001fff; valaddr_reg:x3; val_offset:29931*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29931*0 + 3*761*FLEN/8, x4, x1, x2)

inst_9978:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x400000000003fff; valaddr_reg:x3; val_offset:29934*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29934*0 + 3*762*FLEN/8, x4, x1, x2)

inst_9979:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x400000000007fff; valaddr_reg:x3; val_offset:29937*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29937*0 + 3*763*FLEN/8, x4, x1, x2)

inst_9980:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x40000000000ffff; valaddr_reg:x3; val_offset:29940*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29940*0 + 3*764*FLEN/8, x4, x1, x2)

inst_9981:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x40000000001ffff; valaddr_reg:x3; val_offset:29943*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29943*0 + 3*765*FLEN/8, x4, x1, x2)

inst_9982:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x40000000003ffff; valaddr_reg:x3; val_offset:29946*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29946*0 + 3*766*FLEN/8, x4, x1, x2)

inst_9983:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8ea2733642297 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78ea2733642297; op2val:0x0;
op3val:0x40000000007ffff; valaddr_reg:x3; val_offset:29949*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 29949*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000462317977599,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000463391719423,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000465539203071,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000469834170367,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000478424104959,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000495603974143,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000529963712511,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000598683189247,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763000736122142719,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763001011000049663,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763001560755863551,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763002660267491327,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763004859290746879,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763009257337257983,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763018053430280191,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763035645616324607,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763070829988413439,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763141198732591103,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763281936220946431,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13763563411197657087,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13764126361151078399,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13765252261057921023,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13765252261057921024,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13766378160964763648,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13766941110918184960,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767222585894895616,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767363323383250944,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767433692127428608,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767468876499517440,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767486468685561856,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767495264778584064,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767499662825095168,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767501861848350720,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767502961359978496,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767503511115792384,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767503785993699328,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767503923432652800,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767503992152129536,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504026511867904,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504043691737088,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504052281671680,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504056576638976,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504058724122624,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504059797864448,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060334735360,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060603170816,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060737388544,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060804497408,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060838051840,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060854829056,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060863217664,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060867411968,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060869509120,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060870557696,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871081984,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871344128,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871475200,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871540736,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871573504,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871589888,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871598080,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871602176,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871604224,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871605248,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871605760,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871606016,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871606144,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871606208,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871606240,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871606256,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871606264,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871606268,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871606270,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13767504060871606271,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6879190698131016895,64,FLEN)
NAN_BOXED(11526264406603702175,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117056,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117057,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117059,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117063,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117071,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117087,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117119,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117183,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117311,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117567,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379118079,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379119103,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379121151,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379125247,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379133439,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379149823,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379182591,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379248127,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379379199,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379641343,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813380165631,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813381214207,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813383311359,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813387505663,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813395894271,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813412671487,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813446225919,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813513334783,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813647552511,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813915987967,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098814452858879,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098815526600703,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098817674084351,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098821969051647,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098830558986239,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098847738855423,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098882098593791,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098950818070527,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099088257023999,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099363134930943,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099912890744831,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507101012402372607,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507103211425628159,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507107609472139263,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507116405565161471,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507133997751205887,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507169182123294719,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507239550867472383,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507380288355827711,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507661763332538367,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9508224713285959679,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802303,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802304,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9510476513099644928,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511039463053066240,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511320938029776896,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511461675518132224,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511532044262309888,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511567228634398720,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511584820820443136,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511593616913465344,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511598014959976448,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511600213983232000,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601313494859776,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601863250673664,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602138128580608,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602275567534080,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602344287010816,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602378646749184,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602395826618368,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602404416552960,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602408711520256,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602410859003904,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602411932745728,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412469616640,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412738052096,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412872269824,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412939378688,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412972933120,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412989710336,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412998098944,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413002293248,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413004390400,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005438976,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005963264,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006225408,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006356480,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006422016,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006454784,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006471168,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006479360,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006483456,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006485504,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006486528,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487040,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487296,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487424,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487488,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487520,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487536,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487544,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487548,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487550,64,FLEN)
NAN_BOXED(6879227076585816519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487551,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629341696,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629341697,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629341699,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629341703,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629341711,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629341727,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629341759,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629341823,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629341951,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629342207,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629342719,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629343743,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629345791,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629349887,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629358079,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629374463,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629407231,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629472767,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629603839,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245629865983,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245630390271,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245631438847,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245633535999,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245637730303,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245646118911,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245662896127,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245696450559,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245763559423,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923245897777151,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923246166212607,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923246703083519,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923247776825343,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923249924308991,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923254219276287,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923262809210879,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923279989080063,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923314348818431,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923383068295167,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923520507248639,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282923795385155583,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282924345140969471,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282925444652597247,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282927643675852799,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282932041722363903,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282940837815386111,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282958430001430527,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4282993614373519359,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4283063983117697023,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4283204720606052351,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4283486195582763007,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4284049145536184319,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4285175045443026943,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4285175045443026944,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4286300945349869568,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4286863895303290880,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287145370280001536,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287286107768356864,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287356476512534528,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287391660884623360,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287409253070667776,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287418049163689984,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287422447210201088,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287424646233456640,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287425745745084416,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426295500898304,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426570378805248,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426707817758720,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426776537235456,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426810896973824,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426828076843008,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426836666777600,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426840961744896,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426843109228544,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426844182970368,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426844719841280,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426844988276736,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845122494464,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845189603328,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845223157760,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845239934976,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845248323584,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845252517888,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845254615040,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845255663616,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256187904,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256450048,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256581120,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256646656,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256679424,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256695808,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256704000,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256708096,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256710144,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256711168,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256711680,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256711936,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256712064,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256712128,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256712160,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256712176,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256712184,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256712188,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256712190,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4287426845256712191,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6879251081696227423,64,FLEN)
NAN_BOXED(2334363451433291668,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907151360,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907151361,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907151363,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907151367,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907151375,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907151391,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907151423,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907151487,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907151615,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907151871,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907152383,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907153407,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907155455,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907159551,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907167743,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907184127,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907216895,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907282431,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907413503,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660907675647,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660908199935,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660909248511,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660911345663,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660915539967,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660923928575,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660940705791,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275660974260223,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275661041369087,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275661175586815,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275661444022271,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275661980893183,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275663054635007,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275665202118655,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275669497085951,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275678087020543,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275695266889727,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275729626628095,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275798346104831,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098275935785058303,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098276210662965247,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098276760418779135,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098277859930406911,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098280058953662463,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098284457000173567,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098293253093195775,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098310845279240191,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098346029651329023,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098416398395506687,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098557135883862015,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4098838610860572671,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4099401560813993983,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4100527460720836607,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4100527460720836608,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4101653360627679232,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102216310581100544,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102497785557811200,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102638523046166528,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102708891790344192,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102744076162433024,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102761668348477440,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102770464441499648,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102774862488010752,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102777061511266304,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102778161022894080,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102778710778707968,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102778985656614912,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779123095568384,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779191815045120,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779226174783488,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779243354652672,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779251944587264,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779256239554560,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779258387038208,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779259460780032,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779259997650944,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260266086400,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260400304128,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260467412992,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260500967424,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260517744640,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260526133248,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260530327552,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260532424704,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260533473280,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260533997568,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534259712,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534390784,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534456320,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534489088,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534505472,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534513664,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534517760,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534519808,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534520832,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534521344,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534521600,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534521728,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534521792,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534521824,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534521840,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534521848,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534521852,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534521854,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4102779260534521855,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6879401332961323919,64,FLEN)
NAN_BOXED(2334232902005934058,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781053440,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781053441,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781053443,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781053447,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781053455,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781053471,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781053503,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781053567,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781053695,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781053951,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781054463,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781055487,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781057535,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781061631,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781069823,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781086207,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781118975,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781184511,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781315583,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621781577727,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621782102015,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621783150591,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621785247743,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621789442047,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621797830655,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621814607871,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621848162303,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153621915271167,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153622049488895,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153622317924351,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153622854795263,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153623928537087,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153626076020735,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153630370988031,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153638960922623,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153656140791807,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153690500530175,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153759220006911,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571153896658960383,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571154171536867327,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571154721292681215,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571155820804308991,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571158019827564543,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571162417874075647,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571171213967097855,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571188806153142271,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571223990525231103,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571294359269408767,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571435096757764095,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4571716571734474751,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4572279521687896063,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4573405421594738687,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4573405421594738688,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4574531321501581312,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575094271455002624,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575375746431713280,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575516483920068608,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575586852664246272,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575622037036335104,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575639629222379520,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575648425315401728,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575652823361912832,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575655022385168384,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575656121896796160,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575656671652610048,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575656946530516992,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657083969470464,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657152688947200,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657187048685568,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657204228554752,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657212818489344,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657217113456640,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657219260940288,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657220334682112,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657220871553024,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221139988480,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221274206208,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221341315072,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221374869504,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221391646720,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221400035328,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221404229632,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221406326784,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221407375360,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221407899648,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408161792,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408292864,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408358400,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408391168,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408407552,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408415744,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408419840,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408421888,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408422912,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408423424,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408423680,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408423808,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408423872,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408423904,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408423920,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408423928,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408423932,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408423934,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4575657221408423935,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6879406763742261511,64,FLEN)
NAN_BOXED(2334228289595179214,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606110720,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606110721,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606110723,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606110727,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606110735,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606110751,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606110783,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606110847,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606110975,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606111231,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606111743,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606112767,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606114815,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606118911,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606127103,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606143487,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606176255,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606241791,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606372863,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902606635007,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902607159295,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902608207871,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902610305023,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902614499327,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902622887935,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902639665151,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902673219583,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902740328447,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100902874546175,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100903142981631,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100903679852543,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100904753594367,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100906901078015,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100911196045311,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100919785979903,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100936965849087,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263100971325587455,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263101040045064191,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263101177484017663,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263101452361924607,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263102002117738495,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263103101629366271,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263105300652621823,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263109698699132927,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263118494792155135,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263136086978199551,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263171271350288383,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263241640094466047,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263382377582821375,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13263663852559532031,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13264226802512953343,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13265352702419795967,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13265352702419795968,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13266478602326638592,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267041552280059904,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267323027256770560,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267463764745125888,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267534133489303552,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267569317861392384,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267586910047436800,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267595706140459008,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267600104186970112,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267602303210225664,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267603402721853440,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267603952477667328,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604227355574272,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604364794527744,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604433514004480,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604467873742848,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604485053612032,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604493643546624,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604497938513920,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604500085997568,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604501159739392,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604501696610304,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604501965045760,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502099263488,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502166372352,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502199926784,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502216704000,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502225092608,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502229286912,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502231384064,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502232432640,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502232956928,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233219072,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233350144,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233415680,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233448448,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233464832,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233473024,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233477120,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233479168,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233480192,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233480704,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233480960,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233481088,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233481152,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233481184,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233481200,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233481208,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233481212,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233481214,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13267604502233481215,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6879421690502570767,64,FLEN)
NAN_BOXED(11526062488875892834,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711744,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711745,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711747,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711751,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711759,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711775,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711807,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711871,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711999,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151712255,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151712767,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151713791,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151715839,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151719935,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151728127,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151744511,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151777279,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151842815,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151973887,64,FLEN)
NAN_BOXED(6879505884895257239,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376152236031,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
