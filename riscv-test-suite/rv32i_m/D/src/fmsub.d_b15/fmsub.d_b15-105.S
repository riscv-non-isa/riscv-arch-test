
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_79872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84d144020a354 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84d144020a354; op2val:0x8000;
op3val:0x81dfffffffffffe0; valaddr_reg:x3; val_offset:239616*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239616*0 + 3*0*FLEN/8, x4, x1, x2)

inst_79873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84d144020a354 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84d144020a354; op2val:0x8000;
op3val:0x81dffffffffffff0; valaddr_reg:x3; val_offset:239619*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239619*0 + 3*1*FLEN/8, x4, x1, x2)

inst_79874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84d144020a354 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84d144020a354; op2val:0x8000;
op3val:0x81dffffffffffff8; valaddr_reg:x3; val_offset:239622*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239622*0 + 3*2*FLEN/8, x4, x1, x2)

inst_79875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84d144020a354 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84d144020a354; op2val:0x8000;
op3val:0x81dffffffffffffc; valaddr_reg:x3; val_offset:239625*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239625*0 + 3*3*FLEN/8, x4, x1, x2)

inst_79876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84d144020a354 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84d144020a354; op2val:0x8000;
op3val:0x81dffffffffffffe; valaddr_reg:x3; val_offset:239628*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239628*0 + 3*4*FLEN/8, x4, x1, x2)

inst_79877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x84d144020a354 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa84d144020a354; op2val:0x8000;
op3val:0x81dfffffffffffff; valaddr_reg:x3; val_offset:239631*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239631*0 + 3*5*FLEN/8, x4, x1, x2)

inst_79878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000000000000; valaddr_reg:x3; val_offset:239634*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239634*0 + 3*6*FLEN/8, x4, x1, x2)

inst_79879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000000000001; valaddr_reg:x3; val_offset:239637*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239637*0 + 3*7*FLEN/8, x4, x1, x2)

inst_79880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000000000003; valaddr_reg:x3; val_offset:239640*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239640*0 + 3*8*FLEN/8, x4, x1, x2)

inst_79881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000000000007; valaddr_reg:x3; val_offset:239643*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239643*0 + 3*9*FLEN/8, x4, x1, x2)

inst_79882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000000000000f; valaddr_reg:x3; val_offset:239646*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239646*0 + 3*10*FLEN/8, x4, x1, x2)

inst_79883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000000000001f; valaddr_reg:x3; val_offset:239649*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239649*0 + 3*11*FLEN/8, x4, x1, x2)

inst_79884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000000000003f; valaddr_reg:x3; val_offset:239652*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239652*0 + 3*12*FLEN/8, x4, x1, x2)

inst_79885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000000000007f; valaddr_reg:x3; val_offset:239655*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239655*0 + 3*13*FLEN/8, x4, x1, x2)

inst_79886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00000000000ff; valaddr_reg:x3; val_offset:239658*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239658*0 + 3*14*FLEN/8, x4, x1, x2)

inst_79887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00000000001ff; valaddr_reg:x3; val_offset:239661*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239661*0 + 3*15*FLEN/8, x4, x1, x2)

inst_79888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00000000003ff; valaddr_reg:x3; val_offset:239664*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239664*0 + 3*16*FLEN/8, x4, x1, x2)

inst_79889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00000000007ff; valaddr_reg:x3; val_offset:239667*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239667*0 + 3*17*FLEN/8, x4, x1, x2)

inst_79890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000000000fff; valaddr_reg:x3; val_offset:239670*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239670*0 + 3*18*FLEN/8, x4, x1, x2)

inst_79891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000000001fff; valaddr_reg:x3; val_offset:239673*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239673*0 + 3*19*FLEN/8, x4, x1, x2)

inst_79892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000000003fff; valaddr_reg:x3; val_offset:239676*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239676*0 + 3*20*FLEN/8, x4, x1, x2)

inst_79893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000000007fff; valaddr_reg:x3; val_offset:239679*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239679*0 + 3*21*FLEN/8, x4, x1, x2)

inst_79894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000000000ffff; valaddr_reg:x3; val_offset:239682*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239682*0 + 3*22*FLEN/8, x4, x1, x2)

inst_79895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000000001ffff; valaddr_reg:x3; val_offset:239685*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239685*0 + 3*23*FLEN/8, x4, x1, x2)

inst_79896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000000003ffff; valaddr_reg:x3; val_offset:239688*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239688*0 + 3*24*FLEN/8, x4, x1, x2)

inst_79897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000000007ffff; valaddr_reg:x3; val_offset:239691*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239691*0 + 3*25*FLEN/8, x4, x1, x2)

inst_79898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00000000fffff; valaddr_reg:x3; val_offset:239694*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239694*0 + 3*26*FLEN/8, x4, x1, x2)

inst_79899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00000001fffff; valaddr_reg:x3; val_offset:239697*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239697*0 + 3*27*FLEN/8, x4, x1, x2)

inst_79900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00000003fffff; valaddr_reg:x3; val_offset:239700*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239700*0 + 3*28*FLEN/8, x4, x1, x2)

inst_79901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00000007fffff; valaddr_reg:x3; val_offset:239703*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239703*0 + 3*29*FLEN/8, x4, x1, x2)

inst_79902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000000ffffff; valaddr_reg:x3; val_offset:239706*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239706*0 + 3*30*FLEN/8, x4, x1, x2)

inst_79903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000001ffffff; valaddr_reg:x3; val_offset:239709*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239709*0 + 3*31*FLEN/8, x4, x1, x2)

inst_79904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000003ffffff; valaddr_reg:x3; val_offset:239712*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239712*0 + 3*32*FLEN/8, x4, x1, x2)

inst_79905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000007ffffff; valaddr_reg:x3; val_offset:239715*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239715*0 + 3*33*FLEN/8, x4, x1, x2)

inst_79906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000000fffffff; valaddr_reg:x3; val_offset:239718*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239718*0 + 3*34*FLEN/8, x4, x1, x2)

inst_79907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000001fffffff; valaddr_reg:x3; val_offset:239721*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239721*0 + 3*35*FLEN/8, x4, x1, x2)

inst_79908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000003fffffff; valaddr_reg:x3; val_offset:239724*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239724*0 + 3*36*FLEN/8, x4, x1, x2)

inst_79909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000007fffffff; valaddr_reg:x3; val_offset:239727*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239727*0 + 3*37*FLEN/8, x4, x1, x2)

inst_79910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00000ffffffff; valaddr_reg:x3; val_offset:239730*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239730*0 + 3*38*FLEN/8, x4, x1, x2)

inst_79911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00001ffffffff; valaddr_reg:x3; val_offset:239733*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239733*0 + 3*39*FLEN/8, x4, x1, x2)

inst_79912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00003ffffffff; valaddr_reg:x3; val_offset:239736*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239736*0 + 3*40*FLEN/8, x4, x1, x2)

inst_79913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00007ffffffff; valaddr_reg:x3; val_offset:239739*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239739*0 + 3*41*FLEN/8, x4, x1, x2)

inst_79914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0000fffffffff; valaddr_reg:x3; val_offset:239742*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239742*0 + 3*42*FLEN/8, x4, x1, x2)

inst_79915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0001fffffffff; valaddr_reg:x3; val_offset:239745*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239745*0 + 3*43*FLEN/8, x4, x1, x2)

inst_79916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0003fffffffff; valaddr_reg:x3; val_offset:239748*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239748*0 + 3*44*FLEN/8, x4, x1, x2)

inst_79917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0007fffffffff; valaddr_reg:x3; val_offset:239751*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239751*0 + 3*45*FLEN/8, x4, x1, x2)

inst_79918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d000ffffffffff; valaddr_reg:x3; val_offset:239754*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239754*0 + 3*46*FLEN/8, x4, x1, x2)

inst_79919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d001ffffffffff; valaddr_reg:x3; val_offset:239757*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239757*0 + 3*47*FLEN/8, x4, x1, x2)

inst_79920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d003ffffffffff; valaddr_reg:x3; val_offset:239760*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239760*0 + 3*48*FLEN/8, x4, x1, x2)

inst_79921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d007ffffffffff; valaddr_reg:x3; val_offset:239763*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239763*0 + 3*49*FLEN/8, x4, x1, x2)

inst_79922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d00fffffffffff; valaddr_reg:x3; val_offset:239766*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239766*0 + 3*50*FLEN/8, x4, x1, x2)

inst_79923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d01fffffffffff; valaddr_reg:x3; val_offset:239769*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239769*0 + 3*51*FLEN/8, x4, x1, x2)

inst_79924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d03fffffffffff; valaddr_reg:x3; val_offset:239772*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239772*0 + 3*52*FLEN/8, x4, x1, x2)

inst_79925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d07fffffffffff; valaddr_reg:x3; val_offset:239775*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239775*0 + 3*53*FLEN/8, x4, x1, x2)

inst_79926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d0ffffffffffff; valaddr_reg:x3; val_offset:239778*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239778*0 + 3*54*FLEN/8, x4, x1, x2)

inst_79927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d1ffffffffffff; valaddr_reg:x3; val_offset:239781*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239781*0 + 3*55*FLEN/8, x4, x1, x2)

inst_79928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d3ffffffffffff; valaddr_reg:x3; val_offset:239784*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239784*0 + 3*56*FLEN/8, x4, x1, x2)

inst_79929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d7ffffffffffff; valaddr_reg:x3; val_offset:239787*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239787*0 + 3*57*FLEN/8, x4, x1, x2)

inst_79930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9d8000000000000; valaddr_reg:x3; val_offset:239790*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239790*0 + 3*58*FLEN/8, x4, x1, x2)

inst_79931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dc000000000000; valaddr_reg:x3; val_offset:239793*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239793*0 + 3*59*FLEN/8, x4, x1, x2)

inst_79932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9de000000000000; valaddr_reg:x3; val_offset:239796*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239796*0 + 3*60*FLEN/8, x4, x1, x2)

inst_79933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9df000000000000; valaddr_reg:x3; val_offset:239799*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239799*0 + 3*61*FLEN/8, x4, x1, x2)

inst_79934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9df800000000000; valaddr_reg:x3; val_offset:239802*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239802*0 + 3*62*FLEN/8, x4, x1, x2)

inst_79935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfc00000000000; valaddr_reg:x3; val_offset:239805*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239805*0 + 3*63*FLEN/8, x4, x1, x2)

inst_79936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfe00000000000; valaddr_reg:x3; val_offset:239808*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239808*0 + 3*64*FLEN/8, x4, x1, x2)

inst_79937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dff00000000000; valaddr_reg:x3; val_offset:239811*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239811*0 + 3*65*FLEN/8, x4, x1, x2)

inst_79938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dff80000000000; valaddr_reg:x3; val_offset:239814*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239814*0 + 3*66*FLEN/8, x4, x1, x2)

inst_79939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffc0000000000; valaddr_reg:x3; val_offset:239817*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239817*0 + 3*67*FLEN/8, x4, x1, x2)

inst_79940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffe0000000000; valaddr_reg:x3; val_offset:239820*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239820*0 + 3*68*FLEN/8, x4, x1, x2)

inst_79941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfff0000000000; valaddr_reg:x3; val_offset:239823*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239823*0 + 3*69*FLEN/8, x4, x1, x2)

inst_79942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfff8000000000; valaddr_reg:x3; val_offset:239826*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239826*0 + 3*70*FLEN/8, x4, x1, x2)

inst_79943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffc000000000; valaddr_reg:x3; val_offset:239829*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239829*0 + 3*71*FLEN/8, x4, x1, x2)

inst_79944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffe000000000; valaddr_reg:x3; val_offset:239832*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239832*0 + 3*72*FLEN/8, x4, x1, x2)

inst_79945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffff000000000; valaddr_reg:x3; val_offset:239835*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239835*0 + 3*73*FLEN/8, x4, x1, x2)

inst_79946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffff800000000; valaddr_reg:x3; val_offset:239838*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239838*0 + 3*74*FLEN/8, x4, x1, x2)

inst_79947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffc00000000; valaddr_reg:x3; val_offset:239841*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239841*0 + 3*75*FLEN/8, x4, x1, x2)

inst_79948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffe00000000; valaddr_reg:x3; val_offset:239844*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239844*0 + 3*76*FLEN/8, x4, x1, x2)

inst_79949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffff00000000; valaddr_reg:x3; val_offset:239847*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239847*0 + 3*77*FLEN/8, x4, x1, x2)

inst_79950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffff80000000; valaddr_reg:x3; val_offset:239850*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239850*0 + 3*78*FLEN/8, x4, x1, x2)

inst_79951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffc0000000; valaddr_reg:x3; val_offset:239853*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239853*0 + 3*79*FLEN/8, x4, x1, x2)

inst_79952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffe0000000; valaddr_reg:x3; val_offset:239856*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239856*0 + 3*80*FLEN/8, x4, x1, x2)

inst_79953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffff0000000; valaddr_reg:x3; val_offset:239859*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239859*0 + 3*81*FLEN/8, x4, x1, x2)

inst_79954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffff8000000; valaddr_reg:x3; val_offset:239862*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239862*0 + 3*82*FLEN/8, x4, x1, x2)

inst_79955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffc000000; valaddr_reg:x3; val_offset:239865*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239865*0 + 3*83*FLEN/8, x4, x1, x2)

inst_79956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffe000000; valaddr_reg:x3; val_offset:239868*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239868*0 + 3*84*FLEN/8, x4, x1, x2)

inst_79957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffff000000; valaddr_reg:x3; val_offset:239871*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239871*0 + 3*85*FLEN/8, x4, x1, x2)

inst_79958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffff800000; valaddr_reg:x3; val_offset:239874*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239874*0 + 3*86*FLEN/8, x4, x1, x2)

inst_79959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffffc00000; valaddr_reg:x3; val_offset:239877*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239877*0 + 3*87*FLEN/8, x4, x1, x2)

inst_79960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffffe00000; valaddr_reg:x3; val_offset:239880*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239880*0 + 3*88*FLEN/8, x4, x1, x2)

inst_79961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffff00000; valaddr_reg:x3; val_offset:239883*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239883*0 + 3*89*FLEN/8, x4, x1, x2)

inst_79962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffff80000; valaddr_reg:x3; val_offset:239886*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239886*0 + 3*90*FLEN/8, x4, x1, x2)

inst_79963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffffc0000; valaddr_reg:x3; val_offset:239889*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239889*0 + 3*91*FLEN/8, x4, x1, x2)

inst_79964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffffe0000; valaddr_reg:x3; val_offset:239892*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239892*0 + 3*92*FLEN/8, x4, x1, x2)

inst_79965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffffff0000; valaddr_reg:x3; val_offset:239895*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239895*0 + 3*93*FLEN/8, x4, x1, x2)

inst_79966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffffff8000; valaddr_reg:x3; val_offset:239898*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239898*0 + 3*94*FLEN/8, x4, x1, x2)

inst_79967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffffffc000; valaddr_reg:x3; val_offset:239901*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239901*0 + 3*95*FLEN/8, x4, x1, x2)

inst_79968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffffffe000; valaddr_reg:x3; val_offset:239904*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239904*0 + 3*96*FLEN/8, x4, x1, x2)

inst_79969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffffff000; valaddr_reg:x3; val_offset:239907*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239907*0 + 3*97*FLEN/8, x4, x1, x2)

inst_79970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffffff800; valaddr_reg:x3; val_offset:239910*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239910*0 + 3*98*FLEN/8, x4, x1, x2)

inst_79971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffffffc00; valaddr_reg:x3; val_offset:239913*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239913*0 + 3*99*FLEN/8, x4, x1, x2)

inst_79972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffffffe00; valaddr_reg:x3; val_offset:239916*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239916*0 + 3*100*FLEN/8, x4, x1, x2)

inst_79973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffffffff00; valaddr_reg:x3; val_offset:239919*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239919*0 + 3*101*FLEN/8, x4, x1, x2)

inst_79974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffffffff80; valaddr_reg:x3; val_offset:239922*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239922*0 + 3*102*FLEN/8, x4, x1, x2)

inst_79975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffffffffc0; valaddr_reg:x3; val_offset:239925*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239925*0 + 3*103*FLEN/8, x4, x1, x2)

inst_79976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffffffffe0; valaddr_reg:x3; val_offset:239928*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239928*0 + 3*104*FLEN/8, x4, x1, x2)

inst_79977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffffffff0; valaddr_reg:x3; val_offset:239931*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239931*0 + 3*105*FLEN/8, x4, x1, x2)

inst_79978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffffffff8; valaddr_reg:x3; val_offset:239934*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239934*0 + 3*106*FLEN/8, x4, x1, x2)

inst_79979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffffffffc; valaddr_reg:x3; val_offset:239937*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239937*0 + 3*107*FLEN/8, x4, x1, x2)

inst_79980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dffffffffffffe; valaddr_reg:x3; val_offset:239940*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239940*0 + 3*108*FLEN/8, x4, x1, x2)

inst_79981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xb9dfffffffffffff; valaddr_reg:x3; val_offset:239943*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239943*0 + 3*109*FLEN/8, x4, x1, x2)

inst_79982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:239946*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239946*0 + 3*110*FLEN/8, x4, x1, x2)

inst_79983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:239949*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239949*0 + 3*111*FLEN/8, x4, x1, x2)

inst_79984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:239952*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239952*0 + 3*112*FLEN/8, x4, x1, x2)

inst_79985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:239955*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239955*0 + 3*113*FLEN/8, x4, x1, x2)

inst_79986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:239958*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239958*0 + 3*114*FLEN/8, x4, x1, x2)

inst_79987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:239961*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239961*0 + 3*115*FLEN/8, x4, x1, x2)

inst_79988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:239964*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239964*0 + 3*116*FLEN/8, x4, x1, x2)

inst_79989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:239967*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239967*0 + 3*117*FLEN/8, x4, x1, x2)

inst_79990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:239970*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239970*0 + 3*118*FLEN/8, x4, x1, x2)

inst_79991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:239973*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239973*0 + 3*119*FLEN/8, x4, x1, x2)

inst_79992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:239976*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239976*0 + 3*120*FLEN/8, x4, x1, x2)

inst_79993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:239979*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239979*0 + 3*121*FLEN/8, x4, x1, x2)

inst_79994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:239982*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239982*0 + 3*122*FLEN/8, x4, x1, x2)

inst_79995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:239985*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239985*0 + 3*123*FLEN/8, x4, x1, x2)

inst_79996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:239988*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239988*0 + 3*124*FLEN/8, x4, x1, x2)

inst_79997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:239991*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239991*0 + 3*125*FLEN/8, x4, x1, x2)

inst_79998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:239994*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239994*0 + 3*126*FLEN/8, x4, x1, x2)

inst_79999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:239997*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239997*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_80000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:240000*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240000*0 + 3*128*FLEN/8, x4, x1, x2)

inst_80001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:240003*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240003*0 + 3*129*FLEN/8, x4, x1, x2)

inst_80002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:240006*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240006*0 + 3*130*FLEN/8, x4, x1, x2)

inst_80003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85f1993475a32 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x50216adcd297c and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa85f1993475a32; op2val:0x9fc50216adcd297c;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:240009*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240009*0 + 3*131*FLEN/8, x4, x1, x2)

inst_80004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:240012*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240012*0 + 3*132*FLEN/8, x4, x1, x2)

inst_80005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:240015*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240015*0 + 3*133*FLEN/8, x4, x1, x2)

inst_80006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:240018*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240018*0 + 3*134*FLEN/8, x4, x1, x2)

inst_80007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:240021*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240021*0 + 3*135*FLEN/8, x4, x1, x2)

inst_80008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:240024*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240024*0 + 3*136*FLEN/8, x4, x1, x2)

inst_80009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:240027*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240027*0 + 3*137*FLEN/8, x4, x1, x2)

inst_80010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:240030*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240030*0 + 3*138*FLEN/8, x4, x1, x2)

inst_80011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:240033*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240033*0 + 3*139*FLEN/8, x4, x1, x2)

inst_80012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:240036*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240036*0 + 3*140*FLEN/8, x4, x1, x2)

inst_80013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:240039*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240039*0 + 3*141*FLEN/8, x4, x1, x2)

inst_80014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:240042*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240042*0 + 3*142*FLEN/8, x4, x1, x2)

inst_80015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:240045*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240045*0 + 3*143*FLEN/8, x4, x1, x2)

inst_80016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:240048*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240048*0 + 3*144*FLEN/8, x4, x1, x2)

inst_80017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:240051*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240051*0 + 3*145*FLEN/8, x4, x1, x2)

inst_80018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:240054*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240054*0 + 3*146*FLEN/8, x4, x1, x2)

inst_80019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:240057*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240057*0 + 3*147*FLEN/8, x4, x1, x2)

inst_80020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:240060*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240060*0 + 3*148*FLEN/8, x4, x1, x2)

inst_80021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:240063*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240063*0 + 3*149*FLEN/8, x4, x1, x2)

inst_80022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:240066*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240066*0 + 3*150*FLEN/8, x4, x1, x2)

inst_80023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:240069*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240069*0 + 3*151*FLEN/8, x4, x1, x2)

inst_80024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:240072*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240072*0 + 3*152*FLEN/8, x4, x1, x2)

inst_80025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:240075*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240075*0 + 3*153*FLEN/8, x4, x1, x2)

inst_80026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000000000000; valaddr_reg:x3; val_offset:240078*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240078*0 + 3*154*FLEN/8, x4, x1, x2)

inst_80027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000000000001; valaddr_reg:x3; val_offset:240081*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240081*0 + 3*155*FLEN/8, x4, x1, x2)

inst_80028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000000000003; valaddr_reg:x3; val_offset:240084*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240084*0 + 3*156*FLEN/8, x4, x1, x2)

inst_80029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000000000007; valaddr_reg:x3; val_offset:240087*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240087*0 + 3*157*FLEN/8, x4, x1, x2)

inst_80030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000000000000f; valaddr_reg:x3; val_offset:240090*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240090*0 + 3*158*FLEN/8, x4, x1, x2)

inst_80031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000000000001f; valaddr_reg:x3; val_offset:240093*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240093*0 + 3*159*FLEN/8, x4, x1, x2)

inst_80032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000000000003f; valaddr_reg:x3; val_offset:240096*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240096*0 + 3*160*FLEN/8, x4, x1, x2)

inst_80033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000000000007f; valaddr_reg:x3; val_offset:240099*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240099*0 + 3*161*FLEN/8, x4, x1, x2)

inst_80034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300000000000ff; valaddr_reg:x3; val_offset:240102*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240102*0 + 3*162*FLEN/8, x4, x1, x2)

inst_80035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300000000001ff; valaddr_reg:x3; val_offset:240105*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240105*0 + 3*163*FLEN/8, x4, x1, x2)

inst_80036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300000000003ff; valaddr_reg:x3; val_offset:240108*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240108*0 + 3*164*FLEN/8, x4, x1, x2)

inst_80037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300000000007ff; valaddr_reg:x3; val_offset:240111*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240111*0 + 3*165*FLEN/8, x4, x1, x2)

inst_80038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000000000fff; valaddr_reg:x3; val_offset:240114*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240114*0 + 3*166*FLEN/8, x4, x1, x2)

inst_80039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000000001fff; valaddr_reg:x3; val_offset:240117*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240117*0 + 3*167*FLEN/8, x4, x1, x2)

inst_80040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000000003fff; valaddr_reg:x3; val_offset:240120*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240120*0 + 3*168*FLEN/8, x4, x1, x2)

inst_80041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000000007fff; valaddr_reg:x3; val_offset:240123*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240123*0 + 3*169*FLEN/8, x4, x1, x2)

inst_80042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000000000ffff; valaddr_reg:x3; val_offset:240126*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240126*0 + 3*170*FLEN/8, x4, x1, x2)

inst_80043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000000001ffff; valaddr_reg:x3; val_offset:240129*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240129*0 + 3*171*FLEN/8, x4, x1, x2)

inst_80044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000000003ffff; valaddr_reg:x3; val_offset:240132*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240132*0 + 3*172*FLEN/8, x4, x1, x2)

inst_80045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000000007ffff; valaddr_reg:x3; val_offset:240135*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240135*0 + 3*173*FLEN/8, x4, x1, x2)

inst_80046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300000000fffff; valaddr_reg:x3; val_offset:240138*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240138*0 + 3*174*FLEN/8, x4, x1, x2)

inst_80047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300000001fffff; valaddr_reg:x3; val_offset:240141*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240141*0 + 3*175*FLEN/8, x4, x1, x2)

inst_80048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300000003fffff; valaddr_reg:x3; val_offset:240144*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240144*0 + 3*176*FLEN/8, x4, x1, x2)

inst_80049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300000007fffff; valaddr_reg:x3; val_offset:240147*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240147*0 + 3*177*FLEN/8, x4, x1, x2)

inst_80050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000000ffffff; valaddr_reg:x3; val_offset:240150*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240150*0 + 3*178*FLEN/8, x4, x1, x2)

inst_80051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000001ffffff; valaddr_reg:x3; val_offset:240153*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240153*0 + 3*179*FLEN/8, x4, x1, x2)

inst_80052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000003ffffff; valaddr_reg:x3; val_offset:240156*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240156*0 + 3*180*FLEN/8, x4, x1, x2)

inst_80053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000007ffffff; valaddr_reg:x3; val_offset:240159*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240159*0 + 3*181*FLEN/8, x4, x1, x2)

inst_80054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000000fffffff; valaddr_reg:x3; val_offset:240162*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240162*0 + 3*182*FLEN/8, x4, x1, x2)

inst_80055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000001fffffff; valaddr_reg:x3; val_offset:240165*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240165*0 + 3*183*FLEN/8, x4, x1, x2)

inst_80056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000003fffffff; valaddr_reg:x3; val_offset:240168*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240168*0 + 3*184*FLEN/8, x4, x1, x2)

inst_80057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000007fffffff; valaddr_reg:x3; val_offset:240171*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240171*0 + 3*185*FLEN/8, x4, x1, x2)

inst_80058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300000ffffffff; valaddr_reg:x3; val_offset:240174*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240174*0 + 3*186*FLEN/8, x4, x1, x2)

inst_80059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300001ffffffff; valaddr_reg:x3; val_offset:240177*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240177*0 + 3*187*FLEN/8, x4, x1, x2)

inst_80060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300003ffffffff; valaddr_reg:x3; val_offset:240180*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240180*0 + 3*188*FLEN/8, x4, x1, x2)

inst_80061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300007ffffffff; valaddr_reg:x3; val_offset:240183*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240183*0 + 3*189*FLEN/8, x4, x1, x2)

inst_80062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330000fffffffff; valaddr_reg:x3; val_offset:240186*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240186*0 + 3*190*FLEN/8, x4, x1, x2)

inst_80063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330001fffffffff; valaddr_reg:x3; val_offset:240189*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240189*0 + 3*191*FLEN/8, x4, x1, x2)

inst_80064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330003fffffffff; valaddr_reg:x3; val_offset:240192*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240192*0 + 3*192*FLEN/8, x4, x1, x2)

inst_80065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330007fffffffff; valaddr_reg:x3; val_offset:240195*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240195*0 + 3*193*FLEN/8, x4, x1, x2)

inst_80066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33000ffffffffff; valaddr_reg:x3; val_offset:240198*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240198*0 + 3*194*FLEN/8, x4, x1, x2)

inst_80067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33001ffffffffff; valaddr_reg:x3; val_offset:240201*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240201*0 + 3*195*FLEN/8, x4, x1, x2)

inst_80068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33003ffffffffff; valaddr_reg:x3; val_offset:240204*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240204*0 + 3*196*FLEN/8, x4, x1, x2)

inst_80069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33007ffffffffff; valaddr_reg:x3; val_offset:240207*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240207*0 + 3*197*FLEN/8, x4, x1, x2)

inst_80070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3300fffffffffff; valaddr_reg:x3; val_offset:240210*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240210*0 + 3*198*FLEN/8, x4, x1, x2)

inst_80071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3301fffffffffff; valaddr_reg:x3; val_offset:240213*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240213*0 + 3*199*FLEN/8, x4, x1, x2)

inst_80072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3303fffffffffff; valaddr_reg:x3; val_offset:240216*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240216*0 + 3*200*FLEN/8, x4, x1, x2)

inst_80073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x3307fffffffffff; valaddr_reg:x3; val_offset:240219*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240219*0 + 3*201*FLEN/8, x4, x1, x2)

inst_80074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x330ffffffffffff; valaddr_reg:x3; val_offset:240222*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240222*0 + 3*202*FLEN/8, x4, x1, x2)

inst_80075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x331ffffffffffff; valaddr_reg:x3; val_offset:240225*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240225*0 + 3*203*FLEN/8, x4, x1, x2)

inst_80076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x333ffffffffffff; valaddr_reg:x3; val_offset:240228*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240228*0 + 3*204*FLEN/8, x4, x1, x2)

inst_80077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x337ffffffffffff; valaddr_reg:x3; val_offset:240231*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240231*0 + 3*205*FLEN/8, x4, x1, x2)

inst_80078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x338000000000000; valaddr_reg:x3; val_offset:240234*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240234*0 + 3*206*FLEN/8, x4, x1, x2)

inst_80079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33c000000000000; valaddr_reg:x3; val_offset:240237*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240237*0 + 3*207*FLEN/8, x4, x1, x2)

inst_80080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33e000000000000; valaddr_reg:x3; val_offset:240240*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240240*0 + 3*208*FLEN/8, x4, x1, x2)

inst_80081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33f000000000000; valaddr_reg:x3; val_offset:240243*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240243*0 + 3*209*FLEN/8, x4, x1, x2)

inst_80082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33f800000000000; valaddr_reg:x3; val_offset:240246*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240246*0 + 3*210*FLEN/8, x4, x1, x2)

inst_80083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fc00000000000; valaddr_reg:x3; val_offset:240249*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240249*0 + 3*211*FLEN/8, x4, x1, x2)

inst_80084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fe00000000000; valaddr_reg:x3; val_offset:240252*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240252*0 + 3*212*FLEN/8, x4, x1, x2)

inst_80085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ff00000000000; valaddr_reg:x3; val_offset:240255*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240255*0 + 3*213*FLEN/8, x4, x1, x2)

inst_80086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ff80000000000; valaddr_reg:x3; val_offset:240258*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240258*0 + 3*214*FLEN/8, x4, x1, x2)

inst_80087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffc0000000000; valaddr_reg:x3; val_offset:240261*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240261*0 + 3*215*FLEN/8, x4, x1, x2)

inst_80088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffe0000000000; valaddr_reg:x3; val_offset:240264*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240264*0 + 3*216*FLEN/8, x4, x1, x2)

inst_80089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fff0000000000; valaddr_reg:x3; val_offset:240267*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240267*0 + 3*217*FLEN/8, x4, x1, x2)

inst_80090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fff8000000000; valaddr_reg:x3; val_offset:240270*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240270*0 + 3*218*FLEN/8, x4, x1, x2)

inst_80091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffc000000000; valaddr_reg:x3; val_offset:240273*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240273*0 + 3*219*FLEN/8, x4, x1, x2)

inst_80092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffe000000000; valaddr_reg:x3; val_offset:240276*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240276*0 + 3*220*FLEN/8, x4, x1, x2)

inst_80093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffff000000000; valaddr_reg:x3; val_offset:240279*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240279*0 + 3*221*FLEN/8, x4, x1, x2)

inst_80094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffff800000000; valaddr_reg:x3; val_offset:240282*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240282*0 + 3*222*FLEN/8, x4, x1, x2)

inst_80095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffc00000000; valaddr_reg:x3; val_offset:240285*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240285*0 + 3*223*FLEN/8, x4, x1, x2)

inst_80096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffe00000000; valaddr_reg:x3; val_offset:240288*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240288*0 + 3*224*FLEN/8, x4, x1, x2)

inst_80097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffff00000000; valaddr_reg:x3; val_offset:240291*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240291*0 + 3*225*FLEN/8, x4, x1, x2)

inst_80098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffff80000000; valaddr_reg:x3; val_offset:240294*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240294*0 + 3*226*FLEN/8, x4, x1, x2)

inst_80099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffc0000000; valaddr_reg:x3; val_offset:240297*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240297*0 + 3*227*FLEN/8, x4, x1, x2)

inst_80100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffe0000000; valaddr_reg:x3; val_offset:240300*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240300*0 + 3*228*FLEN/8, x4, x1, x2)

inst_80101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffff0000000; valaddr_reg:x3; val_offset:240303*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240303*0 + 3*229*FLEN/8, x4, x1, x2)

inst_80102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffff8000000; valaddr_reg:x3; val_offset:240306*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240306*0 + 3*230*FLEN/8, x4, x1, x2)

inst_80103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffc000000; valaddr_reg:x3; val_offset:240309*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240309*0 + 3*231*FLEN/8, x4, x1, x2)

inst_80104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffe000000; valaddr_reg:x3; val_offset:240312*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240312*0 + 3*232*FLEN/8, x4, x1, x2)

inst_80105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffff000000; valaddr_reg:x3; val_offset:240315*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240315*0 + 3*233*FLEN/8, x4, x1, x2)

inst_80106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffff800000; valaddr_reg:x3; val_offset:240318*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240318*0 + 3*234*FLEN/8, x4, x1, x2)

inst_80107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffffc00000; valaddr_reg:x3; val_offset:240321*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240321*0 + 3*235*FLEN/8, x4, x1, x2)

inst_80108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffffe00000; valaddr_reg:x3; val_offset:240324*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240324*0 + 3*236*FLEN/8, x4, x1, x2)

inst_80109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffff00000; valaddr_reg:x3; val_offset:240327*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240327*0 + 3*237*FLEN/8, x4, x1, x2)

inst_80110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffff80000; valaddr_reg:x3; val_offset:240330*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240330*0 + 3*238*FLEN/8, x4, x1, x2)

inst_80111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffffc0000; valaddr_reg:x3; val_offset:240333*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240333*0 + 3*239*FLEN/8, x4, x1, x2)

inst_80112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffffe0000; valaddr_reg:x3; val_offset:240336*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240336*0 + 3*240*FLEN/8, x4, x1, x2)

inst_80113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffffff0000; valaddr_reg:x3; val_offset:240339*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240339*0 + 3*241*FLEN/8, x4, x1, x2)

inst_80114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffffff8000; valaddr_reg:x3; val_offset:240342*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240342*0 + 3*242*FLEN/8, x4, x1, x2)

inst_80115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffffffc000; valaddr_reg:x3; val_offset:240345*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240345*0 + 3*243*FLEN/8, x4, x1, x2)

inst_80116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffffffe000; valaddr_reg:x3; val_offset:240348*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240348*0 + 3*244*FLEN/8, x4, x1, x2)

inst_80117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffffff000; valaddr_reg:x3; val_offset:240351*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240351*0 + 3*245*FLEN/8, x4, x1, x2)

inst_80118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffffff800; valaddr_reg:x3; val_offset:240354*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240354*0 + 3*246*FLEN/8, x4, x1, x2)

inst_80119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffffffc00; valaddr_reg:x3; val_offset:240357*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240357*0 + 3*247*FLEN/8, x4, x1, x2)

inst_80120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffffffe00; valaddr_reg:x3; val_offset:240360*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240360*0 + 3*248*FLEN/8, x4, x1, x2)

inst_80121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffffffff00; valaddr_reg:x3; val_offset:240363*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240363*0 + 3*249*FLEN/8, x4, x1, x2)

inst_80122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffffffff80; valaddr_reg:x3; val_offset:240366*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240366*0 + 3*250*FLEN/8, x4, x1, x2)

inst_80123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffffffffc0; valaddr_reg:x3; val_offset:240369*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240369*0 + 3*251*FLEN/8, x4, x1, x2)

inst_80124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffffffffe0; valaddr_reg:x3; val_offset:240372*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240372*0 + 3*252*FLEN/8, x4, x1, x2)

inst_80125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffffffff0; valaddr_reg:x3; val_offset:240375*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240375*0 + 3*253*FLEN/8, x4, x1, x2)

inst_80126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffffffff8; valaddr_reg:x3; val_offset:240378*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240378*0 + 3*254*FLEN/8, x4, x1, x2)

inst_80127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffffffffc; valaddr_reg:x3; val_offset:240381*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240381*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_80128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33ffffffffffffe; valaddr_reg:x3; val_offset:240384*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240384*0 + 3*256*FLEN/8, x4, x1, x2)

inst_80129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x86282146888f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa86282146888f5; op2val:0x0;
op3val:0x33fffffffffffff; valaddr_reg:x3; val_offset:240387*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240387*0 + 3*257*FLEN/8, x4, x1, x2)

inst_80130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:240390*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240390*0 + 3*258*FLEN/8, x4, x1, x2)

inst_80131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:240393*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240393*0 + 3*259*FLEN/8, x4, x1, x2)

inst_80132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:240396*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240396*0 + 3*260*FLEN/8, x4, x1, x2)

inst_80133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:240399*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240399*0 + 3*261*FLEN/8, x4, x1, x2)

inst_80134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:240402*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240402*0 + 3*262*FLEN/8, x4, x1, x2)

inst_80135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:240405*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240405*0 + 3*263*FLEN/8, x4, x1, x2)

inst_80136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:240408*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240408*0 + 3*264*FLEN/8, x4, x1, x2)

inst_80137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:240411*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240411*0 + 3*265*FLEN/8, x4, x1, x2)

inst_80138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:240414*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240414*0 + 3*266*FLEN/8, x4, x1, x2)

inst_80139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:240417*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240417*0 + 3*267*FLEN/8, x4, x1, x2)

inst_80140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:240420*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240420*0 + 3*268*FLEN/8, x4, x1, x2)

inst_80141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:240423*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240423*0 + 3*269*FLEN/8, x4, x1, x2)

inst_80142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:240426*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240426*0 + 3*270*FLEN/8, x4, x1, x2)

inst_80143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:240429*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240429*0 + 3*271*FLEN/8, x4, x1, x2)

inst_80144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:240432*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240432*0 + 3*272*FLEN/8, x4, x1, x2)

inst_80145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:240435*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240435*0 + 3*273*FLEN/8, x4, x1, x2)

inst_80146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:240438*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240438*0 + 3*274*FLEN/8, x4, x1, x2)

inst_80147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:240441*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240441*0 + 3*275*FLEN/8, x4, x1, x2)

inst_80148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:240444*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240444*0 + 3*276*FLEN/8, x4, x1, x2)

inst_80149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:240447*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240447*0 + 3*277*FLEN/8, x4, x1, x2)

inst_80150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:240450*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240450*0 + 3*278*FLEN/8, x4, x1, x2)

inst_80151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:240453*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240453*0 + 3*279*FLEN/8, x4, x1, x2)

inst_80152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000000000000; valaddr_reg:x3; val_offset:240456*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240456*0 + 3*280*FLEN/8, x4, x1, x2)

inst_80153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000000000001; valaddr_reg:x3; val_offset:240459*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240459*0 + 3*281*FLEN/8, x4, x1, x2)

inst_80154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000000000003; valaddr_reg:x3; val_offset:240462*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240462*0 + 3*282*FLEN/8, x4, x1, x2)

inst_80155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000000000007; valaddr_reg:x3; val_offset:240465*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240465*0 + 3*283*FLEN/8, x4, x1, x2)

inst_80156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000000000000f; valaddr_reg:x3; val_offset:240468*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240468*0 + 3*284*FLEN/8, x4, x1, x2)

inst_80157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000000000001f; valaddr_reg:x3; val_offset:240471*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240471*0 + 3*285*FLEN/8, x4, x1, x2)

inst_80158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000000000003f; valaddr_reg:x3; val_offset:240474*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240474*0 + 3*286*FLEN/8, x4, x1, x2)

inst_80159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000000000007f; valaddr_reg:x3; val_offset:240477*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240477*0 + 3*287*FLEN/8, x4, x1, x2)

inst_80160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00000000000ff; valaddr_reg:x3; val_offset:240480*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240480*0 + 3*288*FLEN/8, x4, x1, x2)

inst_80161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00000000001ff; valaddr_reg:x3; val_offset:240483*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240483*0 + 3*289*FLEN/8, x4, x1, x2)

inst_80162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00000000003ff; valaddr_reg:x3; val_offset:240486*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240486*0 + 3*290*FLEN/8, x4, x1, x2)

inst_80163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00000000007ff; valaddr_reg:x3; val_offset:240489*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240489*0 + 3*291*FLEN/8, x4, x1, x2)

inst_80164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000000000fff; valaddr_reg:x3; val_offset:240492*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240492*0 + 3*292*FLEN/8, x4, x1, x2)

inst_80165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000000001fff; valaddr_reg:x3; val_offset:240495*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240495*0 + 3*293*FLEN/8, x4, x1, x2)

inst_80166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000000003fff; valaddr_reg:x3; val_offset:240498*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240498*0 + 3*294*FLEN/8, x4, x1, x2)

inst_80167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000000007fff; valaddr_reg:x3; val_offset:240501*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240501*0 + 3*295*FLEN/8, x4, x1, x2)

inst_80168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000000000ffff; valaddr_reg:x3; val_offset:240504*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240504*0 + 3*296*FLEN/8, x4, x1, x2)

inst_80169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000000001ffff; valaddr_reg:x3; val_offset:240507*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240507*0 + 3*297*FLEN/8, x4, x1, x2)

inst_80170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000000003ffff; valaddr_reg:x3; val_offset:240510*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240510*0 + 3*298*FLEN/8, x4, x1, x2)

inst_80171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000000007ffff; valaddr_reg:x3; val_offset:240513*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240513*0 + 3*299*FLEN/8, x4, x1, x2)

inst_80172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00000000fffff; valaddr_reg:x3; val_offset:240516*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240516*0 + 3*300*FLEN/8, x4, x1, x2)

inst_80173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00000001fffff; valaddr_reg:x3; val_offset:240519*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240519*0 + 3*301*FLEN/8, x4, x1, x2)

inst_80174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00000003fffff; valaddr_reg:x3; val_offset:240522*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240522*0 + 3*302*FLEN/8, x4, x1, x2)

inst_80175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00000007fffff; valaddr_reg:x3; val_offset:240525*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240525*0 + 3*303*FLEN/8, x4, x1, x2)

inst_80176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000000ffffff; valaddr_reg:x3; val_offset:240528*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240528*0 + 3*304*FLEN/8, x4, x1, x2)

inst_80177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000001ffffff; valaddr_reg:x3; val_offset:240531*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240531*0 + 3*305*FLEN/8, x4, x1, x2)

inst_80178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000003ffffff; valaddr_reg:x3; val_offset:240534*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240534*0 + 3*306*FLEN/8, x4, x1, x2)

inst_80179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000007ffffff; valaddr_reg:x3; val_offset:240537*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240537*0 + 3*307*FLEN/8, x4, x1, x2)

inst_80180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000000fffffff; valaddr_reg:x3; val_offset:240540*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240540*0 + 3*308*FLEN/8, x4, x1, x2)

inst_80181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000001fffffff; valaddr_reg:x3; val_offset:240543*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240543*0 + 3*309*FLEN/8, x4, x1, x2)

inst_80182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000003fffffff; valaddr_reg:x3; val_offset:240546*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240546*0 + 3*310*FLEN/8, x4, x1, x2)

inst_80183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000007fffffff; valaddr_reg:x3; val_offset:240549*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240549*0 + 3*311*FLEN/8, x4, x1, x2)

inst_80184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00000ffffffff; valaddr_reg:x3; val_offset:240552*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240552*0 + 3*312*FLEN/8, x4, x1, x2)

inst_80185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00001ffffffff; valaddr_reg:x3; val_offset:240555*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240555*0 + 3*313*FLEN/8, x4, x1, x2)

inst_80186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00003ffffffff; valaddr_reg:x3; val_offset:240558*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240558*0 + 3*314*FLEN/8, x4, x1, x2)

inst_80187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00007ffffffff; valaddr_reg:x3; val_offset:240561*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240561*0 + 3*315*FLEN/8, x4, x1, x2)

inst_80188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0000fffffffff; valaddr_reg:x3; val_offset:240564*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240564*0 + 3*316*FLEN/8, x4, x1, x2)

inst_80189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0001fffffffff; valaddr_reg:x3; val_offset:240567*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240567*0 + 3*317*FLEN/8, x4, x1, x2)

inst_80190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0003fffffffff; valaddr_reg:x3; val_offset:240570*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240570*0 + 3*318*FLEN/8, x4, x1, x2)

inst_80191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0007fffffffff; valaddr_reg:x3; val_offset:240573*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240573*0 + 3*319*FLEN/8, x4, x1, x2)

inst_80192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b000ffffffffff; valaddr_reg:x3; val_offset:240576*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240576*0 + 3*320*FLEN/8, x4, x1, x2)

inst_80193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b001ffffffffff; valaddr_reg:x3; val_offset:240579*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240579*0 + 3*321*FLEN/8, x4, x1, x2)

inst_80194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b003ffffffffff; valaddr_reg:x3; val_offset:240582*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240582*0 + 3*322*FLEN/8, x4, x1, x2)

inst_80195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b007ffffffffff; valaddr_reg:x3; val_offset:240585*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240585*0 + 3*323*FLEN/8, x4, x1, x2)

inst_80196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b00fffffffffff; valaddr_reg:x3; val_offset:240588*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240588*0 + 3*324*FLEN/8, x4, x1, x2)

inst_80197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b01fffffffffff; valaddr_reg:x3; val_offset:240591*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240591*0 + 3*325*FLEN/8, x4, x1, x2)

inst_80198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b03fffffffffff; valaddr_reg:x3; val_offset:240594*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240594*0 + 3*326*FLEN/8, x4, x1, x2)

inst_80199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b07fffffffffff; valaddr_reg:x3; val_offset:240597*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240597*0 + 3*327*FLEN/8, x4, x1, x2)

inst_80200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b0ffffffffffff; valaddr_reg:x3; val_offset:240600*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240600*0 + 3*328*FLEN/8, x4, x1, x2)

inst_80201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b1ffffffffffff; valaddr_reg:x3; val_offset:240603*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240603*0 + 3*329*FLEN/8, x4, x1, x2)

inst_80202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b3ffffffffffff; valaddr_reg:x3; val_offset:240606*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240606*0 + 3*330*FLEN/8, x4, x1, x2)

inst_80203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b7ffffffffffff; valaddr_reg:x3; val_offset:240609*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240609*0 + 3*331*FLEN/8, x4, x1, x2)

inst_80204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3b8000000000000; valaddr_reg:x3; val_offset:240612*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240612*0 + 3*332*FLEN/8, x4, x1, x2)

inst_80205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bc000000000000; valaddr_reg:x3; val_offset:240615*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240615*0 + 3*333*FLEN/8, x4, x1, x2)

inst_80206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3be000000000000; valaddr_reg:x3; val_offset:240618*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240618*0 + 3*334*FLEN/8, x4, x1, x2)

inst_80207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bf000000000000; valaddr_reg:x3; val_offset:240621*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240621*0 + 3*335*FLEN/8, x4, x1, x2)

inst_80208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bf800000000000; valaddr_reg:x3; val_offset:240624*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240624*0 + 3*336*FLEN/8, x4, x1, x2)

inst_80209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfc00000000000; valaddr_reg:x3; val_offset:240627*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240627*0 + 3*337*FLEN/8, x4, x1, x2)

inst_80210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfe00000000000; valaddr_reg:x3; val_offset:240630*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240630*0 + 3*338*FLEN/8, x4, x1, x2)

inst_80211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bff00000000000; valaddr_reg:x3; val_offset:240633*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240633*0 + 3*339*FLEN/8, x4, x1, x2)

inst_80212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bff80000000000; valaddr_reg:x3; val_offset:240636*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240636*0 + 3*340*FLEN/8, x4, x1, x2)

inst_80213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffc0000000000; valaddr_reg:x3; val_offset:240639*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240639*0 + 3*341*FLEN/8, x4, x1, x2)

inst_80214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffe0000000000; valaddr_reg:x3; val_offset:240642*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240642*0 + 3*342*FLEN/8, x4, x1, x2)

inst_80215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfff0000000000; valaddr_reg:x3; val_offset:240645*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240645*0 + 3*343*FLEN/8, x4, x1, x2)

inst_80216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfff8000000000; valaddr_reg:x3; val_offset:240648*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240648*0 + 3*344*FLEN/8, x4, x1, x2)

inst_80217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffc000000000; valaddr_reg:x3; val_offset:240651*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240651*0 + 3*345*FLEN/8, x4, x1, x2)

inst_80218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffe000000000; valaddr_reg:x3; val_offset:240654*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240654*0 + 3*346*FLEN/8, x4, x1, x2)

inst_80219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffff000000000; valaddr_reg:x3; val_offset:240657*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240657*0 + 3*347*FLEN/8, x4, x1, x2)

inst_80220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffff800000000; valaddr_reg:x3; val_offset:240660*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240660*0 + 3*348*FLEN/8, x4, x1, x2)

inst_80221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffc00000000; valaddr_reg:x3; val_offset:240663*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240663*0 + 3*349*FLEN/8, x4, x1, x2)

inst_80222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffe00000000; valaddr_reg:x3; val_offset:240666*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240666*0 + 3*350*FLEN/8, x4, x1, x2)

inst_80223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffff00000000; valaddr_reg:x3; val_offset:240669*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240669*0 + 3*351*FLEN/8, x4, x1, x2)

inst_80224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffff80000000; valaddr_reg:x3; val_offset:240672*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240672*0 + 3*352*FLEN/8, x4, x1, x2)

inst_80225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffc0000000; valaddr_reg:x3; val_offset:240675*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240675*0 + 3*353*FLEN/8, x4, x1, x2)

inst_80226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffe0000000; valaddr_reg:x3; val_offset:240678*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240678*0 + 3*354*FLEN/8, x4, x1, x2)

inst_80227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffff0000000; valaddr_reg:x3; val_offset:240681*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240681*0 + 3*355*FLEN/8, x4, x1, x2)

inst_80228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffff8000000; valaddr_reg:x3; val_offset:240684*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240684*0 + 3*356*FLEN/8, x4, x1, x2)

inst_80229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffc000000; valaddr_reg:x3; val_offset:240687*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240687*0 + 3*357*FLEN/8, x4, x1, x2)

inst_80230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffe000000; valaddr_reg:x3; val_offset:240690*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240690*0 + 3*358*FLEN/8, x4, x1, x2)

inst_80231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffff000000; valaddr_reg:x3; val_offset:240693*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240693*0 + 3*359*FLEN/8, x4, x1, x2)

inst_80232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffff800000; valaddr_reg:x3; val_offset:240696*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240696*0 + 3*360*FLEN/8, x4, x1, x2)

inst_80233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffffc00000; valaddr_reg:x3; val_offset:240699*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240699*0 + 3*361*FLEN/8, x4, x1, x2)

inst_80234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffffe00000; valaddr_reg:x3; val_offset:240702*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240702*0 + 3*362*FLEN/8, x4, x1, x2)

inst_80235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffff00000; valaddr_reg:x3; val_offset:240705*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240705*0 + 3*363*FLEN/8, x4, x1, x2)

inst_80236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffff80000; valaddr_reg:x3; val_offset:240708*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240708*0 + 3*364*FLEN/8, x4, x1, x2)

inst_80237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffffc0000; valaddr_reg:x3; val_offset:240711*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240711*0 + 3*365*FLEN/8, x4, x1, x2)

inst_80238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffffe0000; valaddr_reg:x3; val_offset:240714*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240714*0 + 3*366*FLEN/8, x4, x1, x2)

inst_80239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffffff0000; valaddr_reg:x3; val_offset:240717*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240717*0 + 3*367*FLEN/8, x4, x1, x2)

inst_80240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffffff8000; valaddr_reg:x3; val_offset:240720*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240720*0 + 3*368*FLEN/8, x4, x1, x2)

inst_80241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffffffc000; valaddr_reg:x3; val_offset:240723*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240723*0 + 3*369*FLEN/8, x4, x1, x2)

inst_80242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffffffe000; valaddr_reg:x3; val_offset:240726*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240726*0 + 3*370*FLEN/8, x4, x1, x2)

inst_80243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffffff000; valaddr_reg:x3; val_offset:240729*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240729*0 + 3*371*FLEN/8, x4, x1, x2)

inst_80244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffffff800; valaddr_reg:x3; val_offset:240732*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240732*0 + 3*372*FLEN/8, x4, x1, x2)

inst_80245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffffffc00; valaddr_reg:x3; val_offset:240735*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240735*0 + 3*373*FLEN/8, x4, x1, x2)

inst_80246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffffffe00; valaddr_reg:x3; val_offset:240738*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240738*0 + 3*374*FLEN/8, x4, x1, x2)

inst_80247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffffffff00; valaddr_reg:x3; val_offset:240741*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240741*0 + 3*375*FLEN/8, x4, x1, x2)

inst_80248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffffffff80; valaddr_reg:x3; val_offset:240744*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240744*0 + 3*376*FLEN/8, x4, x1, x2)

inst_80249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffffffffc0; valaddr_reg:x3; val_offset:240747*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240747*0 + 3*377*FLEN/8, x4, x1, x2)

inst_80250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffffffffe0; valaddr_reg:x3; val_offset:240750*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240750*0 + 3*378*FLEN/8, x4, x1, x2)

inst_80251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffffffff0; valaddr_reg:x3; val_offset:240753*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240753*0 + 3*379*FLEN/8, x4, x1, x2)

inst_80252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffffffff8; valaddr_reg:x3; val_offset:240756*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240756*0 + 3*380*FLEN/8, x4, x1, x2)

inst_80253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffffffffc; valaddr_reg:x3; val_offset:240759*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240759*0 + 3*381*FLEN/8, x4, x1, x2)

inst_80254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bffffffffffffe; valaddr_reg:x3; val_offset:240762*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240762*0 + 3*382*FLEN/8, x4, x1, x2)

inst_80255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x869823bd2c348 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa869823bd2c348; op2val:0x0;
op3val:0x3bfffffffffffff; valaddr_reg:x3; val_offset:240765*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240765*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_80256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:240768*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240768*0 + 3*384*FLEN/8, x4, x1, x2)

inst_80257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:240771*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240771*0 + 3*385*FLEN/8, x4, x1, x2)

inst_80258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:240774*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240774*0 + 3*386*FLEN/8, x4, x1, x2)

inst_80259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:240777*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240777*0 + 3*387*FLEN/8, x4, x1, x2)

inst_80260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:240780*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240780*0 + 3*388*FLEN/8, x4, x1, x2)

inst_80261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:240783*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240783*0 + 3*389*FLEN/8, x4, x1, x2)

inst_80262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:240786*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240786*0 + 3*390*FLEN/8, x4, x1, x2)

inst_80263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:240789*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240789*0 + 3*391*FLEN/8, x4, x1, x2)

inst_80264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:240792*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240792*0 + 3*392*FLEN/8, x4, x1, x2)

inst_80265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:240795*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240795*0 + 3*393*FLEN/8, x4, x1, x2)

inst_80266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:240798*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240798*0 + 3*394*FLEN/8, x4, x1, x2)

inst_80267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:240801*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240801*0 + 3*395*FLEN/8, x4, x1, x2)

inst_80268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:240804*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240804*0 + 3*396*FLEN/8, x4, x1, x2)

inst_80269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:240807*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240807*0 + 3*397*FLEN/8, x4, x1, x2)

inst_80270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:240810*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240810*0 + 3*398*FLEN/8, x4, x1, x2)

inst_80271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:240813*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240813*0 + 3*399*FLEN/8, x4, x1, x2)

inst_80272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:240816*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240816*0 + 3*400*FLEN/8, x4, x1, x2)

inst_80273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:240819*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240819*0 + 3*401*FLEN/8, x4, x1, x2)

inst_80274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:240822*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240822*0 + 3*402*FLEN/8, x4, x1, x2)

inst_80275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:240825*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240825*0 + 3*403*FLEN/8, x4, x1, x2)

inst_80276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:240828*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240828*0 + 3*404*FLEN/8, x4, x1, x2)

inst_80277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:240831*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240831*0 + 3*405*FLEN/8, x4, x1, x2)

inst_80278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000000000000; valaddr_reg:x3; val_offset:240834*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240834*0 + 3*406*FLEN/8, x4, x1, x2)

inst_80279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000000000001; valaddr_reg:x3; val_offset:240837*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240837*0 + 3*407*FLEN/8, x4, x1, x2)

inst_80280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000000000003; valaddr_reg:x3; val_offset:240840*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240840*0 + 3*408*FLEN/8, x4, x1, x2)

inst_80281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000000000007; valaddr_reg:x3; val_offset:240843*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240843*0 + 3*409*FLEN/8, x4, x1, x2)

inst_80282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000000000000f; valaddr_reg:x3; val_offset:240846*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240846*0 + 3*410*FLEN/8, x4, x1, x2)

inst_80283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000000000001f; valaddr_reg:x3; val_offset:240849*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240849*0 + 3*411*FLEN/8, x4, x1, x2)

inst_80284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000000000003f; valaddr_reg:x3; val_offset:240852*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240852*0 + 3*412*FLEN/8, x4, x1, x2)

inst_80285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000000000007f; valaddr_reg:x3; val_offset:240855*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240855*0 + 3*413*FLEN/8, x4, x1, x2)

inst_80286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500000000000ff; valaddr_reg:x3; val_offset:240858*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240858*0 + 3*414*FLEN/8, x4, x1, x2)

inst_80287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500000000001ff; valaddr_reg:x3; val_offset:240861*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240861*0 + 3*415*FLEN/8, x4, x1, x2)

inst_80288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500000000003ff; valaddr_reg:x3; val_offset:240864*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240864*0 + 3*416*FLEN/8, x4, x1, x2)

inst_80289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500000000007ff; valaddr_reg:x3; val_offset:240867*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240867*0 + 3*417*FLEN/8, x4, x1, x2)

inst_80290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000000000fff; valaddr_reg:x3; val_offset:240870*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240870*0 + 3*418*FLEN/8, x4, x1, x2)

inst_80291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000000001fff; valaddr_reg:x3; val_offset:240873*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240873*0 + 3*419*FLEN/8, x4, x1, x2)

inst_80292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000000003fff; valaddr_reg:x3; val_offset:240876*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240876*0 + 3*420*FLEN/8, x4, x1, x2)

inst_80293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000000007fff; valaddr_reg:x3; val_offset:240879*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240879*0 + 3*421*FLEN/8, x4, x1, x2)

inst_80294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000000000ffff; valaddr_reg:x3; val_offset:240882*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240882*0 + 3*422*FLEN/8, x4, x1, x2)

inst_80295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000000001ffff; valaddr_reg:x3; val_offset:240885*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240885*0 + 3*423*FLEN/8, x4, x1, x2)

inst_80296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000000003ffff; valaddr_reg:x3; val_offset:240888*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240888*0 + 3*424*FLEN/8, x4, x1, x2)

inst_80297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000000007ffff; valaddr_reg:x3; val_offset:240891*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240891*0 + 3*425*FLEN/8, x4, x1, x2)

inst_80298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500000000fffff; valaddr_reg:x3; val_offset:240894*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240894*0 + 3*426*FLEN/8, x4, x1, x2)

inst_80299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500000001fffff; valaddr_reg:x3; val_offset:240897*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240897*0 + 3*427*FLEN/8, x4, x1, x2)

inst_80300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500000003fffff; valaddr_reg:x3; val_offset:240900*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240900*0 + 3*428*FLEN/8, x4, x1, x2)

inst_80301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500000007fffff; valaddr_reg:x3; val_offset:240903*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240903*0 + 3*429*FLEN/8, x4, x1, x2)

inst_80302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000000ffffff; valaddr_reg:x3; val_offset:240906*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240906*0 + 3*430*FLEN/8, x4, x1, x2)

inst_80303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000001ffffff; valaddr_reg:x3; val_offset:240909*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240909*0 + 3*431*FLEN/8, x4, x1, x2)

inst_80304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000003ffffff; valaddr_reg:x3; val_offset:240912*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240912*0 + 3*432*FLEN/8, x4, x1, x2)

inst_80305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000007ffffff; valaddr_reg:x3; val_offset:240915*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240915*0 + 3*433*FLEN/8, x4, x1, x2)

inst_80306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000000fffffff; valaddr_reg:x3; val_offset:240918*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240918*0 + 3*434*FLEN/8, x4, x1, x2)

inst_80307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000001fffffff; valaddr_reg:x3; val_offset:240921*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240921*0 + 3*435*FLEN/8, x4, x1, x2)

inst_80308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000003fffffff; valaddr_reg:x3; val_offset:240924*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240924*0 + 3*436*FLEN/8, x4, x1, x2)

inst_80309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000007fffffff; valaddr_reg:x3; val_offset:240927*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240927*0 + 3*437*FLEN/8, x4, x1, x2)

inst_80310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500000ffffffff; valaddr_reg:x3; val_offset:240930*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240930*0 + 3*438*FLEN/8, x4, x1, x2)

inst_80311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500001ffffffff; valaddr_reg:x3; val_offset:240933*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240933*0 + 3*439*FLEN/8, x4, x1, x2)

inst_80312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500003ffffffff; valaddr_reg:x3; val_offset:240936*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240936*0 + 3*440*FLEN/8, x4, x1, x2)

inst_80313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500007ffffffff; valaddr_reg:x3; val_offset:240939*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240939*0 + 3*441*FLEN/8, x4, x1, x2)

inst_80314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250000fffffffff; valaddr_reg:x3; val_offset:240942*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240942*0 + 3*442*FLEN/8, x4, x1, x2)

inst_80315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250001fffffffff; valaddr_reg:x3; val_offset:240945*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240945*0 + 3*443*FLEN/8, x4, x1, x2)

inst_80316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250003fffffffff; valaddr_reg:x3; val_offset:240948*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240948*0 + 3*444*FLEN/8, x4, x1, x2)

inst_80317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250007fffffffff; valaddr_reg:x3; val_offset:240951*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240951*0 + 3*445*FLEN/8, x4, x1, x2)

inst_80318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25000ffffffffff; valaddr_reg:x3; val_offset:240954*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240954*0 + 3*446*FLEN/8, x4, x1, x2)

inst_80319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25001ffffffffff; valaddr_reg:x3; val_offset:240957*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240957*0 + 3*447*FLEN/8, x4, x1, x2)

inst_80320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25003ffffffffff; valaddr_reg:x3; val_offset:240960*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240960*0 + 3*448*FLEN/8, x4, x1, x2)

inst_80321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25007ffffffffff; valaddr_reg:x3; val_offset:240963*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240963*0 + 3*449*FLEN/8, x4, x1, x2)

inst_80322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2500fffffffffff; valaddr_reg:x3; val_offset:240966*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240966*0 + 3*450*FLEN/8, x4, x1, x2)

inst_80323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2501fffffffffff; valaddr_reg:x3; val_offset:240969*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240969*0 + 3*451*FLEN/8, x4, x1, x2)

inst_80324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2503fffffffffff; valaddr_reg:x3; val_offset:240972*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240972*0 + 3*452*FLEN/8, x4, x1, x2)

inst_80325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x2507fffffffffff; valaddr_reg:x3; val_offset:240975*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240975*0 + 3*453*FLEN/8, x4, x1, x2)

inst_80326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x250ffffffffffff; valaddr_reg:x3; val_offset:240978*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240978*0 + 3*454*FLEN/8, x4, x1, x2)

inst_80327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x251ffffffffffff; valaddr_reg:x3; val_offset:240981*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240981*0 + 3*455*FLEN/8, x4, x1, x2)

inst_80328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x253ffffffffffff; valaddr_reg:x3; val_offset:240984*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240984*0 + 3*456*FLEN/8, x4, x1, x2)

inst_80329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x257ffffffffffff; valaddr_reg:x3; val_offset:240987*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240987*0 + 3*457*FLEN/8, x4, x1, x2)

inst_80330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x258000000000000; valaddr_reg:x3; val_offset:240990*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240990*0 + 3*458*FLEN/8, x4, x1, x2)

inst_80331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25c000000000000; valaddr_reg:x3; val_offset:240993*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240993*0 + 3*459*FLEN/8, x4, x1, x2)

inst_80332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25e000000000000; valaddr_reg:x3; val_offset:240996*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240996*0 + 3*460*FLEN/8, x4, x1, x2)

inst_80333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25f000000000000; valaddr_reg:x3; val_offset:240999*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240999*0 + 3*461*FLEN/8, x4, x1, x2)

inst_80334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25f800000000000; valaddr_reg:x3; val_offset:241002*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241002*0 + 3*462*FLEN/8, x4, x1, x2)

inst_80335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fc00000000000; valaddr_reg:x3; val_offset:241005*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241005*0 + 3*463*FLEN/8, x4, x1, x2)

inst_80336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fe00000000000; valaddr_reg:x3; val_offset:241008*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241008*0 + 3*464*FLEN/8, x4, x1, x2)

inst_80337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ff00000000000; valaddr_reg:x3; val_offset:241011*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241011*0 + 3*465*FLEN/8, x4, x1, x2)

inst_80338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ff80000000000; valaddr_reg:x3; val_offset:241014*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241014*0 + 3*466*FLEN/8, x4, x1, x2)

inst_80339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffc0000000000; valaddr_reg:x3; val_offset:241017*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241017*0 + 3*467*FLEN/8, x4, x1, x2)

inst_80340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffe0000000000; valaddr_reg:x3; val_offset:241020*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241020*0 + 3*468*FLEN/8, x4, x1, x2)

inst_80341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fff0000000000; valaddr_reg:x3; val_offset:241023*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241023*0 + 3*469*FLEN/8, x4, x1, x2)

inst_80342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fff8000000000; valaddr_reg:x3; val_offset:241026*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241026*0 + 3*470*FLEN/8, x4, x1, x2)

inst_80343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffc000000000; valaddr_reg:x3; val_offset:241029*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241029*0 + 3*471*FLEN/8, x4, x1, x2)

inst_80344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffe000000000; valaddr_reg:x3; val_offset:241032*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241032*0 + 3*472*FLEN/8, x4, x1, x2)

inst_80345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffff000000000; valaddr_reg:x3; val_offset:241035*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241035*0 + 3*473*FLEN/8, x4, x1, x2)

inst_80346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffff800000000; valaddr_reg:x3; val_offset:241038*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241038*0 + 3*474*FLEN/8, x4, x1, x2)

inst_80347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffc00000000; valaddr_reg:x3; val_offset:241041*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241041*0 + 3*475*FLEN/8, x4, x1, x2)

inst_80348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffe00000000; valaddr_reg:x3; val_offset:241044*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241044*0 + 3*476*FLEN/8, x4, x1, x2)

inst_80349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffff00000000; valaddr_reg:x3; val_offset:241047*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241047*0 + 3*477*FLEN/8, x4, x1, x2)

inst_80350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffff80000000; valaddr_reg:x3; val_offset:241050*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241050*0 + 3*478*FLEN/8, x4, x1, x2)

inst_80351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffc0000000; valaddr_reg:x3; val_offset:241053*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241053*0 + 3*479*FLEN/8, x4, x1, x2)

inst_80352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffe0000000; valaddr_reg:x3; val_offset:241056*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241056*0 + 3*480*FLEN/8, x4, x1, x2)

inst_80353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffff0000000; valaddr_reg:x3; val_offset:241059*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241059*0 + 3*481*FLEN/8, x4, x1, x2)

inst_80354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffff8000000; valaddr_reg:x3; val_offset:241062*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241062*0 + 3*482*FLEN/8, x4, x1, x2)

inst_80355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffc000000; valaddr_reg:x3; val_offset:241065*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241065*0 + 3*483*FLEN/8, x4, x1, x2)

inst_80356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffe000000; valaddr_reg:x3; val_offset:241068*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241068*0 + 3*484*FLEN/8, x4, x1, x2)

inst_80357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffff000000; valaddr_reg:x3; val_offset:241071*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241071*0 + 3*485*FLEN/8, x4, x1, x2)

inst_80358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffff800000; valaddr_reg:x3; val_offset:241074*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241074*0 + 3*486*FLEN/8, x4, x1, x2)

inst_80359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffffc00000; valaddr_reg:x3; val_offset:241077*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241077*0 + 3*487*FLEN/8, x4, x1, x2)

inst_80360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffffe00000; valaddr_reg:x3; val_offset:241080*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241080*0 + 3*488*FLEN/8, x4, x1, x2)

inst_80361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffff00000; valaddr_reg:x3; val_offset:241083*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241083*0 + 3*489*FLEN/8, x4, x1, x2)

inst_80362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffff80000; valaddr_reg:x3; val_offset:241086*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241086*0 + 3*490*FLEN/8, x4, x1, x2)

inst_80363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffffc0000; valaddr_reg:x3; val_offset:241089*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241089*0 + 3*491*FLEN/8, x4, x1, x2)

inst_80364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffffe0000; valaddr_reg:x3; val_offset:241092*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241092*0 + 3*492*FLEN/8, x4, x1, x2)

inst_80365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffffff0000; valaddr_reg:x3; val_offset:241095*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241095*0 + 3*493*FLEN/8, x4, x1, x2)

inst_80366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffffff8000; valaddr_reg:x3; val_offset:241098*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241098*0 + 3*494*FLEN/8, x4, x1, x2)

inst_80367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffffffc000; valaddr_reg:x3; val_offset:241101*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241101*0 + 3*495*FLEN/8, x4, x1, x2)

inst_80368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffffffe000; valaddr_reg:x3; val_offset:241104*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241104*0 + 3*496*FLEN/8, x4, x1, x2)

inst_80369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffffff000; valaddr_reg:x3; val_offset:241107*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241107*0 + 3*497*FLEN/8, x4, x1, x2)

inst_80370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffffff800; valaddr_reg:x3; val_offset:241110*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241110*0 + 3*498*FLEN/8, x4, x1, x2)

inst_80371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffffffc00; valaddr_reg:x3; val_offset:241113*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241113*0 + 3*499*FLEN/8, x4, x1, x2)

inst_80372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffffffe00; valaddr_reg:x3; val_offset:241116*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241116*0 + 3*500*FLEN/8, x4, x1, x2)

inst_80373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffffffff00; valaddr_reg:x3; val_offset:241119*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241119*0 + 3*501*FLEN/8, x4, x1, x2)

inst_80374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffffffff80; valaddr_reg:x3; val_offset:241122*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241122*0 + 3*502*FLEN/8, x4, x1, x2)

inst_80375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffffffffc0; valaddr_reg:x3; val_offset:241125*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241125*0 + 3*503*FLEN/8, x4, x1, x2)

inst_80376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffffffffe0; valaddr_reg:x3; val_offset:241128*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241128*0 + 3*504*FLEN/8, x4, x1, x2)

inst_80377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffffffff0; valaddr_reg:x3; val_offset:241131*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241131*0 + 3*505*FLEN/8, x4, x1, x2)

inst_80378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffffffff8; valaddr_reg:x3; val_offset:241134*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241134*0 + 3*506*FLEN/8, x4, x1, x2)

inst_80379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffffffffc; valaddr_reg:x3; val_offset:241137*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241137*0 + 3*507*FLEN/8, x4, x1, x2)

inst_80380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25ffffffffffffe; valaddr_reg:x3; val_offset:241140*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241140*0 + 3*508*FLEN/8, x4, x1, x2)

inst_80381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8698ed174ff65; op2val:0x0;
op3val:0x25fffffffffffff; valaddr_reg:x3; val_offset:241143*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241143*0 + 3*509*FLEN/8, x4, x1, x2)

inst_80382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:241146*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241146*0 + 3*510*FLEN/8, x4, x1, x2)

inst_80383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:241149*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241149*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_80384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:241152*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241152*0 + 3*512*FLEN/8, x4, x1, x2)

inst_80385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:241155*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241155*0 + 3*513*FLEN/8, x4, x1, x2)

inst_80386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:241158*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241158*0 + 3*514*FLEN/8, x4, x1, x2)

inst_80387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:241161*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241161*0 + 3*515*FLEN/8, x4, x1, x2)

inst_80388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:241164*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241164*0 + 3*516*FLEN/8, x4, x1, x2)

inst_80389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:241167*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241167*0 + 3*517*FLEN/8, x4, x1, x2)

inst_80390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:241170*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241170*0 + 3*518*FLEN/8, x4, x1, x2)

inst_80391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:241173*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241173*0 + 3*519*FLEN/8, x4, x1, x2)

inst_80392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:241176*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241176*0 + 3*520*FLEN/8, x4, x1, x2)

inst_80393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:241179*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241179*0 + 3*521*FLEN/8, x4, x1, x2)

inst_80394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:241182*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241182*0 + 3*522*FLEN/8, x4, x1, x2)

inst_80395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:241185*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241185*0 + 3*523*FLEN/8, x4, x1, x2)

inst_80396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:241188*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241188*0 + 3*524*FLEN/8, x4, x1, x2)

inst_80397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:241191*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241191*0 + 3*525*FLEN/8, x4, x1, x2)

inst_80398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:241194*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241194*0 + 3*526*FLEN/8, x4, x1, x2)

inst_80399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:241197*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241197*0 + 3*527*FLEN/8, x4, x1, x2)

inst_80400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:241200*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241200*0 + 3*528*FLEN/8, x4, x1, x2)

inst_80401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:241203*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241203*0 + 3*529*FLEN/8, x4, x1, x2)

inst_80402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:241206*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241206*0 + 3*530*FLEN/8, x4, x1, x2)

inst_80403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:241209*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241209*0 + 3*531*FLEN/8, x4, x1, x2)

inst_80404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000000000000; valaddr_reg:x3; val_offset:241212*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241212*0 + 3*532*FLEN/8, x4, x1, x2)

inst_80405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000000000001; valaddr_reg:x3; val_offset:241215*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241215*0 + 3*533*FLEN/8, x4, x1, x2)

inst_80406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000000000003; valaddr_reg:x3; val_offset:241218*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241218*0 + 3*534*FLEN/8, x4, x1, x2)

inst_80407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000000000007; valaddr_reg:x3; val_offset:241221*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241221*0 + 3*535*FLEN/8, x4, x1, x2)

inst_80408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000000000000f; valaddr_reg:x3; val_offset:241224*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241224*0 + 3*536*FLEN/8, x4, x1, x2)

inst_80409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000000000001f; valaddr_reg:x3; val_offset:241227*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241227*0 + 3*537*FLEN/8, x4, x1, x2)

inst_80410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000000000003f; valaddr_reg:x3; val_offset:241230*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241230*0 + 3*538*FLEN/8, x4, x1, x2)

inst_80411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000000000007f; valaddr_reg:x3; val_offset:241233*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241233*0 + 3*539*FLEN/8, x4, x1, x2)

inst_80412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00000000000ff; valaddr_reg:x3; val_offset:241236*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241236*0 + 3*540*FLEN/8, x4, x1, x2)

inst_80413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00000000001ff; valaddr_reg:x3; val_offset:241239*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241239*0 + 3*541*FLEN/8, x4, x1, x2)

inst_80414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00000000003ff; valaddr_reg:x3; val_offset:241242*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241242*0 + 3*542*FLEN/8, x4, x1, x2)

inst_80415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00000000007ff; valaddr_reg:x3; val_offset:241245*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241245*0 + 3*543*FLEN/8, x4, x1, x2)

inst_80416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000000000fff; valaddr_reg:x3; val_offset:241248*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241248*0 + 3*544*FLEN/8, x4, x1, x2)

inst_80417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000000001fff; valaddr_reg:x3; val_offset:241251*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241251*0 + 3*545*FLEN/8, x4, x1, x2)

inst_80418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000000003fff; valaddr_reg:x3; val_offset:241254*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241254*0 + 3*546*FLEN/8, x4, x1, x2)

inst_80419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000000007fff; valaddr_reg:x3; val_offset:241257*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241257*0 + 3*547*FLEN/8, x4, x1, x2)

inst_80420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000000000ffff; valaddr_reg:x3; val_offset:241260*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241260*0 + 3*548*FLEN/8, x4, x1, x2)

inst_80421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000000001ffff; valaddr_reg:x3; val_offset:241263*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241263*0 + 3*549*FLEN/8, x4, x1, x2)

inst_80422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000000003ffff; valaddr_reg:x3; val_offset:241266*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241266*0 + 3*550*FLEN/8, x4, x1, x2)

inst_80423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000000007ffff; valaddr_reg:x3; val_offset:241269*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241269*0 + 3*551*FLEN/8, x4, x1, x2)

inst_80424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00000000fffff; valaddr_reg:x3; val_offset:241272*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241272*0 + 3*552*FLEN/8, x4, x1, x2)

inst_80425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00000001fffff; valaddr_reg:x3; val_offset:241275*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241275*0 + 3*553*FLEN/8, x4, x1, x2)

inst_80426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00000003fffff; valaddr_reg:x3; val_offset:241278*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241278*0 + 3*554*FLEN/8, x4, x1, x2)

inst_80427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00000007fffff; valaddr_reg:x3; val_offset:241281*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241281*0 + 3*555*FLEN/8, x4, x1, x2)

inst_80428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000000ffffff; valaddr_reg:x3; val_offset:241284*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241284*0 + 3*556*FLEN/8, x4, x1, x2)

inst_80429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000001ffffff; valaddr_reg:x3; val_offset:241287*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241287*0 + 3*557*FLEN/8, x4, x1, x2)

inst_80430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000003ffffff; valaddr_reg:x3; val_offset:241290*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241290*0 + 3*558*FLEN/8, x4, x1, x2)

inst_80431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000007ffffff; valaddr_reg:x3; val_offset:241293*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241293*0 + 3*559*FLEN/8, x4, x1, x2)

inst_80432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000000fffffff; valaddr_reg:x3; val_offset:241296*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241296*0 + 3*560*FLEN/8, x4, x1, x2)

inst_80433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000001fffffff; valaddr_reg:x3; val_offset:241299*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241299*0 + 3*561*FLEN/8, x4, x1, x2)

inst_80434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000003fffffff; valaddr_reg:x3; val_offset:241302*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241302*0 + 3*562*FLEN/8, x4, x1, x2)

inst_80435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000007fffffff; valaddr_reg:x3; val_offset:241305*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241305*0 + 3*563*FLEN/8, x4, x1, x2)

inst_80436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00000ffffffff; valaddr_reg:x3; val_offset:241308*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241308*0 + 3*564*FLEN/8, x4, x1, x2)

inst_80437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00001ffffffff; valaddr_reg:x3; val_offset:241311*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241311*0 + 3*565*FLEN/8, x4, x1, x2)

inst_80438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00003ffffffff; valaddr_reg:x3; val_offset:241314*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241314*0 + 3*566*FLEN/8, x4, x1, x2)

inst_80439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00007ffffffff; valaddr_reg:x3; val_offset:241317*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241317*0 + 3*567*FLEN/8, x4, x1, x2)

inst_80440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0000fffffffff; valaddr_reg:x3; val_offset:241320*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241320*0 + 3*568*FLEN/8, x4, x1, x2)

inst_80441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0001fffffffff; valaddr_reg:x3; val_offset:241323*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241323*0 + 3*569*FLEN/8, x4, x1, x2)

inst_80442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0003fffffffff; valaddr_reg:x3; val_offset:241326*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241326*0 + 3*570*FLEN/8, x4, x1, x2)

inst_80443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0007fffffffff; valaddr_reg:x3; val_offset:241329*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241329*0 + 3*571*FLEN/8, x4, x1, x2)

inst_80444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e000ffffffffff; valaddr_reg:x3; val_offset:241332*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241332*0 + 3*572*FLEN/8, x4, x1, x2)

inst_80445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e001ffffffffff; valaddr_reg:x3; val_offset:241335*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241335*0 + 3*573*FLEN/8, x4, x1, x2)

inst_80446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e003ffffffffff; valaddr_reg:x3; val_offset:241338*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241338*0 + 3*574*FLEN/8, x4, x1, x2)

inst_80447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e007ffffffffff; valaddr_reg:x3; val_offset:241341*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241341*0 + 3*575*FLEN/8, x4, x1, x2)

inst_80448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e00fffffffffff; valaddr_reg:x3; val_offset:241344*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241344*0 + 3*576*FLEN/8, x4, x1, x2)

inst_80449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e01fffffffffff; valaddr_reg:x3; val_offset:241347*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241347*0 + 3*577*FLEN/8, x4, x1, x2)

inst_80450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e03fffffffffff; valaddr_reg:x3; val_offset:241350*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241350*0 + 3*578*FLEN/8, x4, x1, x2)

inst_80451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e07fffffffffff; valaddr_reg:x3; val_offset:241353*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241353*0 + 3*579*FLEN/8, x4, x1, x2)

inst_80452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e0ffffffffffff; valaddr_reg:x3; val_offset:241356*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241356*0 + 3*580*FLEN/8, x4, x1, x2)

inst_80453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e1ffffffffffff; valaddr_reg:x3; val_offset:241359*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241359*0 + 3*581*FLEN/8, x4, x1, x2)

inst_80454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e3ffffffffffff; valaddr_reg:x3; val_offset:241362*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241362*0 + 3*582*FLEN/8, x4, x1, x2)

inst_80455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e7ffffffffffff; valaddr_reg:x3; val_offset:241365*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241365*0 + 3*583*FLEN/8, x4, x1, x2)

inst_80456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3e8000000000000; valaddr_reg:x3; val_offset:241368*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241368*0 + 3*584*FLEN/8, x4, x1, x2)

inst_80457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3ec000000000000; valaddr_reg:x3; val_offset:241371*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241371*0 + 3*585*FLEN/8, x4, x1, x2)

inst_80458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3ee000000000000; valaddr_reg:x3; val_offset:241374*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241374*0 + 3*586*FLEN/8, x4, x1, x2)

inst_80459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3ef000000000000; valaddr_reg:x3; val_offset:241377*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241377*0 + 3*587*FLEN/8, x4, x1, x2)

inst_80460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3ef800000000000; valaddr_reg:x3; val_offset:241380*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241380*0 + 3*588*FLEN/8, x4, x1, x2)

inst_80461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efc00000000000; valaddr_reg:x3; val_offset:241383*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241383*0 + 3*589*FLEN/8, x4, x1, x2)

inst_80462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efe00000000000; valaddr_reg:x3; val_offset:241386*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241386*0 + 3*590*FLEN/8, x4, x1, x2)

inst_80463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3eff00000000000; valaddr_reg:x3; val_offset:241389*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241389*0 + 3*591*FLEN/8, x4, x1, x2)

inst_80464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3eff80000000000; valaddr_reg:x3; val_offset:241392*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241392*0 + 3*592*FLEN/8, x4, x1, x2)

inst_80465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effc0000000000; valaddr_reg:x3; val_offset:241395*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241395*0 + 3*593*FLEN/8, x4, x1, x2)

inst_80466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effe0000000000; valaddr_reg:x3; val_offset:241398*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241398*0 + 3*594*FLEN/8, x4, x1, x2)

inst_80467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efff0000000000; valaddr_reg:x3; val_offset:241401*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241401*0 + 3*595*FLEN/8, x4, x1, x2)

inst_80468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efff8000000000; valaddr_reg:x3; val_offset:241404*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241404*0 + 3*596*FLEN/8, x4, x1, x2)

inst_80469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffc000000000; valaddr_reg:x3; val_offset:241407*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241407*0 + 3*597*FLEN/8, x4, x1, x2)

inst_80470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffe000000000; valaddr_reg:x3; val_offset:241410*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241410*0 + 3*598*FLEN/8, x4, x1, x2)

inst_80471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effff000000000; valaddr_reg:x3; val_offset:241413*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241413*0 + 3*599*FLEN/8, x4, x1, x2)

inst_80472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effff800000000; valaddr_reg:x3; val_offset:241416*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241416*0 + 3*600*FLEN/8, x4, x1, x2)

inst_80473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffc00000000; valaddr_reg:x3; val_offset:241419*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241419*0 + 3*601*FLEN/8, x4, x1, x2)

inst_80474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffe00000000; valaddr_reg:x3; val_offset:241422*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241422*0 + 3*602*FLEN/8, x4, x1, x2)

inst_80475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffff00000000; valaddr_reg:x3; val_offset:241425*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241425*0 + 3*603*FLEN/8, x4, x1, x2)

inst_80476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffff80000000; valaddr_reg:x3; val_offset:241428*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241428*0 + 3*604*FLEN/8, x4, x1, x2)

inst_80477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffc0000000; valaddr_reg:x3; val_offset:241431*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241431*0 + 3*605*FLEN/8, x4, x1, x2)

inst_80478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffe0000000; valaddr_reg:x3; val_offset:241434*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241434*0 + 3*606*FLEN/8, x4, x1, x2)

inst_80479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffff0000000; valaddr_reg:x3; val_offset:241437*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241437*0 + 3*607*FLEN/8, x4, x1, x2)

inst_80480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffff8000000; valaddr_reg:x3; val_offset:241440*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241440*0 + 3*608*FLEN/8, x4, x1, x2)

inst_80481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffc000000; valaddr_reg:x3; val_offset:241443*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241443*0 + 3*609*FLEN/8, x4, x1, x2)

inst_80482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffe000000; valaddr_reg:x3; val_offset:241446*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241446*0 + 3*610*FLEN/8, x4, x1, x2)

inst_80483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffff000000; valaddr_reg:x3; val_offset:241449*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241449*0 + 3*611*FLEN/8, x4, x1, x2)

inst_80484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffff800000; valaddr_reg:x3; val_offset:241452*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241452*0 + 3*612*FLEN/8, x4, x1, x2)

inst_80485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffffc00000; valaddr_reg:x3; val_offset:241455*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241455*0 + 3*613*FLEN/8, x4, x1, x2)

inst_80486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffffe00000; valaddr_reg:x3; val_offset:241458*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241458*0 + 3*614*FLEN/8, x4, x1, x2)

inst_80487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffff00000; valaddr_reg:x3; val_offset:241461*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241461*0 + 3*615*FLEN/8, x4, x1, x2)

inst_80488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffff80000; valaddr_reg:x3; val_offset:241464*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241464*0 + 3*616*FLEN/8, x4, x1, x2)

inst_80489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffffc0000; valaddr_reg:x3; val_offset:241467*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241467*0 + 3*617*FLEN/8, x4, x1, x2)

inst_80490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffffe0000; valaddr_reg:x3; val_offset:241470*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241470*0 + 3*618*FLEN/8, x4, x1, x2)

inst_80491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffffff0000; valaddr_reg:x3; val_offset:241473*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241473*0 + 3*619*FLEN/8, x4, x1, x2)

inst_80492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffffff8000; valaddr_reg:x3; val_offset:241476*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241476*0 + 3*620*FLEN/8, x4, x1, x2)

inst_80493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffffffc000; valaddr_reg:x3; val_offset:241479*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241479*0 + 3*621*FLEN/8, x4, x1, x2)

inst_80494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffffffe000; valaddr_reg:x3; val_offset:241482*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241482*0 + 3*622*FLEN/8, x4, x1, x2)

inst_80495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffffff000; valaddr_reg:x3; val_offset:241485*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241485*0 + 3*623*FLEN/8, x4, x1, x2)

inst_80496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffffff800; valaddr_reg:x3; val_offset:241488*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241488*0 + 3*624*FLEN/8, x4, x1, x2)

inst_80497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffffffc00; valaddr_reg:x3; val_offset:241491*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241491*0 + 3*625*FLEN/8, x4, x1, x2)

inst_80498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffffffe00; valaddr_reg:x3; val_offset:241494*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241494*0 + 3*626*FLEN/8, x4, x1, x2)

inst_80499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffffffff00; valaddr_reg:x3; val_offset:241497*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241497*0 + 3*627*FLEN/8, x4, x1, x2)

inst_80500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffffffff80; valaddr_reg:x3; val_offset:241500*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241500*0 + 3*628*FLEN/8, x4, x1, x2)

inst_80501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffffffffc0; valaddr_reg:x3; val_offset:241503*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241503*0 + 3*629*FLEN/8, x4, x1, x2)

inst_80502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffffffffe0; valaddr_reg:x3; val_offset:241506*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241506*0 + 3*630*FLEN/8, x4, x1, x2)

inst_80503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffffffff0; valaddr_reg:x3; val_offset:241509*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241509*0 + 3*631*FLEN/8, x4, x1, x2)

inst_80504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffffffff8; valaddr_reg:x3; val_offset:241512*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241512*0 + 3*632*FLEN/8, x4, x1, x2)

inst_80505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffffffffc; valaddr_reg:x3; val_offset:241515*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241515*0 + 3*633*FLEN/8, x4, x1, x2)

inst_80506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3effffffffffffe; valaddr_reg:x3; val_offset:241518*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241518*0 + 3*634*FLEN/8, x4, x1, x2)

inst_80507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x870bc995c3aa8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa870bc995c3aa8; op2val:0x0;
op3val:0x3efffffffffffff; valaddr_reg:x3; val_offset:241521*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241521*0 + 3*635*FLEN/8, x4, x1, x2)

inst_80508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000000000000; valaddr_reg:x3; val_offset:241524*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241524*0 + 3*636*FLEN/8, x4, x1, x2)

inst_80509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000000000001; valaddr_reg:x3; val_offset:241527*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241527*0 + 3*637*FLEN/8, x4, x1, x2)

inst_80510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000000000003; valaddr_reg:x3; val_offset:241530*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241530*0 + 3*638*FLEN/8, x4, x1, x2)

inst_80511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000000000007; valaddr_reg:x3; val_offset:241533*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241533*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_80512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000000000000f; valaddr_reg:x3; val_offset:241536*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241536*0 + 3*640*FLEN/8, x4, x1, x2)

inst_80513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000000000001f; valaddr_reg:x3; val_offset:241539*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241539*0 + 3*641*FLEN/8, x4, x1, x2)

inst_80514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000000000003f; valaddr_reg:x3; val_offset:241542*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241542*0 + 3*642*FLEN/8, x4, x1, x2)

inst_80515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000000000007f; valaddr_reg:x3; val_offset:241545*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241545*0 + 3*643*FLEN/8, x4, x1, x2)

inst_80516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300000000000ff; valaddr_reg:x3; val_offset:241548*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241548*0 + 3*644*FLEN/8, x4, x1, x2)

inst_80517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300000000001ff; valaddr_reg:x3; val_offset:241551*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241551*0 + 3*645*FLEN/8, x4, x1, x2)

inst_80518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300000000003ff; valaddr_reg:x3; val_offset:241554*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241554*0 + 3*646*FLEN/8, x4, x1, x2)

inst_80519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300000000007ff; valaddr_reg:x3; val_offset:241557*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241557*0 + 3*647*FLEN/8, x4, x1, x2)

inst_80520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000000000fff; valaddr_reg:x3; val_offset:241560*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241560*0 + 3*648*FLEN/8, x4, x1, x2)

inst_80521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000000001fff; valaddr_reg:x3; val_offset:241563*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241563*0 + 3*649*FLEN/8, x4, x1, x2)

inst_80522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000000003fff; valaddr_reg:x3; val_offset:241566*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241566*0 + 3*650*FLEN/8, x4, x1, x2)

inst_80523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000000007fff; valaddr_reg:x3; val_offset:241569*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241569*0 + 3*651*FLEN/8, x4, x1, x2)

inst_80524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000000000ffff; valaddr_reg:x3; val_offset:241572*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241572*0 + 3*652*FLEN/8, x4, x1, x2)

inst_80525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000000001ffff; valaddr_reg:x3; val_offset:241575*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241575*0 + 3*653*FLEN/8, x4, x1, x2)

inst_80526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000000003ffff; valaddr_reg:x3; val_offset:241578*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241578*0 + 3*654*FLEN/8, x4, x1, x2)

inst_80527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000000007ffff; valaddr_reg:x3; val_offset:241581*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241581*0 + 3*655*FLEN/8, x4, x1, x2)

inst_80528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300000000fffff; valaddr_reg:x3; val_offset:241584*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241584*0 + 3*656*FLEN/8, x4, x1, x2)

inst_80529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300000001fffff; valaddr_reg:x3; val_offset:241587*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241587*0 + 3*657*FLEN/8, x4, x1, x2)

inst_80530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300000003fffff; valaddr_reg:x3; val_offset:241590*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241590*0 + 3*658*FLEN/8, x4, x1, x2)

inst_80531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300000007fffff; valaddr_reg:x3; val_offset:241593*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241593*0 + 3*659*FLEN/8, x4, x1, x2)

inst_80532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000000ffffff; valaddr_reg:x3; val_offset:241596*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241596*0 + 3*660*FLEN/8, x4, x1, x2)

inst_80533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000001ffffff; valaddr_reg:x3; val_offset:241599*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241599*0 + 3*661*FLEN/8, x4, x1, x2)

inst_80534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000003ffffff; valaddr_reg:x3; val_offset:241602*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241602*0 + 3*662*FLEN/8, x4, x1, x2)

inst_80535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000007ffffff; valaddr_reg:x3; val_offset:241605*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241605*0 + 3*663*FLEN/8, x4, x1, x2)

inst_80536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000000fffffff; valaddr_reg:x3; val_offset:241608*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241608*0 + 3*664*FLEN/8, x4, x1, x2)

inst_80537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000001fffffff; valaddr_reg:x3; val_offset:241611*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241611*0 + 3*665*FLEN/8, x4, x1, x2)

inst_80538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000003fffffff; valaddr_reg:x3; val_offset:241614*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241614*0 + 3*666*FLEN/8, x4, x1, x2)

inst_80539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000007fffffff; valaddr_reg:x3; val_offset:241617*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241617*0 + 3*667*FLEN/8, x4, x1, x2)

inst_80540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300000ffffffff; valaddr_reg:x3; val_offset:241620*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241620*0 + 3*668*FLEN/8, x4, x1, x2)

inst_80541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300001ffffffff; valaddr_reg:x3; val_offset:241623*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241623*0 + 3*669*FLEN/8, x4, x1, x2)

inst_80542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300003ffffffff; valaddr_reg:x3; val_offset:241626*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241626*0 + 3*670*FLEN/8, x4, x1, x2)

inst_80543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300007ffffffff; valaddr_reg:x3; val_offset:241629*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241629*0 + 3*671*FLEN/8, x4, x1, x2)

inst_80544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30000fffffffff; valaddr_reg:x3; val_offset:241632*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241632*0 + 3*672*FLEN/8, x4, x1, x2)

inst_80545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30001fffffffff; valaddr_reg:x3; val_offset:241635*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241635*0 + 3*673*FLEN/8, x4, x1, x2)

inst_80546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30003fffffffff; valaddr_reg:x3; val_offset:241638*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241638*0 + 3*674*FLEN/8, x4, x1, x2)

inst_80547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30007fffffffff; valaddr_reg:x3; val_offset:241641*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241641*0 + 3*675*FLEN/8, x4, x1, x2)

inst_80548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3000ffffffffff; valaddr_reg:x3; val_offset:241644*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241644*0 + 3*676*FLEN/8, x4, x1, x2)

inst_80549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3001ffffffffff; valaddr_reg:x3; val_offset:241647*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241647*0 + 3*677*FLEN/8, x4, x1, x2)

inst_80550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3003ffffffffff; valaddr_reg:x3; val_offset:241650*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241650*0 + 3*678*FLEN/8, x4, x1, x2)

inst_80551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3007ffffffffff; valaddr_reg:x3; val_offset:241653*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241653*0 + 3*679*FLEN/8, x4, x1, x2)

inst_80552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb300fffffffffff; valaddr_reg:x3; val_offset:241656*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241656*0 + 3*680*FLEN/8, x4, x1, x2)

inst_80553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb301fffffffffff; valaddr_reg:x3; val_offset:241659*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241659*0 + 3*681*FLEN/8, x4, x1, x2)

inst_80554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb303fffffffffff; valaddr_reg:x3; val_offset:241662*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241662*0 + 3*682*FLEN/8, x4, x1, x2)

inst_80555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb307fffffffffff; valaddr_reg:x3; val_offset:241665*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241665*0 + 3*683*FLEN/8, x4, x1, x2)

inst_80556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb30ffffffffffff; valaddr_reg:x3; val_offset:241668*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241668*0 + 3*684*FLEN/8, x4, x1, x2)

inst_80557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb31ffffffffffff; valaddr_reg:x3; val_offset:241671*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241671*0 + 3*685*FLEN/8, x4, x1, x2)

inst_80558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb33ffffffffffff; valaddr_reg:x3; val_offset:241674*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241674*0 + 3*686*FLEN/8, x4, x1, x2)

inst_80559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb37ffffffffffff; valaddr_reg:x3; val_offset:241677*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241677*0 + 3*687*FLEN/8, x4, x1, x2)

inst_80560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb38000000000000; valaddr_reg:x3; val_offset:241680*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241680*0 + 3*688*FLEN/8, x4, x1, x2)

inst_80561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3c000000000000; valaddr_reg:x3; val_offset:241683*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241683*0 + 3*689*FLEN/8, x4, x1, x2)

inst_80562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3e000000000000; valaddr_reg:x3; val_offset:241686*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241686*0 + 3*690*FLEN/8, x4, x1, x2)

inst_80563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3f000000000000; valaddr_reg:x3; val_offset:241689*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241689*0 + 3*691*FLEN/8, x4, x1, x2)

inst_80564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3f800000000000; valaddr_reg:x3; val_offset:241692*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241692*0 + 3*692*FLEN/8, x4, x1, x2)

inst_80565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fc00000000000; valaddr_reg:x3; val_offset:241695*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241695*0 + 3*693*FLEN/8, x4, x1, x2)

inst_80566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fe00000000000; valaddr_reg:x3; val_offset:241698*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241698*0 + 3*694*FLEN/8, x4, x1, x2)

inst_80567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ff00000000000; valaddr_reg:x3; val_offset:241701*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241701*0 + 3*695*FLEN/8, x4, x1, x2)

inst_80568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ff80000000000; valaddr_reg:x3; val_offset:241704*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241704*0 + 3*696*FLEN/8, x4, x1, x2)

inst_80569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffc0000000000; valaddr_reg:x3; val_offset:241707*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241707*0 + 3*697*FLEN/8, x4, x1, x2)

inst_80570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffe0000000000; valaddr_reg:x3; val_offset:241710*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241710*0 + 3*698*FLEN/8, x4, x1, x2)

inst_80571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fff0000000000; valaddr_reg:x3; val_offset:241713*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241713*0 + 3*699*FLEN/8, x4, x1, x2)

inst_80572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fff8000000000; valaddr_reg:x3; val_offset:241716*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241716*0 + 3*700*FLEN/8, x4, x1, x2)

inst_80573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffc000000000; valaddr_reg:x3; val_offset:241719*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241719*0 + 3*701*FLEN/8, x4, x1, x2)

inst_80574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffe000000000; valaddr_reg:x3; val_offset:241722*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241722*0 + 3*702*FLEN/8, x4, x1, x2)

inst_80575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffff000000000; valaddr_reg:x3; val_offset:241725*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241725*0 + 3*703*FLEN/8, x4, x1, x2)

inst_80576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffff800000000; valaddr_reg:x3; val_offset:241728*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241728*0 + 3*704*FLEN/8, x4, x1, x2)

inst_80577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffc00000000; valaddr_reg:x3; val_offset:241731*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241731*0 + 3*705*FLEN/8, x4, x1, x2)

inst_80578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffe00000000; valaddr_reg:x3; val_offset:241734*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241734*0 + 3*706*FLEN/8, x4, x1, x2)

inst_80579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffff00000000; valaddr_reg:x3; val_offset:241737*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241737*0 + 3*707*FLEN/8, x4, x1, x2)

inst_80580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffff80000000; valaddr_reg:x3; val_offset:241740*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241740*0 + 3*708*FLEN/8, x4, x1, x2)

inst_80581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffc0000000; valaddr_reg:x3; val_offset:241743*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241743*0 + 3*709*FLEN/8, x4, x1, x2)

inst_80582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffe0000000; valaddr_reg:x3; val_offset:241746*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241746*0 + 3*710*FLEN/8, x4, x1, x2)

inst_80583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffff0000000; valaddr_reg:x3; val_offset:241749*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241749*0 + 3*711*FLEN/8, x4, x1, x2)

inst_80584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffff8000000; valaddr_reg:x3; val_offset:241752*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241752*0 + 3*712*FLEN/8, x4, x1, x2)

inst_80585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffc000000; valaddr_reg:x3; val_offset:241755*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241755*0 + 3*713*FLEN/8, x4, x1, x2)

inst_80586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffe000000; valaddr_reg:x3; val_offset:241758*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241758*0 + 3*714*FLEN/8, x4, x1, x2)

inst_80587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffff000000; valaddr_reg:x3; val_offset:241761*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241761*0 + 3*715*FLEN/8, x4, x1, x2)

inst_80588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffff800000; valaddr_reg:x3; val_offset:241764*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241764*0 + 3*716*FLEN/8, x4, x1, x2)

inst_80589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffffc00000; valaddr_reg:x3; val_offset:241767*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241767*0 + 3*717*FLEN/8, x4, x1, x2)

inst_80590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffffe00000; valaddr_reg:x3; val_offset:241770*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241770*0 + 3*718*FLEN/8, x4, x1, x2)

inst_80591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffff00000; valaddr_reg:x3; val_offset:241773*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241773*0 + 3*719*FLEN/8, x4, x1, x2)

inst_80592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffff80000; valaddr_reg:x3; val_offset:241776*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241776*0 + 3*720*FLEN/8, x4, x1, x2)

inst_80593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffffc0000; valaddr_reg:x3; val_offset:241779*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241779*0 + 3*721*FLEN/8, x4, x1, x2)

inst_80594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffffe0000; valaddr_reg:x3; val_offset:241782*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241782*0 + 3*722*FLEN/8, x4, x1, x2)

inst_80595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffffff0000; valaddr_reg:x3; val_offset:241785*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241785*0 + 3*723*FLEN/8, x4, x1, x2)

inst_80596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffffff8000; valaddr_reg:x3; val_offset:241788*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241788*0 + 3*724*FLEN/8, x4, x1, x2)

inst_80597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffffffc000; valaddr_reg:x3; val_offset:241791*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241791*0 + 3*725*FLEN/8, x4, x1, x2)

inst_80598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffffffe000; valaddr_reg:x3; val_offset:241794*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241794*0 + 3*726*FLEN/8, x4, x1, x2)

inst_80599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffffff000; valaddr_reg:x3; val_offset:241797*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241797*0 + 3*727*FLEN/8, x4, x1, x2)

inst_80600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffffff800; valaddr_reg:x3; val_offset:241800*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241800*0 + 3*728*FLEN/8, x4, x1, x2)

inst_80601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffffffc00; valaddr_reg:x3; val_offset:241803*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241803*0 + 3*729*FLEN/8, x4, x1, x2)

inst_80602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffffffe00; valaddr_reg:x3; val_offset:241806*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241806*0 + 3*730*FLEN/8, x4, x1, x2)

inst_80603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffffffff00; valaddr_reg:x3; val_offset:241809*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241809*0 + 3*731*FLEN/8, x4, x1, x2)

inst_80604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffffffff80; valaddr_reg:x3; val_offset:241812*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241812*0 + 3*732*FLEN/8, x4, x1, x2)

inst_80605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffffffffc0; valaddr_reg:x3; val_offset:241815*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241815*0 + 3*733*FLEN/8, x4, x1, x2)

inst_80606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffffffffe0; valaddr_reg:x3; val_offset:241818*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241818*0 + 3*734*FLEN/8, x4, x1, x2)

inst_80607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffffffff0; valaddr_reg:x3; val_offset:241821*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241821*0 + 3*735*FLEN/8, x4, x1, x2)

inst_80608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffffffff8; valaddr_reg:x3; val_offset:241824*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241824*0 + 3*736*FLEN/8, x4, x1, x2)

inst_80609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffffffffc; valaddr_reg:x3; val_offset:241827*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241827*0 + 3*737*FLEN/8, x4, x1, x2)

inst_80610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3ffffffffffffe; valaddr_reg:x3; val_offset:241830*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241830*0 + 3*738*FLEN/8, x4, x1, x2)

inst_80611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbb3fffffffffffff; valaddr_reg:x3; val_offset:241833*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241833*0 + 3*739*FLEN/8, x4, x1, x2)

inst_80612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:241836*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241836*0 + 3*740*FLEN/8, x4, x1, x2)

inst_80613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:241839*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241839*0 + 3*741*FLEN/8, x4, x1, x2)

inst_80614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:241842*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241842*0 + 3*742*FLEN/8, x4, x1, x2)

inst_80615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:241845*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241845*0 + 3*743*FLEN/8, x4, x1, x2)

inst_80616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:241848*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241848*0 + 3*744*FLEN/8, x4, x1, x2)

inst_80617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:241851*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241851*0 + 3*745*FLEN/8, x4, x1, x2)

inst_80618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:241854*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241854*0 + 3*746*FLEN/8, x4, x1, x2)

inst_80619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:241857*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241857*0 + 3*747*FLEN/8, x4, x1, x2)

inst_80620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:241860*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241860*0 + 3*748*FLEN/8, x4, x1, x2)

inst_80621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:241863*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241863*0 + 3*749*FLEN/8, x4, x1, x2)

inst_80622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:241866*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241866*0 + 3*750*FLEN/8, x4, x1, x2)

inst_80623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:241869*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241869*0 + 3*751*FLEN/8, x4, x1, x2)

inst_80624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:241872*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241872*0 + 3*752*FLEN/8, x4, x1, x2)

inst_80625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:241875*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241875*0 + 3*753*FLEN/8, x4, x1, x2)

inst_80626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:241878*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241878*0 + 3*754*FLEN/8, x4, x1, x2)

inst_80627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:241881*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241881*0 + 3*755*FLEN/8, x4, x1, x2)

inst_80628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:241884*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241884*0 + 3*756*FLEN/8, x4, x1, x2)

inst_80629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:241887*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241887*0 + 3*757*FLEN/8, x4, x1, x2)

inst_80630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:241890*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241890*0 + 3*758*FLEN/8, x4, x1, x2)

inst_80631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:241893*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241893*0 + 3*759*FLEN/8, x4, x1, x2)

inst_80632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:241896*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241896*0 + 3*760*FLEN/8, x4, x1, x2)

inst_80633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4dc481bcb37f9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa88b452334d482; op2val:0x9fc4dc481bcb37f9;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:241899*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241899*0 + 3*761*FLEN/8, x4, x1, x2)

inst_80634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:241902*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241902*0 + 3*762*FLEN/8, x4, x1, x2)

inst_80635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:241905*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241905*0 + 3*763*FLEN/8, x4, x1, x2)

inst_80636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:241908*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241908*0 + 3*764*FLEN/8, x4, x1, x2)

inst_80637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:241911*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241911*0 + 3*765*FLEN/8, x4, x1, x2)

inst_80638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:241914*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241914*0 + 3*766*FLEN/8, x4, x1, x2)

inst_80639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x891f40a722045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa891f40a722045; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:241917*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 241917*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892843979061109588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890656,64,FLEN)
NAN_BOXED(6892843979061109588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890672,64,FLEN)
NAN_BOXED(6892843979061109588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890680,64,FLEN)
NAN_BOXED(6892843979061109588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890684,64,FLEN)
NAN_BOXED(6892843979061109588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890686,64,FLEN)
NAN_BOXED(6892843979061109588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890687,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172484608,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172484609,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172484611,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172484615,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172484623,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172484639,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172484671,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172484735,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172484863,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172485119,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172485631,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172486655,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172488703,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172492799,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172500991,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172517375,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172550143,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172615679,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692172746751,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692173008895,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692173533183,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692174581759,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692176678911,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692180873215,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692189261823,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692206039039,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692239593471,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692306702335,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692440920063,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201692709355519,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201693246226431,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201694319968255,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201696467451903,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201700762419199,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201709352353791,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201726532222975,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201760891961343,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201829611438079,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389201967050391551,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389202241928298495,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389202791684112383,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389203891195740159,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389206090218995711,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389210488265506815,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389219284358529023,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389236876544573439,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389272060916662271,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389342429660839935,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389483167149195263,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13389764642125905919,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13390327592079327231,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13391453491986169855,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13391453491986169856,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13392579391893012480,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393142341846433792,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393423816823144448,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393564554311499776,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393634923055677440,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393670107427766272,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393687699613810688,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393696495706832896,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393700893753344000,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393703092776599552,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393704192288227328,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393704742044041216,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705016921948160,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705154360901632,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705223080378368,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705257440116736,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705274619985920,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705283209920512,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705287504887808,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705289652371456,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705290726113280,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291262984192,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291531419648,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291665637376,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291732746240,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291766300672,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291783077888,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291791466496,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291795660800,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291797757952,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291798806528,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799330816,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799592960,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799724032,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799789568,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799822336,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799838720,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799846912,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799851008,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799853056,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799854080,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799854592,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799854848,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799854976,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799855040,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799855072,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799855088,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799855096,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799855100,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799855102,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13393705291799855103,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892863793140292146,64,FLEN)
NAN_BOXED(11512610318870980988,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895296,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895297,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895299,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895303,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895311,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895327,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895359,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895423,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895551,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895807,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995896319,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995897343,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995899391,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995903487,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995911679,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995928063,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995960831,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996026367,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996157439,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996419583,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996943871,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580997992447,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581000089599,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581004283903,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581012672511,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581029449727,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581063004159,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581130113023,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581264330751,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581532766207,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683582069637119,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683583143378943,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683585290862591,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683589585829887,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683598175764479,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683615355633663,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683649715372031,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683718434848767,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683855873802239,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684130751709183,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684680507523071,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229685780019150847,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229687979042406399,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229692377088917503,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229701173181939711,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229718765367984127,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229753949740072959,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229824318484250623,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229965055972605951,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230246530949316607,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230809480902737919,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580543,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580544,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233061280716423168,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233624230669844480,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233905705646555136,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234046443134910464,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234116811879088128,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234151996251176960,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234169588437221376,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234178384530243584,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234182782576754688,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234184981600010240,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186081111638016,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186630867451904,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186905745358848,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187043184312320,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187111903789056,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187146263527424,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187163443396608,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187172033331200,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187176328298496,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187178475782144,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187179549523968,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180086394880,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180354830336,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180489048064,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180556156928,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180589711360,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180606488576,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180614877184,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180619071488,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180621168640,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622217216,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622741504,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623003648,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623134720,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623200256,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623233024,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623249408,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623257600,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623261696,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623263744,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623264768,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265280,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265536,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265664,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265728,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265760,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265776,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265784,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265788,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265790,64,FLEN)
NAN_BOXED(6892867540518209781,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265791,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859264,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859265,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859267,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859271,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859279,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859295,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859327,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859391,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859519,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859775,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014860287,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014861311,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014863359,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014867455,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014875647,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014892031,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014924799,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014990335,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015121407,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015383551,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015907839,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378016956415,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378019053567,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378023247871,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378031636479,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378048413695,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378081968127,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378149076991,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378283294719,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378551730175,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712379088601087,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712380162342911,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712382309826559,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712386604793855,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712395194728447,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712412374597631,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712446734335999,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712515453812735,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712652892766207,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712927770673151,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265713477526487039,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265714577038114815,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265716776061370367,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265721174107881471,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265729970200903679,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265747562386948095,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265782746759036927,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265853115503214591,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265993852991569919,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266275327968280575,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266838277921701887,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544511,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544512,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269090077735387136,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269653027688808448,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269934502665519104,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270075240153874432,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270145608898052096,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270180793270140928,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270198385456185344,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270207181549207552,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270211579595718656,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270213778618974208,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270214878130601984,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215427886415872,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215702764322816,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215840203276288,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215908922753024,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215943282491392,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215960462360576,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215969052295168,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215973347262464,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215975494746112,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215976568487936,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977105358848,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977373794304,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977508012032,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977575120896,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977608675328,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977625452544,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977633841152,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977638035456,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977640132608,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641181184,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641705472,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641967616,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642098688,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642164224,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642196992,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642213376,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642221568,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642225664,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642227712,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642228736,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229248,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229504,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229632,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229696,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229728,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229744,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229752,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229756,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229758,64,FLEN)
NAN_BOXED(6892875237760877384,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229759,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708352,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708353,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708355,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708359,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708367,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708383,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708415,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708479,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708607,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708863,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212709375,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212710399,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212712447,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212716543,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212724735,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212741119,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212773887,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212839423,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212970495,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186213232639,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186213756927,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186214805503,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186216902655,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186221096959,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186229485567,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186246262783,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186279817215,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186346926079,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186481143807,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186749579263,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633187286450175,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633188360191999,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633190507675647,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633194802642943,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633203392577535,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633220572446719,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633254932185087,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633323651661823,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633461090615295,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633735968522239,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166634285724336127,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166635385235963903,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166637584259219455,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166641982305730559,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166650778398752767,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166668370584797183,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166703554956886015,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166773923701063679,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166914661189419007,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(167196136166129663,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(167759086119550975,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(168884986026393599,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(168884986026393600,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170010885933236224,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170573835886657536,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170855310863368192,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170996048351723520,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171066417095901184,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171101601467990016,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171119193654034432,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171127989747056640,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171132387793567744,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171134586816823296,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171135686328451072,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136236084264960,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136510962171904,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136648401125376,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136717120602112,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136751480340480,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136768660209664,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136777250144256,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136781545111552,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136783692595200,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136784766337024,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785303207936,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785571643392,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785705861120,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785772969984,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785806524416,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785823301632,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785831690240,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785835884544,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785837981696,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839030272,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839554560,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839816704,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839947776,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840013312,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840046080,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840062464,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840070656,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840074752,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840076800,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840077824,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078336,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078592,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078720,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078784,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078816,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078832,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078840,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078844,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078846,64,FLEN)
NAN_BOXED(6892875291810922341,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078847,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970752,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970753,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970755,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970759,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970767,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970783,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970815,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970879,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896971007,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896971263,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896971775,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896972799,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896974847,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896978943,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896987135,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897003519,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897036287,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897101823,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897232895,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897495039,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176898019327,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176899067903,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176901165055,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176905359359,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176913747967,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176930525183,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176964079615,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177031188479,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177165406207,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177433841663,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177970712575,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223179044454399,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223181191938047,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223185486905343,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223194076839935,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223211256709119,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223245616447487,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223314335924223,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223451774877695,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223726652784639,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279224276408598527,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279225375920226303,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279227574943481855,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279231972989992959,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279240769083015167,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279258361269059583,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279293545641148415,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279363914385326079,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279504651873681407,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279786126850392063,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(280349076803813375,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655999,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710656000,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(282600876617498624,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283163826570919936,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283445301547630592,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283586039035985920,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283656407780163584,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283691592152252416,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283709184338296832,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283717980431319040,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283722378477830144,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283724577501085696,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283725677012713472,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726226768527360,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726501646434304,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726639085387776,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726707804864512,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726742164602880,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726759344472064,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726767934406656,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726772229373952,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726774376857600,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726775450599424,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726775987470336,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776255905792,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776390123520,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776457232384,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776490786816,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776507564032,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776515952640,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776520146944,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776522244096,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776523292672,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776523816960,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524079104,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524210176,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524275712,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524308480,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524324864,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524333056,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524337152,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524339200,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524340224,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524340736,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524340992,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341120,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341184,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341216,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341232,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341240,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341244,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341246,64,FLEN)
NAN_BOXED(6892883185019665064,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341247,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974635520,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974635521,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974635523,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974635527,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974635535,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974635551,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974635583,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974635647,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974635775,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974636031,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974636543,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974637567,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974639615,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974643711,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974651903,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974668287,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974701055,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974766591,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883974897663,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883975159807,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883975684095,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883976732671,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883978829823,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883983024127,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280883991412735,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280884008189951,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280884041744383,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280884108853247,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280884243070975,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280884511506431,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280885048377343,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280886122119167,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280888269602815,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280892564570111,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280901154504703,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280918334373887,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488280952694112255,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488281021413588991,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488281158852542463,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488281433730449407,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488281983486263295,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488283082997891071,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488285282021146623,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488289680067657727,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488298476160679935,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488316068346724351,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488351252718813183,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488421621462990847,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488562358951346175,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13488843833928056831,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13489406783881478143,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13490532683788320767,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13490532683788320768,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13491658583695163392,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492221533648584704,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492503008625295360,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492643746113650688,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492714114857828352,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492749299229917184,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492766891415961600,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492775687508983808,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492780085555494912,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492782284578750464,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492783384090378240,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492783933846192128,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784208724099072,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784346163052544,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784414882529280,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784449242267648,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784466422136832,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784475012071424,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784479307038720,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784481454522368,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784482528264192,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483065135104,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483333570560,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483467788288,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483534897152,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483568451584,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483585228800,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483593617408,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483597811712,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483599908864,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483600957440,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483601481728,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483601743872,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483601874944,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483601940480,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483601973248,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483601989632,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483601997824,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602001920,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602003968,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602004992,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602005504,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602005760,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602005888,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602005952,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602005984,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602006000,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602006008,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602006012,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602006014,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13492784483602006015,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892912358750213250,64,FLEN)
NAN_BOXED(11512568749727889401,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892919707023843397,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
