
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_39168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffff800000000; valaddr_reg:x3; val_offset:117504*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117504*0 + 3*0*FLEN/8, x4, x1, x2)

inst_39169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffc00000000; valaddr_reg:x3; val_offset:117507*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117507*0 + 3*1*FLEN/8, x4, x1, x2)

inst_39170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffe00000000; valaddr_reg:x3; val_offset:117510*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117510*0 + 3*2*FLEN/8, x4, x1, x2)

inst_39171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffff00000000; valaddr_reg:x3; val_offset:117513*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117513*0 + 3*3*FLEN/8, x4, x1, x2)

inst_39172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffff80000000; valaddr_reg:x3; val_offset:117516*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117516*0 + 3*4*FLEN/8, x4, x1, x2)

inst_39173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffc0000000; valaddr_reg:x3; val_offset:117519*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117519*0 + 3*5*FLEN/8, x4, x1, x2)

inst_39174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffe0000000; valaddr_reg:x3; val_offset:117522*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117522*0 + 3*6*FLEN/8, x4, x1, x2)

inst_39175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffff0000000; valaddr_reg:x3; val_offset:117525*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117525*0 + 3*7*FLEN/8, x4, x1, x2)

inst_39176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffff8000000; valaddr_reg:x3; val_offset:117528*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117528*0 + 3*8*FLEN/8, x4, x1, x2)

inst_39177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffc000000; valaddr_reg:x3; val_offset:117531*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117531*0 + 3*9*FLEN/8, x4, x1, x2)

inst_39178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffe000000; valaddr_reg:x3; val_offset:117534*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117534*0 + 3*10*FLEN/8, x4, x1, x2)

inst_39179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffff000000; valaddr_reg:x3; val_offset:117537*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117537*0 + 3*11*FLEN/8, x4, x1, x2)

inst_39180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffff800000; valaddr_reg:x3; val_offset:117540*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117540*0 + 3*12*FLEN/8, x4, x1, x2)

inst_39181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffffc00000; valaddr_reg:x3; val_offset:117543*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117543*0 + 3*13*FLEN/8, x4, x1, x2)

inst_39182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffffe00000; valaddr_reg:x3; val_offset:117546*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117546*0 + 3*14*FLEN/8, x4, x1, x2)

inst_39183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffff00000; valaddr_reg:x3; val_offset:117549*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117549*0 + 3*15*FLEN/8, x4, x1, x2)

inst_39184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffff80000; valaddr_reg:x3; val_offset:117552*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117552*0 + 3*16*FLEN/8, x4, x1, x2)

inst_39185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffffc0000; valaddr_reg:x3; val_offset:117555*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117555*0 + 3*17*FLEN/8, x4, x1, x2)

inst_39186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffffe0000; valaddr_reg:x3; val_offset:117558*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117558*0 + 3*18*FLEN/8, x4, x1, x2)

inst_39187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffffff0000; valaddr_reg:x3; val_offset:117561*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117561*0 + 3*19*FLEN/8, x4, x1, x2)

inst_39188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffffff8000; valaddr_reg:x3; val_offset:117564*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117564*0 + 3*20*FLEN/8, x4, x1, x2)

inst_39189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffffffc000; valaddr_reg:x3; val_offset:117567*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117567*0 + 3*21*FLEN/8, x4, x1, x2)

inst_39190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffffffe000; valaddr_reg:x3; val_offset:117570*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117570*0 + 3*22*FLEN/8, x4, x1, x2)

inst_39191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffffff000; valaddr_reg:x3; val_offset:117573*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117573*0 + 3*23*FLEN/8, x4, x1, x2)

inst_39192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffffff800; valaddr_reg:x3; val_offset:117576*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117576*0 + 3*24*FLEN/8, x4, x1, x2)

inst_39193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffffffc00; valaddr_reg:x3; val_offset:117579*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117579*0 + 3*25*FLEN/8, x4, x1, x2)

inst_39194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffffffe00; valaddr_reg:x3; val_offset:117582*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117582*0 + 3*26*FLEN/8, x4, x1, x2)

inst_39195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffffffff00; valaddr_reg:x3; val_offset:117585*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117585*0 + 3*27*FLEN/8, x4, x1, x2)

inst_39196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffffffff80; valaddr_reg:x3; val_offset:117588*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117588*0 + 3*28*FLEN/8, x4, x1, x2)

inst_39197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffffffffc0; valaddr_reg:x3; val_offset:117591*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117591*0 + 3*29*FLEN/8, x4, x1, x2)

inst_39198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffffffffe0; valaddr_reg:x3; val_offset:117594*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117594*0 + 3*30*FLEN/8, x4, x1, x2)

inst_39199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffffffff0; valaddr_reg:x3; val_offset:117597*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117597*0 + 3*31*FLEN/8, x4, x1, x2)

inst_39200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffffffff8; valaddr_reg:x3; val_offset:117600*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117600*0 + 3*32*FLEN/8, x4, x1, x2)

inst_39201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffffffffc; valaddr_reg:x3; val_offset:117603*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117603*0 + 3*33*FLEN/8, x4, x1, x2)

inst_39202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15ffffffffffffe; valaddr_reg:x3; val_offset:117606*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117606*0 + 3*34*FLEN/8, x4, x1, x2)

inst_39203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98522a1b638e23; op2val:0x0;
op3val:0x15fffffffffffff; valaddr_reg:x3; val_offset:117609*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117609*0 + 3*35*FLEN/8, x4, x1, x2)

inst_39204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000000000000; valaddr_reg:x3; val_offset:117612*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117612*0 + 3*36*FLEN/8, x4, x1, x2)

inst_39205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000000000001; valaddr_reg:x3; val_offset:117615*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117615*0 + 3*37*FLEN/8, x4, x1, x2)

inst_39206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000000000003; valaddr_reg:x3; val_offset:117618*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117618*0 + 3*38*FLEN/8, x4, x1, x2)

inst_39207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000000000007; valaddr_reg:x3; val_offset:117621*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117621*0 + 3*39*FLEN/8, x4, x1, x2)

inst_39208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000000000000f; valaddr_reg:x3; val_offset:117624*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117624*0 + 3*40*FLEN/8, x4, x1, x2)

inst_39209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000000000001f; valaddr_reg:x3; val_offset:117627*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117627*0 + 3*41*FLEN/8, x4, x1, x2)

inst_39210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000000000003f; valaddr_reg:x3; val_offset:117630*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117630*0 + 3*42*FLEN/8, x4, x1, x2)

inst_39211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000000000007f; valaddr_reg:x3; val_offset:117633*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117633*0 + 3*43*FLEN/8, x4, x1, x2)

inst_39212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800000000000ff; valaddr_reg:x3; val_offset:117636*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117636*0 + 3*44*FLEN/8, x4, x1, x2)

inst_39213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800000000001ff; valaddr_reg:x3; val_offset:117639*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117639*0 + 3*45*FLEN/8, x4, x1, x2)

inst_39214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800000000003ff; valaddr_reg:x3; val_offset:117642*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117642*0 + 3*46*FLEN/8, x4, x1, x2)

inst_39215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800000000007ff; valaddr_reg:x3; val_offset:117645*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117645*0 + 3*47*FLEN/8, x4, x1, x2)

inst_39216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000000000fff; valaddr_reg:x3; val_offset:117648*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117648*0 + 3*48*FLEN/8, x4, x1, x2)

inst_39217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000000001fff; valaddr_reg:x3; val_offset:117651*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117651*0 + 3*49*FLEN/8, x4, x1, x2)

inst_39218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000000003fff; valaddr_reg:x3; val_offset:117654*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117654*0 + 3*50*FLEN/8, x4, x1, x2)

inst_39219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000000007fff; valaddr_reg:x3; val_offset:117657*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117657*0 + 3*51*FLEN/8, x4, x1, x2)

inst_39220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000000000ffff; valaddr_reg:x3; val_offset:117660*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117660*0 + 3*52*FLEN/8, x4, x1, x2)

inst_39221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000000001ffff; valaddr_reg:x3; val_offset:117663*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117663*0 + 3*53*FLEN/8, x4, x1, x2)

inst_39222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000000003ffff; valaddr_reg:x3; val_offset:117666*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117666*0 + 3*54*FLEN/8, x4, x1, x2)

inst_39223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000000007ffff; valaddr_reg:x3; val_offset:117669*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117669*0 + 3*55*FLEN/8, x4, x1, x2)

inst_39224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800000000fffff; valaddr_reg:x3; val_offset:117672*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117672*0 + 3*56*FLEN/8, x4, x1, x2)

inst_39225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800000001fffff; valaddr_reg:x3; val_offset:117675*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117675*0 + 3*57*FLEN/8, x4, x1, x2)

inst_39226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800000003fffff; valaddr_reg:x3; val_offset:117678*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117678*0 + 3*58*FLEN/8, x4, x1, x2)

inst_39227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800000007fffff; valaddr_reg:x3; val_offset:117681*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117681*0 + 3*59*FLEN/8, x4, x1, x2)

inst_39228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000000ffffff; valaddr_reg:x3; val_offset:117684*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117684*0 + 3*60*FLEN/8, x4, x1, x2)

inst_39229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000001ffffff; valaddr_reg:x3; val_offset:117687*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117687*0 + 3*61*FLEN/8, x4, x1, x2)

inst_39230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000003ffffff; valaddr_reg:x3; val_offset:117690*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117690*0 + 3*62*FLEN/8, x4, x1, x2)

inst_39231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000007ffffff; valaddr_reg:x3; val_offset:117693*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117693*0 + 3*63*FLEN/8, x4, x1, x2)

inst_39232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000000fffffff; valaddr_reg:x3; val_offset:117696*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117696*0 + 3*64*FLEN/8, x4, x1, x2)

inst_39233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000001fffffff; valaddr_reg:x3; val_offset:117699*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117699*0 + 3*65*FLEN/8, x4, x1, x2)

inst_39234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000003fffffff; valaddr_reg:x3; val_offset:117702*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117702*0 + 3*66*FLEN/8, x4, x1, x2)

inst_39235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000007fffffff; valaddr_reg:x3; val_offset:117705*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117705*0 + 3*67*FLEN/8, x4, x1, x2)

inst_39236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800000ffffffff; valaddr_reg:x3; val_offset:117708*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117708*0 + 3*68*FLEN/8, x4, x1, x2)

inst_39237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800001ffffffff; valaddr_reg:x3; val_offset:117711*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117711*0 + 3*69*FLEN/8, x4, x1, x2)

inst_39238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800003ffffffff; valaddr_reg:x3; val_offset:117714*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117714*0 + 3*70*FLEN/8, x4, x1, x2)

inst_39239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800007ffffffff; valaddr_reg:x3; val_offset:117717*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117717*0 + 3*71*FLEN/8, x4, x1, x2)

inst_39240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80000fffffffff; valaddr_reg:x3; val_offset:117720*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117720*0 + 3*72*FLEN/8, x4, x1, x2)

inst_39241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80001fffffffff; valaddr_reg:x3; val_offset:117723*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117723*0 + 3*73*FLEN/8, x4, x1, x2)

inst_39242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80003fffffffff; valaddr_reg:x3; val_offset:117726*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117726*0 + 3*74*FLEN/8, x4, x1, x2)

inst_39243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80007fffffffff; valaddr_reg:x3; val_offset:117729*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117729*0 + 3*75*FLEN/8, x4, x1, x2)

inst_39244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8000ffffffffff; valaddr_reg:x3; val_offset:117732*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117732*0 + 3*76*FLEN/8, x4, x1, x2)

inst_39245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8001ffffffffff; valaddr_reg:x3; val_offset:117735*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117735*0 + 3*77*FLEN/8, x4, x1, x2)

inst_39246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8003ffffffffff; valaddr_reg:x3; val_offset:117738*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117738*0 + 3*78*FLEN/8, x4, x1, x2)

inst_39247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8007ffffffffff; valaddr_reg:x3; val_offset:117741*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117741*0 + 3*79*FLEN/8, x4, x1, x2)

inst_39248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd800fffffffffff; valaddr_reg:x3; val_offset:117744*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117744*0 + 3*80*FLEN/8, x4, x1, x2)

inst_39249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd801fffffffffff; valaddr_reg:x3; val_offset:117747*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117747*0 + 3*81*FLEN/8, x4, x1, x2)

inst_39250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd803fffffffffff; valaddr_reg:x3; val_offset:117750*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117750*0 + 3*82*FLEN/8, x4, x1, x2)

inst_39251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd807fffffffffff; valaddr_reg:x3; val_offset:117753*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117753*0 + 3*83*FLEN/8, x4, x1, x2)

inst_39252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd80ffffffffffff; valaddr_reg:x3; val_offset:117756*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117756*0 + 3*84*FLEN/8, x4, x1, x2)

inst_39253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd81ffffffffffff; valaddr_reg:x3; val_offset:117759*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117759*0 + 3*85*FLEN/8, x4, x1, x2)

inst_39254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd83ffffffffffff; valaddr_reg:x3; val_offset:117762*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117762*0 + 3*86*FLEN/8, x4, x1, x2)

inst_39255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd87ffffffffffff; valaddr_reg:x3; val_offset:117765*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117765*0 + 3*87*FLEN/8, x4, x1, x2)

inst_39256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd88000000000000; valaddr_reg:x3; val_offset:117768*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117768*0 + 3*88*FLEN/8, x4, x1, x2)

inst_39257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8c000000000000; valaddr_reg:x3; val_offset:117771*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117771*0 + 3*89*FLEN/8, x4, x1, x2)

inst_39258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8e000000000000; valaddr_reg:x3; val_offset:117774*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117774*0 + 3*90*FLEN/8, x4, x1, x2)

inst_39259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8f000000000000; valaddr_reg:x3; val_offset:117777*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117777*0 + 3*91*FLEN/8, x4, x1, x2)

inst_39260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8f800000000000; valaddr_reg:x3; val_offset:117780*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117780*0 + 3*92*FLEN/8, x4, x1, x2)

inst_39261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fc00000000000; valaddr_reg:x3; val_offset:117783*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117783*0 + 3*93*FLEN/8, x4, x1, x2)

inst_39262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fe00000000000; valaddr_reg:x3; val_offset:117786*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117786*0 + 3*94*FLEN/8, x4, x1, x2)

inst_39263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ff00000000000; valaddr_reg:x3; val_offset:117789*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117789*0 + 3*95*FLEN/8, x4, x1, x2)

inst_39264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ff80000000000; valaddr_reg:x3; val_offset:117792*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117792*0 + 3*96*FLEN/8, x4, x1, x2)

inst_39265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffc0000000000; valaddr_reg:x3; val_offset:117795*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117795*0 + 3*97*FLEN/8, x4, x1, x2)

inst_39266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffe0000000000; valaddr_reg:x3; val_offset:117798*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117798*0 + 3*98*FLEN/8, x4, x1, x2)

inst_39267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fff0000000000; valaddr_reg:x3; val_offset:117801*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117801*0 + 3*99*FLEN/8, x4, x1, x2)

inst_39268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fff8000000000; valaddr_reg:x3; val_offset:117804*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117804*0 + 3*100*FLEN/8, x4, x1, x2)

inst_39269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffc000000000; valaddr_reg:x3; val_offset:117807*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117807*0 + 3*101*FLEN/8, x4, x1, x2)

inst_39270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffe000000000; valaddr_reg:x3; val_offset:117810*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117810*0 + 3*102*FLEN/8, x4, x1, x2)

inst_39271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffff000000000; valaddr_reg:x3; val_offset:117813*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117813*0 + 3*103*FLEN/8, x4, x1, x2)

inst_39272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffff800000000; valaddr_reg:x3; val_offset:117816*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117816*0 + 3*104*FLEN/8, x4, x1, x2)

inst_39273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffc00000000; valaddr_reg:x3; val_offset:117819*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117819*0 + 3*105*FLEN/8, x4, x1, x2)

inst_39274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffe00000000; valaddr_reg:x3; val_offset:117822*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117822*0 + 3*106*FLEN/8, x4, x1, x2)

inst_39275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffff00000000; valaddr_reg:x3; val_offset:117825*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117825*0 + 3*107*FLEN/8, x4, x1, x2)

inst_39276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffff80000000; valaddr_reg:x3; val_offset:117828*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117828*0 + 3*108*FLEN/8, x4, x1, x2)

inst_39277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffc0000000; valaddr_reg:x3; val_offset:117831*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117831*0 + 3*109*FLEN/8, x4, x1, x2)

inst_39278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffe0000000; valaddr_reg:x3; val_offset:117834*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117834*0 + 3*110*FLEN/8, x4, x1, x2)

inst_39279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffff0000000; valaddr_reg:x3; val_offset:117837*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117837*0 + 3*111*FLEN/8, x4, x1, x2)

inst_39280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffff8000000; valaddr_reg:x3; val_offset:117840*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117840*0 + 3*112*FLEN/8, x4, x1, x2)

inst_39281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffc000000; valaddr_reg:x3; val_offset:117843*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117843*0 + 3*113*FLEN/8, x4, x1, x2)

inst_39282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffe000000; valaddr_reg:x3; val_offset:117846*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117846*0 + 3*114*FLEN/8, x4, x1, x2)

inst_39283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffff000000; valaddr_reg:x3; val_offset:117849*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117849*0 + 3*115*FLEN/8, x4, x1, x2)

inst_39284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffff800000; valaddr_reg:x3; val_offset:117852*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117852*0 + 3*116*FLEN/8, x4, x1, x2)

inst_39285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffffc00000; valaddr_reg:x3; val_offset:117855*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117855*0 + 3*117*FLEN/8, x4, x1, x2)

inst_39286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffffe00000; valaddr_reg:x3; val_offset:117858*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117858*0 + 3*118*FLEN/8, x4, x1, x2)

inst_39287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffff00000; valaddr_reg:x3; val_offset:117861*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117861*0 + 3*119*FLEN/8, x4, x1, x2)

inst_39288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffff80000; valaddr_reg:x3; val_offset:117864*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117864*0 + 3*120*FLEN/8, x4, x1, x2)

inst_39289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffffc0000; valaddr_reg:x3; val_offset:117867*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117867*0 + 3*121*FLEN/8, x4, x1, x2)

inst_39290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffffe0000; valaddr_reg:x3; val_offset:117870*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117870*0 + 3*122*FLEN/8, x4, x1, x2)

inst_39291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffffff0000; valaddr_reg:x3; val_offset:117873*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117873*0 + 3*123*FLEN/8, x4, x1, x2)

inst_39292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffffff8000; valaddr_reg:x3; val_offset:117876*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117876*0 + 3*124*FLEN/8, x4, x1, x2)

inst_39293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffffffc000; valaddr_reg:x3; val_offset:117879*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117879*0 + 3*125*FLEN/8, x4, x1, x2)

inst_39294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffffffe000; valaddr_reg:x3; val_offset:117882*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117882*0 + 3*126*FLEN/8, x4, x1, x2)

inst_39295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffffff000; valaddr_reg:x3; val_offset:117885*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117885*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_39296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffffff800; valaddr_reg:x3; val_offset:117888*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117888*0 + 3*128*FLEN/8, x4, x1, x2)

inst_39297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffffffc00; valaddr_reg:x3; val_offset:117891*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117891*0 + 3*129*FLEN/8, x4, x1, x2)

inst_39298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffffffe00; valaddr_reg:x3; val_offset:117894*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117894*0 + 3*130*FLEN/8, x4, x1, x2)

inst_39299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffffffff00; valaddr_reg:x3; val_offset:117897*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117897*0 + 3*131*FLEN/8, x4, x1, x2)

inst_39300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffffffff80; valaddr_reg:x3; val_offset:117900*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117900*0 + 3*132*FLEN/8, x4, x1, x2)

inst_39301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffffffffc0; valaddr_reg:x3; val_offset:117903*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117903*0 + 3*133*FLEN/8, x4, x1, x2)

inst_39302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffffffffe0; valaddr_reg:x3; val_offset:117906*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117906*0 + 3*134*FLEN/8, x4, x1, x2)

inst_39303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffffffff0; valaddr_reg:x3; val_offset:117909*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117909*0 + 3*135*FLEN/8, x4, x1, x2)

inst_39304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffffffff8; valaddr_reg:x3; val_offset:117912*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117912*0 + 3*136*FLEN/8, x4, x1, x2)

inst_39305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffffffffc; valaddr_reg:x3; val_offset:117915*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117915*0 + 3*137*FLEN/8, x4, x1, x2)

inst_39306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8ffffffffffffe; valaddr_reg:x3; val_offset:117918*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117918*0 + 3*138*FLEN/8, x4, x1, x2)

inst_39307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbd8fffffffffffff; valaddr_reg:x3; val_offset:117921*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117921*0 + 3*139*FLEN/8, x4, x1, x2)

inst_39308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:117924*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117924*0 + 3*140*FLEN/8, x4, x1, x2)

inst_39309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:117927*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117927*0 + 3*141*FLEN/8, x4, x1, x2)

inst_39310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:117930*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117930*0 + 3*142*FLEN/8, x4, x1, x2)

inst_39311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:117933*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117933*0 + 3*143*FLEN/8, x4, x1, x2)

inst_39312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:117936*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117936*0 + 3*144*FLEN/8, x4, x1, x2)

inst_39313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:117939*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117939*0 + 3*145*FLEN/8, x4, x1, x2)

inst_39314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:117942*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117942*0 + 3*146*FLEN/8, x4, x1, x2)

inst_39315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:117945*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117945*0 + 3*147*FLEN/8, x4, x1, x2)

inst_39316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:117948*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117948*0 + 3*148*FLEN/8, x4, x1, x2)

inst_39317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:117951*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117951*0 + 3*149*FLEN/8, x4, x1, x2)

inst_39318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:117954*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117954*0 + 3*150*FLEN/8, x4, x1, x2)

inst_39319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:117957*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117957*0 + 3*151*FLEN/8, x4, x1, x2)

inst_39320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:117960*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117960*0 + 3*152*FLEN/8, x4, x1, x2)

inst_39321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:117963*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117963*0 + 3*153*FLEN/8, x4, x1, x2)

inst_39322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:117966*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117966*0 + 3*154*FLEN/8, x4, x1, x2)

inst_39323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:117969*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117969*0 + 3*155*FLEN/8, x4, x1, x2)

inst_39324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:117972*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117972*0 + 3*156*FLEN/8, x4, x1, x2)

inst_39325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:117975*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117975*0 + 3*157*FLEN/8, x4, x1, x2)

inst_39326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:117978*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117978*0 + 3*158*FLEN/8, x4, x1, x2)

inst_39327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:117981*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117981*0 + 3*159*FLEN/8, x4, x1, x2)

inst_39328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:117984*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117984*0 + 3*160*FLEN/8, x4, x1, x2)

inst_39329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x86d2c67f038bd and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4f5fc0994eda8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f986d2c67f038bd; op2val:0x9fd4f5fc0994eda8;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:117987*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117987*0 + 3*161*FLEN/8, x4, x1, x2)

inst_39330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000000000000; valaddr_reg:x3; val_offset:117990*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117990*0 + 3*162*FLEN/8, x4, x1, x2)

inst_39331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000000000001; valaddr_reg:x3; val_offset:117993*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117993*0 + 3*163*FLEN/8, x4, x1, x2)

inst_39332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000000000003; valaddr_reg:x3; val_offset:117996*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117996*0 + 3*164*FLEN/8, x4, x1, x2)

inst_39333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000000000007; valaddr_reg:x3; val_offset:117999*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117999*0 + 3*165*FLEN/8, x4, x1, x2)

inst_39334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000000000000f; valaddr_reg:x3; val_offset:118002*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118002*0 + 3*166*FLEN/8, x4, x1, x2)

inst_39335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000000000001f; valaddr_reg:x3; val_offset:118005*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118005*0 + 3*167*FLEN/8, x4, x1, x2)

inst_39336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000000000003f; valaddr_reg:x3; val_offset:118008*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118008*0 + 3*168*FLEN/8, x4, x1, x2)

inst_39337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000000000007f; valaddr_reg:x3; val_offset:118011*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118011*0 + 3*169*FLEN/8, x4, x1, x2)

inst_39338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000000000000ff; valaddr_reg:x3; val_offset:118014*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118014*0 + 3*170*FLEN/8, x4, x1, x2)

inst_39339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000000000001ff; valaddr_reg:x3; val_offset:118017*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118017*0 + 3*171*FLEN/8, x4, x1, x2)

inst_39340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000000000003ff; valaddr_reg:x3; val_offset:118020*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118020*0 + 3*172*FLEN/8, x4, x1, x2)

inst_39341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000000000007ff; valaddr_reg:x3; val_offset:118023*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118023*0 + 3*173*FLEN/8, x4, x1, x2)

inst_39342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000000000fff; valaddr_reg:x3; val_offset:118026*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118026*0 + 3*174*FLEN/8, x4, x1, x2)

inst_39343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000000001fff; valaddr_reg:x3; val_offset:118029*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118029*0 + 3*175*FLEN/8, x4, x1, x2)

inst_39344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000000003fff; valaddr_reg:x3; val_offset:118032*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118032*0 + 3*176*FLEN/8, x4, x1, x2)

inst_39345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000000007fff; valaddr_reg:x3; val_offset:118035*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118035*0 + 3*177*FLEN/8, x4, x1, x2)

inst_39346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000000000ffff; valaddr_reg:x3; val_offset:118038*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118038*0 + 3*178*FLEN/8, x4, x1, x2)

inst_39347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000000001ffff; valaddr_reg:x3; val_offset:118041*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118041*0 + 3*179*FLEN/8, x4, x1, x2)

inst_39348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000000003ffff; valaddr_reg:x3; val_offset:118044*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118044*0 + 3*180*FLEN/8, x4, x1, x2)

inst_39349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000000007ffff; valaddr_reg:x3; val_offset:118047*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118047*0 + 3*181*FLEN/8, x4, x1, x2)

inst_39350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000000000fffff; valaddr_reg:x3; val_offset:118050*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118050*0 + 3*182*FLEN/8, x4, x1, x2)

inst_39351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000000001fffff; valaddr_reg:x3; val_offset:118053*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118053*0 + 3*183*FLEN/8, x4, x1, x2)

inst_39352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000000003fffff; valaddr_reg:x3; val_offset:118056*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118056*0 + 3*184*FLEN/8, x4, x1, x2)

inst_39353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000000007fffff; valaddr_reg:x3; val_offset:118059*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118059*0 + 3*185*FLEN/8, x4, x1, x2)

inst_39354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000000ffffff; valaddr_reg:x3; val_offset:118062*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118062*0 + 3*186*FLEN/8, x4, x1, x2)

inst_39355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000001ffffff; valaddr_reg:x3; val_offset:118065*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118065*0 + 3*187*FLEN/8, x4, x1, x2)

inst_39356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000003ffffff; valaddr_reg:x3; val_offset:118068*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118068*0 + 3*188*FLEN/8, x4, x1, x2)

inst_39357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000007ffffff; valaddr_reg:x3; val_offset:118071*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118071*0 + 3*189*FLEN/8, x4, x1, x2)

inst_39358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000000fffffff; valaddr_reg:x3; val_offset:118074*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118074*0 + 3*190*FLEN/8, x4, x1, x2)

inst_39359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000001fffffff; valaddr_reg:x3; val_offset:118077*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118077*0 + 3*191*FLEN/8, x4, x1, x2)

inst_39360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000003fffffff; valaddr_reg:x3; val_offset:118080*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118080*0 + 3*192*FLEN/8, x4, x1, x2)

inst_39361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000007fffffff; valaddr_reg:x3; val_offset:118083*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118083*0 + 3*193*FLEN/8, x4, x1, x2)

inst_39362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000000ffffffff; valaddr_reg:x3; val_offset:118086*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118086*0 + 3*194*FLEN/8, x4, x1, x2)

inst_39363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000001ffffffff; valaddr_reg:x3; val_offset:118089*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118089*0 + 3*195*FLEN/8, x4, x1, x2)

inst_39364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000003ffffffff; valaddr_reg:x3; val_offset:118092*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118092*0 + 3*196*FLEN/8, x4, x1, x2)

inst_39365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000007ffffffff; valaddr_reg:x3; val_offset:118095*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118095*0 + 3*197*FLEN/8, x4, x1, x2)

inst_39366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00000fffffffff; valaddr_reg:x3; val_offset:118098*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118098*0 + 3*198*FLEN/8, x4, x1, x2)

inst_39367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00001fffffffff; valaddr_reg:x3; val_offset:118101*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118101*0 + 3*199*FLEN/8, x4, x1, x2)

inst_39368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00003fffffffff; valaddr_reg:x3; val_offset:118104*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118104*0 + 3*200*FLEN/8, x4, x1, x2)

inst_39369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00007fffffffff; valaddr_reg:x3; val_offset:118107*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118107*0 + 3*201*FLEN/8, x4, x1, x2)

inst_39370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0000ffffffffff; valaddr_reg:x3; val_offset:118110*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118110*0 + 3*202*FLEN/8, x4, x1, x2)

inst_39371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0001ffffffffff; valaddr_reg:x3; val_offset:118113*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118113*0 + 3*203*FLEN/8, x4, x1, x2)

inst_39372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0003ffffffffff; valaddr_reg:x3; val_offset:118116*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118116*0 + 3*204*FLEN/8, x4, x1, x2)

inst_39373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0007ffffffffff; valaddr_reg:x3; val_offset:118119*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118119*0 + 3*205*FLEN/8, x4, x1, x2)

inst_39374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe000fffffffffff; valaddr_reg:x3; val_offset:118122*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118122*0 + 3*206*FLEN/8, x4, x1, x2)

inst_39375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe001fffffffffff; valaddr_reg:x3; val_offset:118125*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118125*0 + 3*207*FLEN/8, x4, x1, x2)

inst_39376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe003fffffffffff; valaddr_reg:x3; val_offset:118128*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118128*0 + 3*208*FLEN/8, x4, x1, x2)

inst_39377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe007fffffffffff; valaddr_reg:x3; val_offset:118131*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118131*0 + 3*209*FLEN/8, x4, x1, x2)

inst_39378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe00ffffffffffff; valaddr_reg:x3; val_offset:118134*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118134*0 + 3*210*FLEN/8, x4, x1, x2)

inst_39379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe01ffffffffffff; valaddr_reg:x3; val_offset:118137*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118137*0 + 3*211*FLEN/8, x4, x1, x2)

inst_39380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe03ffffffffffff; valaddr_reg:x3; val_offset:118140*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118140*0 + 3*212*FLEN/8, x4, x1, x2)

inst_39381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe07ffffffffffff; valaddr_reg:x3; val_offset:118143*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118143*0 + 3*213*FLEN/8, x4, x1, x2)

inst_39382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe08000000000000; valaddr_reg:x3; val_offset:118146*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118146*0 + 3*214*FLEN/8, x4, x1, x2)

inst_39383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0c000000000000; valaddr_reg:x3; val_offset:118149*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118149*0 + 3*215*FLEN/8, x4, x1, x2)

inst_39384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0e000000000000; valaddr_reg:x3; val_offset:118152*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118152*0 + 3*216*FLEN/8, x4, x1, x2)

inst_39385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0f000000000000; valaddr_reg:x3; val_offset:118155*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118155*0 + 3*217*FLEN/8, x4, x1, x2)

inst_39386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0f800000000000; valaddr_reg:x3; val_offset:118158*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118158*0 + 3*218*FLEN/8, x4, x1, x2)

inst_39387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fc00000000000; valaddr_reg:x3; val_offset:118161*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118161*0 + 3*219*FLEN/8, x4, x1, x2)

inst_39388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fe00000000000; valaddr_reg:x3; val_offset:118164*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118164*0 + 3*220*FLEN/8, x4, x1, x2)

inst_39389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ff00000000000; valaddr_reg:x3; val_offset:118167*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118167*0 + 3*221*FLEN/8, x4, x1, x2)

inst_39390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ff80000000000; valaddr_reg:x3; val_offset:118170*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118170*0 + 3*222*FLEN/8, x4, x1, x2)

inst_39391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffc0000000000; valaddr_reg:x3; val_offset:118173*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118173*0 + 3*223*FLEN/8, x4, x1, x2)

inst_39392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffe0000000000; valaddr_reg:x3; val_offset:118176*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118176*0 + 3*224*FLEN/8, x4, x1, x2)

inst_39393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fff0000000000; valaddr_reg:x3; val_offset:118179*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118179*0 + 3*225*FLEN/8, x4, x1, x2)

inst_39394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fff8000000000; valaddr_reg:x3; val_offset:118182*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118182*0 + 3*226*FLEN/8, x4, x1, x2)

inst_39395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffc000000000; valaddr_reg:x3; val_offset:118185*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118185*0 + 3*227*FLEN/8, x4, x1, x2)

inst_39396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffe000000000; valaddr_reg:x3; val_offset:118188*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118188*0 + 3*228*FLEN/8, x4, x1, x2)

inst_39397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffff000000000; valaddr_reg:x3; val_offset:118191*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118191*0 + 3*229*FLEN/8, x4, x1, x2)

inst_39398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffff800000000; valaddr_reg:x3; val_offset:118194*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118194*0 + 3*230*FLEN/8, x4, x1, x2)

inst_39399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffc00000000; valaddr_reg:x3; val_offset:118197*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118197*0 + 3*231*FLEN/8, x4, x1, x2)

inst_39400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffe00000000; valaddr_reg:x3; val_offset:118200*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118200*0 + 3*232*FLEN/8, x4, x1, x2)

inst_39401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffff00000000; valaddr_reg:x3; val_offset:118203*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118203*0 + 3*233*FLEN/8, x4, x1, x2)

inst_39402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffff80000000; valaddr_reg:x3; val_offset:118206*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118206*0 + 3*234*FLEN/8, x4, x1, x2)

inst_39403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffc0000000; valaddr_reg:x3; val_offset:118209*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118209*0 + 3*235*FLEN/8, x4, x1, x2)

inst_39404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffe0000000; valaddr_reg:x3; val_offset:118212*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118212*0 + 3*236*FLEN/8, x4, x1, x2)

inst_39405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffff0000000; valaddr_reg:x3; val_offset:118215*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118215*0 + 3*237*FLEN/8, x4, x1, x2)

inst_39406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffff8000000; valaddr_reg:x3; val_offset:118218*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118218*0 + 3*238*FLEN/8, x4, x1, x2)

inst_39407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffc000000; valaddr_reg:x3; val_offset:118221*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118221*0 + 3*239*FLEN/8, x4, x1, x2)

inst_39408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffe000000; valaddr_reg:x3; val_offset:118224*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118224*0 + 3*240*FLEN/8, x4, x1, x2)

inst_39409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffff000000; valaddr_reg:x3; val_offset:118227*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118227*0 + 3*241*FLEN/8, x4, x1, x2)

inst_39410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffff800000; valaddr_reg:x3; val_offset:118230*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118230*0 + 3*242*FLEN/8, x4, x1, x2)

inst_39411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffffc00000; valaddr_reg:x3; val_offset:118233*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118233*0 + 3*243*FLEN/8, x4, x1, x2)

inst_39412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffffe00000; valaddr_reg:x3; val_offset:118236*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118236*0 + 3*244*FLEN/8, x4, x1, x2)

inst_39413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffff00000; valaddr_reg:x3; val_offset:118239*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118239*0 + 3*245*FLEN/8, x4, x1, x2)

inst_39414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffff80000; valaddr_reg:x3; val_offset:118242*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118242*0 + 3*246*FLEN/8, x4, x1, x2)

inst_39415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffffc0000; valaddr_reg:x3; val_offset:118245*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118245*0 + 3*247*FLEN/8, x4, x1, x2)

inst_39416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffffe0000; valaddr_reg:x3; val_offset:118248*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118248*0 + 3*248*FLEN/8, x4, x1, x2)

inst_39417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffffff0000; valaddr_reg:x3; val_offset:118251*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118251*0 + 3*249*FLEN/8, x4, x1, x2)

inst_39418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffffff8000; valaddr_reg:x3; val_offset:118254*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118254*0 + 3*250*FLEN/8, x4, x1, x2)

inst_39419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffffffc000; valaddr_reg:x3; val_offset:118257*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118257*0 + 3*251*FLEN/8, x4, x1, x2)

inst_39420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffffffe000; valaddr_reg:x3; val_offset:118260*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118260*0 + 3*252*FLEN/8, x4, x1, x2)

inst_39421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffffff000; valaddr_reg:x3; val_offset:118263*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118263*0 + 3*253*FLEN/8, x4, x1, x2)

inst_39422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffffff800; valaddr_reg:x3; val_offset:118266*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118266*0 + 3*254*FLEN/8, x4, x1, x2)

inst_39423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffffffc00; valaddr_reg:x3; val_offset:118269*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118269*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_39424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffffffe00; valaddr_reg:x3; val_offset:118272*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118272*0 + 3*256*FLEN/8, x4, x1, x2)

inst_39425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffffffff00; valaddr_reg:x3; val_offset:118275*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118275*0 + 3*257*FLEN/8, x4, x1, x2)

inst_39426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffffffff80; valaddr_reg:x3; val_offset:118278*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118278*0 + 3*258*FLEN/8, x4, x1, x2)

inst_39427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffffffffc0; valaddr_reg:x3; val_offset:118281*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118281*0 + 3*259*FLEN/8, x4, x1, x2)

inst_39428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffffffffe0; valaddr_reg:x3; val_offset:118284*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118284*0 + 3*260*FLEN/8, x4, x1, x2)

inst_39429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffffffff0; valaddr_reg:x3; val_offset:118287*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118287*0 + 3*261*FLEN/8, x4, x1, x2)

inst_39430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffffffff8; valaddr_reg:x3; val_offset:118290*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118290*0 + 3*262*FLEN/8, x4, x1, x2)

inst_39431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffffffffc; valaddr_reg:x3; val_offset:118293*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118293*0 + 3*263*FLEN/8, x4, x1, x2)

inst_39432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0ffffffffffffe; valaddr_reg:x3; val_offset:118296*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118296*0 + 3*264*FLEN/8, x4, x1, x2)

inst_39433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbe0fffffffffffff; valaddr_reg:x3; val_offset:118299*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118299*0 + 3*265*FLEN/8, x4, x1, x2)

inst_39434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:118302*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118302*0 + 3*266*FLEN/8, x4, x1, x2)

inst_39435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:118305*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118305*0 + 3*267*FLEN/8, x4, x1, x2)

inst_39436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:118308*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118308*0 + 3*268*FLEN/8, x4, x1, x2)

inst_39437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:118311*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118311*0 + 3*269*FLEN/8, x4, x1, x2)

inst_39438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:118314*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118314*0 + 3*270*FLEN/8, x4, x1, x2)

inst_39439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:118317*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118317*0 + 3*271*FLEN/8, x4, x1, x2)

inst_39440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:118320*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118320*0 + 3*272*FLEN/8, x4, x1, x2)

inst_39441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:118323*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118323*0 + 3*273*FLEN/8, x4, x1, x2)

inst_39442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:118326*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118326*0 + 3*274*FLEN/8, x4, x1, x2)

inst_39443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:118329*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118329*0 + 3*275*FLEN/8, x4, x1, x2)

inst_39444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:118332*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118332*0 + 3*276*FLEN/8, x4, x1, x2)

inst_39445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:118335*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118335*0 + 3*277*FLEN/8, x4, x1, x2)

inst_39446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:118338*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118338*0 + 3*278*FLEN/8, x4, x1, x2)

inst_39447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:118341*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118341*0 + 3*279*FLEN/8, x4, x1, x2)

inst_39448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:118344*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118344*0 + 3*280*FLEN/8, x4, x1, x2)

inst_39449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:118347*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118347*0 + 3*281*FLEN/8, x4, x1, x2)

inst_39450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:118350*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118350*0 + 3*282*FLEN/8, x4, x1, x2)

inst_39451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:118353*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118353*0 + 3*283*FLEN/8, x4, x1, x2)

inst_39452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:118356*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118356*0 + 3*284*FLEN/8, x4, x1, x2)

inst_39453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:118359*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118359*0 + 3*285*FLEN/8, x4, x1, x2)

inst_39454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:118362*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118362*0 + 3*286*FLEN/8, x4, x1, x2)

inst_39455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4eca413b3243e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f987814b483b2ff; op2val:0x9fd4eca413b3243e;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:118365*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118365*0 + 3*287*FLEN/8, x4, x1, x2)

inst_39456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:118368*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118368*0 + 3*288*FLEN/8, x4, x1, x2)

inst_39457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:118371*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118371*0 + 3*289*FLEN/8, x4, x1, x2)

inst_39458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:118374*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118374*0 + 3*290*FLEN/8, x4, x1, x2)

inst_39459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:118377*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118377*0 + 3*291*FLEN/8, x4, x1, x2)

inst_39460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:118380*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118380*0 + 3*292*FLEN/8, x4, x1, x2)

inst_39461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:118383*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118383*0 + 3*293*FLEN/8, x4, x1, x2)

inst_39462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:118386*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118386*0 + 3*294*FLEN/8, x4, x1, x2)

inst_39463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:118389*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118389*0 + 3*295*FLEN/8, x4, x1, x2)

inst_39464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:118392*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118392*0 + 3*296*FLEN/8, x4, x1, x2)

inst_39465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:118395*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118395*0 + 3*297*FLEN/8, x4, x1, x2)

inst_39466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:118398*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118398*0 + 3*298*FLEN/8, x4, x1, x2)

inst_39467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:118401*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118401*0 + 3*299*FLEN/8, x4, x1, x2)

inst_39468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:118404*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118404*0 + 3*300*FLEN/8, x4, x1, x2)

inst_39469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:118407*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118407*0 + 3*301*FLEN/8, x4, x1, x2)

inst_39470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:118410*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118410*0 + 3*302*FLEN/8, x4, x1, x2)

inst_39471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:118413*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118413*0 + 3*303*FLEN/8, x4, x1, x2)

inst_39472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:118416*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118416*0 + 3*304*FLEN/8, x4, x1, x2)

inst_39473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:118419*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118419*0 + 3*305*FLEN/8, x4, x1, x2)

inst_39474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:118422*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118422*0 + 3*306*FLEN/8, x4, x1, x2)

inst_39475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:118425*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118425*0 + 3*307*FLEN/8, x4, x1, x2)

inst_39476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:118428*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118428*0 + 3*308*FLEN/8, x4, x1, x2)

inst_39477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:118431*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118431*0 + 3*309*FLEN/8, x4, x1, x2)

inst_39478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000000000000; valaddr_reg:x3; val_offset:118434*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118434*0 + 3*310*FLEN/8, x4, x1, x2)

inst_39479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000000000001; valaddr_reg:x3; val_offset:118437*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118437*0 + 3*311*FLEN/8, x4, x1, x2)

inst_39480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000000000003; valaddr_reg:x3; val_offset:118440*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118440*0 + 3*312*FLEN/8, x4, x1, x2)

inst_39481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000000000007; valaddr_reg:x3; val_offset:118443*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118443*0 + 3*313*FLEN/8, x4, x1, x2)

inst_39482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000000000000f; valaddr_reg:x3; val_offset:118446*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118446*0 + 3*314*FLEN/8, x4, x1, x2)

inst_39483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000000000001f; valaddr_reg:x3; val_offset:118449*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118449*0 + 3*315*FLEN/8, x4, x1, x2)

inst_39484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000000000003f; valaddr_reg:x3; val_offset:118452*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118452*0 + 3*316*FLEN/8, x4, x1, x2)

inst_39485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000000000007f; valaddr_reg:x3; val_offset:118455*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118455*0 + 3*317*FLEN/8, x4, x1, x2)

inst_39486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00000000000ff; valaddr_reg:x3; val_offset:118458*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118458*0 + 3*318*FLEN/8, x4, x1, x2)

inst_39487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00000000001ff; valaddr_reg:x3; val_offset:118461*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118461*0 + 3*319*FLEN/8, x4, x1, x2)

inst_39488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00000000003ff; valaddr_reg:x3; val_offset:118464*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118464*0 + 3*320*FLEN/8, x4, x1, x2)

inst_39489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00000000007ff; valaddr_reg:x3; val_offset:118467*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118467*0 + 3*321*FLEN/8, x4, x1, x2)

inst_39490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000000000fff; valaddr_reg:x3; val_offset:118470*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118470*0 + 3*322*FLEN/8, x4, x1, x2)

inst_39491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000000001fff; valaddr_reg:x3; val_offset:118473*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118473*0 + 3*323*FLEN/8, x4, x1, x2)

inst_39492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000000003fff; valaddr_reg:x3; val_offset:118476*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118476*0 + 3*324*FLEN/8, x4, x1, x2)

inst_39493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000000007fff; valaddr_reg:x3; val_offset:118479*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118479*0 + 3*325*FLEN/8, x4, x1, x2)

inst_39494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000000000ffff; valaddr_reg:x3; val_offset:118482*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118482*0 + 3*326*FLEN/8, x4, x1, x2)

inst_39495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000000001ffff; valaddr_reg:x3; val_offset:118485*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118485*0 + 3*327*FLEN/8, x4, x1, x2)

inst_39496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000000003ffff; valaddr_reg:x3; val_offset:118488*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118488*0 + 3*328*FLEN/8, x4, x1, x2)

inst_39497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000000007ffff; valaddr_reg:x3; val_offset:118491*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118491*0 + 3*329*FLEN/8, x4, x1, x2)

inst_39498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00000000fffff; valaddr_reg:x3; val_offset:118494*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118494*0 + 3*330*FLEN/8, x4, x1, x2)

inst_39499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00000001fffff; valaddr_reg:x3; val_offset:118497*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118497*0 + 3*331*FLEN/8, x4, x1, x2)

inst_39500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00000003fffff; valaddr_reg:x3; val_offset:118500*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118500*0 + 3*332*FLEN/8, x4, x1, x2)

inst_39501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00000007fffff; valaddr_reg:x3; val_offset:118503*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118503*0 + 3*333*FLEN/8, x4, x1, x2)

inst_39502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000000ffffff; valaddr_reg:x3; val_offset:118506*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118506*0 + 3*334*FLEN/8, x4, x1, x2)

inst_39503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000001ffffff; valaddr_reg:x3; val_offset:118509*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118509*0 + 3*335*FLEN/8, x4, x1, x2)

inst_39504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000003ffffff; valaddr_reg:x3; val_offset:118512*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118512*0 + 3*336*FLEN/8, x4, x1, x2)

inst_39505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000007ffffff; valaddr_reg:x3; val_offset:118515*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118515*0 + 3*337*FLEN/8, x4, x1, x2)

inst_39506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000000fffffff; valaddr_reg:x3; val_offset:118518*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118518*0 + 3*338*FLEN/8, x4, x1, x2)

inst_39507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000001fffffff; valaddr_reg:x3; val_offset:118521*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118521*0 + 3*339*FLEN/8, x4, x1, x2)

inst_39508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000003fffffff; valaddr_reg:x3; val_offset:118524*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118524*0 + 3*340*FLEN/8, x4, x1, x2)

inst_39509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000007fffffff; valaddr_reg:x3; val_offset:118527*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118527*0 + 3*341*FLEN/8, x4, x1, x2)

inst_39510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00000ffffffff; valaddr_reg:x3; val_offset:118530*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118530*0 + 3*342*FLEN/8, x4, x1, x2)

inst_39511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00001ffffffff; valaddr_reg:x3; val_offset:118533*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118533*0 + 3*343*FLEN/8, x4, x1, x2)

inst_39512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00003ffffffff; valaddr_reg:x3; val_offset:118536*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118536*0 + 3*344*FLEN/8, x4, x1, x2)

inst_39513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00007ffffffff; valaddr_reg:x3; val_offset:118539*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118539*0 + 3*345*FLEN/8, x4, x1, x2)

inst_39514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0000fffffffff; valaddr_reg:x3; val_offset:118542*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118542*0 + 3*346*FLEN/8, x4, x1, x2)

inst_39515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0001fffffffff; valaddr_reg:x3; val_offset:118545*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118545*0 + 3*347*FLEN/8, x4, x1, x2)

inst_39516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0003fffffffff; valaddr_reg:x3; val_offset:118548*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118548*0 + 3*348*FLEN/8, x4, x1, x2)

inst_39517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0007fffffffff; valaddr_reg:x3; val_offset:118551*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118551*0 + 3*349*FLEN/8, x4, x1, x2)

inst_39518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f000ffffffffff; valaddr_reg:x3; val_offset:118554*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118554*0 + 3*350*FLEN/8, x4, x1, x2)

inst_39519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f001ffffffffff; valaddr_reg:x3; val_offset:118557*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118557*0 + 3*351*FLEN/8, x4, x1, x2)

inst_39520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f003ffffffffff; valaddr_reg:x3; val_offset:118560*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118560*0 + 3*352*FLEN/8, x4, x1, x2)

inst_39521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f007ffffffffff; valaddr_reg:x3; val_offset:118563*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118563*0 + 3*353*FLEN/8, x4, x1, x2)

inst_39522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f00fffffffffff; valaddr_reg:x3; val_offset:118566*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118566*0 + 3*354*FLEN/8, x4, x1, x2)

inst_39523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f01fffffffffff; valaddr_reg:x3; val_offset:118569*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118569*0 + 3*355*FLEN/8, x4, x1, x2)

inst_39524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f03fffffffffff; valaddr_reg:x3; val_offset:118572*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118572*0 + 3*356*FLEN/8, x4, x1, x2)

inst_39525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f07fffffffffff; valaddr_reg:x3; val_offset:118575*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118575*0 + 3*357*FLEN/8, x4, x1, x2)

inst_39526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f0ffffffffffff; valaddr_reg:x3; val_offset:118578*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118578*0 + 3*358*FLEN/8, x4, x1, x2)

inst_39527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f1ffffffffffff; valaddr_reg:x3; val_offset:118581*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118581*0 + 3*359*FLEN/8, x4, x1, x2)

inst_39528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f3ffffffffffff; valaddr_reg:x3; val_offset:118584*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118584*0 + 3*360*FLEN/8, x4, x1, x2)

inst_39529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f7ffffffffffff; valaddr_reg:x3; val_offset:118587*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118587*0 + 3*361*FLEN/8, x4, x1, x2)

inst_39530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1f8000000000000; valaddr_reg:x3; val_offset:118590*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118590*0 + 3*362*FLEN/8, x4, x1, x2)

inst_39531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fc000000000000; valaddr_reg:x3; val_offset:118593*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118593*0 + 3*363*FLEN/8, x4, x1, x2)

inst_39532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fe000000000000; valaddr_reg:x3; val_offset:118596*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118596*0 + 3*364*FLEN/8, x4, x1, x2)

inst_39533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ff000000000000; valaddr_reg:x3; val_offset:118599*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118599*0 + 3*365*FLEN/8, x4, x1, x2)

inst_39534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ff800000000000; valaddr_reg:x3; val_offset:118602*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118602*0 + 3*366*FLEN/8, x4, x1, x2)

inst_39535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffc00000000000; valaddr_reg:x3; val_offset:118605*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118605*0 + 3*367*FLEN/8, x4, x1, x2)

inst_39536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffe00000000000; valaddr_reg:x3; val_offset:118608*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118608*0 + 3*368*FLEN/8, x4, x1, x2)

inst_39537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fff00000000000; valaddr_reg:x3; val_offset:118611*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118611*0 + 3*369*FLEN/8, x4, x1, x2)

inst_39538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fff80000000000; valaddr_reg:x3; val_offset:118614*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118614*0 + 3*370*FLEN/8, x4, x1, x2)

inst_39539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffc0000000000; valaddr_reg:x3; val_offset:118617*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118617*0 + 3*371*FLEN/8, x4, x1, x2)

inst_39540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffe0000000000; valaddr_reg:x3; val_offset:118620*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118620*0 + 3*372*FLEN/8, x4, x1, x2)

inst_39541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffff0000000000; valaddr_reg:x3; val_offset:118623*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118623*0 + 3*373*FLEN/8, x4, x1, x2)

inst_39542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffff8000000000; valaddr_reg:x3; val_offset:118626*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118626*0 + 3*374*FLEN/8, x4, x1, x2)

inst_39543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffc000000000; valaddr_reg:x3; val_offset:118629*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118629*0 + 3*375*FLEN/8, x4, x1, x2)

inst_39544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffe000000000; valaddr_reg:x3; val_offset:118632*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118632*0 + 3*376*FLEN/8, x4, x1, x2)

inst_39545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffff000000000; valaddr_reg:x3; val_offset:118635*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118635*0 + 3*377*FLEN/8, x4, x1, x2)

inst_39546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffff800000000; valaddr_reg:x3; val_offset:118638*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118638*0 + 3*378*FLEN/8, x4, x1, x2)

inst_39547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffc00000000; valaddr_reg:x3; val_offset:118641*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118641*0 + 3*379*FLEN/8, x4, x1, x2)

inst_39548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffe00000000; valaddr_reg:x3; val_offset:118644*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118644*0 + 3*380*FLEN/8, x4, x1, x2)

inst_39549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffff00000000; valaddr_reg:x3; val_offset:118647*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118647*0 + 3*381*FLEN/8, x4, x1, x2)

inst_39550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffff80000000; valaddr_reg:x3; val_offset:118650*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118650*0 + 3*382*FLEN/8, x4, x1, x2)

inst_39551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffc0000000; valaddr_reg:x3; val_offset:118653*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118653*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_39552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffe0000000; valaddr_reg:x3; val_offset:118656*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118656*0 + 3*384*FLEN/8, x4, x1, x2)

inst_39553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffff0000000; valaddr_reg:x3; val_offset:118659*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118659*0 + 3*385*FLEN/8, x4, x1, x2)

inst_39554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffff8000000; valaddr_reg:x3; val_offset:118662*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118662*0 + 3*386*FLEN/8, x4, x1, x2)

inst_39555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffc000000; valaddr_reg:x3; val_offset:118665*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118665*0 + 3*387*FLEN/8, x4, x1, x2)

inst_39556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffe000000; valaddr_reg:x3; val_offset:118668*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118668*0 + 3*388*FLEN/8, x4, x1, x2)

inst_39557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffff000000; valaddr_reg:x3; val_offset:118671*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118671*0 + 3*389*FLEN/8, x4, x1, x2)

inst_39558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffff800000; valaddr_reg:x3; val_offset:118674*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118674*0 + 3*390*FLEN/8, x4, x1, x2)

inst_39559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffc00000; valaddr_reg:x3; val_offset:118677*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118677*0 + 3*391*FLEN/8, x4, x1, x2)

inst_39560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffe00000; valaddr_reg:x3; val_offset:118680*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118680*0 + 3*392*FLEN/8, x4, x1, x2)

inst_39561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffff00000; valaddr_reg:x3; val_offset:118683*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118683*0 + 3*393*FLEN/8, x4, x1, x2)

inst_39562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffff80000; valaddr_reg:x3; val_offset:118686*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118686*0 + 3*394*FLEN/8, x4, x1, x2)

inst_39563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffc0000; valaddr_reg:x3; val_offset:118689*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118689*0 + 3*395*FLEN/8, x4, x1, x2)

inst_39564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffe0000; valaddr_reg:x3; val_offset:118692*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118692*0 + 3*396*FLEN/8, x4, x1, x2)

inst_39565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffff0000; valaddr_reg:x3; val_offset:118695*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118695*0 + 3*397*FLEN/8, x4, x1, x2)

inst_39566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffff8000; valaddr_reg:x3; val_offset:118698*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118698*0 + 3*398*FLEN/8, x4, x1, x2)

inst_39567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffffc000; valaddr_reg:x3; val_offset:118701*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118701*0 + 3*399*FLEN/8, x4, x1, x2)

inst_39568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffffe000; valaddr_reg:x3; val_offset:118704*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118704*0 + 3*400*FLEN/8, x4, x1, x2)

inst_39569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffff000; valaddr_reg:x3; val_offset:118707*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118707*0 + 3*401*FLEN/8, x4, x1, x2)

inst_39570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffff800; valaddr_reg:x3; val_offset:118710*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118710*0 + 3*402*FLEN/8, x4, x1, x2)

inst_39571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffffc00; valaddr_reg:x3; val_offset:118713*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118713*0 + 3*403*FLEN/8, x4, x1, x2)

inst_39572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffffe00; valaddr_reg:x3; val_offset:118716*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118716*0 + 3*404*FLEN/8, x4, x1, x2)

inst_39573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffffff00; valaddr_reg:x3; val_offset:118719*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118719*0 + 3*405*FLEN/8, x4, x1, x2)

inst_39574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffffff80; valaddr_reg:x3; val_offset:118722*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118722*0 + 3*406*FLEN/8, x4, x1, x2)

inst_39575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffffffc0; valaddr_reg:x3; val_offset:118725*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118725*0 + 3*407*FLEN/8, x4, x1, x2)

inst_39576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffffffe0; valaddr_reg:x3; val_offset:118728*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118728*0 + 3*408*FLEN/8, x4, x1, x2)

inst_39577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffffff0; valaddr_reg:x3; val_offset:118731*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118731*0 + 3*409*FLEN/8, x4, x1, x2)

inst_39578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffffff8; valaddr_reg:x3; val_offset:118734*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118734*0 + 3*410*FLEN/8, x4, x1, x2)

inst_39579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffffffc; valaddr_reg:x3; val_offset:118737*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118737*0 + 3*411*FLEN/8, x4, x1, x2)

inst_39580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1fffffffffffffe; valaddr_reg:x3; val_offset:118740*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118740*0 + 3*412*FLEN/8, x4, x1, x2)

inst_39581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8c89365a80c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98c89365a80c81; op2val:0x0;
op3val:0x1ffffffffffffff; valaddr_reg:x3; val_offset:118743*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118743*0 + 3*413*FLEN/8, x4, x1, x2)

inst_39582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000000000000; valaddr_reg:x3; val_offset:118746*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118746*0 + 3*414*FLEN/8, x4, x1, x2)

inst_39583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000000000001; valaddr_reg:x3; val_offset:118749*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118749*0 + 3*415*FLEN/8, x4, x1, x2)

inst_39584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000000000003; valaddr_reg:x3; val_offset:118752*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118752*0 + 3*416*FLEN/8, x4, x1, x2)

inst_39585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000000000007; valaddr_reg:x3; val_offset:118755*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118755*0 + 3*417*FLEN/8, x4, x1, x2)

inst_39586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000000000000f; valaddr_reg:x3; val_offset:118758*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118758*0 + 3*418*FLEN/8, x4, x1, x2)

inst_39587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000000000001f; valaddr_reg:x3; val_offset:118761*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118761*0 + 3*419*FLEN/8, x4, x1, x2)

inst_39588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000000000003f; valaddr_reg:x3; val_offset:118764*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118764*0 + 3*420*FLEN/8, x4, x1, x2)

inst_39589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000000000007f; valaddr_reg:x3; val_offset:118767*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118767*0 + 3*421*FLEN/8, x4, x1, x2)

inst_39590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200000000000ff; valaddr_reg:x3; val_offset:118770*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118770*0 + 3*422*FLEN/8, x4, x1, x2)

inst_39591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200000000001ff; valaddr_reg:x3; val_offset:118773*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118773*0 + 3*423*FLEN/8, x4, x1, x2)

inst_39592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200000000003ff; valaddr_reg:x3; val_offset:118776*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118776*0 + 3*424*FLEN/8, x4, x1, x2)

inst_39593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200000000007ff; valaddr_reg:x3; val_offset:118779*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118779*0 + 3*425*FLEN/8, x4, x1, x2)

inst_39594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000000000fff; valaddr_reg:x3; val_offset:118782*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118782*0 + 3*426*FLEN/8, x4, x1, x2)

inst_39595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000000001fff; valaddr_reg:x3; val_offset:118785*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118785*0 + 3*427*FLEN/8, x4, x1, x2)

inst_39596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000000003fff; valaddr_reg:x3; val_offset:118788*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118788*0 + 3*428*FLEN/8, x4, x1, x2)

inst_39597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000000007fff; valaddr_reg:x3; val_offset:118791*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118791*0 + 3*429*FLEN/8, x4, x1, x2)

inst_39598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000000000ffff; valaddr_reg:x3; val_offset:118794*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118794*0 + 3*430*FLEN/8, x4, x1, x2)

inst_39599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000000001ffff; valaddr_reg:x3; val_offset:118797*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118797*0 + 3*431*FLEN/8, x4, x1, x2)

inst_39600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000000003ffff; valaddr_reg:x3; val_offset:118800*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118800*0 + 3*432*FLEN/8, x4, x1, x2)

inst_39601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000000007ffff; valaddr_reg:x3; val_offset:118803*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118803*0 + 3*433*FLEN/8, x4, x1, x2)

inst_39602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200000000fffff; valaddr_reg:x3; val_offset:118806*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118806*0 + 3*434*FLEN/8, x4, x1, x2)

inst_39603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200000001fffff; valaddr_reg:x3; val_offset:118809*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118809*0 + 3*435*FLEN/8, x4, x1, x2)

inst_39604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200000003fffff; valaddr_reg:x3; val_offset:118812*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118812*0 + 3*436*FLEN/8, x4, x1, x2)

inst_39605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200000007fffff; valaddr_reg:x3; val_offset:118815*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118815*0 + 3*437*FLEN/8, x4, x1, x2)

inst_39606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000000ffffff; valaddr_reg:x3; val_offset:118818*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118818*0 + 3*438*FLEN/8, x4, x1, x2)

inst_39607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000001ffffff; valaddr_reg:x3; val_offset:118821*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118821*0 + 3*439*FLEN/8, x4, x1, x2)

inst_39608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000003ffffff; valaddr_reg:x3; val_offset:118824*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118824*0 + 3*440*FLEN/8, x4, x1, x2)

inst_39609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000007ffffff; valaddr_reg:x3; val_offset:118827*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118827*0 + 3*441*FLEN/8, x4, x1, x2)

inst_39610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000000fffffff; valaddr_reg:x3; val_offset:118830*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118830*0 + 3*442*FLEN/8, x4, x1, x2)

inst_39611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000001fffffff; valaddr_reg:x3; val_offset:118833*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118833*0 + 3*443*FLEN/8, x4, x1, x2)

inst_39612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000003fffffff; valaddr_reg:x3; val_offset:118836*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118836*0 + 3*444*FLEN/8, x4, x1, x2)

inst_39613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000007fffffff; valaddr_reg:x3; val_offset:118839*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118839*0 + 3*445*FLEN/8, x4, x1, x2)

inst_39614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200000ffffffff; valaddr_reg:x3; val_offset:118842*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118842*0 + 3*446*FLEN/8, x4, x1, x2)

inst_39615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200001ffffffff; valaddr_reg:x3; val_offset:118845*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118845*0 + 3*447*FLEN/8, x4, x1, x2)

inst_39616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200003ffffffff; valaddr_reg:x3; val_offset:118848*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118848*0 + 3*448*FLEN/8, x4, x1, x2)

inst_39617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200007ffffffff; valaddr_reg:x3; val_offset:118851*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118851*0 + 3*449*FLEN/8, x4, x1, x2)

inst_39618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20000fffffffff; valaddr_reg:x3; val_offset:118854*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118854*0 + 3*450*FLEN/8, x4, x1, x2)

inst_39619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20001fffffffff; valaddr_reg:x3; val_offset:118857*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118857*0 + 3*451*FLEN/8, x4, x1, x2)

inst_39620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20003fffffffff; valaddr_reg:x3; val_offset:118860*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118860*0 + 3*452*FLEN/8, x4, x1, x2)

inst_39621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20007fffffffff; valaddr_reg:x3; val_offset:118863*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118863*0 + 3*453*FLEN/8, x4, x1, x2)

inst_39622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2000ffffffffff; valaddr_reg:x3; val_offset:118866*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118866*0 + 3*454*FLEN/8, x4, x1, x2)

inst_39623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2001ffffffffff; valaddr_reg:x3; val_offset:118869*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118869*0 + 3*455*FLEN/8, x4, x1, x2)

inst_39624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2003ffffffffff; valaddr_reg:x3; val_offset:118872*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118872*0 + 3*456*FLEN/8, x4, x1, x2)

inst_39625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2007ffffffffff; valaddr_reg:x3; val_offset:118875*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118875*0 + 3*457*FLEN/8, x4, x1, x2)

inst_39626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf200fffffffffff; valaddr_reg:x3; val_offset:118878*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118878*0 + 3*458*FLEN/8, x4, x1, x2)

inst_39627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf201fffffffffff; valaddr_reg:x3; val_offset:118881*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118881*0 + 3*459*FLEN/8, x4, x1, x2)

inst_39628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf203fffffffffff; valaddr_reg:x3; val_offset:118884*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118884*0 + 3*460*FLEN/8, x4, x1, x2)

inst_39629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf207fffffffffff; valaddr_reg:x3; val_offset:118887*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118887*0 + 3*461*FLEN/8, x4, x1, x2)

inst_39630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf20ffffffffffff; valaddr_reg:x3; val_offset:118890*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118890*0 + 3*462*FLEN/8, x4, x1, x2)

inst_39631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf21ffffffffffff; valaddr_reg:x3; val_offset:118893*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118893*0 + 3*463*FLEN/8, x4, x1, x2)

inst_39632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf23ffffffffffff; valaddr_reg:x3; val_offset:118896*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118896*0 + 3*464*FLEN/8, x4, x1, x2)

inst_39633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf27ffffffffffff; valaddr_reg:x3; val_offset:118899*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118899*0 + 3*465*FLEN/8, x4, x1, x2)

inst_39634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf28000000000000; valaddr_reg:x3; val_offset:118902*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118902*0 + 3*466*FLEN/8, x4, x1, x2)

inst_39635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2c000000000000; valaddr_reg:x3; val_offset:118905*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118905*0 + 3*467*FLEN/8, x4, x1, x2)

inst_39636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2e000000000000; valaddr_reg:x3; val_offset:118908*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118908*0 + 3*468*FLEN/8, x4, x1, x2)

inst_39637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2f000000000000; valaddr_reg:x3; val_offset:118911*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118911*0 + 3*469*FLEN/8, x4, x1, x2)

inst_39638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2f800000000000; valaddr_reg:x3; val_offset:118914*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118914*0 + 3*470*FLEN/8, x4, x1, x2)

inst_39639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fc00000000000; valaddr_reg:x3; val_offset:118917*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118917*0 + 3*471*FLEN/8, x4, x1, x2)

inst_39640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fe00000000000; valaddr_reg:x3; val_offset:118920*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118920*0 + 3*472*FLEN/8, x4, x1, x2)

inst_39641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ff00000000000; valaddr_reg:x3; val_offset:118923*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118923*0 + 3*473*FLEN/8, x4, x1, x2)

inst_39642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ff80000000000; valaddr_reg:x3; val_offset:118926*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118926*0 + 3*474*FLEN/8, x4, x1, x2)

inst_39643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffc0000000000; valaddr_reg:x3; val_offset:118929*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118929*0 + 3*475*FLEN/8, x4, x1, x2)

inst_39644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffe0000000000; valaddr_reg:x3; val_offset:118932*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118932*0 + 3*476*FLEN/8, x4, x1, x2)

inst_39645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fff0000000000; valaddr_reg:x3; val_offset:118935*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118935*0 + 3*477*FLEN/8, x4, x1, x2)

inst_39646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fff8000000000; valaddr_reg:x3; val_offset:118938*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118938*0 + 3*478*FLEN/8, x4, x1, x2)

inst_39647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffc000000000; valaddr_reg:x3; val_offset:118941*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118941*0 + 3*479*FLEN/8, x4, x1, x2)

inst_39648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffe000000000; valaddr_reg:x3; val_offset:118944*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118944*0 + 3*480*FLEN/8, x4, x1, x2)

inst_39649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffff000000000; valaddr_reg:x3; val_offset:118947*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118947*0 + 3*481*FLEN/8, x4, x1, x2)

inst_39650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffff800000000; valaddr_reg:x3; val_offset:118950*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118950*0 + 3*482*FLEN/8, x4, x1, x2)

inst_39651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffc00000000; valaddr_reg:x3; val_offset:118953*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118953*0 + 3*483*FLEN/8, x4, x1, x2)

inst_39652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffe00000000; valaddr_reg:x3; val_offset:118956*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118956*0 + 3*484*FLEN/8, x4, x1, x2)

inst_39653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffff00000000; valaddr_reg:x3; val_offset:118959*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118959*0 + 3*485*FLEN/8, x4, x1, x2)

inst_39654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffff80000000; valaddr_reg:x3; val_offset:118962*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118962*0 + 3*486*FLEN/8, x4, x1, x2)

inst_39655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffc0000000; valaddr_reg:x3; val_offset:118965*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118965*0 + 3*487*FLEN/8, x4, x1, x2)

inst_39656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffe0000000; valaddr_reg:x3; val_offset:118968*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118968*0 + 3*488*FLEN/8, x4, x1, x2)

inst_39657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffff0000000; valaddr_reg:x3; val_offset:118971*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118971*0 + 3*489*FLEN/8, x4, x1, x2)

inst_39658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffff8000000; valaddr_reg:x3; val_offset:118974*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118974*0 + 3*490*FLEN/8, x4, x1, x2)

inst_39659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffc000000; valaddr_reg:x3; val_offset:118977*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118977*0 + 3*491*FLEN/8, x4, x1, x2)

inst_39660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffe000000; valaddr_reg:x3; val_offset:118980*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118980*0 + 3*492*FLEN/8, x4, x1, x2)

inst_39661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffff000000; valaddr_reg:x3; val_offset:118983*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118983*0 + 3*493*FLEN/8, x4, x1, x2)

inst_39662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffff800000; valaddr_reg:x3; val_offset:118986*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118986*0 + 3*494*FLEN/8, x4, x1, x2)

inst_39663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffffc00000; valaddr_reg:x3; val_offset:118989*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118989*0 + 3*495*FLEN/8, x4, x1, x2)

inst_39664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffffe00000; valaddr_reg:x3; val_offset:118992*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118992*0 + 3*496*FLEN/8, x4, x1, x2)

inst_39665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffff00000; valaddr_reg:x3; val_offset:118995*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118995*0 + 3*497*FLEN/8, x4, x1, x2)

inst_39666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffff80000; valaddr_reg:x3; val_offset:118998*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 118998*0 + 3*498*FLEN/8, x4, x1, x2)

inst_39667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffffc0000; valaddr_reg:x3; val_offset:119001*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119001*0 + 3*499*FLEN/8, x4, x1, x2)

inst_39668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffffe0000; valaddr_reg:x3; val_offset:119004*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119004*0 + 3*500*FLEN/8, x4, x1, x2)

inst_39669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffffff0000; valaddr_reg:x3; val_offset:119007*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119007*0 + 3*501*FLEN/8, x4, x1, x2)

inst_39670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffffff8000; valaddr_reg:x3; val_offset:119010*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119010*0 + 3*502*FLEN/8, x4, x1, x2)

inst_39671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffffffc000; valaddr_reg:x3; val_offset:119013*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119013*0 + 3*503*FLEN/8, x4, x1, x2)

inst_39672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffffffe000; valaddr_reg:x3; val_offset:119016*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119016*0 + 3*504*FLEN/8, x4, x1, x2)

inst_39673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffffff000; valaddr_reg:x3; val_offset:119019*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119019*0 + 3*505*FLEN/8, x4, x1, x2)

inst_39674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffffff800; valaddr_reg:x3; val_offset:119022*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119022*0 + 3*506*FLEN/8, x4, x1, x2)

inst_39675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffffffc00; valaddr_reg:x3; val_offset:119025*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119025*0 + 3*507*FLEN/8, x4, x1, x2)

inst_39676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffffffe00; valaddr_reg:x3; val_offset:119028*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119028*0 + 3*508*FLEN/8, x4, x1, x2)

inst_39677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffffffff00; valaddr_reg:x3; val_offset:119031*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119031*0 + 3*509*FLEN/8, x4, x1, x2)

inst_39678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffffffff80; valaddr_reg:x3; val_offset:119034*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119034*0 + 3*510*FLEN/8, x4, x1, x2)

inst_39679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffffffffc0; valaddr_reg:x3; val_offset:119037*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119037*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_39680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffffffffe0; valaddr_reg:x3; val_offset:119040*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119040*0 + 3*512*FLEN/8, x4, x1, x2)

inst_39681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffffffff0; valaddr_reg:x3; val_offset:119043*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119043*0 + 3*513*FLEN/8, x4, x1, x2)

inst_39682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffffffff8; valaddr_reg:x3; val_offset:119046*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119046*0 + 3*514*FLEN/8, x4, x1, x2)

inst_39683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffffffffc; valaddr_reg:x3; val_offset:119049*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119049*0 + 3*515*FLEN/8, x4, x1, x2)

inst_39684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2ffffffffffffe; valaddr_reg:x3; val_offset:119052*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119052*0 + 3*516*FLEN/8, x4, x1, x2)

inst_39685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf2fffffffffffff; valaddr_reg:x3; val_offset:119055*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119055*0 + 3*517*FLEN/8, x4, x1, x2)

inst_39686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:119058*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119058*0 + 3*518*FLEN/8, x4, x1, x2)

inst_39687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:119061*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119061*0 + 3*519*FLEN/8, x4, x1, x2)

inst_39688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:119064*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119064*0 + 3*520*FLEN/8, x4, x1, x2)

inst_39689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:119067*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119067*0 + 3*521*FLEN/8, x4, x1, x2)

inst_39690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:119070*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119070*0 + 3*522*FLEN/8, x4, x1, x2)

inst_39691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:119073*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119073*0 + 3*523*FLEN/8, x4, x1, x2)

inst_39692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:119076*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119076*0 + 3*524*FLEN/8, x4, x1, x2)

inst_39693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:119079*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119079*0 + 3*525*FLEN/8, x4, x1, x2)

inst_39694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:119082*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119082*0 + 3*526*FLEN/8, x4, x1, x2)

inst_39695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:119085*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119085*0 + 3*527*FLEN/8, x4, x1, x2)

inst_39696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:119088*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119088*0 + 3*528*FLEN/8, x4, x1, x2)

inst_39697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:119091*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119091*0 + 3*529*FLEN/8, x4, x1, x2)

inst_39698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:119094*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119094*0 + 3*530*FLEN/8, x4, x1, x2)

inst_39699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:119097*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119097*0 + 3*531*FLEN/8, x4, x1, x2)

inst_39700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:119100*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119100*0 + 3*532*FLEN/8, x4, x1, x2)

inst_39701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:119103*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119103*0 + 3*533*FLEN/8, x4, x1, x2)

inst_39702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:119106*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119106*0 + 3*534*FLEN/8, x4, x1, x2)

inst_39703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:119109*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119109*0 + 3*535*FLEN/8, x4, x1, x2)

inst_39704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:119112*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119112*0 + 3*536*FLEN/8, x4, x1, x2)

inst_39705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:119115*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119115*0 + 3*537*FLEN/8, x4, x1, x2)

inst_39706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:119118*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119118*0 + 3*538*FLEN/8, x4, x1, x2)

inst_39707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4742ab67e7cd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9908348cc50075; op2val:0x9fd4742ab67e7cd1;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:119121*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119121*0 + 3*539*FLEN/8, x4, x1, x2)

inst_39708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:119124*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119124*0 + 3*540*FLEN/8, x4, x1, x2)

inst_39709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:119127*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119127*0 + 3*541*FLEN/8, x4, x1, x2)

inst_39710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:119130*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119130*0 + 3*542*FLEN/8, x4, x1, x2)

inst_39711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:119133*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119133*0 + 3*543*FLEN/8, x4, x1, x2)

inst_39712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:119136*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119136*0 + 3*544*FLEN/8, x4, x1, x2)

inst_39713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:119139*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119139*0 + 3*545*FLEN/8, x4, x1, x2)

inst_39714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:119142*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119142*0 + 3*546*FLEN/8, x4, x1, x2)

inst_39715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:119145*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119145*0 + 3*547*FLEN/8, x4, x1, x2)

inst_39716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:119148*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119148*0 + 3*548*FLEN/8, x4, x1, x2)

inst_39717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:119151*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119151*0 + 3*549*FLEN/8, x4, x1, x2)

inst_39718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:119154*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119154*0 + 3*550*FLEN/8, x4, x1, x2)

inst_39719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:119157*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119157*0 + 3*551*FLEN/8, x4, x1, x2)

inst_39720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:119160*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119160*0 + 3*552*FLEN/8, x4, x1, x2)

inst_39721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:119163*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119163*0 + 3*553*FLEN/8, x4, x1, x2)

inst_39722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:119166*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119166*0 + 3*554*FLEN/8, x4, x1, x2)

inst_39723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:119169*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119169*0 + 3*555*FLEN/8, x4, x1, x2)

inst_39724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:119172*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119172*0 + 3*556*FLEN/8, x4, x1, x2)

inst_39725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:119175*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119175*0 + 3*557*FLEN/8, x4, x1, x2)

inst_39726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:119178*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119178*0 + 3*558*FLEN/8, x4, x1, x2)

inst_39727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:119181*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119181*0 + 3*559*FLEN/8, x4, x1, x2)

inst_39728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:119184*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119184*0 + 3*560*FLEN/8, x4, x1, x2)

inst_39729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:119187*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119187*0 + 3*561*FLEN/8, x4, x1, x2)

inst_39730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000000000000; valaddr_reg:x3; val_offset:119190*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119190*0 + 3*562*FLEN/8, x4, x1, x2)

inst_39731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000000000001; valaddr_reg:x3; val_offset:119193*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119193*0 + 3*563*FLEN/8, x4, x1, x2)

inst_39732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000000000003; valaddr_reg:x3; val_offset:119196*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119196*0 + 3*564*FLEN/8, x4, x1, x2)

inst_39733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000000000007; valaddr_reg:x3; val_offset:119199*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119199*0 + 3*565*FLEN/8, x4, x1, x2)

inst_39734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000000000000f; valaddr_reg:x3; val_offset:119202*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119202*0 + 3*566*FLEN/8, x4, x1, x2)

inst_39735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000000000001f; valaddr_reg:x3; val_offset:119205*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119205*0 + 3*567*FLEN/8, x4, x1, x2)

inst_39736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000000000003f; valaddr_reg:x3; val_offset:119208*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119208*0 + 3*568*FLEN/8, x4, x1, x2)

inst_39737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000000000007f; valaddr_reg:x3; val_offset:119211*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119211*0 + 3*569*FLEN/8, x4, x1, x2)

inst_39738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00000000000ff; valaddr_reg:x3; val_offset:119214*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119214*0 + 3*570*FLEN/8, x4, x1, x2)

inst_39739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00000000001ff; valaddr_reg:x3; val_offset:119217*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119217*0 + 3*571*FLEN/8, x4, x1, x2)

inst_39740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00000000003ff; valaddr_reg:x3; val_offset:119220*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119220*0 + 3*572*FLEN/8, x4, x1, x2)

inst_39741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00000000007ff; valaddr_reg:x3; val_offset:119223*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119223*0 + 3*573*FLEN/8, x4, x1, x2)

inst_39742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000000000fff; valaddr_reg:x3; val_offset:119226*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119226*0 + 3*574*FLEN/8, x4, x1, x2)

inst_39743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000000001fff; valaddr_reg:x3; val_offset:119229*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119229*0 + 3*575*FLEN/8, x4, x1, x2)

inst_39744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000000003fff; valaddr_reg:x3; val_offset:119232*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119232*0 + 3*576*FLEN/8, x4, x1, x2)

inst_39745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000000007fff; valaddr_reg:x3; val_offset:119235*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119235*0 + 3*577*FLEN/8, x4, x1, x2)

inst_39746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000000000ffff; valaddr_reg:x3; val_offset:119238*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119238*0 + 3*578*FLEN/8, x4, x1, x2)

inst_39747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000000001ffff; valaddr_reg:x3; val_offset:119241*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119241*0 + 3*579*FLEN/8, x4, x1, x2)

inst_39748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000000003ffff; valaddr_reg:x3; val_offset:119244*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119244*0 + 3*580*FLEN/8, x4, x1, x2)

inst_39749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000000007ffff; valaddr_reg:x3; val_offset:119247*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119247*0 + 3*581*FLEN/8, x4, x1, x2)

inst_39750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00000000fffff; valaddr_reg:x3; val_offset:119250*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119250*0 + 3*582*FLEN/8, x4, x1, x2)

inst_39751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00000001fffff; valaddr_reg:x3; val_offset:119253*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119253*0 + 3*583*FLEN/8, x4, x1, x2)

inst_39752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00000003fffff; valaddr_reg:x3; val_offset:119256*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119256*0 + 3*584*FLEN/8, x4, x1, x2)

inst_39753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00000007fffff; valaddr_reg:x3; val_offset:119259*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119259*0 + 3*585*FLEN/8, x4, x1, x2)

inst_39754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000000ffffff; valaddr_reg:x3; val_offset:119262*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119262*0 + 3*586*FLEN/8, x4, x1, x2)

inst_39755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000001ffffff; valaddr_reg:x3; val_offset:119265*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119265*0 + 3*587*FLEN/8, x4, x1, x2)

inst_39756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000003ffffff; valaddr_reg:x3; val_offset:119268*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119268*0 + 3*588*FLEN/8, x4, x1, x2)

inst_39757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000007ffffff; valaddr_reg:x3; val_offset:119271*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119271*0 + 3*589*FLEN/8, x4, x1, x2)

inst_39758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000000fffffff; valaddr_reg:x3; val_offset:119274*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119274*0 + 3*590*FLEN/8, x4, x1, x2)

inst_39759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000001fffffff; valaddr_reg:x3; val_offset:119277*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119277*0 + 3*591*FLEN/8, x4, x1, x2)

inst_39760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000003fffffff; valaddr_reg:x3; val_offset:119280*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119280*0 + 3*592*FLEN/8, x4, x1, x2)

inst_39761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000007fffffff; valaddr_reg:x3; val_offset:119283*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119283*0 + 3*593*FLEN/8, x4, x1, x2)

inst_39762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00000ffffffff; valaddr_reg:x3; val_offset:119286*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119286*0 + 3*594*FLEN/8, x4, x1, x2)

inst_39763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00001ffffffff; valaddr_reg:x3; val_offset:119289*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119289*0 + 3*595*FLEN/8, x4, x1, x2)

inst_39764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00003ffffffff; valaddr_reg:x3; val_offset:119292*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119292*0 + 3*596*FLEN/8, x4, x1, x2)

inst_39765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00007ffffffff; valaddr_reg:x3; val_offset:119295*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119295*0 + 3*597*FLEN/8, x4, x1, x2)

inst_39766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0000fffffffff; valaddr_reg:x3; val_offset:119298*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119298*0 + 3*598*FLEN/8, x4, x1, x2)

inst_39767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0001fffffffff; valaddr_reg:x3; val_offset:119301*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119301*0 + 3*599*FLEN/8, x4, x1, x2)

inst_39768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0003fffffffff; valaddr_reg:x3; val_offset:119304*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119304*0 + 3*600*FLEN/8, x4, x1, x2)

inst_39769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0007fffffffff; valaddr_reg:x3; val_offset:119307*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119307*0 + 3*601*FLEN/8, x4, x1, x2)

inst_39770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a000ffffffffff; valaddr_reg:x3; val_offset:119310*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119310*0 + 3*602*FLEN/8, x4, x1, x2)

inst_39771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a001ffffffffff; valaddr_reg:x3; val_offset:119313*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119313*0 + 3*603*FLEN/8, x4, x1, x2)

inst_39772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a003ffffffffff; valaddr_reg:x3; val_offset:119316*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119316*0 + 3*604*FLEN/8, x4, x1, x2)

inst_39773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a007ffffffffff; valaddr_reg:x3; val_offset:119319*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119319*0 + 3*605*FLEN/8, x4, x1, x2)

inst_39774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a00fffffffffff; valaddr_reg:x3; val_offset:119322*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119322*0 + 3*606*FLEN/8, x4, x1, x2)

inst_39775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a01fffffffffff; valaddr_reg:x3; val_offset:119325*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119325*0 + 3*607*FLEN/8, x4, x1, x2)

inst_39776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a03fffffffffff; valaddr_reg:x3; val_offset:119328*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119328*0 + 3*608*FLEN/8, x4, x1, x2)

inst_39777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a07fffffffffff; valaddr_reg:x3; val_offset:119331*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119331*0 + 3*609*FLEN/8, x4, x1, x2)

inst_39778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a0ffffffffffff; valaddr_reg:x3; val_offset:119334*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119334*0 + 3*610*FLEN/8, x4, x1, x2)

inst_39779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a1ffffffffffff; valaddr_reg:x3; val_offset:119337*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119337*0 + 3*611*FLEN/8, x4, x1, x2)

inst_39780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a3ffffffffffff; valaddr_reg:x3; val_offset:119340*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119340*0 + 3*612*FLEN/8, x4, x1, x2)

inst_39781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a7ffffffffffff; valaddr_reg:x3; val_offset:119343*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119343*0 + 3*613*FLEN/8, x4, x1, x2)

inst_39782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2a8000000000000; valaddr_reg:x3; val_offset:119346*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119346*0 + 3*614*FLEN/8, x4, x1, x2)

inst_39783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2ac000000000000; valaddr_reg:x3; val_offset:119349*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119349*0 + 3*615*FLEN/8, x4, x1, x2)

inst_39784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2ae000000000000; valaddr_reg:x3; val_offset:119352*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119352*0 + 3*616*FLEN/8, x4, x1, x2)

inst_39785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2af000000000000; valaddr_reg:x3; val_offset:119355*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119355*0 + 3*617*FLEN/8, x4, x1, x2)

inst_39786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2af800000000000; valaddr_reg:x3; val_offset:119358*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119358*0 + 3*618*FLEN/8, x4, x1, x2)

inst_39787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afc00000000000; valaddr_reg:x3; val_offset:119361*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119361*0 + 3*619*FLEN/8, x4, x1, x2)

inst_39788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afe00000000000; valaddr_reg:x3; val_offset:119364*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119364*0 + 3*620*FLEN/8, x4, x1, x2)

inst_39789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2aff00000000000; valaddr_reg:x3; val_offset:119367*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119367*0 + 3*621*FLEN/8, x4, x1, x2)

inst_39790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2aff80000000000; valaddr_reg:x3; val_offset:119370*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119370*0 + 3*622*FLEN/8, x4, x1, x2)

inst_39791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affc0000000000; valaddr_reg:x3; val_offset:119373*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119373*0 + 3*623*FLEN/8, x4, x1, x2)

inst_39792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affe0000000000; valaddr_reg:x3; val_offset:119376*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119376*0 + 3*624*FLEN/8, x4, x1, x2)

inst_39793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afff0000000000; valaddr_reg:x3; val_offset:119379*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119379*0 + 3*625*FLEN/8, x4, x1, x2)

inst_39794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afff8000000000; valaddr_reg:x3; val_offset:119382*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119382*0 + 3*626*FLEN/8, x4, x1, x2)

inst_39795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffc000000000; valaddr_reg:x3; val_offset:119385*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119385*0 + 3*627*FLEN/8, x4, x1, x2)

inst_39796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffe000000000; valaddr_reg:x3; val_offset:119388*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119388*0 + 3*628*FLEN/8, x4, x1, x2)

inst_39797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affff000000000; valaddr_reg:x3; val_offset:119391*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119391*0 + 3*629*FLEN/8, x4, x1, x2)

inst_39798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affff800000000; valaddr_reg:x3; val_offset:119394*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119394*0 + 3*630*FLEN/8, x4, x1, x2)

inst_39799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffc00000000; valaddr_reg:x3; val_offset:119397*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119397*0 + 3*631*FLEN/8, x4, x1, x2)

inst_39800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffe00000000; valaddr_reg:x3; val_offset:119400*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119400*0 + 3*632*FLEN/8, x4, x1, x2)

inst_39801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffff00000000; valaddr_reg:x3; val_offset:119403*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119403*0 + 3*633*FLEN/8, x4, x1, x2)

inst_39802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffff80000000; valaddr_reg:x3; val_offset:119406*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119406*0 + 3*634*FLEN/8, x4, x1, x2)

inst_39803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffc0000000; valaddr_reg:x3; val_offset:119409*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119409*0 + 3*635*FLEN/8, x4, x1, x2)

inst_39804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffe0000000; valaddr_reg:x3; val_offset:119412*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119412*0 + 3*636*FLEN/8, x4, x1, x2)

inst_39805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffff0000000; valaddr_reg:x3; val_offset:119415*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119415*0 + 3*637*FLEN/8, x4, x1, x2)

inst_39806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffff8000000; valaddr_reg:x3; val_offset:119418*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119418*0 + 3*638*FLEN/8, x4, x1, x2)

inst_39807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffc000000; valaddr_reg:x3; val_offset:119421*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119421*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_39808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffe000000; valaddr_reg:x3; val_offset:119424*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119424*0 + 3*640*FLEN/8, x4, x1, x2)

inst_39809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffff000000; valaddr_reg:x3; val_offset:119427*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119427*0 + 3*641*FLEN/8, x4, x1, x2)

inst_39810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffff800000; valaddr_reg:x3; val_offset:119430*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119430*0 + 3*642*FLEN/8, x4, x1, x2)

inst_39811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffffc00000; valaddr_reg:x3; val_offset:119433*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119433*0 + 3*643*FLEN/8, x4, x1, x2)

inst_39812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffffe00000; valaddr_reg:x3; val_offset:119436*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119436*0 + 3*644*FLEN/8, x4, x1, x2)

inst_39813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffff00000; valaddr_reg:x3; val_offset:119439*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119439*0 + 3*645*FLEN/8, x4, x1, x2)

inst_39814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffff80000; valaddr_reg:x3; val_offset:119442*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119442*0 + 3*646*FLEN/8, x4, x1, x2)

inst_39815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffffc0000; valaddr_reg:x3; val_offset:119445*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119445*0 + 3*647*FLEN/8, x4, x1, x2)

inst_39816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffffe0000; valaddr_reg:x3; val_offset:119448*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119448*0 + 3*648*FLEN/8, x4, x1, x2)

inst_39817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffffff0000; valaddr_reg:x3; val_offset:119451*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119451*0 + 3*649*FLEN/8, x4, x1, x2)

inst_39818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffffff8000; valaddr_reg:x3; val_offset:119454*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119454*0 + 3*650*FLEN/8, x4, x1, x2)

inst_39819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffffffc000; valaddr_reg:x3; val_offset:119457*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119457*0 + 3*651*FLEN/8, x4, x1, x2)

inst_39820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffffffe000; valaddr_reg:x3; val_offset:119460*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119460*0 + 3*652*FLEN/8, x4, x1, x2)

inst_39821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffffff000; valaddr_reg:x3; val_offset:119463*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119463*0 + 3*653*FLEN/8, x4, x1, x2)

inst_39822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffffff800; valaddr_reg:x3; val_offset:119466*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119466*0 + 3*654*FLEN/8, x4, x1, x2)

inst_39823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffffffc00; valaddr_reg:x3; val_offset:119469*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119469*0 + 3*655*FLEN/8, x4, x1, x2)

inst_39824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffffffe00; valaddr_reg:x3; val_offset:119472*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119472*0 + 3*656*FLEN/8, x4, x1, x2)

inst_39825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffffffff00; valaddr_reg:x3; val_offset:119475*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119475*0 + 3*657*FLEN/8, x4, x1, x2)

inst_39826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffffffff80; valaddr_reg:x3; val_offset:119478*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119478*0 + 3*658*FLEN/8, x4, x1, x2)

inst_39827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffffffffc0; valaddr_reg:x3; val_offset:119481*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119481*0 + 3*659*FLEN/8, x4, x1, x2)

inst_39828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffffffffe0; valaddr_reg:x3; val_offset:119484*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119484*0 + 3*660*FLEN/8, x4, x1, x2)

inst_39829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffffffff0; valaddr_reg:x3; val_offset:119487*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119487*0 + 3*661*FLEN/8, x4, x1, x2)

inst_39830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffffffff8; valaddr_reg:x3; val_offset:119490*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119490*0 + 3*662*FLEN/8, x4, x1, x2)

inst_39831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffffffffc; valaddr_reg:x3; val_offset:119493*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119493*0 + 3*663*FLEN/8, x4, x1, x2)

inst_39832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2affffffffffffe; valaddr_reg:x3; val_offset:119496*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119496*0 + 3*664*FLEN/8, x4, x1, x2)

inst_39833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90de55ca36537 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990de55ca36537; op2val:0x0;
op3val:0x2afffffffffffff; valaddr_reg:x3; val_offset:119499*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119499*0 + 3*665*FLEN/8, x4, x1, x2)

inst_39834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000000000000; valaddr_reg:x3; val_offset:119502*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119502*0 + 3*666*FLEN/8, x4, x1, x2)

inst_39835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000000000001; valaddr_reg:x3; val_offset:119505*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119505*0 + 3*667*FLEN/8, x4, x1, x2)

inst_39836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000000000003; valaddr_reg:x3; val_offset:119508*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119508*0 + 3*668*FLEN/8, x4, x1, x2)

inst_39837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000000000007; valaddr_reg:x3; val_offset:119511*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119511*0 + 3*669*FLEN/8, x4, x1, x2)

inst_39838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000000000000f; valaddr_reg:x3; val_offset:119514*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119514*0 + 3*670*FLEN/8, x4, x1, x2)

inst_39839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000000000001f; valaddr_reg:x3; val_offset:119517*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119517*0 + 3*671*FLEN/8, x4, x1, x2)

inst_39840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000000000003f; valaddr_reg:x3; val_offset:119520*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119520*0 + 3*672*FLEN/8, x4, x1, x2)

inst_39841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000000000007f; valaddr_reg:x3; val_offset:119523*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119523*0 + 3*673*FLEN/8, x4, x1, x2)

inst_39842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400000000000ff; valaddr_reg:x3; val_offset:119526*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119526*0 + 3*674*FLEN/8, x4, x1, x2)

inst_39843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400000000001ff; valaddr_reg:x3; val_offset:119529*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119529*0 + 3*675*FLEN/8, x4, x1, x2)

inst_39844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400000000003ff; valaddr_reg:x3; val_offset:119532*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119532*0 + 3*676*FLEN/8, x4, x1, x2)

inst_39845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400000000007ff; valaddr_reg:x3; val_offset:119535*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119535*0 + 3*677*FLEN/8, x4, x1, x2)

inst_39846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000000000fff; valaddr_reg:x3; val_offset:119538*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119538*0 + 3*678*FLEN/8, x4, x1, x2)

inst_39847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000000001fff; valaddr_reg:x3; val_offset:119541*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119541*0 + 3*679*FLEN/8, x4, x1, x2)

inst_39848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000000003fff; valaddr_reg:x3; val_offset:119544*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119544*0 + 3*680*FLEN/8, x4, x1, x2)

inst_39849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000000007fff; valaddr_reg:x3; val_offset:119547*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119547*0 + 3*681*FLEN/8, x4, x1, x2)

inst_39850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000000000ffff; valaddr_reg:x3; val_offset:119550*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119550*0 + 3*682*FLEN/8, x4, x1, x2)

inst_39851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000000001ffff; valaddr_reg:x3; val_offset:119553*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119553*0 + 3*683*FLEN/8, x4, x1, x2)

inst_39852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000000003ffff; valaddr_reg:x3; val_offset:119556*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119556*0 + 3*684*FLEN/8, x4, x1, x2)

inst_39853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000000007ffff; valaddr_reg:x3; val_offset:119559*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119559*0 + 3*685*FLEN/8, x4, x1, x2)

inst_39854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400000000fffff; valaddr_reg:x3; val_offset:119562*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119562*0 + 3*686*FLEN/8, x4, x1, x2)

inst_39855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400000001fffff; valaddr_reg:x3; val_offset:119565*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119565*0 + 3*687*FLEN/8, x4, x1, x2)

inst_39856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400000003fffff; valaddr_reg:x3; val_offset:119568*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119568*0 + 3*688*FLEN/8, x4, x1, x2)

inst_39857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400000007fffff; valaddr_reg:x3; val_offset:119571*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119571*0 + 3*689*FLEN/8, x4, x1, x2)

inst_39858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000000ffffff; valaddr_reg:x3; val_offset:119574*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119574*0 + 3*690*FLEN/8, x4, x1, x2)

inst_39859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000001ffffff; valaddr_reg:x3; val_offset:119577*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119577*0 + 3*691*FLEN/8, x4, x1, x2)

inst_39860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000003ffffff; valaddr_reg:x3; val_offset:119580*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119580*0 + 3*692*FLEN/8, x4, x1, x2)

inst_39861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000007ffffff; valaddr_reg:x3; val_offset:119583*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119583*0 + 3*693*FLEN/8, x4, x1, x2)

inst_39862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000000fffffff; valaddr_reg:x3; val_offset:119586*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119586*0 + 3*694*FLEN/8, x4, x1, x2)

inst_39863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000001fffffff; valaddr_reg:x3; val_offset:119589*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119589*0 + 3*695*FLEN/8, x4, x1, x2)

inst_39864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000003fffffff; valaddr_reg:x3; val_offset:119592*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119592*0 + 3*696*FLEN/8, x4, x1, x2)

inst_39865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000007fffffff; valaddr_reg:x3; val_offset:119595*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119595*0 + 3*697*FLEN/8, x4, x1, x2)

inst_39866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400000ffffffff; valaddr_reg:x3; val_offset:119598*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119598*0 + 3*698*FLEN/8, x4, x1, x2)

inst_39867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400001ffffffff; valaddr_reg:x3; val_offset:119601*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119601*0 + 3*699*FLEN/8, x4, x1, x2)

inst_39868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400003ffffffff; valaddr_reg:x3; val_offset:119604*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119604*0 + 3*700*FLEN/8, x4, x1, x2)

inst_39869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400007ffffffff; valaddr_reg:x3; val_offset:119607*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119607*0 + 3*701*FLEN/8, x4, x1, x2)

inst_39870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40000fffffffff; valaddr_reg:x3; val_offset:119610*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119610*0 + 3*702*FLEN/8, x4, x1, x2)

inst_39871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40001fffffffff; valaddr_reg:x3; val_offset:119613*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119613*0 + 3*703*FLEN/8, x4, x1, x2)

inst_39872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40003fffffffff; valaddr_reg:x3; val_offset:119616*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119616*0 + 3*704*FLEN/8, x4, x1, x2)

inst_39873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40007fffffffff; valaddr_reg:x3; val_offset:119619*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119619*0 + 3*705*FLEN/8, x4, x1, x2)

inst_39874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4000ffffffffff; valaddr_reg:x3; val_offset:119622*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119622*0 + 3*706*FLEN/8, x4, x1, x2)

inst_39875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4001ffffffffff; valaddr_reg:x3; val_offset:119625*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119625*0 + 3*707*FLEN/8, x4, x1, x2)

inst_39876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4003ffffffffff; valaddr_reg:x3; val_offset:119628*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119628*0 + 3*708*FLEN/8, x4, x1, x2)

inst_39877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4007ffffffffff; valaddr_reg:x3; val_offset:119631*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119631*0 + 3*709*FLEN/8, x4, x1, x2)

inst_39878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d400fffffffffff; valaddr_reg:x3; val_offset:119634*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119634*0 + 3*710*FLEN/8, x4, x1, x2)

inst_39879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d401fffffffffff; valaddr_reg:x3; val_offset:119637*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119637*0 + 3*711*FLEN/8, x4, x1, x2)

inst_39880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d403fffffffffff; valaddr_reg:x3; val_offset:119640*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119640*0 + 3*712*FLEN/8, x4, x1, x2)

inst_39881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d407fffffffffff; valaddr_reg:x3; val_offset:119643*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119643*0 + 3*713*FLEN/8, x4, x1, x2)

inst_39882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d40ffffffffffff; valaddr_reg:x3; val_offset:119646*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119646*0 + 3*714*FLEN/8, x4, x1, x2)

inst_39883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d41ffffffffffff; valaddr_reg:x3; val_offset:119649*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119649*0 + 3*715*FLEN/8, x4, x1, x2)

inst_39884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d43ffffffffffff; valaddr_reg:x3; val_offset:119652*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119652*0 + 3*716*FLEN/8, x4, x1, x2)

inst_39885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d47ffffffffffff; valaddr_reg:x3; val_offset:119655*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119655*0 + 3*717*FLEN/8, x4, x1, x2)

inst_39886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d48000000000000; valaddr_reg:x3; val_offset:119658*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119658*0 + 3*718*FLEN/8, x4, x1, x2)

inst_39887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4c000000000000; valaddr_reg:x3; val_offset:119661*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119661*0 + 3*719*FLEN/8, x4, x1, x2)

inst_39888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4e000000000000; valaddr_reg:x3; val_offset:119664*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119664*0 + 3*720*FLEN/8, x4, x1, x2)

inst_39889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4f000000000000; valaddr_reg:x3; val_offset:119667*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119667*0 + 3*721*FLEN/8, x4, x1, x2)

inst_39890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4f800000000000; valaddr_reg:x3; val_offset:119670*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119670*0 + 3*722*FLEN/8, x4, x1, x2)

inst_39891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fc00000000000; valaddr_reg:x3; val_offset:119673*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119673*0 + 3*723*FLEN/8, x4, x1, x2)

inst_39892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fe00000000000; valaddr_reg:x3; val_offset:119676*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119676*0 + 3*724*FLEN/8, x4, x1, x2)

inst_39893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ff00000000000; valaddr_reg:x3; val_offset:119679*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119679*0 + 3*725*FLEN/8, x4, x1, x2)

inst_39894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ff80000000000; valaddr_reg:x3; val_offset:119682*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119682*0 + 3*726*FLEN/8, x4, x1, x2)

inst_39895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffc0000000000; valaddr_reg:x3; val_offset:119685*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119685*0 + 3*727*FLEN/8, x4, x1, x2)

inst_39896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffe0000000000; valaddr_reg:x3; val_offset:119688*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119688*0 + 3*728*FLEN/8, x4, x1, x2)

inst_39897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fff0000000000; valaddr_reg:x3; val_offset:119691*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119691*0 + 3*729*FLEN/8, x4, x1, x2)

inst_39898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fff8000000000; valaddr_reg:x3; val_offset:119694*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119694*0 + 3*730*FLEN/8, x4, x1, x2)

inst_39899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffc000000000; valaddr_reg:x3; val_offset:119697*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119697*0 + 3*731*FLEN/8, x4, x1, x2)

inst_39900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffe000000000; valaddr_reg:x3; val_offset:119700*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119700*0 + 3*732*FLEN/8, x4, x1, x2)

inst_39901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffff000000000; valaddr_reg:x3; val_offset:119703*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119703*0 + 3*733*FLEN/8, x4, x1, x2)

inst_39902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffff800000000; valaddr_reg:x3; val_offset:119706*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119706*0 + 3*734*FLEN/8, x4, x1, x2)

inst_39903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffc00000000; valaddr_reg:x3; val_offset:119709*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119709*0 + 3*735*FLEN/8, x4, x1, x2)

inst_39904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffe00000000; valaddr_reg:x3; val_offset:119712*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119712*0 + 3*736*FLEN/8, x4, x1, x2)

inst_39905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffff00000000; valaddr_reg:x3; val_offset:119715*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119715*0 + 3*737*FLEN/8, x4, x1, x2)

inst_39906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffff80000000; valaddr_reg:x3; val_offset:119718*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119718*0 + 3*738*FLEN/8, x4, x1, x2)

inst_39907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffc0000000; valaddr_reg:x3; val_offset:119721*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119721*0 + 3*739*FLEN/8, x4, x1, x2)

inst_39908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffe0000000; valaddr_reg:x3; val_offset:119724*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119724*0 + 3*740*FLEN/8, x4, x1, x2)

inst_39909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffff0000000; valaddr_reg:x3; val_offset:119727*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119727*0 + 3*741*FLEN/8, x4, x1, x2)

inst_39910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffff8000000; valaddr_reg:x3; val_offset:119730*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119730*0 + 3*742*FLEN/8, x4, x1, x2)

inst_39911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffc000000; valaddr_reg:x3; val_offset:119733*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119733*0 + 3*743*FLEN/8, x4, x1, x2)

inst_39912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffe000000; valaddr_reg:x3; val_offset:119736*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119736*0 + 3*744*FLEN/8, x4, x1, x2)

inst_39913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffff000000; valaddr_reg:x3; val_offset:119739*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119739*0 + 3*745*FLEN/8, x4, x1, x2)

inst_39914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffff800000; valaddr_reg:x3; val_offset:119742*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119742*0 + 3*746*FLEN/8, x4, x1, x2)

inst_39915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffffc00000; valaddr_reg:x3; val_offset:119745*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119745*0 + 3*747*FLEN/8, x4, x1, x2)

inst_39916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffffe00000; valaddr_reg:x3; val_offset:119748*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119748*0 + 3*748*FLEN/8, x4, x1, x2)

inst_39917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffff00000; valaddr_reg:x3; val_offset:119751*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119751*0 + 3*749*FLEN/8, x4, x1, x2)

inst_39918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffff80000; valaddr_reg:x3; val_offset:119754*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119754*0 + 3*750*FLEN/8, x4, x1, x2)

inst_39919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffffc0000; valaddr_reg:x3; val_offset:119757*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119757*0 + 3*751*FLEN/8, x4, x1, x2)

inst_39920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffffe0000; valaddr_reg:x3; val_offset:119760*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119760*0 + 3*752*FLEN/8, x4, x1, x2)

inst_39921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffffff0000; valaddr_reg:x3; val_offset:119763*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119763*0 + 3*753*FLEN/8, x4, x1, x2)

inst_39922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffffff8000; valaddr_reg:x3; val_offset:119766*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119766*0 + 3*754*FLEN/8, x4, x1, x2)

inst_39923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffffffc000; valaddr_reg:x3; val_offset:119769*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119769*0 + 3*755*FLEN/8, x4, x1, x2)

inst_39924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffffffe000; valaddr_reg:x3; val_offset:119772*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119772*0 + 3*756*FLEN/8, x4, x1, x2)

inst_39925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffffff000; valaddr_reg:x3; val_offset:119775*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119775*0 + 3*757*FLEN/8, x4, x1, x2)

inst_39926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffffff800; valaddr_reg:x3; val_offset:119778*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119778*0 + 3*758*FLEN/8, x4, x1, x2)

inst_39927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffffffc00; valaddr_reg:x3; val_offset:119781*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119781*0 + 3*759*FLEN/8, x4, x1, x2)

inst_39928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffffffe00; valaddr_reg:x3; val_offset:119784*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119784*0 + 3*760*FLEN/8, x4, x1, x2)

inst_39929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffffffff00; valaddr_reg:x3; val_offset:119787*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119787*0 + 3*761*FLEN/8, x4, x1, x2)

inst_39930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffffffff80; valaddr_reg:x3; val_offset:119790*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119790*0 + 3*762*FLEN/8, x4, x1, x2)

inst_39931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffffffffc0; valaddr_reg:x3; val_offset:119793*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119793*0 + 3*763*FLEN/8, x4, x1, x2)

inst_39932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4fffffffffffe0; valaddr_reg:x3; val_offset:119796*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119796*0 + 3*764*FLEN/8, x4, x1, x2)

inst_39933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffffffff0; valaddr_reg:x3; val_offset:119799*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119799*0 + 3*765*FLEN/8, x4, x1, x2)

inst_39934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffffffff8; valaddr_reg:x3; val_offset:119802*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119802*0 + 3*766*FLEN/8, x4, x1, x2)

inst_39935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x46b691d85ed51 and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9912f07dba36b5; op2val:0x20446b691d85ed51;
op3val:0x3d4ffffffffffffc; valaddr_reg:x3; val_offset:119805*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 119805*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079157442412544,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079174622281728,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079183212216320,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079187507183616,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079189654667264,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079190728409088,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191265280000,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191533715456,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191667933184,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191735042048,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191768596480,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191785373696,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191793762304,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191797956608,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191800053760,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801102336,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801626624,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801888768,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802019840,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802085376,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802118144,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802134528,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802142720,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802146816,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802148864,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802149888,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150400,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150656,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150784,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150848,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150880,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150896,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150904,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150908,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150910,64,FLEN)
NAN_BOXED(6888345970864786979,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150911,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187343872,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187343873,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187343875,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187343879,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187343887,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187343903,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187343935,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187343999,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187344127,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187344383,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187344895,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187345919,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187347967,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187352063,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187360255,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187376639,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187409407,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187474943,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187606015,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070187868159,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070188392447,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070189441023,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070191538175,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070195732479,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070204121087,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070220898303,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070254452735,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070321561599,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070455779327,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914070724214783,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914071261085695,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914072334827519,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914074482311167,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914078777278463,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914087367213055,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914104547082239,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914138906820607,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914207626297343,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914345065250815,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654914619943157759,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654915169698971647,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654916269210599423,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654918468233854975,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654922866280366079,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654931662373388287,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654949254559432703,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13654984438931521535,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13655054807675699199,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13655195545164054527,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13655477020140765183,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13656039970094186495,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13657165870001029119,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13657165870001029120,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13658291769907871744,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13658854719861293056,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659136194838003712,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659276932326359040,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659347301070536704,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659382485442625536,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659400077628669952,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659408873721692160,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659413271768203264,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659415470791458816,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659416570303086592,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417120058900480,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417394936807424,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417532375760896,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417601095237632,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417635454976000,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417652634845184,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417661224779776,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417665519747072,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417667667230720,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417668740972544,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669277843456,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669546278912,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669680496640,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669747605504,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669781159936,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669797937152,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669806325760,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669810520064,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669812617216,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669813665792,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814190080,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814452224,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814583296,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814648832,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814681600,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814697984,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814706176,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814710272,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814712320,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814713344,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814713856,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814714112,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814714240,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814714304,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814714336,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814714352,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814714360,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814714364,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814714366,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13659417669814714367,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6888375667552958653,64,FLEN)
NAN_BOXED(11517100609934519720,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206307840,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206307841,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206307843,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206307847,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206307855,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206307871,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206307903,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206307967,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206308095,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206308351,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206308863,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206309887,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206311935,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206316031,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206324223,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206340607,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206373375,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206438911,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206569983,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867206832127,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867207356415,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867208404991,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867210502143,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867214696447,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867223085055,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867239862271,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867273416703,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867340525567,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867474743295,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942867743178751,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942868280049663,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942869353791487,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942871501275135,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942875796242431,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942884386177023,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942901566046207,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690942935925784575,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690943004645261311,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690943142084214783,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690943416962121727,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690943966717935615,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690945066229563391,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690947265252818943,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690951663299330047,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690960459392352255,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13690978051578396671,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13691013235950485503,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13691083604694663167,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13691224342183018495,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13691505817159729151,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13692068767113150463,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13693194667019993087,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13693194667019993088,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13694320566926835712,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13694883516880257024,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695164991856967680,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695305729345323008,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695376098089500672,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695411282461589504,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695428874647633920,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695437670740656128,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695442068787167232,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695444267810422784,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695445367322050560,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695445917077864448,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446191955771392,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446329394724864,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446398114201600,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446432473939968,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446449653809152,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446458243743744,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446462538711040,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446464686194688,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446465759936512,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466296807424,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466565242880,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466699460608,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466766569472,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466800123904,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466816901120,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466825289728,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466829484032,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466831581184,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466832629760,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833154048,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833416192,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833547264,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833612800,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833645568,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833661952,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833670144,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833674240,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833676288,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833677312,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833677824,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833678080,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833678208,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833678272,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833678304,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833678320,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833678328,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833678332,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833678334,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13695446466833678335,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6888387660386382591,64,FLEN)
NAN_BOXED(11517090336542499902,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485376,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485377,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485379,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485383,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485391,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485407,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485439,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485503,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485631,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485887,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448486399,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448487423,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448489471,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448493567,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448501759,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448518143,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448550911,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448616447,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448747519,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449009663,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449533951,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588450582527,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588452679679,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588456873983,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588465262591,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588482039807,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588515594239,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588582703103,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588716920831,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588985356287,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611589522227199,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611590595969023,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611592743452671,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611597038419967,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611605628354559,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611622808223743,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611657167962111,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611725887438847,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611863326392319,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612138204299263,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612687960113151,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139613787471740927,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139615986494996479,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139620384541507583,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139629180634529791,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139646772820574207,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139681957192663039,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139752325936840703,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139893063425196031,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140174538401906687,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327999,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170623,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170624,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(142989288169013248,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143552238122434560,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143833713099145216,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143974450587500544,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144044819331678208,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144080003703767040,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144097595889811456,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144106391982833664,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144110790029344768,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144112989052600320,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114088564228096,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114638320041984,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114913197948928,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115050636902400,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115119356379136,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115153716117504,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115170895986688,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115179485921280,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115183780888576,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115185928372224,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187002114048,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187538984960,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187807420416,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187941638144,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188008747008,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188042301440,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188059078656,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188067467264,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188071661568,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188073758720,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188074807296,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075331584,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075593728,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075724800,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075790336,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075823104,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075839488,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075847680,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075851776,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075853824,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075854848,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855360,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855616,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855744,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855808,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855840,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855856,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855864,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855868,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855870,64,FLEN)
NAN_BOXED(6888476165454433409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855871,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498976768,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498976769,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498976771,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498976775,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498976783,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498976799,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498976831,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498976895,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498977023,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498977279,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498977791,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498978815,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498980863,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498984959,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660498993151,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660499009535,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660499042303,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660499107839,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660499238911,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660499501055,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660500025343,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660501073919,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660503171071,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660507365375,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660515753983,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660532531199,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660566085631,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660633194495,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007660767412223,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007661035847679,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007661572718591,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007662646460415,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007664793944063,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007669088911359,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007677678845951,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007694858715135,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007729218453503,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007797937930239,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772007935376883711,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772008210254790655,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772008760010604543,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772009859522232319,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772012058545487871,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772016456591998975,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772025252685021183,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772042844871065599,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772078029243154431,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772148397987332095,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772289135475687423,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13772570610452398079,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13773133560405819391,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13774259460312662015,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13774259460312662016,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13775385360219504640,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13775948310172925952,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776229785149636608,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776370522637991936,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776440891382169600,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776476075754258432,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776493667940302848,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776502464033325056,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776506862079836160,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776509061103091712,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776510160614719488,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776510710370533376,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776510985248440320,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511122687393792,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511191406870528,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511225766608896,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511242946478080,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511251536412672,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511255831379968,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511257978863616,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511259052605440,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511259589476352,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511259857911808,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511259992129536,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260059238400,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260092792832,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260109570048,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260117958656,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260122152960,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260124250112,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260125298688,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260125822976,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126085120,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126216192,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126281728,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126314496,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126330880,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126339072,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126343168,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126345216,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126346240,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126346752,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126347008,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126347136,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126347200,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126347232,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126347248,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126347256,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126347260,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126347262,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13776511260126347263,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6888546126832926837,64,FLEN)
NAN_BOXED(11516957873892392145,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560832,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560833,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560835,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560839,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560847,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560863,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560895,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560959,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561087,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561343,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561855,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349562879,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349564927,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349569023,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349577215,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349593599,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349626367,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349691903,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349822975,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350085119,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350609407,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184351657983,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184353755135,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184357949439,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184366338047,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184383115263,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184416669695,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184483778559,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184617996287,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184886431743,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151185423302655,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151186497044479,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151188644528127,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151192939495423,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151201529430015,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151218709299199,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151253069037567,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151321788514303,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151459227467775,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151734105374719,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189152283861188607,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189153383372816383,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189155582396071935,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189159980442583039,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189168776535605247,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189186368721649663,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189221553093738495,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189291921837916159,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189432659326271487,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189714134302982143,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(190277084256403455,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246079,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246080,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(192528884070088704,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193091834023510016,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193373309000220672,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193514046488576000,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193584415232753664,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193619599604842496,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193637191790886912,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193645987883909120,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193650385930420224,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193652584953675776,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193653684465303552,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654234221117440,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654509099024384,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654646537977856,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654715257454592,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654749617192960,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654766797062144,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654775386996736,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654779681964032,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654781829447680,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654782903189504,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783440060416,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783708495872,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783842713600,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783909822464,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783943376896,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783960154112,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783968542720,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783972737024,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783974834176,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783975882752,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976407040,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976669184,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976800256,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976865792,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976898560,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976914944,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976923136,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976927232,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976929280,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930304,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930816,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931072,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931200,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931264,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931296,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931312,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931320,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931324,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931326,64,FLEN)
NAN_BOXED(6888552383792768311,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931327,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823086080,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823086081,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823086083,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823086087,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823086095,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823086111,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823086143,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823086207,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823086335,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823086591,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823087103,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823088127,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823090175,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823094271,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823102463,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823118847,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823151615,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823217151,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823348223,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634823610367,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634824134655,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634825183231,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634827280383,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634831474687,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634839863295,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634856640511,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634890194943,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527634957303807,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527635091521535,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527635359956991,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527635896827903,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527636970569727,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527639118053375,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527643413020671,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527652002955263,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527669182824447,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527703542562815,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527772262039551,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413527909700993023,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413528184578899967,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413528734334713855,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413529833846341631,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413532032869597183,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413536430916108287,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413545227009130495,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413562819195174911,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413598003567263743,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413668372311441407,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4413809109799796735,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4414090584776507391,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4414653534729928703,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4415779434636771327,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4415779434636771328,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4416905334543613952,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4417468284497035264,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4417749759473745920,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4417890496962101248,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4417960865706278912,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4417996050078367744,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418013642264412160,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418022438357434368,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418026836403945472,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418029035427201024,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418030134938828800,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418030684694642688,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418030959572549632,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031097011503104,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031165730979840,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031200090718208,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031217270587392,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031225860521984,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031230155489280,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031232302972928,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031233376714752,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031233913585664,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234182021120,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234316238848,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234383347712,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234416902144,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234433679360,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234442067968,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234446262272,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234448359424,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234449408000,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234449932288,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450194432,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450325504,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450391040,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450423808,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450440192,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450448384,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450452480,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450454528,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450455552,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450456064,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450456320,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450456448,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450456512,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450456544,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450456560,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450456568,64,FLEN)
NAN_BOXED(6888557929150690997,64,FLEN)
NAN_BOXED(2325101406841072977,64,FLEN)
NAN_BOXED(4418031234450456572,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
