
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_768:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:2304*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2304*0 + 3*0*FLEN/8, x4, x1, x2)

inst_769:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:2307*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2307*0 + 3*1*FLEN/8, x4, x1, x2)

inst_770:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:2310*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2310*0 + 3*2*FLEN/8, x4, x1, x2)

inst_771:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:2313*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2313*0 + 3*3*FLEN/8, x4, x1, x2)

inst_772:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:2316*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2316*0 + 3*4*FLEN/8, x4, x1, x2)

inst_773:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:2319*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2319*0 + 3*5*FLEN/8, x4, x1, x2)

inst_774:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:2322*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2322*0 + 3*6*FLEN/8, x4, x1, x2)

inst_775:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:2325*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2325*0 + 3*7*FLEN/8, x4, x1, x2)

inst_776:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:2328*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2328*0 + 3*8*FLEN/8, x4, x1, x2)

inst_777:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:2331*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2331*0 + 3*9*FLEN/8, x4, x1, x2)

inst_778:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000000000000; valaddr_reg:x3; val_offset:2334*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2334*0 + 3*10*FLEN/8, x4, x1, x2)

inst_779:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000000000001; valaddr_reg:x3; val_offset:2337*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2337*0 + 3*11*FLEN/8, x4, x1, x2)

inst_780:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000000000003; valaddr_reg:x3; val_offset:2340*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2340*0 + 3*12*FLEN/8, x4, x1, x2)

inst_781:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000000000007; valaddr_reg:x3; val_offset:2343*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2343*0 + 3*13*FLEN/8, x4, x1, x2)

inst_782:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000000000000f; valaddr_reg:x3; val_offset:2346*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2346*0 + 3*14*FLEN/8, x4, x1, x2)

inst_783:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000000000001f; valaddr_reg:x3; val_offset:2349*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2349*0 + 3*15*FLEN/8, x4, x1, x2)

inst_784:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000000000003f; valaddr_reg:x3; val_offset:2352*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2352*0 + 3*16*FLEN/8, x4, x1, x2)

inst_785:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000000000007f; valaddr_reg:x3; val_offset:2355*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2355*0 + 3*17*FLEN/8, x4, x1, x2)

inst_786:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700000000000ff; valaddr_reg:x3; val_offset:2358*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2358*0 + 3*18*FLEN/8, x4, x1, x2)

inst_787:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700000000001ff; valaddr_reg:x3; val_offset:2361*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2361*0 + 3*19*FLEN/8, x4, x1, x2)

inst_788:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700000000003ff; valaddr_reg:x3; val_offset:2364*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2364*0 + 3*20*FLEN/8, x4, x1, x2)

inst_789:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700000000007ff; valaddr_reg:x3; val_offset:2367*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2367*0 + 3*21*FLEN/8, x4, x1, x2)

inst_790:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000000000fff; valaddr_reg:x3; val_offset:2370*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2370*0 + 3*22*FLEN/8, x4, x1, x2)

inst_791:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000000001fff; valaddr_reg:x3; val_offset:2373*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2373*0 + 3*23*FLEN/8, x4, x1, x2)

inst_792:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000000003fff; valaddr_reg:x3; val_offset:2376*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2376*0 + 3*24*FLEN/8, x4, x1, x2)

inst_793:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000000007fff; valaddr_reg:x3; val_offset:2379*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2379*0 + 3*25*FLEN/8, x4, x1, x2)

inst_794:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000000000ffff; valaddr_reg:x3; val_offset:2382*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2382*0 + 3*26*FLEN/8, x4, x1, x2)

inst_795:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000000001ffff; valaddr_reg:x3; val_offset:2385*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2385*0 + 3*27*FLEN/8, x4, x1, x2)

inst_796:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000000003ffff; valaddr_reg:x3; val_offset:2388*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2388*0 + 3*28*FLEN/8, x4, x1, x2)

inst_797:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000000007ffff; valaddr_reg:x3; val_offset:2391*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2391*0 + 3*29*FLEN/8, x4, x1, x2)

inst_798:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700000000fffff; valaddr_reg:x3; val_offset:2394*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2394*0 + 3*30*FLEN/8, x4, x1, x2)

inst_799:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700000001fffff; valaddr_reg:x3; val_offset:2397*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2397*0 + 3*31*FLEN/8, x4, x1, x2)

inst_800:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700000003fffff; valaddr_reg:x3; val_offset:2400*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2400*0 + 3*32*FLEN/8, x4, x1, x2)

inst_801:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700000007fffff; valaddr_reg:x3; val_offset:2403*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2403*0 + 3*33*FLEN/8, x4, x1, x2)

inst_802:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000000ffffff; valaddr_reg:x3; val_offset:2406*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2406*0 + 3*34*FLEN/8, x4, x1, x2)

inst_803:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000001ffffff; valaddr_reg:x3; val_offset:2409*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2409*0 + 3*35*FLEN/8, x4, x1, x2)

inst_804:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000003ffffff; valaddr_reg:x3; val_offset:2412*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2412*0 + 3*36*FLEN/8, x4, x1, x2)

inst_805:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000007ffffff; valaddr_reg:x3; val_offset:2415*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2415*0 + 3*37*FLEN/8, x4, x1, x2)

inst_806:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000000fffffff; valaddr_reg:x3; val_offset:2418*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2418*0 + 3*38*FLEN/8, x4, x1, x2)

inst_807:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000001fffffff; valaddr_reg:x3; val_offset:2421*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2421*0 + 3*39*FLEN/8, x4, x1, x2)

inst_808:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000003fffffff; valaddr_reg:x3; val_offset:2424*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2424*0 + 3*40*FLEN/8, x4, x1, x2)

inst_809:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000007fffffff; valaddr_reg:x3; val_offset:2427*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2427*0 + 3*41*FLEN/8, x4, x1, x2)

inst_810:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700000ffffffff; valaddr_reg:x3; val_offset:2430*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2430*0 + 3*42*FLEN/8, x4, x1, x2)

inst_811:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700001ffffffff; valaddr_reg:x3; val_offset:2433*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2433*0 + 3*43*FLEN/8, x4, x1, x2)

inst_812:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700003ffffffff; valaddr_reg:x3; val_offset:2436*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2436*0 + 3*44*FLEN/8, x4, x1, x2)

inst_813:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700007ffffffff; valaddr_reg:x3; val_offset:2439*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2439*0 + 3*45*FLEN/8, x4, x1, x2)

inst_814:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270000fffffffff; valaddr_reg:x3; val_offset:2442*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2442*0 + 3*46*FLEN/8, x4, x1, x2)

inst_815:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270001fffffffff; valaddr_reg:x3; val_offset:2445*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2445*0 + 3*47*FLEN/8, x4, x1, x2)

inst_816:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270003fffffffff; valaddr_reg:x3; val_offset:2448*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2448*0 + 3*48*FLEN/8, x4, x1, x2)

inst_817:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270007fffffffff; valaddr_reg:x3; val_offset:2451*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2451*0 + 3*49*FLEN/8, x4, x1, x2)

inst_818:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827000ffffffffff; valaddr_reg:x3; val_offset:2454*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2454*0 + 3*50*FLEN/8, x4, x1, x2)

inst_819:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827001ffffffffff; valaddr_reg:x3; val_offset:2457*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2457*0 + 3*51*FLEN/8, x4, x1, x2)

inst_820:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827003ffffffffff; valaddr_reg:x3; val_offset:2460*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2460*0 + 3*52*FLEN/8, x4, x1, x2)

inst_821:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827007ffffffffff; valaddr_reg:x3; val_offset:2463*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2463*0 + 3*53*FLEN/8, x4, x1, x2)

inst_822:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82700fffffffffff; valaddr_reg:x3; val_offset:2466*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2466*0 + 3*54*FLEN/8, x4, x1, x2)

inst_823:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82701fffffffffff; valaddr_reg:x3; val_offset:2469*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2469*0 + 3*55*FLEN/8, x4, x1, x2)

inst_824:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82703fffffffffff; valaddr_reg:x3; val_offset:2472*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2472*0 + 3*56*FLEN/8, x4, x1, x2)

inst_825:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x82707fffffffffff; valaddr_reg:x3; val_offset:2475*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2475*0 + 3*57*FLEN/8, x4, x1, x2)

inst_826:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8270ffffffffffff; valaddr_reg:x3; val_offset:2478*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2478*0 + 3*58*FLEN/8, x4, x1, x2)

inst_827:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8271ffffffffffff; valaddr_reg:x3; val_offset:2481*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2481*0 + 3*59*FLEN/8, x4, x1, x2)

inst_828:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8273ffffffffffff; valaddr_reg:x3; val_offset:2484*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2484*0 + 3*60*FLEN/8, x4, x1, x2)

inst_829:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8277ffffffffffff; valaddr_reg:x3; val_offset:2487*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2487*0 + 3*61*FLEN/8, x4, x1, x2)

inst_830:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x8278000000000000; valaddr_reg:x3; val_offset:2490*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2490*0 + 3*62*FLEN/8, x4, x1, x2)

inst_831:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827c000000000000; valaddr_reg:x3; val_offset:2493*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2493*0 + 3*63*FLEN/8, x4, x1, x2)

inst_832:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827e000000000000; valaddr_reg:x3; val_offset:2496*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2496*0 + 3*64*FLEN/8, x4, x1, x2)

inst_833:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827f000000000000; valaddr_reg:x3; val_offset:2499*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2499*0 + 3*65*FLEN/8, x4, x1, x2)

inst_834:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827f800000000000; valaddr_reg:x3; val_offset:2502*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2502*0 + 3*66*FLEN/8, x4, x1, x2)

inst_835:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fc00000000000; valaddr_reg:x3; val_offset:2505*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2505*0 + 3*67*FLEN/8, x4, x1, x2)

inst_836:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fe00000000000; valaddr_reg:x3; val_offset:2508*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2508*0 + 3*68*FLEN/8, x4, x1, x2)

inst_837:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ff00000000000; valaddr_reg:x3; val_offset:2511*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2511*0 + 3*69*FLEN/8, x4, x1, x2)

inst_838:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ff80000000000; valaddr_reg:x3; val_offset:2514*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2514*0 + 3*70*FLEN/8, x4, x1, x2)

inst_839:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffc0000000000; valaddr_reg:x3; val_offset:2517*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2517*0 + 3*71*FLEN/8, x4, x1, x2)

inst_840:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffe0000000000; valaddr_reg:x3; val_offset:2520*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2520*0 + 3*72*FLEN/8, x4, x1, x2)

inst_841:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fff0000000000; valaddr_reg:x3; val_offset:2523*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2523*0 + 3*73*FLEN/8, x4, x1, x2)

inst_842:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fff8000000000; valaddr_reg:x3; val_offset:2526*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2526*0 + 3*74*FLEN/8, x4, x1, x2)

inst_843:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffc000000000; valaddr_reg:x3; val_offset:2529*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2529*0 + 3*75*FLEN/8, x4, x1, x2)

inst_844:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffe000000000; valaddr_reg:x3; val_offset:2532*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2532*0 + 3*76*FLEN/8, x4, x1, x2)

inst_845:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffff000000000; valaddr_reg:x3; val_offset:2535*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2535*0 + 3*77*FLEN/8, x4, x1, x2)

inst_846:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffff800000000; valaddr_reg:x3; val_offset:2538*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2538*0 + 3*78*FLEN/8, x4, x1, x2)

inst_847:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffc00000000; valaddr_reg:x3; val_offset:2541*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2541*0 + 3*79*FLEN/8, x4, x1, x2)

inst_848:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffe00000000; valaddr_reg:x3; val_offset:2544*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2544*0 + 3*80*FLEN/8, x4, x1, x2)

inst_849:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffff00000000; valaddr_reg:x3; val_offset:2547*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2547*0 + 3*81*FLEN/8, x4, x1, x2)

inst_850:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffff80000000; valaddr_reg:x3; val_offset:2550*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2550*0 + 3*82*FLEN/8, x4, x1, x2)

inst_851:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffc0000000; valaddr_reg:x3; val_offset:2553*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2553*0 + 3*83*FLEN/8, x4, x1, x2)

inst_852:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffe0000000; valaddr_reg:x3; val_offset:2556*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2556*0 + 3*84*FLEN/8, x4, x1, x2)

inst_853:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffff0000000; valaddr_reg:x3; val_offset:2559*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2559*0 + 3*85*FLEN/8, x4, x1, x2)

inst_854:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffff8000000; valaddr_reg:x3; val_offset:2562*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2562*0 + 3*86*FLEN/8, x4, x1, x2)

inst_855:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffc000000; valaddr_reg:x3; val_offset:2565*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2565*0 + 3*87*FLEN/8, x4, x1, x2)

inst_856:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffe000000; valaddr_reg:x3; val_offset:2568*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2568*0 + 3*88*FLEN/8, x4, x1, x2)

inst_857:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffff000000; valaddr_reg:x3; val_offset:2571*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2571*0 + 3*89*FLEN/8, x4, x1, x2)

inst_858:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffff800000; valaddr_reg:x3; val_offset:2574*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2574*0 + 3*90*FLEN/8, x4, x1, x2)

inst_859:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffffc00000; valaddr_reg:x3; val_offset:2577*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2577*0 + 3*91*FLEN/8, x4, x1, x2)

inst_860:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffffe00000; valaddr_reg:x3; val_offset:2580*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2580*0 + 3*92*FLEN/8, x4, x1, x2)

inst_861:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffff00000; valaddr_reg:x3; val_offset:2583*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2583*0 + 3*93*FLEN/8, x4, x1, x2)

inst_862:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffff80000; valaddr_reg:x3; val_offset:2586*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2586*0 + 3*94*FLEN/8, x4, x1, x2)

inst_863:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffffc0000; valaddr_reg:x3; val_offset:2589*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2589*0 + 3*95*FLEN/8, x4, x1, x2)

inst_864:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffffe0000; valaddr_reg:x3; val_offset:2592*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2592*0 + 3*96*FLEN/8, x4, x1, x2)

inst_865:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffffff0000; valaddr_reg:x3; val_offset:2595*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2595*0 + 3*97*FLEN/8, x4, x1, x2)

inst_866:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffffff8000; valaddr_reg:x3; val_offset:2598*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2598*0 + 3*98*FLEN/8, x4, x1, x2)

inst_867:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffffffc000; valaddr_reg:x3; val_offset:2601*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2601*0 + 3*99*FLEN/8, x4, x1, x2)

inst_868:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffffffe000; valaddr_reg:x3; val_offset:2604*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2604*0 + 3*100*FLEN/8, x4, x1, x2)

inst_869:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffffff000; valaddr_reg:x3; val_offset:2607*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2607*0 + 3*101*FLEN/8, x4, x1, x2)

inst_870:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffffff800; valaddr_reg:x3; val_offset:2610*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2610*0 + 3*102*FLEN/8, x4, x1, x2)

inst_871:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffffffc00; valaddr_reg:x3; val_offset:2613*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2613*0 + 3*103*FLEN/8, x4, x1, x2)

inst_872:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffffffe00; valaddr_reg:x3; val_offset:2616*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2616*0 + 3*104*FLEN/8, x4, x1, x2)

inst_873:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffffffff00; valaddr_reg:x3; val_offset:2619*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2619*0 + 3*105*FLEN/8, x4, x1, x2)

inst_874:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffffffff80; valaddr_reg:x3; val_offset:2622*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2622*0 + 3*106*FLEN/8, x4, x1, x2)

inst_875:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffffffffc0; valaddr_reg:x3; val_offset:2625*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2625*0 + 3*107*FLEN/8, x4, x1, x2)

inst_876:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffffffffe0; valaddr_reg:x3; val_offset:2628*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2628*0 + 3*108*FLEN/8, x4, x1, x2)

inst_877:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffffffff0; valaddr_reg:x3; val_offset:2631*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2631*0 + 3*109*FLEN/8, x4, x1, x2)

inst_878:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffffffff8; valaddr_reg:x3; val_offset:2634*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2634*0 + 3*110*FLEN/8, x4, x1, x2)

inst_879:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffffffffc; valaddr_reg:x3; val_offset:2637*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2637*0 + 3*111*FLEN/8, x4, x1, x2)

inst_880:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827ffffffffffffe; valaddr_reg:x3; val_offset:2640*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2640*0 + 3*112*FLEN/8, x4, x1, x2)

inst_881:
// fs1 == 0 and fe1 == 0x5f3 and fm1 == 0x9b94962632cff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f39b94962632cff; op2val:0x8000;
op3val:0x827fffffffffffff; valaddr_reg:x3; val_offset:2643*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2643*0 + 3*113*FLEN/8, x4, x1, x2)

inst_882:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:2646*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2646*0 + 3*114*FLEN/8, x4, x1, x2)

inst_883:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:2649*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2649*0 + 3*115*FLEN/8, x4, x1, x2)

inst_884:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:2652*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2652*0 + 3*116*FLEN/8, x4, x1, x2)

inst_885:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:2655*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2655*0 + 3*117*FLEN/8, x4, x1, x2)

inst_886:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:2658*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2658*0 + 3*118*FLEN/8, x4, x1, x2)

inst_887:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:2661*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2661*0 + 3*119*FLEN/8, x4, x1, x2)

inst_888:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:2664*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2664*0 + 3*120*FLEN/8, x4, x1, x2)

inst_889:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:2667*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2667*0 + 3*121*FLEN/8, x4, x1, x2)

inst_890:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:2670*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2670*0 + 3*122*FLEN/8, x4, x1, x2)

inst_891:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:2673*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2673*0 + 3*123*FLEN/8, x4, x1, x2)

inst_892:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:2676*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2676*0 + 3*124*FLEN/8, x4, x1, x2)

inst_893:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:2679*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2679*0 + 3*125*FLEN/8, x4, x1, x2)

inst_894:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:2682*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2682*0 + 3*126*FLEN/8, x4, x1, x2)

inst_895:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:2685*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2685*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_896:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:2688*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2688*0 + 3*128*FLEN/8, x4, x1, x2)

inst_897:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:2691*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2691*0 + 3*129*FLEN/8, x4, x1, x2)

inst_898:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:2694*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2694*0 + 3*130*FLEN/8, x4, x1, x2)

inst_899:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:2697*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2697*0 + 3*131*FLEN/8, x4, x1, x2)

inst_900:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:2700*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2700*0 + 3*132*FLEN/8, x4, x1, x2)

inst_901:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:2703*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2703*0 + 3*133*FLEN/8, x4, x1, x2)

inst_902:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:2706*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2706*0 + 3*134*FLEN/8, x4, x1, x2)

inst_903:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:2709*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2709*0 + 3*135*FLEN/8, x4, x1, x2)

inst_904:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000000000000; valaddr_reg:x3; val_offset:2712*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2712*0 + 3*136*FLEN/8, x4, x1, x2)

inst_905:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000000000001; valaddr_reg:x3; val_offset:2715*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2715*0 + 3*137*FLEN/8, x4, x1, x2)

inst_906:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000000000003; valaddr_reg:x3; val_offset:2718*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2718*0 + 3*138*FLEN/8, x4, x1, x2)

inst_907:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000000000007; valaddr_reg:x3; val_offset:2721*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2721*0 + 3*139*FLEN/8, x4, x1, x2)

inst_908:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000000000000f; valaddr_reg:x3; val_offset:2724*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2724*0 + 3*140*FLEN/8, x4, x1, x2)

inst_909:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000000000001f; valaddr_reg:x3; val_offset:2727*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2727*0 + 3*141*FLEN/8, x4, x1, x2)

inst_910:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000000000003f; valaddr_reg:x3; val_offset:2730*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2730*0 + 3*142*FLEN/8, x4, x1, x2)

inst_911:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000000000007f; valaddr_reg:x3; val_offset:2733*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2733*0 + 3*143*FLEN/8, x4, x1, x2)

inst_912:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900000000000ff; valaddr_reg:x3; val_offset:2736*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2736*0 + 3*144*FLEN/8, x4, x1, x2)

inst_913:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900000000001ff; valaddr_reg:x3; val_offset:2739*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2739*0 + 3*145*FLEN/8, x4, x1, x2)

inst_914:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900000000003ff; valaddr_reg:x3; val_offset:2742*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2742*0 + 3*146*FLEN/8, x4, x1, x2)

inst_915:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900000000007ff; valaddr_reg:x3; val_offset:2745*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2745*0 + 3*147*FLEN/8, x4, x1, x2)

inst_916:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000000000fff; valaddr_reg:x3; val_offset:2748*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2748*0 + 3*148*FLEN/8, x4, x1, x2)

inst_917:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000000001fff; valaddr_reg:x3; val_offset:2751*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2751*0 + 3*149*FLEN/8, x4, x1, x2)

inst_918:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000000003fff; valaddr_reg:x3; val_offset:2754*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2754*0 + 3*150*FLEN/8, x4, x1, x2)

inst_919:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000000007fff; valaddr_reg:x3; val_offset:2757*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2757*0 + 3*151*FLEN/8, x4, x1, x2)

inst_920:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000000000ffff; valaddr_reg:x3; val_offset:2760*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2760*0 + 3*152*FLEN/8, x4, x1, x2)

inst_921:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000000001ffff; valaddr_reg:x3; val_offset:2763*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2763*0 + 3*153*FLEN/8, x4, x1, x2)

inst_922:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000000003ffff; valaddr_reg:x3; val_offset:2766*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2766*0 + 3*154*FLEN/8, x4, x1, x2)

inst_923:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000000007ffff; valaddr_reg:x3; val_offset:2769*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2769*0 + 3*155*FLEN/8, x4, x1, x2)

inst_924:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900000000fffff; valaddr_reg:x3; val_offset:2772*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2772*0 + 3*156*FLEN/8, x4, x1, x2)

inst_925:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900000001fffff; valaddr_reg:x3; val_offset:2775*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2775*0 + 3*157*FLEN/8, x4, x1, x2)

inst_926:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900000003fffff; valaddr_reg:x3; val_offset:2778*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2778*0 + 3*158*FLEN/8, x4, x1, x2)

inst_927:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900000007fffff; valaddr_reg:x3; val_offset:2781*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2781*0 + 3*159*FLEN/8, x4, x1, x2)

inst_928:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000000ffffff; valaddr_reg:x3; val_offset:2784*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2784*0 + 3*160*FLEN/8, x4, x1, x2)

inst_929:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000001ffffff; valaddr_reg:x3; val_offset:2787*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2787*0 + 3*161*FLEN/8, x4, x1, x2)

inst_930:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000003ffffff; valaddr_reg:x3; val_offset:2790*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2790*0 + 3*162*FLEN/8, x4, x1, x2)

inst_931:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000007ffffff; valaddr_reg:x3; val_offset:2793*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2793*0 + 3*163*FLEN/8, x4, x1, x2)

inst_932:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000000fffffff; valaddr_reg:x3; val_offset:2796*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2796*0 + 3*164*FLEN/8, x4, x1, x2)

inst_933:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000001fffffff; valaddr_reg:x3; val_offset:2799*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2799*0 + 3*165*FLEN/8, x4, x1, x2)

inst_934:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000003fffffff; valaddr_reg:x3; val_offset:2802*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2802*0 + 3*166*FLEN/8, x4, x1, x2)

inst_935:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000007fffffff; valaddr_reg:x3; val_offset:2805*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2805*0 + 3*167*FLEN/8, x4, x1, x2)

inst_936:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900000ffffffff; valaddr_reg:x3; val_offset:2808*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2808*0 + 3*168*FLEN/8, x4, x1, x2)

inst_937:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900001ffffffff; valaddr_reg:x3; val_offset:2811*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2811*0 + 3*169*FLEN/8, x4, x1, x2)

inst_938:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900003ffffffff; valaddr_reg:x3; val_offset:2814*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2814*0 + 3*170*FLEN/8, x4, x1, x2)

inst_939:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900007ffffffff; valaddr_reg:x3; val_offset:2817*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2817*0 + 3*171*FLEN/8, x4, x1, x2)

inst_940:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090000fffffffff; valaddr_reg:x3; val_offset:2820*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2820*0 + 3*172*FLEN/8, x4, x1, x2)

inst_941:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090001fffffffff; valaddr_reg:x3; val_offset:2823*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2823*0 + 3*173*FLEN/8, x4, x1, x2)

inst_942:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090003fffffffff; valaddr_reg:x3; val_offset:2826*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2826*0 + 3*174*FLEN/8, x4, x1, x2)

inst_943:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090007fffffffff; valaddr_reg:x3; val_offset:2829*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2829*0 + 3*175*FLEN/8, x4, x1, x2)

inst_944:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809000ffffffffff; valaddr_reg:x3; val_offset:2832*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2832*0 + 3*176*FLEN/8, x4, x1, x2)

inst_945:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809001ffffffffff; valaddr_reg:x3; val_offset:2835*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2835*0 + 3*177*FLEN/8, x4, x1, x2)

inst_946:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809003ffffffffff; valaddr_reg:x3; val_offset:2838*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2838*0 + 3*178*FLEN/8, x4, x1, x2)

inst_947:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809007ffffffffff; valaddr_reg:x3; val_offset:2841*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2841*0 + 3*179*FLEN/8, x4, x1, x2)

inst_948:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80900fffffffffff; valaddr_reg:x3; val_offset:2844*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2844*0 + 3*180*FLEN/8, x4, x1, x2)

inst_949:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80901fffffffffff; valaddr_reg:x3; val_offset:2847*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2847*0 + 3*181*FLEN/8, x4, x1, x2)

inst_950:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80903fffffffffff; valaddr_reg:x3; val_offset:2850*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2850*0 + 3*182*FLEN/8, x4, x1, x2)

inst_951:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x80907fffffffffff; valaddr_reg:x3; val_offset:2853*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2853*0 + 3*183*FLEN/8, x4, x1, x2)

inst_952:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8090ffffffffffff; valaddr_reg:x3; val_offset:2856*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2856*0 + 3*184*FLEN/8, x4, x1, x2)

inst_953:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8091ffffffffffff; valaddr_reg:x3; val_offset:2859*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2859*0 + 3*185*FLEN/8, x4, x1, x2)

inst_954:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8093ffffffffffff; valaddr_reg:x3; val_offset:2862*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2862*0 + 3*186*FLEN/8, x4, x1, x2)

inst_955:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8097ffffffffffff; valaddr_reg:x3; val_offset:2865*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2865*0 + 3*187*FLEN/8, x4, x1, x2)

inst_956:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x8098000000000000; valaddr_reg:x3; val_offset:2868*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2868*0 + 3*188*FLEN/8, x4, x1, x2)

inst_957:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809c000000000000; valaddr_reg:x3; val_offset:2871*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2871*0 + 3*189*FLEN/8, x4, x1, x2)

inst_958:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809e000000000000; valaddr_reg:x3; val_offset:2874*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2874*0 + 3*190*FLEN/8, x4, x1, x2)

inst_959:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809f000000000000; valaddr_reg:x3; val_offset:2877*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2877*0 + 3*191*FLEN/8, x4, x1, x2)

inst_960:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809f800000000000; valaddr_reg:x3; val_offset:2880*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2880*0 + 3*192*FLEN/8, x4, x1, x2)

inst_961:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fc00000000000; valaddr_reg:x3; val_offset:2883*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2883*0 + 3*193*FLEN/8, x4, x1, x2)

inst_962:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fe00000000000; valaddr_reg:x3; val_offset:2886*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2886*0 + 3*194*FLEN/8, x4, x1, x2)

inst_963:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ff00000000000; valaddr_reg:x3; val_offset:2889*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2889*0 + 3*195*FLEN/8, x4, x1, x2)

inst_964:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ff80000000000; valaddr_reg:x3; val_offset:2892*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2892*0 + 3*196*FLEN/8, x4, x1, x2)

inst_965:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffc0000000000; valaddr_reg:x3; val_offset:2895*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2895*0 + 3*197*FLEN/8, x4, x1, x2)

inst_966:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffe0000000000; valaddr_reg:x3; val_offset:2898*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2898*0 + 3*198*FLEN/8, x4, x1, x2)

inst_967:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fff0000000000; valaddr_reg:x3; val_offset:2901*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2901*0 + 3*199*FLEN/8, x4, x1, x2)

inst_968:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fff8000000000; valaddr_reg:x3; val_offset:2904*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2904*0 + 3*200*FLEN/8, x4, x1, x2)

inst_969:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffc000000000; valaddr_reg:x3; val_offset:2907*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2907*0 + 3*201*FLEN/8, x4, x1, x2)

inst_970:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffe000000000; valaddr_reg:x3; val_offset:2910*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2910*0 + 3*202*FLEN/8, x4, x1, x2)

inst_971:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffff000000000; valaddr_reg:x3; val_offset:2913*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2913*0 + 3*203*FLEN/8, x4, x1, x2)

inst_972:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffff800000000; valaddr_reg:x3; val_offset:2916*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2916*0 + 3*204*FLEN/8, x4, x1, x2)

inst_973:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffc00000000; valaddr_reg:x3; val_offset:2919*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2919*0 + 3*205*FLEN/8, x4, x1, x2)

inst_974:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffe00000000; valaddr_reg:x3; val_offset:2922*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2922*0 + 3*206*FLEN/8, x4, x1, x2)

inst_975:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffff00000000; valaddr_reg:x3; val_offset:2925*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2925*0 + 3*207*FLEN/8, x4, x1, x2)

inst_976:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffff80000000; valaddr_reg:x3; val_offset:2928*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2928*0 + 3*208*FLEN/8, x4, x1, x2)

inst_977:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffc0000000; valaddr_reg:x3; val_offset:2931*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2931*0 + 3*209*FLEN/8, x4, x1, x2)

inst_978:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffe0000000; valaddr_reg:x3; val_offset:2934*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2934*0 + 3*210*FLEN/8, x4, x1, x2)

inst_979:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffff0000000; valaddr_reg:x3; val_offset:2937*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2937*0 + 3*211*FLEN/8, x4, x1, x2)

inst_980:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffff8000000; valaddr_reg:x3; val_offset:2940*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2940*0 + 3*212*FLEN/8, x4, x1, x2)

inst_981:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffc000000; valaddr_reg:x3; val_offset:2943*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2943*0 + 3*213*FLEN/8, x4, x1, x2)

inst_982:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffe000000; valaddr_reg:x3; val_offset:2946*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2946*0 + 3*214*FLEN/8, x4, x1, x2)

inst_983:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffff000000; valaddr_reg:x3; val_offset:2949*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2949*0 + 3*215*FLEN/8, x4, x1, x2)

inst_984:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffff800000; valaddr_reg:x3; val_offset:2952*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2952*0 + 3*216*FLEN/8, x4, x1, x2)

inst_985:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffffc00000; valaddr_reg:x3; val_offset:2955*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2955*0 + 3*217*FLEN/8, x4, x1, x2)

inst_986:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffffe00000; valaddr_reg:x3; val_offset:2958*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2958*0 + 3*218*FLEN/8, x4, x1, x2)

inst_987:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffff00000; valaddr_reg:x3; val_offset:2961*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2961*0 + 3*219*FLEN/8, x4, x1, x2)

inst_988:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffff80000; valaddr_reg:x3; val_offset:2964*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2964*0 + 3*220*FLEN/8, x4, x1, x2)

inst_989:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffffc0000; valaddr_reg:x3; val_offset:2967*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2967*0 + 3*221*FLEN/8, x4, x1, x2)

inst_990:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffffe0000; valaddr_reg:x3; val_offset:2970*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2970*0 + 3*222*FLEN/8, x4, x1, x2)

inst_991:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffffff0000; valaddr_reg:x3; val_offset:2973*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2973*0 + 3*223*FLEN/8, x4, x1, x2)

inst_992:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffffff8000; valaddr_reg:x3; val_offset:2976*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2976*0 + 3*224*FLEN/8, x4, x1, x2)

inst_993:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffffffc000; valaddr_reg:x3; val_offset:2979*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2979*0 + 3*225*FLEN/8, x4, x1, x2)

inst_994:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffffffe000; valaddr_reg:x3; val_offset:2982*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2982*0 + 3*226*FLEN/8, x4, x1, x2)

inst_995:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffffff000; valaddr_reg:x3; val_offset:2985*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2985*0 + 3*227*FLEN/8, x4, x1, x2)

inst_996:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffffff800; valaddr_reg:x3; val_offset:2988*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2988*0 + 3*228*FLEN/8, x4, x1, x2)

inst_997:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffffffc00; valaddr_reg:x3; val_offset:2991*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2991*0 + 3*229*FLEN/8, x4, x1, x2)

inst_998:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffffffe00; valaddr_reg:x3; val_offset:2994*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2994*0 + 3*230*FLEN/8, x4, x1, x2)

inst_999:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffffffff00; valaddr_reg:x3; val_offset:2997*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 2997*0 + 3*231*FLEN/8, x4, x1, x2)

inst_1000:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffffffff80; valaddr_reg:x3; val_offset:3000*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3000*0 + 3*232*FLEN/8, x4, x1, x2)

inst_1001:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffffffffc0; valaddr_reg:x3; val_offset:3003*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3003*0 + 3*233*FLEN/8, x4, x1, x2)

inst_1002:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffffffffe0; valaddr_reg:x3; val_offset:3006*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3006*0 + 3*234*FLEN/8, x4, x1, x2)

inst_1003:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffffffff0; valaddr_reg:x3; val_offset:3009*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3009*0 + 3*235*FLEN/8, x4, x1, x2)

inst_1004:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffffffff8; valaddr_reg:x3; val_offset:3012*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3012*0 + 3*236*FLEN/8, x4, x1, x2)

inst_1005:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffffffffc; valaddr_reg:x3; val_offset:3015*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3015*0 + 3*237*FLEN/8, x4, x1, x2)

inst_1006:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809ffffffffffffe; valaddr_reg:x3; val_offset:3018*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3018*0 + 3*238*FLEN/8, x4, x1, x2)

inst_1007:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x0d4af59747fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f40d4af59747fbf; op2val:0x8000;
op3val:0x809fffffffffffff; valaddr_reg:x3; val_offset:3021*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3021*0 + 3*239*FLEN/8, x4, x1, x2)

inst_1008:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:3024*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3024*0 + 3*240*FLEN/8, x4, x1, x2)

inst_1009:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:3027*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3027*0 + 3*241*FLEN/8, x4, x1, x2)

inst_1010:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:3030*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3030*0 + 3*242*FLEN/8, x4, x1, x2)

inst_1011:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:3033*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3033*0 + 3*243*FLEN/8, x4, x1, x2)

inst_1012:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:3036*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3036*0 + 3*244*FLEN/8, x4, x1, x2)

inst_1013:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:3039*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3039*0 + 3*245*FLEN/8, x4, x1, x2)

inst_1014:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:3042*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3042*0 + 3*246*FLEN/8, x4, x1, x2)

inst_1015:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:3045*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3045*0 + 3*247*FLEN/8, x4, x1, x2)

inst_1016:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:3048*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3048*0 + 3*248*FLEN/8, x4, x1, x2)

inst_1017:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:3051*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3051*0 + 3*249*FLEN/8, x4, x1, x2)

inst_1018:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:3054*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3054*0 + 3*250*FLEN/8, x4, x1, x2)

inst_1019:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:3057*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3057*0 + 3*251*FLEN/8, x4, x1, x2)

inst_1020:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:3060*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3060*0 + 3*252*FLEN/8, x4, x1, x2)

inst_1021:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:3063*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3063*0 + 3*253*FLEN/8, x4, x1, x2)

inst_1022:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:3066*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3066*0 + 3*254*FLEN/8, x4, x1, x2)

inst_1023:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:3069*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3069*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_1024:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:3072*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3072*0 + 3*256*FLEN/8, x4, x1, x2)

inst_1025:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:3075*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3075*0 + 3*257*FLEN/8, x4, x1, x2)

inst_1026:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:3078*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3078*0 + 3*258*FLEN/8, x4, x1, x2)

inst_1027:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:3081*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3081*0 + 3*259*FLEN/8, x4, x1, x2)

inst_1028:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:3084*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3084*0 + 3*260*FLEN/8, x4, x1, x2)

inst_1029:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:3087*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3087*0 + 3*261*FLEN/8, x4, x1, x2)

inst_1030:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000000000000; valaddr_reg:x3; val_offset:3090*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3090*0 + 3*262*FLEN/8, x4, x1, x2)

inst_1031:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000000000001; valaddr_reg:x3; val_offset:3093*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3093*0 + 3*263*FLEN/8, x4, x1, x2)

inst_1032:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000000000003; valaddr_reg:x3; val_offset:3096*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3096*0 + 3*264*FLEN/8, x4, x1, x2)

inst_1033:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000000000007; valaddr_reg:x3; val_offset:3099*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3099*0 + 3*265*FLEN/8, x4, x1, x2)

inst_1034:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000000000000f; valaddr_reg:x3; val_offset:3102*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3102*0 + 3*266*FLEN/8, x4, x1, x2)

inst_1035:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000000000001f; valaddr_reg:x3; val_offset:3105*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3105*0 + 3*267*FLEN/8, x4, x1, x2)

inst_1036:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000000000003f; valaddr_reg:x3; val_offset:3108*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3108*0 + 3*268*FLEN/8, x4, x1, x2)

inst_1037:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000000000007f; valaddr_reg:x3; val_offset:3111*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3111*0 + 3*269*FLEN/8, x4, x1, x2)

inst_1038:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700000000000ff; valaddr_reg:x3; val_offset:3114*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3114*0 + 3*270*FLEN/8, x4, x1, x2)

inst_1039:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700000000001ff; valaddr_reg:x3; val_offset:3117*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3117*0 + 3*271*FLEN/8, x4, x1, x2)

inst_1040:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700000000003ff; valaddr_reg:x3; val_offset:3120*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3120*0 + 3*272*FLEN/8, x4, x1, x2)

inst_1041:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700000000007ff; valaddr_reg:x3; val_offset:3123*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3123*0 + 3*273*FLEN/8, x4, x1, x2)

inst_1042:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000000000fff; valaddr_reg:x3; val_offset:3126*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3126*0 + 3*274*FLEN/8, x4, x1, x2)

inst_1043:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000000001fff; valaddr_reg:x3; val_offset:3129*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3129*0 + 3*275*FLEN/8, x4, x1, x2)

inst_1044:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000000003fff; valaddr_reg:x3; val_offset:3132*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3132*0 + 3*276*FLEN/8, x4, x1, x2)

inst_1045:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000000007fff; valaddr_reg:x3; val_offset:3135*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3135*0 + 3*277*FLEN/8, x4, x1, x2)

inst_1046:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000000000ffff; valaddr_reg:x3; val_offset:3138*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3138*0 + 3*278*FLEN/8, x4, x1, x2)

inst_1047:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000000001ffff; valaddr_reg:x3; val_offset:3141*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3141*0 + 3*279*FLEN/8, x4, x1, x2)

inst_1048:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000000003ffff; valaddr_reg:x3; val_offset:3144*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3144*0 + 3*280*FLEN/8, x4, x1, x2)

inst_1049:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000000007ffff; valaddr_reg:x3; val_offset:3147*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3147*0 + 3*281*FLEN/8, x4, x1, x2)

inst_1050:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700000000fffff; valaddr_reg:x3; val_offset:3150*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3150*0 + 3*282*FLEN/8, x4, x1, x2)

inst_1051:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700000001fffff; valaddr_reg:x3; val_offset:3153*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3153*0 + 3*283*FLEN/8, x4, x1, x2)

inst_1052:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700000003fffff; valaddr_reg:x3; val_offset:3156*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3156*0 + 3*284*FLEN/8, x4, x1, x2)

inst_1053:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700000007fffff; valaddr_reg:x3; val_offset:3159*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3159*0 + 3*285*FLEN/8, x4, x1, x2)

inst_1054:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000000ffffff; valaddr_reg:x3; val_offset:3162*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3162*0 + 3*286*FLEN/8, x4, x1, x2)

inst_1055:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000001ffffff; valaddr_reg:x3; val_offset:3165*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3165*0 + 3*287*FLEN/8, x4, x1, x2)

inst_1056:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000003ffffff; valaddr_reg:x3; val_offset:3168*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3168*0 + 3*288*FLEN/8, x4, x1, x2)

inst_1057:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000007ffffff; valaddr_reg:x3; val_offset:3171*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3171*0 + 3*289*FLEN/8, x4, x1, x2)

inst_1058:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000000fffffff; valaddr_reg:x3; val_offset:3174*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3174*0 + 3*290*FLEN/8, x4, x1, x2)

inst_1059:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000001fffffff; valaddr_reg:x3; val_offset:3177*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3177*0 + 3*291*FLEN/8, x4, x1, x2)

inst_1060:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000003fffffff; valaddr_reg:x3; val_offset:3180*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3180*0 + 3*292*FLEN/8, x4, x1, x2)

inst_1061:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000007fffffff; valaddr_reg:x3; val_offset:3183*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3183*0 + 3*293*FLEN/8, x4, x1, x2)

inst_1062:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700000ffffffff; valaddr_reg:x3; val_offset:3186*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3186*0 + 3*294*FLEN/8, x4, x1, x2)

inst_1063:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700001ffffffff; valaddr_reg:x3; val_offset:3189*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3189*0 + 3*295*FLEN/8, x4, x1, x2)

inst_1064:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700003ffffffff; valaddr_reg:x3; val_offset:3192*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3192*0 + 3*296*FLEN/8, x4, x1, x2)

inst_1065:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700007ffffffff; valaddr_reg:x3; val_offset:3195*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3195*0 + 3*297*FLEN/8, x4, x1, x2)

inst_1066:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370000fffffffff; valaddr_reg:x3; val_offset:3198*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3198*0 + 3*298*FLEN/8, x4, x1, x2)

inst_1067:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370001fffffffff; valaddr_reg:x3; val_offset:3201*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3201*0 + 3*299*FLEN/8, x4, x1, x2)

inst_1068:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370003fffffffff; valaddr_reg:x3; val_offset:3204*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3204*0 + 3*300*FLEN/8, x4, x1, x2)

inst_1069:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370007fffffffff; valaddr_reg:x3; val_offset:3207*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3207*0 + 3*301*FLEN/8, x4, x1, x2)

inst_1070:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37000ffffffffff; valaddr_reg:x3; val_offset:3210*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3210*0 + 3*302*FLEN/8, x4, x1, x2)

inst_1071:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37001ffffffffff; valaddr_reg:x3; val_offset:3213*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3213*0 + 3*303*FLEN/8, x4, x1, x2)

inst_1072:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37003ffffffffff; valaddr_reg:x3; val_offset:3216*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3216*0 + 3*304*FLEN/8, x4, x1, x2)

inst_1073:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37007ffffffffff; valaddr_reg:x3; val_offset:3219*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3219*0 + 3*305*FLEN/8, x4, x1, x2)

inst_1074:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3700fffffffffff; valaddr_reg:x3; val_offset:3222*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3222*0 + 3*306*FLEN/8, x4, x1, x2)

inst_1075:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3701fffffffffff; valaddr_reg:x3; val_offset:3225*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3225*0 + 3*307*FLEN/8, x4, x1, x2)

inst_1076:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3703fffffffffff; valaddr_reg:x3; val_offset:3228*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3228*0 + 3*308*FLEN/8, x4, x1, x2)

inst_1077:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x3707fffffffffff; valaddr_reg:x3; val_offset:3231*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3231*0 + 3*309*FLEN/8, x4, x1, x2)

inst_1078:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x370ffffffffffff; valaddr_reg:x3; val_offset:3234*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3234*0 + 3*310*FLEN/8, x4, x1, x2)

inst_1079:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x371ffffffffffff; valaddr_reg:x3; val_offset:3237*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3237*0 + 3*311*FLEN/8, x4, x1, x2)

inst_1080:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x373ffffffffffff; valaddr_reg:x3; val_offset:3240*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3240*0 + 3*312*FLEN/8, x4, x1, x2)

inst_1081:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x377ffffffffffff; valaddr_reg:x3; val_offset:3243*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3243*0 + 3*313*FLEN/8, x4, x1, x2)

inst_1082:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x378000000000000; valaddr_reg:x3; val_offset:3246*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3246*0 + 3*314*FLEN/8, x4, x1, x2)

inst_1083:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37c000000000000; valaddr_reg:x3; val_offset:3249*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3249*0 + 3*315*FLEN/8, x4, x1, x2)

inst_1084:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37e000000000000; valaddr_reg:x3; val_offset:3252*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3252*0 + 3*316*FLEN/8, x4, x1, x2)

inst_1085:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37f000000000000; valaddr_reg:x3; val_offset:3255*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3255*0 + 3*317*FLEN/8, x4, x1, x2)

inst_1086:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37f800000000000; valaddr_reg:x3; val_offset:3258*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3258*0 + 3*318*FLEN/8, x4, x1, x2)

inst_1087:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fc00000000000; valaddr_reg:x3; val_offset:3261*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3261*0 + 3*319*FLEN/8, x4, x1, x2)

inst_1088:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fe00000000000; valaddr_reg:x3; val_offset:3264*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3264*0 + 3*320*FLEN/8, x4, x1, x2)

inst_1089:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ff00000000000; valaddr_reg:x3; val_offset:3267*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3267*0 + 3*321*FLEN/8, x4, x1, x2)

inst_1090:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ff80000000000; valaddr_reg:x3; val_offset:3270*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3270*0 + 3*322*FLEN/8, x4, x1, x2)

inst_1091:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffc0000000000; valaddr_reg:x3; val_offset:3273*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3273*0 + 3*323*FLEN/8, x4, x1, x2)

inst_1092:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffe0000000000; valaddr_reg:x3; val_offset:3276*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3276*0 + 3*324*FLEN/8, x4, x1, x2)

inst_1093:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fff0000000000; valaddr_reg:x3; val_offset:3279*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3279*0 + 3*325*FLEN/8, x4, x1, x2)

inst_1094:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fff8000000000; valaddr_reg:x3; val_offset:3282*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3282*0 + 3*326*FLEN/8, x4, x1, x2)

inst_1095:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffc000000000; valaddr_reg:x3; val_offset:3285*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3285*0 + 3*327*FLEN/8, x4, x1, x2)

inst_1096:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffe000000000; valaddr_reg:x3; val_offset:3288*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3288*0 + 3*328*FLEN/8, x4, x1, x2)

inst_1097:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffff000000000; valaddr_reg:x3; val_offset:3291*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3291*0 + 3*329*FLEN/8, x4, x1, x2)

inst_1098:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffff800000000; valaddr_reg:x3; val_offset:3294*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3294*0 + 3*330*FLEN/8, x4, x1, x2)

inst_1099:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffc00000000; valaddr_reg:x3; val_offset:3297*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3297*0 + 3*331*FLEN/8, x4, x1, x2)

inst_1100:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffe00000000; valaddr_reg:x3; val_offset:3300*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3300*0 + 3*332*FLEN/8, x4, x1, x2)

inst_1101:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffff00000000; valaddr_reg:x3; val_offset:3303*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3303*0 + 3*333*FLEN/8, x4, x1, x2)

inst_1102:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffff80000000; valaddr_reg:x3; val_offset:3306*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3306*0 + 3*334*FLEN/8, x4, x1, x2)

inst_1103:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffc0000000; valaddr_reg:x3; val_offset:3309*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3309*0 + 3*335*FLEN/8, x4, x1, x2)

inst_1104:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffe0000000; valaddr_reg:x3; val_offset:3312*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3312*0 + 3*336*FLEN/8, x4, x1, x2)

inst_1105:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffff0000000; valaddr_reg:x3; val_offset:3315*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3315*0 + 3*337*FLEN/8, x4, x1, x2)

inst_1106:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffff8000000; valaddr_reg:x3; val_offset:3318*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3318*0 + 3*338*FLEN/8, x4, x1, x2)

inst_1107:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffc000000; valaddr_reg:x3; val_offset:3321*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3321*0 + 3*339*FLEN/8, x4, x1, x2)

inst_1108:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffe000000; valaddr_reg:x3; val_offset:3324*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3324*0 + 3*340*FLEN/8, x4, x1, x2)

inst_1109:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffff000000; valaddr_reg:x3; val_offset:3327*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3327*0 + 3*341*FLEN/8, x4, x1, x2)

inst_1110:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffff800000; valaddr_reg:x3; val_offset:3330*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3330*0 + 3*342*FLEN/8, x4, x1, x2)

inst_1111:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffffc00000; valaddr_reg:x3; val_offset:3333*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3333*0 + 3*343*FLEN/8, x4, x1, x2)

inst_1112:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffffe00000; valaddr_reg:x3; val_offset:3336*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3336*0 + 3*344*FLEN/8, x4, x1, x2)

inst_1113:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffff00000; valaddr_reg:x3; val_offset:3339*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3339*0 + 3*345*FLEN/8, x4, x1, x2)

inst_1114:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffff80000; valaddr_reg:x3; val_offset:3342*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3342*0 + 3*346*FLEN/8, x4, x1, x2)

inst_1115:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffffc0000; valaddr_reg:x3; val_offset:3345*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3345*0 + 3*347*FLEN/8, x4, x1, x2)

inst_1116:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffffe0000; valaddr_reg:x3; val_offset:3348*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3348*0 + 3*348*FLEN/8, x4, x1, x2)

inst_1117:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffffff0000; valaddr_reg:x3; val_offset:3351*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3351*0 + 3*349*FLEN/8, x4, x1, x2)

inst_1118:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffffff8000; valaddr_reg:x3; val_offset:3354*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3354*0 + 3*350*FLEN/8, x4, x1, x2)

inst_1119:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffffffc000; valaddr_reg:x3; val_offset:3357*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3357*0 + 3*351*FLEN/8, x4, x1, x2)

inst_1120:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffffffe000; valaddr_reg:x3; val_offset:3360*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3360*0 + 3*352*FLEN/8, x4, x1, x2)

inst_1121:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffffff000; valaddr_reg:x3; val_offset:3363*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3363*0 + 3*353*FLEN/8, x4, x1, x2)

inst_1122:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffffff800; valaddr_reg:x3; val_offset:3366*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3366*0 + 3*354*FLEN/8, x4, x1, x2)

inst_1123:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffffffc00; valaddr_reg:x3; val_offset:3369*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3369*0 + 3*355*FLEN/8, x4, x1, x2)

inst_1124:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffffffe00; valaddr_reg:x3; val_offset:3372*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3372*0 + 3*356*FLEN/8, x4, x1, x2)

inst_1125:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffffffff00; valaddr_reg:x3; val_offset:3375*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3375*0 + 3*357*FLEN/8, x4, x1, x2)

inst_1126:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffffffff80; valaddr_reg:x3; val_offset:3378*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3378*0 + 3*358*FLEN/8, x4, x1, x2)

inst_1127:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffffffffc0; valaddr_reg:x3; val_offset:3381*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3381*0 + 3*359*FLEN/8, x4, x1, x2)

inst_1128:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffffffffe0; valaddr_reg:x3; val_offset:3384*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3384*0 + 3*360*FLEN/8, x4, x1, x2)

inst_1129:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffffffff0; valaddr_reg:x3; val_offset:3387*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3387*0 + 3*361*FLEN/8, x4, x1, x2)

inst_1130:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffffffff8; valaddr_reg:x3; val_offset:3390*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3390*0 + 3*362*FLEN/8, x4, x1, x2)

inst_1131:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffffffffc; valaddr_reg:x3; val_offset:3393*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3393*0 + 3*363*FLEN/8, x4, x1, x2)

inst_1132:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37ffffffffffffe; valaddr_reg:x3; val_offset:3396*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3396*0 + 3*364*FLEN/8, x4, x1, x2)

inst_1133:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x12cab8aed7eff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f412cab8aed7eff; op2val:0x0;
op3val:0x37fffffffffffff; valaddr_reg:x3; val_offset:3399*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3399*0 + 3*365*FLEN/8, x4, x1, x2)

inst_1134:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:3402*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3402*0 + 3*366*FLEN/8, x4, x1, x2)

inst_1135:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:3405*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3405*0 + 3*367*FLEN/8, x4, x1, x2)

inst_1136:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:3408*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3408*0 + 3*368*FLEN/8, x4, x1, x2)

inst_1137:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:3411*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3411*0 + 3*369*FLEN/8, x4, x1, x2)

inst_1138:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:3414*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3414*0 + 3*370*FLEN/8, x4, x1, x2)

inst_1139:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:3417*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3417*0 + 3*371*FLEN/8, x4, x1, x2)

inst_1140:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:3420*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3420*0 + 3*372*FLEN/8, x4, x1, x2)

inst_1141:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:3423*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3423*0 + 3*373*FLEN/8, x4, x1, x2)

inst_1142:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:3426*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3426*0 + 3*374*FLEN/8, x4, x1, x2)

inst_1143:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:3429*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3429*0 + 3*375*FLEN/8, x4, x1, x2)

inst_1144:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:3432*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3432*0 + 3*376*FLEN/8, x4, x1, x2)

inst_1145:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:3435*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3435*0 + 3*377*FLEN/8, x4, x1, x2)

inst_1146:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:3438*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3438*0 + 3*378*FLEN/8, x4, x1, x2)

inst_1147:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:3441*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3441*0 + 3*379*FLEN/8, x4, x1, x2)

inst_1148:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:3444*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3444*0 + 3*380*FLEN/8, x4, x1, x2)

inst_1149:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:3447*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3447*0 + 3*381*FLEN/8, x4, x1, x2)

inst_1150:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:3450*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3450*0 + 3*382*FLEN/8, x4, x1, x2)

inst_1151:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:3453*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3453*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_1152:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:3456*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3456*0 + 3*384*FLEN/8, x4, x1, x2)

inst_1153:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:3459*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3459*0 + 3*385*FLEN/8, x4, x1, x2)

inst_1154:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:3462*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3462*0 + 3*386*FLEN/8, x4, x1, x2)

inst_1155:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:3465*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3465*0 + 3*387*FLEN/8, x4, x1, x2)

inst_1156:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000000000000; valaddr_reg:x3; val_offset:3468*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3468*0 + 3*388*FLEN/8, x4, x1, x2)

inst_1157:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000000000001; valaddr_reg:x3; val_offset:3471*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3471*0 + 3*389*FLEN/8, x4, x1, x2)

inst_1158:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000000000003; valaddr_reg:x3; val_offset:3474*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3474*0 + 3*390*FLEN/8, x4, x1, x2)

inst_1159:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000000000007; valaddr_reg:x3; val_offset:3477*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3477*0 + 3*391*FLEN/8, x4, x1, x2)

inst_1160:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000000000000f; valaddr_reg:x3; val_offset:3480*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3480*0 + 3*392*FLEN/8, x4, x1, x2)

inst_1161:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000000000001f; valaddr_reg:x3; val_offset:3483*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3483*0 + 3*393*FLEN/8, x4, x1, x2)

inst_1162:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000000000003f; valaddr_reg:x3; val_offset:3486*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3486*0 + 3*394*FLEN/8, x4, x1, x2)

inst_1163:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000000000007f; valaddr_reg:x3; val_offset:3489*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3489*0 + 3*395*FLEN/8, x4, x1, x2)

inst_1164:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00000000000ff; valaddr_reg:x3; val_offset:3492*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3492*0 + 3*396*FLEN/8, x4, x1, x2)

inst_1165:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00000000001ff; valaddr_reg:x3; val_offset:3495*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3495*0 + 3*397*FLEN/8, x4, x1, x2)

inst_1166:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00000000003ff; valaddr_reg:x3; val_offset:3498*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3498*0 + 3*398*FLEN/8, x4, x1, x2)

inst_1167:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00000000007ff; valaddr_reg:x3; val_offset:3501*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3501*0 + 3*399*FLEN/8, x4, x1, x2)

inst_1168:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000000000fff; valaddr_reg:x3; val_offset:3504*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3504*0 + 3*400*FLEN/8, x4, x1, x2)

inst_1169:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000000001fff; valaddr_reg:x3; val_offset:3507*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3507*0 + 3*401*FLEN/8, x4, x1, x2)

inst_1170:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000000003fff; valaddr_reg:x3; val_offset:3510*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3510*0 + 3*402*FLEN/8, x4, x1, x2)

inst_1171:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000000007fff; valaddr_reg:x3; val_offset:3513*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3513*0 + 3*403*FLEN/8, x4, x1, x2)

inst_1172:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000000000ffff; valaddr_reg:x3; val_offset:3516*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3516*0 + 3*404*FLEN/8, x4, x1, x2)

inst_1173:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000000001ffff; valaddr_reg:x3; val_offset:3519*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3519*0 + 3*405*FLEN/8, x4, x1, x2)

inst_1174:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000000003ffff; valaddr_reg:x3; val_offset:3522*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3522*0 + 3*406*FLEN/8, x4, x1, x2)

inst_1175:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000000007ffff; valaddr_reg:x3; val_offset:3525*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3525*0 + 3*407*FLEN/8, x4, x1, x2)

inst_1176:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00000000fffff; valaddr_reg:x3; val_offset:3528*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3528*0 + 3*408*FLEN/8, x4, x1, x2)

inst_1177:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00000001fffff; valaddr_reg:x3; val_offset:3531*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3531*0 + 3*409*FLEN/8, x4, x1, x2)

inst_1178:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00000003fffff; valaddr_reg:x3; val_offset:3534*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3534*0 + 3*410*FLEN/8, x4, x1, x2)

inst_1179:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00000007fffff; valaddr_reg:x3; val_offset:3537*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3537*0 + 3*411*FLEN/8, x4, x1, x2)

inst_1180:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000000ffffff; valaddr_reg:x3; val_offset:3540*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3540*0 + 3*412*FLEN/8, x4, x1, x2)

inst_1181:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000001ffffff; valaddr_reg:x3; val_offset:3543*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3543*0 + 3*413*FLEN/8, x4, x1, x2)

inst_1182:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000003ffffff; valaddr_reg:x3; val_offset:3546*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3546*0 + 3*414*FLEN/8, x4, x1, x2)

inst_1183:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000007ffffff; valaddr_reg:x3; val_offset:3549*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3549*0 + 3*415*FLEN/8, x4, x1, x2)

inst_1184:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000000fffffff; valaddr_reg:x3; val_offset:3552*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3552*0 + 3*416*FLEN/8, x4, x1, x2)

inst_1185:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000001fffffff; valaddr_reg:x3; val_offset:3555*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3555*0 + 3*417*FLEN/8, x4, x1, x2)

inst_1186:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000003fffffff; valaddr_reg:x3; val_offset:3558*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3558*0 + 3*418*FLEN/8, x4, x1, x2)

inst_1187:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000007fffffff; valaddr_reg:x3; val_offset:3561*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3561*0 + 3*419*FLEN/8, x4, x1, x2)

inst_1188:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00000ffffffff; valaddr_reg:x3; val_offset:3564*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3564*0 + 3*420*FLEN/8, x4, x1, x2)

inst_1189:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00001ffffffff; valaddr_reg:x3; val_offset:3567*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3567*0 + 3*421*FLEN/8, x4, x1, x2)

inst_1190:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00003ffffffff; valaddr_reg:x3; val_offset:3570*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3570*0 + 3*422*FLEN/8, x4, x1, x2)

inst_1191:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00007ffffffff; valaddr_reg:x3; val_offset:3573*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3573*0 + 3*423*FLEN/8, x4, x1, x2)

inst_1192:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0000fffffffff; valaddr_reg:x3; val_offset:3576*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3576*0 + 3*424*FLEN/8, x4, x1, x2)

inst_1193:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0001fffffffff; valaddr_reg:x3; val_offset:3579*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3579*0 + 3*425*FLEN/8, x4, x1, x2)

inst_1194:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0003fffffffff; valaddr_reg:x3; val_offset:3582*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3582*0 + 3*426*FLEN/8, x4, x1, x2)

inst_1195:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0007fffffffff; valaddr_reg:x3; val_offset:3585*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3585*0 + 3*427*FLEN/8, x4, x1, x2)

inst_1196:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d000ffffffffff; valaddr_reg:x3; val_offset:3588*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3588*0 + 3*428*FLEN/8, x4, x1, x2)

inst_1197:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d001ffffffffff; valaddr_reg:x3; val_offset:3591*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3591*0 + 3*429*FLEN/8, x4, x1, x2)

inst_1198:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d003ffffffffff; valaddr_reg:x3; val_offset:3594*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3594*0 + 3*430*FLEN/8, x4, x1, x2)

inst_1199:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d007ffffffffff; valaddr_reg:x3; val_offset:3597*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3597*0 + 3*431*FLEN/8, x4, x1, x2)

inst_1200:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d00fffffffffff; valaddr_reg:x3; val_offset:3600*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3600*0 + 3*432*FLEN/8, x4, x1, x2)

inst_1201:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d01fffffffffff; valaddr_reg:x3; val_offset:3603*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3603*0 + 3*433*FLEN/8, x4, x1, x2)

inst_1202:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d03fffffffffff; valaddr_reg:x3; val_offset:3606*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3606*0 + 3*434*FLEN/8, x4, x1, x2)

inst_1203:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d07fffffffffff; valaddr_reg:x3; val_offset:3609*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3609*0 + 3*435*FLEN/8, x4, x1, x2)

inst_1204:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d0ffffffffffff; valaddr_reg:x3; val_offset:3612*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3612*0 + 3*436*FLEN/8, x4, x1, x2)

inst_1205:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d1ffffffffffff; valaddr_reg:x3; val_offset:3615*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3615*0 + 3*437*FLEN/8, x4, x1, x2)

inst_1206:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d3ffffffffffff; valaddr_reg:x3; val_offset:3618*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3618*0 + 3*438*FLEN/8, x4, x1, x2)

inst_1207:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d7ffffffffffff; valaddr_reg:x3; val_offset:3621*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3621*0 + 3*439*FLEN/8, x4, x1, x2)

inst_1208:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80d8000000000000; valaddr_reg:x3; val_offset:3624*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3624*0 + 3*440*FLEN/8, x4, x1, x2)

inst_1209:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dc000000000000; valaddr_reg:x3; val_offset:3627*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3627*0 + 3*441*FLEN/8, x4, x1, x2)

inst_1210:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80de000000000000; valaddr_reg:x3; val_offset:3630*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3630*0 + 3*442*FLEN/8, x4, x1, x2)

inst_1211:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80df000000000000; valaddr_reg:x3; val_offset:3633*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3633*0 + 3*443*FLEN/8, x4, x1, x2)

inst_1212:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80df800000000000; valaddr_reg:x3; val_offset:3636*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3636*0 + 3*444*FLEN/8, x4, x1, x2)

inst_1213:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfc00000000000; valaddr_reg:x3; val_offset:3639*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3639*0 + 3*445*FLEN/8, x4, x1, x2)

inst_1214:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfe00000000000; valaddr_reg:x3; val_offset:3642*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3642*0 + 3*446*FLEN/8, x4, x1, x2)

inst_1215:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dff00000000000; valaddr_reg:x3; val_offset:3645*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3645*0 + 3*447*FLEN/8, x4, x1, x2)

inst_1216:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dff80000000000; valaddr_reg:x3; val_offset:3648*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3648*0 + 3*448*FLEN/8, x4, x1, x2)

inst_1217:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffc0000000000; valaddr_reg:x3; val_offset:3651*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3651*0 + 3*449*FLEN/8, x4, x1, x2)

inst_1218:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffe0000000000; valaddr_reg:x3; val_offset:3654*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3654*0 + 3*450*FLEN/8, x4, x1, x2)

inst_1219:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfff0000000000; valaddr_reg:x3; val_offset:3657*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3657*0 + 3*451*FLEN/8, x4, x1, x2)

inst_1220:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfff8000000000; valaddr_reg:x3; val_offset:3660*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3660*0 + 3*452*FLEN/8, x4, x1, x2)

inst_1221:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffc000000000; valaddr_reg:x3; val_offset:3663*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3663*0 + 3*453*FLEN/8, x4, x1, x2)

inst_1222:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffe000000000; valaddr_reg:x3; val_offset:3666*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3666*0 + 3*454*FLEN/8, x4, x1, x2)

inst_1223:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffff000000000; valaddr_reg:x3; val_offset:3669*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3669*0 + 3*455*FLEN/8, x4, x1, x2)

inst_1224:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffff800000000; valaddr_reg:x3; val_offset:3672*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3672*0 + 3*456*FLEN/8, x4, x1, x2)

inst_1225:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffc00000000; valaddr_reg:x3; val_offset:3675*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3675*0 + 3*457*FLEN/8, x4, x1, x2)

inst_1226:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffe00000000; valaddr_reg:x3; val_offset:3678*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3678*0 + 3*458*FLEN/8, x4, x1, x2)

inst_1227:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffff00000000; valaddr_reg:x3; val_offset:3681*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3681*0 + 3*459*FLEN/8, x4, x1, x2)

inst_1228:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffff80000000; valaddr_reg:x3; val_offset:3684*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3684*0 + 3*460*FLEN/8, x4, x1, x2)

inst_1229:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffc0000000; valaddr_reg:x3; val_offset:3687*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3687*0 + 3*461*FLEN/8, x4, x1, x2)

inst_1230:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffe0000000; valaddr_reg:x3; val_offset:3690*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3690*0 + 3*462*FLEN/8, x4, x1, x2)

inst_1231:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffff0000000; valaddr_reg:x3; val_offset:3693*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3693*0 + 3*463*FLEN/8, x4, x1, x2)

inst_1232:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffff8000000; valaddr_reg:x3; val_offset:3696*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3696*0 + 3*464*FLEN/8, x4, x1, x2)

inst_1233:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffc000000; valaddr_reg:x3; val_offset:3699*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3699*0 + 3*465*FLEN/8, x4, x1, x2)

inst_1234:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffe000000; valaddr_reg:x3; val_offset:3702*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3702*0 + 3*466*FLEN/8, x4, x1, x2)

inst_1235:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffff000000; valaddr_reg:x3; val_offset:3705*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3705*0 + 3*467*FLEN/8, x4, x1, x2)

inst_1236:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffff800000; valaddr_reg:x3; val_offset:3708*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3708*0 + 3*468*FLEN/8, x4, x1, x2)

inst_1237:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffffc00000; valaddr_reg:x3; val_offset:3711*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3711*0 + 3*469*FLEN/8, x4, x1, x2)

inst_1238:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffffe00000; valaddr_reg:x3; val_offset:3714*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3714*0 + 3*470*FLEN/8, x4, x1, x2)

inst_1239:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffff00000; valaddr_reg:x3; val_offset:3717*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3717*0 + 3*471*FLEN/8, x4, x1, x2)

inst_1240:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffff80000; valaddr_reg:x3; val_offset:3720*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3720*0 + 3*472*FLEN/8, x4, x1, x2)

inst_1241:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffffc0000; valaddr_reg:x3; val_offset:3723*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3723*0 + 3*473*FLEN/8, x4, x1, x2)

inst_1242:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffffe0000; valaddr_reg:x3; val_offset:3726*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3726*0 + 3*474*FLEN/8, x4, x1, x2)

inst_1243:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffffff0000; valaddr_reg:x3; val_offset:3729*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3729*0 + 3*475*FLEN/8, x4, x1, x2)

inst_1244:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffffff8000; valaddr_reg:x3; val_offset:3732*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3732*0 + 3*476*FLEN/8, x4, x1, x2)

inst_1245:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffffffc000; valaddr_reg:x3; val_offset:3735*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3735*0 + 3*477*FLEN/8, x4, x1, x2)

inst_1246:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffffffe000; valaddr_reg:x3; val_offset:3738*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3738*0 + 3*478*FLEN/8, x4, x1, x2)

inst_1247:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffffff000; valaddr_reg:x3; val_offset:3741*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3741*0 + 3*479*FLEN/8, x4, x1, x2)

inst_1248:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffffff800; valaddr_reg:x3; val_offset:3744*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3744*0 + 3*480*FLEN/8, x4, x1, x2)

inst_1249:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffffffc00; valaddr_reg:x3; val_offset:3747*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3747*0 + 3*481*FLEN/8, x4, x1, x2)

inst_1250:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffffffe00; valaddr_reg:x3; val_offset:3750*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3750*0 + 3*482*FLEN/8, x4, x1, x2)

inst_1251:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffffffff00; valaddr_reg:x3; val_offset:3753*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3753*0 + 3*483*FLEN/8, x4, x1, x2)

inst_1252:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffffffff80; valaddr_reg:x3; val_offset:3756*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3756*0 + 3*484*FLEN/8, x4, x1, x2)

inst_1253:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffffffffc0; valaddr_reg:x3; val_offset:3759*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3759*0 + 3*485*FLEN/8, x4, x1, x2)

inst_1254:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffffffffe0; valaddr_reg:x3; val_offset:3762*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3762*0 + 3*486*FLEN/8, x4, x1, x2)

inst_1255:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffffffff0; valaddr_reg:x3; val_offset:3765*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3765*0 + 3*487*FLEN/8, x4, x1, x2)

inst_1256:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffffffff8; valaddr_reg:x3; val_offset:3768*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3768*0 + 3*488*FLEN/8, x4, x1, x2)

inst_1257:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffffffffc; valaddr_reg:x3; val_offset:3771*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3771*0 + 3*489*FLEN/8, x4, x1, x2)

inst_1258:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dffffffffffffe; valaddr_reg:x3; val_offset:3774*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3774*0 + 3*490*FLEN/8, x4, x1, x2)

inst_1259:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x13f75e85bfcbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f413f75e85bfcbf; op2val:0x8000;
op3val:0x80dfffffffffffff; valaddr_reg:x3; val_offset:3777*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3777*0 + 3*491*FLEN/8, x4, x1, x2)

inst_1260:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:3780*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3780*0 + 3*492*FLEN/8, x4, x1, x2)

inst_1261:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:3783*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3783*0 + 3*493*FLEN/8, x4, x1, x2)

inst_1262:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:3786*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3786*0 + 3*494*FLEN/8, x4, x1, x2)

inst_1263:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:3789*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3789*0 + 3*495*FLEN/8, x4, x1, x2)

inst_1264:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:3792*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3792*0 + 3*496*FLEN/8, x4, x1, x2)

inst_1265:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:3795*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3795*0 + 3*497*FLEN/8, x4, x1, x2)

inst_1266:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:3798*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3798*0 + 3*498*FLEN/8, x4, x1, x2)

inst_1267:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:3801*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3801*0 + 3*499*FLEN/8, x4, x1, x2)

inst_1268:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:3804*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3804*0 + 3*500*FLEN/8, x4, x1, x2)

inst_1269:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:3807*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3807*0 + 3*501*FLEN/8, x4, x1, x2)

inst_1270:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:3810*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3810*0 + 3*502*FLEN/8, x4, x1, x2)

inst_1271:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:3813*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3813*0 + 3*503*FLEN/8, x4, x1, x2)

inst_1272:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:3816*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3816*0 + 3*504*FLEN/8, x4, x1, x2)

inst_1273:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:3819*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3819*0 + 3*505*FLEN/8, x4, x1, x2)

inst_1274:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:3822*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3822*0 + 3*506*FLEN/8, x4, x1, x2)

inst_1275:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:3825*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3825*0 + 3*507*FLEN/8, x4, x1, x2)

inst_1276:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:3828*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3828*0 + 3*508*FLEN/8, x4, x1, x2)

inst_1277:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:3831*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3831*0 + 3*509*FLEN/8, x4, x1, x2)

inst_1278:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:3834*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3834*0 + 3*510*FLEN/8, x4, x1, x2)

inst_1279:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:3837*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3837*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_1280:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:3840*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3840*0 + 3*512*FLEN/8, x4, x1, x2)

inst_1281:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:3843*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3843*0 + 3*513*FLEN/8, x4, x1, x2)

inst_1282:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000000000000; valaddr_reg:x3; val_offset:3846*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3846*0 + 3*514*FLEN/8, x4, x1, x2)

inst_1283:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000000000001; valaddr_reg:x3; val_offset:3849*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3849*0 + 3*515*FLEN/8, x4, x1, x2)

inst_1284:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000000000003; valaddr_reg:x3; val_offset:3852*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3852*0 + 3*516*FLEN/8, x4, x1, x2)

inst_1285:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000000000007; valaddr_reg:x3; val_offset:3855*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3855*0 + 3*517*FLEN/8, x4, x1, x2)

inst_1286:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000000000000f; valaddr_reg:x3; val_offset:3858*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3858*0 + 3*518*FLEN/8, x4, x1, x2)

inst_1287:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000000000001f; valaddr_reg:x3; val_offset:3861*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3861*0 + 3*519*FLEN/8, x4, x1, x2)

inst_1288:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000000000003f; valaddr_reg:x3; val_offset:3864*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3864*0 + 3*520*FLEN/8, x4, x1, x2)

inst_1289:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000000000007f; valaddr_reg:x3; val_offset:3867*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3867*0 + 3*521*FLEN/8, x4, x1, x2)

inst_1290:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00000000000ff; valaddr_reg:x3; val_offset:3870*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3870*0 + 3*522*FLEN/8, x4, x1, x2)

inst_1291:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00000000001ff; valaddr_reg:x3; val_offset:3873*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3873*0 + 3*523*FLEN/8, x4, x1, x2)

inst_1292:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00000000003ff; valaddr_reg:x3; val_offset:3876*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3876*0 + 3*524*FLEN/8, x4, x1, x2)

inst_1293:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00000000007ff; valaddr_reg:x3; val_offset:3879*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3879*0 + 3*525*FLEN/8, x4, x1, x2)

inst_1294:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000000000fff; valaddr_reg:x3; val_offset:3882*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3882*0 + 3*526*FLEN/8, x4, x1, x2)

inst_1295:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000000001fff; valaddr_reg:x3; val_offset:3885*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3885*0 + 3*527*FLEN/8, x4, x1, x2)

inst_1296:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000000003fff; valaddr_reg:x3; val_offset:3888*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3888*0 + 3*528*FLEN/8, x4, x1, x2)

inst_1297:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000000007fff; valaddr_reg:x3; val_offset:3891*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3891*0 + 3*529*FLEN/8, x4, x1, x2)

inst_1298:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000000000ffff; valaddr_reg:x3; val_offset:3894*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3894*0 + 3*530*FLEN/8, x4, x1, x2)

inst_1299:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000000001ffff; valaddr_reg:x3; val_offset:3897*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3897*0 + 3*531*FLEN/8, x4, x1, x2)

inst_1300:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000000003ffff; valaddr_reg:x3; val_offset:3900*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3900*0 + 3*532*FLEN/8, x4, x1, x2)

inst_1301:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000000007ffff; valaddr_reg:x3; val_offset:3903*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3903*0 + 3*533*FLEN/8, x4, x1, x2)

inst_1302:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00000000fffff; valaddr_reg:x3; val_offset:3906*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3906*0 + 3*534*FLEN/8, x4, x1, x2)

inst_1303:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00000001fffff; valaddr_reg:x3; val_offset:3909*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3909*0 + 3*535*FLEN/8, x4, x1, x2)

inst_1304:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00000003fffff; valaddr_reg:x3; val_offset:3912*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3912*0 + 3*536*FLEN/8, x4, x1, x2)

inst_1305:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00000007fffff; valaddr_reg:x3; val_offset:3915*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3915*0 + 3*537*FLEN/8, x4, x1, x2)

inst_1306:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000000ffffff; valaddr_reg:x3; val_offset:3918*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3918*0 + 3*538*FLEN/8, x4, x1, x2)

inst_1307:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000001ffffff; valaddr_reg:x3; val_offset:3921*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3921*0 + 3*539*FLEN/8, x4, x1, x2)

inst_1308:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000003ffffff; valaddr_reg:x3; val_offset:3924*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3924*0 + 3*540*FLEN/8, x4, x1, x2)

inst_1309:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000007ffffff; valaddr_reg:x3; val_offset:3927*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3927*0 + 3*541*FLEN/8, x4, x1, x2)

inst_1310:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000000fffffff; valaddr_reg:x3; val_offset:3930*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3930*0 + 3*542*FLEN/8, x4, x1, x2)

inst_1311:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000001fffffff; valaddr_reg:x3; val_offset:3933*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3933*0 + 3*543*FLEN/8, x4, x1, x2)

inst_1312:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000003fffffff; valaddr_reg:x3; val_offset:3936*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3936*0 + 3*544*FLEN/8, x4, x1, x2)

inst_1313:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000007fffffff; valaddr_reg:x3; val_offset:3939*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3939*0 + 3*545*FLEN/8, x4, x1, x2)

inst_1314:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00000ffffffff; valaddr_reg:x3; val_offset:3942*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3942*0 + 3*546*FLEN/8, x4, x1, x2)

inst_1315:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00001ffffffff; valaddr_reg:x3; val_offset:3945*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3945*0 + 3*547*FLEN/8, x4, x1, x2)

inst_1316:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00003ffffffff; valaddr_reg:x3; val_offset:3948*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3948*0 + 3*548*FLEN/8, x4, x1, x2)

inst_1317:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00007ffffffff; valaddr_reg:x3; val_offset:3951*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3951*0 + 3*549*FLEN/8, x4, x1, x2)

inst_1318:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0000fffffffff; valaddr_reg:x3; val_offset:3954*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3954*0 + 3*550*FLEN/8, x4, x1, x2)

inst_1319:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0001fffffffff; valaddr_reg:x3; val_offset:3957*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3957*0 + 3*551*FLEN/8, x4, x1, x2)

inst_1320:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0003fffffffff; valaddr_reg:x3; val_offset:3960*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3960*0 + 3*552*FLEN/8, x4, x1, x2)

inst_1321:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0007fffffffff; valaddr_reg:x3; val_offset:3963*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3963*0 + 3*553*FLEN/8, x4, x1, x2)

inst_1322:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f000ffffffffff; valaddr_reg:x3; val_offset:3966*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3966*0 + 3*554*FLEN/8, x4, x1, x2)

inst_1323:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f001ffffffffff; valaddr_reg:x3; val_offset:3969*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3969*0 + 3*555*FLEN/8, x4, x1, x2)

inst_1324:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f003ffffffffff; valaddr_reg:x3; val_offset:3972*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3972*0 + 3*556*FLEN/8, x4, x1, x2)

inst_1325:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f007ffffffffff; valaddr_reg:x3; val_offset:3975*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3975*0 + 3*557*FLEN/8, x4, x1, x2)

inst_1326:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f00fffffffffff; valaddr_reg:x3; val_offset:3978*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3978*0 + 3*558*FLEN/8, x4, x1, x2)

inst_1327:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f01fffffffffff; valaddr_reg:x3; val_offset:3981*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3981*0 + 3*559*FLEN/8, x4, x1, x2)

inst_1328:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f03fffffffffff; valaddr_reg:x3; val_offset:3984*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3984*0 + 3*560*FLEN/8, x4, x1, x2)

inst_1329:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f07fffffffffff; valaddr_reg:x3; val_offset:3987*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3987*0 + 3*561*FLEN/8, x4, x1, x2)

inst_1330:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f0ffffffffffff; valaddr_reg:x3; val_offset:3990*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3990*0 + 3*562*FLEN/8, x4, x1, x2)

inst_1331:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f1ffffffffffff; valaddr_reg:x3; val_offset:3993*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3993*0 + 3*563*FLEN/8, x4, x1, x2)

inst_1332:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f3ffffffffffff; valaddr_reg:x3; val_offset:3996*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3996*0 + 3*564*FLEN/8, x4, x1, x2)

inst_1333:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f7ffffffffffff; valaddr_reg:x3; val_offset:3999*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 3999*0 + 3*565*FLEN/8, x4, x1, x2)

inst_1334:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82f8000000000000; valaddr_reg:x3; val_offset:4002*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4002*0 + 3*566*FLEN/8, x4, x1, x2)

inst_1335:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fc000000000000; valaddr_reg:x3; val_offset:4005*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4005*0 + 3*567*FLEN/8, x4, x1, x2)

inst_1336:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fe000000000000; valaddr_reg:x3; val_offset:4008*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4008*0 + 3*568*FLEN/8, x4, x1, x2)

inst_1337:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ff000000000000; valaddr_reg:x3; val_offset:4011*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4011*0 + 3*569*FLEN/8, x4, x1, x2)

inst_1338:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ff800000000000; valaddr_reg:x3; val_offset:4014*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4014*0 + 3*570*FLEN/8, x4, x1, x2)

inst_1339:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffc00000000000; valaddr_reg:x3; val_offset:4017*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4017*0 + 3*571*FLEN/8, x4, x1, x2)

inst_1340:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffe00000000000; valaddr_reg:x3; val_offset:4020*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4020*0 + 3*572*FLEN/8, x4, x1, x2)

inst_1341:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fff00000000000; valaddr_reg:x3; val_offset:4023*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4023*0 + 3*573*FLEN/8, x4, x1, x2)

inst_1342:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fff80000000000; valaddr_reg:x3; val_offset:4026*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4026*0 + 3*574*FLEN/8, x4, x1, x2)

inst_1343:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffc0000000000; valaddr_reg:x3; val_offset:4029*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4029*0 + 3*575*FLEN/8, x4, x1, x2)

inst_1344:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffe0000000000; valaddr_reg:x3; val_offset:4032*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4032*0 + 3*576*FLEN/8, x4, x1, x2)

inst_1345:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffff0000000000; valaddr_reg:x3; val_offset:4035*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4035*0 + 3*577*FLEN/8, x4, x1, x2)

inst_1346:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffff8000000000; valaddr_reg:x3; val_offset:4038*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4038*0 + 3*578*FLEN/8, x4, x1, x2)

inst_1347:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffc000000000; valaddr_reg:x3; val_offset:4041*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4041*0 + 3*579*FLEN/8, x4, x1, x2)

inst_1348:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffe000000000; valaddr_reg:x3; val_offset:4044*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4044*0 + 3*580*FLEN/8, x4, x1, x2)

inst_1349:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffff000000000; valaddr_reg:x3; val_offset:4047*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4047*0 + 3*581*FLEN/8, x4, x1, x2)

inst_1350:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffff800000000; valaddr_reg:x3; val_offset:4050*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4050*0 + 3*582*FLEN/8, x4, x1, x2)

inst_1351:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffc00000000; valaddr_reg:x3; val_offset:4053*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4053*0 + 3*583*FLEN/8, x4, x1, x2)

inst_1352:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffe00000000; valaddr_reg:x3; val_offset:4056*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4056*0 + 3*584*FLEN/8, x4, x1, x2)

inst_1353:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffff00000000; valaddr_reg:x3; val_offset:4059*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4059*0 + 3*585*FLEN/8, x4, x1, x2)

inst_1354:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffff80000000; valaddr_reg:x3; val_offset:4062*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4062*0 + 3*586*FLEN/8, x4, x1, x2)

inst_1355:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffc0000000; valaddr_reg:x3; val_offset:4065*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4065*0 + 3*587*FLEN/8, x4, x1, x2)

inst_1356:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffe0000000; valaddr_reg:x3; val_offset:4068*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4068*0 + 3*588*FLEN/8, x4, x1, x2)

inst_1357:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffff0000000; valaddr_reg:x3; val_offset:4071*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4071*0 + 3*589*FLEN/8, x4, x1, x2)

inst_1358:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffff8000000; valaddr_reg:x3; val_offset:4074*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4074*0 + 3*590*FLEN/8, x4, x1, x2)

inst_1359:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffc000000; valaddr_reg:x3; val_offset:4077*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4077*0 + 3*591*FLEN/8, x4, x1, x2)

inst_1360:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffe000000; valaddr_reg:x3; val_offset:4080*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4080*0 + 3*592*FLEN/8, x4, x1, x2)

inst_1361:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffff000000; valaddr_reg:x3; val_offset:4083*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4083*0 + 3*593*FLEN/8, x4, x1, x2)

inst_1362:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffff800000; valaddr_reg:x3; val_offset:4086*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4086*0 + 3*594*FLEN/8, x4, x1, x2)

inst_1363:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffffc00000; valaddr_reg:x3; val_offset:4089*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4089*0 + 3*595*FLEN/8, x4, x1, x2)

inst_1364:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffffe00000; valaddr_reg:x3; val_offset:4092*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4092*0 + 3*596*FLEN/8, x4, x1, x2)

inst_1365:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffff00000; valaddr_reg:x3; val_offset:4095*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4095*0 + 3*597*FLEN/8, x4, x1, x2)

inst_1366:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffff80000; valaddr_reg:x3; val_offset:4098*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4098*0 + 3*598*FLEN/8, x4, x1, x2)

inst_1367:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffffc0000; valaddr_reg:x3; val_offset:4101*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4101*0 + 3*599*FLEN/8, x4, x1, x2)

inst_1368:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffffe0000; valaddr_reg:x3; val_offset:4104*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4104*0 + 3*600*FLEN/8, x4, x1, x2)

inst_1369:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffffff0000; valaddr_reg:x3; val_offset:4107*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4107*0 + 3*601*FLEN/8, x4, x1, x2)

inst_1370:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffffff8000; valaddr_reg:x3; val_offset:4110*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4110*0 + 3*602*FLEN/8, x4, x1, x2)

inst_1371:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffffffc000; valaddr_reg:x3; val_offset:4113*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4113*0 + 3*603*FLEN/8, x4, x1, x2)

inst_1372:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffffffe000; valaddr_reg:x3; val_offset:4116*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4116*0 + 3*604*FLEN/8, x4, x1, x2)

inst_1373:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffffff000; valaddr_reg:x3; val_offset:4119*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4119*0 + 3*605*FLEN/8, x4, x1, x2)

inst_1374:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffffff800; valaddr_reg:x3; val_offset:4122*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4122*0 + 3*606*FLEN/8, x4, x1, x2)

inst_1375:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffffffc00; valaddr_reg:x3; val_offset:4125*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4125*0 + 3*607*FLEN/8, x4, x1, x2)

inst_1376:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffffffe00; valaddr_reg:x3; val_offset:4128*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4128*0 + 3*608*FLEN/8, x4, x1, x2)

inst_1377:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffffffff00; valaddr_reg:x3; val_offset:4131*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4131*0 + 3*609*FLEN/8, x4, x1, x2)

inst_1378:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffffffff80; valaddr_reg:x3; val_offset:4134*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4134*0 + 3*610*FLEN/8, x4, x1, x2)

inst_1379:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffffffffc0; valaddr_reg:x3; val_offset:4137*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4137*0 + 3*611*FLEN/8, x4, x1, x2)

inst_1380:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffffffffe0; valaddr_reg:x3; val_offset:4140*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4140*0 + 3*612*FLEN/8, x4, x1, x2)

inst_1381:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffffffff0; valaddr_reg:x3; val_offset:4143*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4143*0 + 3*613*FLEN/8, x4, x1, x2)

inst_1382:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffffffff8; valaddr_reg:x3; val_offset:4146*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4146*0 + 3*614*FLEN/8, x4, x1, x2)

inst_1383:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffffffffc; valaddr_reg:x3; val_offset:4149*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4149*0 + 3*615*FLEN/8, x4, x1, x2)

inst_1384:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82fffffffffffffe; valaddr_reg:x3; val_offset:4152*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4152*0 + 3*616*FLEN/8, x4, x1, x2)

inst_1385:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x21d9040c119bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f421d9040c119bf; op2val:0x8000;
op3val:0x82ffffffffffffff; valaddr_reg:x3; val_offset:4155*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4155*0 + 3*617*FLEN/8, x4, x1, x2)

inst_1386:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000000000000; valaddr_reg:x3; val_offset:4158*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4158*0 + 3*618*FLEN/8, x4, x1, x2)

inst_1387:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000000000001; valaddr_reg:x3; val_offset:4161*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4161*0 + 3*619*FLEN/8, x4, x1, x2)

inst_1388:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000000000003; valaddr_reg:x3; val_offset:4164*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4164*0 + 3*620*FLEN/8, x4, x1, x2)

inst_1389:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000000000007; valaddr_reg:x3; val_offset:4167*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4167*0 + 3*621*FLEN/8, x4, x1, x2)

inst_1390:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000000000000f; valaddr_reg:x3; val_offset:4170*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4170*0 + 3*622*FLEN/8, x4, x1, x2)

inst_1391:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000000000001f; valaddr_reg:x3; val_offset:4173*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4173*0 + 3*623*FLEN/8, x4, x1, x2)

inst_1392:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000000000003f; valaddr_reg:x3; val_offset:4176*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4176*0 + 3*624*FLEN/8, x4, x1, x2)

inst_1393:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000000000007f; valaddr_reg:x3; val_offset:4179*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4179*0 + 3*625*FLEN/8, x4, x1, x2)

inst_1394:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00000000000ff; valaddr_reg:x3; val_offset:4182*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4182*0 + 3*626*FLEN/8, x4, x1, x2)

inst_1395:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00000000001ff; valaddr_reg:x3; val_offset:4185*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4185*0 + 3*627*FLEN/8, x4, x1, x2)

inst_1396:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00000000003ff; valaddr_reg:x3; val_offset:4188*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4188*0 + 3*628*FLEN/8, x4, x1, x2)

inst_1397:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00000000007ff; valaddr_reg:x3; val_offset:4191*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4191*0 + 3*629*FLEN/8, x4, x1, x2)

inst_1398:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000000000fff; valaddr_reg:x3; val_offset:4194*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4194*0 + 3*630*FLEN/8, x4, x1, x2)

inst_1399:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000000001fff; valaddr_reg:x3; val_offset:4197*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4197*0 + 3*631*FLEN/8, x4, x1, x2)

inst_1400:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000000003fff; valaddr_reg:x3; val_offset:4200*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4200*0 + 3*632*FLEN/8, x4, x1, x2)

inst_1401:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000000007fff; valaddr_reg:x3; val_offset:4203*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4203*0 + 3*633*FLEN/8, x4, x1, x2)

inst_1402:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000000000ffff; valaddr_reg:x3; val_offset:4206*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4206*0 + 3*634*FLEN/8, x4, x1, x2)

inst_1403:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000000001ffff; valaddr_reg:x3; val_offset:4209*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4209*0 + 3*635*FLEN/8, x4, x1, x2)

inst_1404:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000000003ffff; valaddr_reg:x3; val_offset:4212*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4212*0 + 3*636*FLEN/8, x4, x1, x2)

inst_1405:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000000007ffff; valaddr_reg:x3; val_offset:4215*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4215*0 + 3*637*FLEN/8, x4, x1, x2)

inst_1406:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00000000fffff; valaddr_reg:x3; val_offset:4218*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4218*0 + 3*638*FLEN/8, x4, x1, x2)

inst_1407:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00000001fffff; valaddr_reg:x3; val_offset:4221*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4221*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_1408:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00000003fffff; valaddr_reg:x3; val_offset:4224*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4224*0 + 3*640*FLEN/8, x4, x1, x2)

inst_1409:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00000007fffff; valaddr_reg:x3; val_offset:4227*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4227*0 + 3*641*FLEN/8, x4, x1, x2)

inst_1410:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000000ffffff; valaddr_reg:x3; val_offset:4230*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4230*0 + 3*642*FLEN/8, x4, x1, x2)

inst_1411:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000001ffffff; valaddr_reg:x3; val_offset:4233*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4233*0 + 3*643*FLEN/8, x4, x1, x2)

inst_1412:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000003ffffff; valaddr_reg:x3; val_offset:4236*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4236*0 + 3*644*FLEN/8, x4, x1, x2)

inst_1413:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000007ffffff; valaddr_reg:x3; val_offset:4239*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4239*0 + 3*645*FLEN/8, x4, x1, x2)

inst_1414:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000000fffffff; valaddr_reg:x3; val_offset:4242*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4242*0 + 3*646*FLEN/8, x4, x1, x2)

inst_1415:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000001fffffff; valaddr_reg:x3; val_offset:4245*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4245*0 + 3*647*FLEN/8, x4, x1, x2)

inst_1416:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000003fffffff; valaddr_reg:x3; val_offset:4248*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4248*0 + 3*648*FLEN/8, x4, x1, x2)

inst_1417:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000007fffffff; valaddr_reg:x3; val_offset:4251*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4251*0 + 3*649*FLEN/8, x4, x1, x2)

inst_1418:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00000ffffffff; valaddr_reg:x3; val_offset:4254*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4254*0 + 3*650*FLEN/8, x4, x1, x2)

inst_1419:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00001ffffffff; valaddr_reg:x3; val_offset:4257*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4257*0 + 3*651*FLEN/8, x4, x1, x2)

inst_1420:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00003ffffffff; valaddr_reg:x3; val_offset:4260*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4260*0 + 3*652*FLEN/8, x4, x1, x2)

inst_1421:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00007ffffffff; valaddr_reg:x3; val_offset:4263*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4263*0 + 3*653*FLEN/8, x4, x1, x2)

inst_1422:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0000fffffffff; valaddr_reg:x3; val_offset:4266*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4266*0 + 3*654*FLEN/8, x4, x1, x2)

inst_1423:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0001fffffffff; valaddr_reg:x3; val_offset:4269*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4269*0 + 3*655*FLEN/8, x4, x1, x2)

inst_1424:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0003fffffffff; valaddr_reg:x3; val_offset:4272*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4272*0 + 3*656*FLEN/8, x4, x1, x2)

inst_1425:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0007fffffffff; valaddr_reg:x3; val_offset:4275*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4275*0 + 3*657*FLEN/8, x4, x1, x2)

inst_1426:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb000ffffffffff; valaddr_reg:x3; val_offset:4278*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4278*0 + 3*658*FLEN/8, x4, x1, x2)

inst_1427:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb001ffffffffff; valaddr_reg:x3; val_offset:4281*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4281*0 + 3*659*FLEN/8, x4, x1, x2)

inst_1428:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb003ffffffffff; valaddr_reg:x3; val_offset:4284*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4284*0 + 3*660*FLEN/8, x4, x1, x2)

inst_1429:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb007ffffffffff; valaddr_reg:x3; val_offset:4287*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4287*0 + 3*661*FLEN/8, x4, x1, x2)

inst_1430:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb00fffffffffff; valaddr_reg:x3; val_offset:4290*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4290*0 + 3*662*FLEN/8, x4, x1, x2)

inst_1431:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb01fffffffffff; valaddr_reg:x3; val_offset:4293*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4293*0 + 3*663*FLEN/8, x4, x1, x2)

inst_1432:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb03fffffffffff; valaddr_reg:x3; val_offset:4296*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4296*0 + 3*664*FLEN/8, x4, x1, x2)

inst_1433:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb07fffffffffff; valaddr_reg:x3; val_offset:4299*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4299*0 + 3*665*FLEN/8, x4, x1, x2)

inst_1434:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb0ffffffffffff; valaddr_reg:x3; val_offset:4302*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4302*0 + 3*666*FLEN/8, x4, x1, x2)

inst_1435:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb1ffffffffffff; valaddr_reg:x3; val_offset:4305*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4305*0 + 3*667*FLEN/8, x4, x1, x2)

inst_1436:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb3ffffffffffff; valaddr_reg:x3; val_offset:4308*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4308*0 + 3*668*FLEN/8, x4, x1, x2)

inst_1437:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb7ffffffffffff; valaddr_reg:x3; val_offset:4311*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4311*0 + 3*669*FLEN/8, x4, x1, x2)

inst_1438:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdb8000000000000; valaddr_reg:x3; val_offset:4314*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4314*0 + 3*670*FLEN/8, x4, x1, x2)

inst_1439:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbc000000000000; valaddr_reg:x3; val_offset:4317*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4317*0 + 3*671*FLEN/8, x4, x1, x2)

inst_1440:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbe000000000000; valaddr_reg:x3; val_offset:4320*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4320*0 + 3*672*FLEN/8, x4, x1, x2)

inst_1441:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbf000000000000; valaddr_reg:x3; val_offset:4323*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4323*0 + 3*673*FLEN/8, x4, x1, x2)

inst_1442:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbf800000000000; valaddr_reg:x3; val_offset:4326*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4326*0 + 3*674*FLEN/8, x4, x1, x2)

inst_1443:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfc00000000000; valaddr_reg:x3; val_offset:4329*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4329*0 + 3*675*FLEN/8, x4, x1, x2)

inst_1444:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfe00000000000; valaddr_reg:x3; val_offset:4332*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4332*0 + 3*676*FLEN/8, x4, x1, x2)

inst_1445:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbff00000000000; valaddr_reg:x3; val_offset:4335*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4335*0 + 3*677*FLEN/8, x4, x1, x2)

inst_1446:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbff80000000000; valaddr_reg:x3; val_offset:4338*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4338*0 + 3*678*FLEN/8, x4, x1, x2)

inst_1447:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffc0000000000; valaddr_reg:x3; val_offset:4341*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4341*0 + 3*679*FLEN/8, x4, x1, x2)

inst_1448:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffe0000000000; valaddr_reg:x3; val_offset:4344*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4344*0 + 3*680*FLEN/8, x4, x1, x2)

inst_1449:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfff0000000000; valaddr_reg:x3; val_offset:4347*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4347*0 + 3*681*FLEN/8, x4, x1, x2)

inst_1450:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfff8000000000; valaddr_reg:x3; val_offset:4350*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4350*0 + 3*682*FLEN/8, x4, x1, x2)

inst_1451:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffc000000000; valaddr_reg:x3; val_offset:4353*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4353*0 + 3*683*FLEN/8, x4, x1, x2)

inst_1452:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffe000000000; valaddr_reg:x3; val_offset:4356*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4356*0 + 3*684*FLEN/8, x4, x1, x2)

inst_1453:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffff000000000; valaddr_reg:x3; val_offset:4359*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4359*0 + 3*685*FLEN/8, x4, x1, x2)

inst_1454:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffff800000000; valaddr_reg:x3; val_offset:4362*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4362*0 + 3*686*FLEN/8, x4, x1, x2)

inst_1455:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffc00000000; valaddr_reg:x3; val_offset:4365*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4365*0 + 3*687*FLEN/8, x4, x1, x2)

inst_1456:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffe00000000; valaddr_reg:x3; val_offset:4368*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4368*0 + 3*688*FLEN/8, x4, x1, x2)

inst_1457:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffff00000000; valaddr_reg:x3; val_offset:4371*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4371*0 + 3*689*FLEN/8, x4, x1, x2)

inst_1458:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffff80000000; valaddr_reg:x3; val_offset:4374*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4374*0 + 3*690*FLEN/8, x4, x1, x2)

inst_1459:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffc0000000; valaddr_reg:x3; val_offset:4377*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4377*0 + 3*691*FLEN/8, x4, x1, x2)

inst_1460:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffe0000000; valaddr_reg:x3; val_offset:4380*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4380*0 + 3*692*FLEN/8, x4, x1, x2)

inst_1461:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffff0000000; valaddr_reg:x3; val_offset:4383*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4383*0 + 3*693*FLEN/8, x4, x1, x2)

inst_1462:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffff8000000; valaddr_reg:x3; val_offset:4386*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4386*0 + 3*694*FLEN/8, x4, x1, x2)

inst_1463:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffc000000; valaddr_reg:x3; val_offset:4389*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4389*0 + 3*695*FLEN/8, x4, x1, x2)

inst_1464:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffe000000; valaddr_reg:x3; val_offset:4392*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4392*0 + 3*696*FLEN/8, x4, x1, x2)

inst_1465:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffff000000; valaddr_reg:x3; val_offset:4395*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4395*0 + 3*697*FLEN/8, x4, x1, x2)

inst_1466:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffff800000; valaddr_reg:x3; val_offset:4398*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4398*0 + 3*698*FLEN/8, x4, x1, x2)

inst_1467:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffffc00000; valaddr_reg:x3; val_offset:4401*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4401*0 + 3*699*FLEN/8, x4, x1, x2)

inst_1468:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffffe00000; valaddr_reg:x3; val_offset:4404*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4404*0 + 3*700*FLEN/8, x4, x1, x2)

inst_1469:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffff00000; valaddr_reg:x3; val_offset:4407*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4407*0 + 3*701*FLEN/8, x4, x1, x2)

inst_1470:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffff80000; valaddr_reg:x3; val_offset:4410*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4410*0 + 3*702*FLEN/8, x4, x1, x2)

inst_1471:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffffc0000; valaddr_reg:x3; val_offset:4413*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4413*0 + 3*703*FLEN/8, x4, x1, x2)

inst_1472:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffffe0000; valaddr_reg:x3; val_offset:4416*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4416*0 + 3*704*FLEN/8, x4, x1, x2)

inst_1473:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffffff0000; valaddr_reg:x3; val_offset:4419*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4419*0 + 3*705*FLEN/8, x4, x1, x2)

inst_1474:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffffff8000; valaddr_reg:x3; val_offset:4422*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4422*0 + 3*706*FLEN/8, x4, x1, x2)

inst_1475:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffffffc000; valaddr_reg:x3; val_offset:4425*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4425*0 + 3*707*FLEN/8, x4, x1, x2)

inst_1476:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffffffe000; valaddr_reg:x3; val_offset:4428*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4428*0 + 3*708*FLEN/8, x4, x1, x2)

inst_1477:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffffff000; valaddr_reg:x3; val_offset:4431*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4431*0 + 3*709*FLEN/8, x4, x1, x2)

inst_1478:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffffff800; valaddr_reg:x3; val_offset:4434*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4434*0 + 3*710*FLEN/8, x4, x1, x2)

inst_1479:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffffffc00; valaddr_reg:x3; val_offset:4437*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4437*0 + 3*711*FLEN/8, x4, x1, x2)

inst_1480:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffffffe00; valaddr_reg:x3; val_offset:4440*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4440*0 + 3*712*FLEN/8, x4, x1, x2)

inst_1481:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffffffff00; valaddr_reg:x3; val_offset:4443*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4443*0 + 3*713*FLEN/8, x4, x1, x2)

inst_1482:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffffffff80; valaddr_reg:x3; val_offset:4446*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4446*0 + 3*714*FLEN/8, x4, x1, x2)

inst_1483:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffffffffc0; valaddr_reg:x3; val_offset:4449*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4449*0 + 3*715*FLEN/8, x4, x1, x2)

inst_1484:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffffffffe0; valaddr_reg:x3; val_offset:4452*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4452*0 + 3*716*FLEN/8, x4, x1, x2)

inst_1485:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffffffff0; valaddr_reg:x3; val_offset:4455*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4455*0 + 3*717*FLEN/8, x4, x1, x2)

inst_1486:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffffffff8; valaddr_reg:x3; val_offset:4458*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4458*0 + 3*718*FLEN/8, x4, x1, x2)

inst_1487:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffffffffc; valaddr_reg:x3; val_offset:4461*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4461*0 + 3*719*FLEN/8, x4, x1, x2)

inst_1488:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbffffffffffffe; valaddr_reg:x3; val_offset:4464*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4464*0 + 3*720*FLEN/8, x4, x1, x2)

inst_1489:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbdbfffffffffffff; valaddr_reg:x3; val_offset:4467*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4467*0 + 3*721*FLEN/8, x4, x1, x2)

inst_1490:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:4470*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4470*0 + 3*722*FLEN/8, x4, x1, x2)

inst_1491:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:4473*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4473*0 + 3*723*FLEN/8, x4, x1, x2)

inst_1492:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:4476*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4476*0 + 3*724*FLEN/8, x4, x1, x2)

inst_1493:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:4479*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4479*0 + 3*725*FLEN/8, x4, x1, x2)

inst_1494:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:4482*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4482*0 + 3*726*FLEN/8, x4, x1, x2)

inst_1495:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:4485*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4485*0 + 3*727*FLEN/8, x4, x1, x2)

inst_1496:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:4488*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4488*0 + 3*728*FLEN/8, x4, x1, x2)

inst_1497:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:4491*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4491*0 + 3*729*FLEN/8, x4, x1, x2)

inst_1498:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:4494*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4494*0 + 3*730*FLEN/8, x4, x1, x2)

inst_1499:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:4497*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4497*0 + 3*731*FLEN/8, x4, x1, x2)

inst_1500:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:4500*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4500*0 + 3*732*FLEN/8, x4, x1, x2)

inst_1501:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:4503*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4503*0 + 3*733*FLEN/8, x4, x1, x2)

inst_1502:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:4506*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4506*0 + 3*734*FLEN/8, x4, x1, x2)

inst_1503:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:4509*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4509*0 + 3*735*FLEN/8, x4, x1, x2)

inst_1504:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:4512*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4512*0 + 3*736*FLEN/8, x4, x1, x2)

inst_1505:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:4515*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4515*0 + 3*737*FLEN/8, x4, x1, x2)

inst_1506:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:4518*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4518*0 + 3*738*FLEN/8, x4, x1, x2)

inst_1507:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:4521*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4521*0 + 3*739*FLEN/8, x4, x1, x2)

inst_1508:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:4524*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4524*0 + 3*740*FLEN/8, x4, x1, x2)

inst_1509:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:4527*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4527*0 + 3*741*FLEN/8, x4, x1, x2)

inst_1510:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:4530*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4530*0 + 3*742*FLEN/8, x4, x1, x2)

inst_1511:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x54cb8485c10ff and fs2 == 1 and fe2 == 0x202 and fm2 == 0x809b499c5196f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f454cb8485c10ff; op2val:0xa02809b499c5196f;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:4533*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4533*0 + 3*743*FLEN/8, x4, x1, x2)

inst_1512:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba50000000000000; valaddr_reg:x3; val_offset:4536*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4536*0 + 3*744*FLEN/8, x4, x1, x2)

inst_1513:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba50000000000001; valaddr_reg:x3; val_offset:4539*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4539*0 + 3*745*FLEN/8, x4, x1, x2)

inst_1514:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba50000000000003; valaddr_reg:x3; val_offset:4542*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4542*0 + 3*746*FLEN/8, x4, x1, x2)

inst_1515:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba50000000000007; valaddr_reg:x3; val_offset:4545*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4545*0 + 3*747*FLEN/8, x4, x1, x2)

inst_1516:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba5000000000000f; valaddr_reg:x3; val_offset:4548*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4548*0 + 3*748*FLEN/8, x4, x1, x2)

inst_1517:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba5000000000001f; valaddr_reg:x3; val_offset:4551*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4551*0 + 3*749*FLEN/8, x4, x1, x2)

inst_1518:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba5000000000003f; valaddr_reg:x3; val_offset:4554*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4554*0 + 3*750*FLEN/8, x4, x1, x2)

inst_1519:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba5000000000007f; valaddr_reg:x3; val_offset:4557*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4557*0 + 3*751*FLEN/8, x4, x1, x2)

inst_1520:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba500000000000ff; valaddr_reg:x3; val_offset:4560*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4560*0 + 3*752*FLEN/8, x4, x1, x2)

inst_1521:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba500000000001ff; valaddr_reg:x3; val_offset:4563*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4563*0 + 3*753*FLEN/8, x4, x1, x2)

inst_1522:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba500000000003ff; valaddr_reg:x3; val_offset:4566*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4566*0 + 3*754*FLEN/8, x4, x1, x2)

inst_1523:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba500000000007ff; valaddr_reg:x3; val_offset:4569*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4569*0 + 3*755*FLEN/8, x4, x1, x2)

inst_1524:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba50000000000fff; valaddr_reg:x3; val_offset:4572*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4572*0 + 3*756*FLEN/8, x4, x1, x2)

inst_1525:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba50000000001fff; valaddr_reg:x3; val_offset:4575*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4575*0 + 3*757*FLEN/8, x4, x1, x2)

inst_1526:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba50000000003fff; valaddr_reg:x3; val_offset:4578*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4578*0 + 3*758*FLEN/8, x4, x1, x2)

inst_1527:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba50000000007fff; valaddr_reg:x3; val_offset:4581*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4581*0 + 3*759*FLEN/8, x4, x1, x2)

inst_1528:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba5000000000ffff; valaddr_reg:x3; val_offset:4584*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4584*0 + 3*760*FLEN/8, x4, x1, x2)

inst_1529:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba5000000001ffff; valaddr_reg:x3; val_offset:4587*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4587*0 + 3*761*FLEN/8, x4, x1, x2)

inst_1530:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba5000000003ffff; valaddr_reg:x3; val_offset:4590*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4590*0 + 3*762*FLEN/8, x4, x1, x2)

inst_1531:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba5000000007ffff; valaddr_reg:x3; val_offset:4593*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4593*0 + 3*763*FLEN/8, x4, x1, x2)

inst_1532:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba500000000fffff; valaddr_reg:x3; val_offset:4596*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4596*0 + 3*764*FLEN/8, x4, x1, x2)

inst_1533:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba500000001fffff; valaddr_reg:x3; val_offset:4599*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4599*0 + 3*765*FLEN/8, x4, x1, x2)

inst_1534:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba500000003fffff; valaddr_reg:x3; val_offset:4602*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4602*0 + 3*766*FLEN/8, x4, x1, x2)

inst_1535:
// fs1 == 0 and fe1 == 0x5f4 and fm1 == 0x7c4c7501c707f and fs2 == 1 and fe2 == 0x202 and fm2 == 0x58a7ca8ca875c and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f47c4c7501c707f; op2val:0xa0258a7ca8ca875c;
op3val:0xba500000007fffff; valaddr_reg:x3; val_offset:4605*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4605*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225152,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225153,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225155,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225159,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225167,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225183,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225215,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225279,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225407,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225663,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322226175,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322227199,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322229247,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322233343,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322241535,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322257919,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322290687,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322356223,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322487295,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322749439,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422323273727,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422324322303,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422326419455,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422330613759,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422339002367,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422355779583,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422389334015,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422456442879,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422590660607,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422859096063,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012423395966975,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012424469708799,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012426617192447,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012430912159743,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012439502094335,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012456681963519,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012491041701887,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012559761178623,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012697200132095,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012972078039039,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399013521833852927,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399014621345480703,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399016820368736255,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399021218415247359,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399030014508269567,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399047606694313983,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399082791066402815,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399153159810580479,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399293897298935807,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399575372275646463,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9400138322229067775,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9401264222135910399,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9401264222135910400,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9402390122042753024,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9402953071996174336,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403234546972884992,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403375284461240320,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403445653205417984,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403480837577506816,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403498429763551232,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403507225856573440,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403511623903084544,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403513822926340096,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403514922437967872,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515472193781760,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515747071688704,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515884510642176,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515953230118912,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515987589857280,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516004769726464,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516013359661056,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516017654628352,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516019802112000,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516020875853824,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021412724736,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021681160192,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021815377920,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021882486784,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021916041216,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021932818432,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021941207040,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021945401344,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021947498496,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021948547072,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949071360,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949333504,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949464576,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949530112,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949562880,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949579264,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949587456,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949591552,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949593600,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949594624,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595136,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595392,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595520,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595584,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595616,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595632,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595640,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595644,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595646,64,FLEN)
NAN_BOXED(6861719232110079231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595647,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110272,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110273,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110275,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110279,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110287,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110303,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110335,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110399,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110527,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110783,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501111295,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501112319,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501114367,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501118463,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501126655,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501143039,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501175807,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501241343,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501372415,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501634559,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433502158847,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433503207423,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433505304575,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433509498879,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433517887487,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433534664703,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433568219135,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433635327999,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433769545727,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904434037981183,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904434574852095,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904435648593919,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904437796077567,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904442091044863,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904450680979455,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904467860848639,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904502220587007,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904570940063743,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904708379017215,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904983256924159,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263905533012738047,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263906632524365823,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263908831547621375,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263913229594132479,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263922025687154687,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263939617873199103,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263974802245287935,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264045170989465599,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264185908477820927,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264467383454531583,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9265030333407952895,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9266156233314795519,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9266156233314795520,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9267282133221638144,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9267845083175059456,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268126558151770112,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268267295640125440,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268337664384303104,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268372848756391936,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268390440942436352,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268399237035458560,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268403635081969664,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268405834105225216,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268406933616852992,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407483372666880,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407758250573824,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407895689527296,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407964409004032,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407998768742400,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408015948611584,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408024538546176,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408028833513472,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408030980997120,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032054738944,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032591609856,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032860045312,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032994263040,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033061371904,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033094926336,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033111703552,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033120092160,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033124286464,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033126383616,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033127432192,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033127956480,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128218624,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128349696,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128415232,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128448000,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128464384,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128472576,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128476672,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128478720,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128479744,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480256,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480512,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480640,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480704,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480736,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480752,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480760,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480764,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480766,64,FLEN)
NAN_BOXED(6863719681697808319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480767,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377280,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377281,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377283,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377287,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377295,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377311,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377343,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377407,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377535,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377791,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505378303,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505379327,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505381375,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505385471,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505393663,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505410047,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505442815,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505508351,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505639423,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505901567,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979506425855,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979507474431,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979509571583,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979513765887,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979522154495,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979538931711,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979572486143,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979639595007,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979773812735,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980042248191,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980579119103,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697981652860927,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697983800344575,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697988095311871,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697996685246463,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698013865115647,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698048224854015,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698116944330751,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698254383284223,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698529261191167,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247699079017005055,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247700178528632831,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247702377551888383,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247706775598399487,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247715571691421695,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247733163877466111,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247768348249554943,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247838716993732607,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247979454482087935,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248260929458798591,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248823879412219903,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062527,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062528,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251075679225905152,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251638629179326464,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251920104156037120,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252060841644392448,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252131210388570112,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252166394760658944,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252183986946703360,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252192783039725568,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252197181086236672,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252199380109492224,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252200479621120000,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201029376933888,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201304254840832,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201441693794304,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201510413271040,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201544773009408,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201561952878592,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201570542813184,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201574837780480,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201576985264128,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578059005952,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578595876864,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578864312320,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578998530048,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579065638912,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579099193344,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579115970560,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579124359168,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579128553472,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579130650624,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579131699200,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132223488,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132485632,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132616704,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132682240,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132715008,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132731392,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132739584,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132743680,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132745728,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132746752,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747264,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747520,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747648,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747712,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747744,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747760,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747768,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747772,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747774,64,FLEN)
NAN_BOXED(6863816422371196671,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747775,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592256,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592257,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592259,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592263,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592271,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592287,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592319,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592383,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592511,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592767,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010593279,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010594303,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010596351,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010600447,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010608639,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010625023,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010657791,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010723327,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010854399,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011116543,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011640831,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832012689407,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832014786559,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832018980863,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832027369471,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832044146687,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832077701119,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832144809983,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832279027711,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832547463167,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918833084334079,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918834158075903,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918836305559551,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918840600526847,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918849190461439,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918866370330623,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918900730068991,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918969449545727,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919106888499199,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919381766406143,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919931522220031,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281921031033847807,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281923230057103359,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281927628103614463,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281936424196636671,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281954016382681087,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281989200754769919,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282059569498947583,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282200306987302911,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282481781964013567,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9283044731917434879,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277503,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277504,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285296531731120128,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285859481684541440,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286140956661252096,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286281694149607424,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286352062893785088,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286387247265873920,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286404839451918336,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286413635544940544,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286418033591451648,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286420232614707200,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421332126334976,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421881882148864,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422156760055808,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422294199009280,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422362918486016,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422397278224384,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422414458093568,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422423048028160,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422427342995456,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422429490479104,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422430564220928,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431101091840,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431369527296,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431503745024,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431570853888,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431604408320,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431621185536,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431629574144,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431633768448,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431635865600,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431636914176,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637438464,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637700608,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637831680,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637897216,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637929984,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637946368,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637954560,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637958656,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637960704,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637961728,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962240,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962496,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962624,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962688,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962720,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962736,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962744,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962748,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962750,64,FLEN)
NAN_BOXED(6863837082731412671,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962751,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189120,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189121,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189123,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189127,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189135,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189151,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189183,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189247,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189375,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189631,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341190143,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341191167,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341193215,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341197311,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341205503,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341221887,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341254655,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341320191,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341451263,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341713407,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219342237695,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219343286271,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219345383423,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219349577727,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219357966335,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219374743551,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219408297983,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219475406847,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219609624575,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219878060031,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041220414930943,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041221488672767,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041223636156415,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041227931123711,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041236521058303,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041253700927487,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041288060665855,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041356780142591,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041494219096063,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041769097003007,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435042318852816895,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435043418364444671,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435045617387700223,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435050015434211327,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435058811527233535,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435076403713277951,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435111588085366783,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435181956829544447,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435322694317899775,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435604169294610431,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9436167119248031743,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9437293019154874367,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9437293019154874368,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9438418919061716992,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9438981869015138304,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439263343991848960,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439404081480204288,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439474450224381952,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439509634596470784,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439527226782515200,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439536022875537408,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439540420922048512,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439542619945304064,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439543719456931840,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544269212745728,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544544090652672,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544681529606144,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544750249082880,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544784608821248,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544801788690432,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544810378625024,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544814673592320,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544816821075968,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544817894817792,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818431688704,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818700124160,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818834341888,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818901450752,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818935005184,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818951782400,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818960171008,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818964365312,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818966462464,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818967511040,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968035328,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968297472,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968428544,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968494080,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968526848,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968543232,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968551424,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968555520,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968557568,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968558592,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559104,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559360,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559488,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559552,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559584,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559600,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559608,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559612,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559614,64,FLEN)
NAN_BOXED(6864081287464950207,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559615,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069455360,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069455361,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069455363,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069455367,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069455375,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069455391,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069455423,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069455487,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069455615,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069455871,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069456383,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069457407,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069459455,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069463551,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069471743,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069488127,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069520895,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069586431,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069717503,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869069979647,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869070503935,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869071552511,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869073649663,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869077843967,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869086232575,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869103009791,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869136564223,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869203673087,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869337890815,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424869606326271,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424870143197183,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424871216939007,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424873364422655,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424877659389951,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424886249324543,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424903429193727,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668424937788932095,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668425006508408831,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668425143947362303,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668425418825269247,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668425968581083135,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668427068092710911,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668429267115966463,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668433665162477567,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668442461255499775,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668460053441544191,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668495237813633023,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668565606557810687,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668706344046166015,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13668987819022876671,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13669550768976297983,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13670676668883140607,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13670676668883140608,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13671802568789983232,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672365518743404544,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672646993720115200,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672787731208470528,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672858099952648192,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672893284324737024,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672910876510781440,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672919672603803648,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672924070650314752,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672926269673570304,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672927369185198080,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672927918941011968,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928193818918912,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928331257872384,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928399977349120,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928434337087488,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928451516956672,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928460106891264,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928464401858560,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928466549342208,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928467623084032,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468159954944,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468428390400,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468562608128,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468629716992,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468663271424,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468680048640,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468688437248,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468692631552,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468694728704,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468695777280,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696301568,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696563712,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696694784,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696760320,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696793088,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696809472,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696817664,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696821760,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696823808,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696824832,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696825344,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696825600,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696825728,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696825792,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696825824,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696825840,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696825848,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696825852,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696825854,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13672928468696825855,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6864977561367875839,64,FLEN)
NAN_BOXED(11540484716415490415,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191448576,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191448577,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191448579,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191448583,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191448591,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191448607,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191448639,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191448703,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191448831,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191449087,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191449599,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191450623,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191452671,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191456767,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191464959,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191481343,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191514111,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191579647,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191710719,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489191972863,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489192497151,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489193545727,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489195642879,64,FLEN)
NAN_BOXED(6865672517271187583,64,FLEN)
NAN_BOXED(11539781888219187036,64,FLEN)
NAN_BOXED(13425230489199837183,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
