
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_50688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800000000000ff; valaddr_reg:x3; val_offset:152064*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152064*0 + 3*0*FLEN/8, x4, x1, x2)

inst_50689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800000000001ff; valaddr_reg:x3; val_offset:152067*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152067*0 + 3*1*FLEN/8, x4, x1, x2)

inst_50690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800000000003ff; valaddr_reg:x3; val_offset:152070*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152070*0 + 3*2*FLEN/8, x4, x1, x2)

inst_50691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800000000007ff; valaddr_reg:x3; val_offset:152073*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152073*0 + 3*3*FLEN/8, x4, x1, x2)

inst_50692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280000000000fff; valaddr_reg:x3; val_offset:152076*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152076*0 + 3*4*FLEN/8, x4, x1, x2)

inst_50693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280000000001fff; valaddr_reg:x3; val_offset:152079*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152079*0 + 3*5*FLEN/8, x4, x1, x2)

inst_50694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280000000003fff; valaddr_reg:x3; val_offset:152082*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152082*0 + 3*6*FLEN/8, x4, x1, x2)

inst_50695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280000000007fff; valaddr_reg:x3; val_offset:152085*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152085*0 + 3*7*FLEN/8, x4, x1, x2)

inst_50696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28000000000ffff; valaddr_reg:x3; val_offset:152088*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152088*0 + 3*8*FLEN/8, x4, x1, x2)

inst_50697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28000000001ffff; valaddr_reg:x3; val_offset:152091*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152091*0 + 3*9*FLEN/8, x4, x1, x2)

inst_50698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28000000003ffff; valaddr_reg:x3; val_offset:152094*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152094*0 + 3*10*FLEN/8, x4, x1, x2)

inst_50699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28000000007ffff; valaddr_reg:x3; val_offset:152097*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152097*0 + 3*11*FLEN/8, x4, x1, x2)

inst_50700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800000000fffff; valaddr_reg:x3; val_offset:152100*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152100*0 + 3*12*FLEN/8, x4, x1, x2)

inst_50701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800000001fffff; valaddr_reg:x3; val_offset:152103*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152103*0 + 3*13*FLEN/8, x4, x1, x2)

inst_50702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800000003fffff; valaddr_reg:x3; val_offset:152106*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152106*0 + 3*14*FLEN/8, x4, x1, x2)

inst_50703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800000007fffff; valaddr_reg:x3; val_offset:152109*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152109*0 + 3*15*FLEN/8, x4, x1, x2)

inst_50704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280000000ffffff; valaddr_reg:x3; val_offset:152112*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152112*0 + 3*16*FLEN/8, x4, x1, x2)

inst_50705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280000001ffffff; valaddr_reg:x3; val_offset:152115*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152115*0 + 3*17*FLEN/8, x4, x1, x2)

inst_50706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280000003ffffff; valaddr_reg:x3; val_offset:152118*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152118*0 + 3*18*FLEN/8, x4, x1, x2)

inst_50707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280000007ffffff; valaddr_reg:x3; val_offset:152121*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152121*0 + 3*19*FLEN/8, x4, x1, x2)

inst_50708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28000000fffffff; valaddr_reg:x3; val_offset:152124*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152124*0 + 3*20*FLEN/8, x4, x1, x2)

inst_50709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28000001fffffff; valaddr_reg:x3; val_offset:152127*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152127*0 + 3*21*FLEN/8, x4, x1, x2)

inst_50710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28000003fffffff; valaddr_reg:x3; val_offset:152130*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152130*0 + 3*22*FLEN/8, x4, x1, x2)

inst_50711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28000007fffffff; valaddr_reg:x3; val_offset:152133*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152133*0 + 3*23*FLEN/8, x4, x1, x2)

inst_50712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800000ffffffff; valaddr_reg:x3; val_offset:152136*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152136*0 + 3*24*FLEN/8, x4, x1, x2)

inst_50713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800001ffffffff; valaddr_reg:x3; val_offset:152139*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152139*0 + 3*25*FLEN/8, x4, x1, x2)

inst_50714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800003ffffffff; valaddr_reg:x3; val_offset:152142*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152142*0 + 3*26*FLEN/8, x4, x1, x2)

inst_50715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800007ffffffff; valaddr_reg:x3; val_offset:152145*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152145*0 + 3*27*FLEN/8, x4, x1, x2)

inst_50716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280000fffffffff; valaddr_reg:x3; val_offset:152148*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152148*0 + 3*28*FLEN/8, x4, x1, x2)

inst_50717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280001fffffffff; valaddr_reg:x3; val_offset:152151*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152151*0 + 3*29*FLEN/8, x4, x1, x2)

inst_50718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280003fffffffff; valaddr_reg:x3; val_offset:152154*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152154*0 + 3*30*FLEN/8, x4, x1, x2)

inst_50719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280007fffffffff; valaddr_reg:x3; val_offset:152157*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152157*0 + 3*31*FLEN/8, x4, x1, x2)

inst_50720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28000ffffffffff; valaddr_reg:x3; val_offset:152160*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152160*0 + 3*32*FLEN/8, x4, x1, x2)

inst_50721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28001ffffffffff; valaddr_reg:x3; val_offset:152163*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152163*0 + 3*33*FLEN/8, x4, x1, x2)

inst_50722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28003ffffffffff; valaddr_reg:x3; val_offset:152166*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152166*0 + 3*34*FLEN/8, x4, x1, x2)

inst_50723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28007ffffffffff; valaddr_reg:x3; val_offset:152169*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152169*0 + 3*35*FLEN/8, x4, x1, x2)

inst_50724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2800fffffffffff; valaddr_reg:x3; val_offset:152172*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152172*0 + 3*36*FLEN/8, x4, x1, x2)

inst_50725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2801fffffffffff; valaddr_reg:x3; val_offset:152175*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152175*0 + 3*37*FLEN/8, x4, x1, x2)

inst_50726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2803fffffffffff; valaddr_reg:x3; val_offset:152178*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152178*0 + 3*38*FLEN/8, x4, x1, x2)

inst_50727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x2807fffffffffff; valaddr_reg:x3; val_offset:152181*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152181*0 + 3*39*FLEN/8, x4, x1, x2)

inst_50728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x280ffffffffffff; valaddr_reg:x3; val_offset:152184*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152184*0 + 3*40*FLEN/8, x4, x1, x2)

inst_50729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x281ffffffffffff; valaddr_reg:x3; val_offset:152187*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152187*0 + 3*41*FLEN/8, x4, x1, x2)

inst_50730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x283ffffffffffff; valaddr_reg:x3; val_offset:152190*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152190*0 + 3*42*FLEN/8, x4, x1, x2)

inst_50731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x287ffffffffffff; valaddr_reg:x3; val_offset:152193*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152193*0 + 3*43*FLEN/8, x4, x1, x2)

inst_50732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x288000000000000; valaddr_reg:x3; val_offset:152196*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152196*0 + 3*44*FLEN/8, x4, x1, x2)

inst_50733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28c000000000000; valaddr_reg:x3; val_offset:152199*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152199*0 + 3*45*FLEN/8, x4, x1, x2)

inst_50734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28e000000000000; valaddr_reg:x3; val_offset:152202*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152202*0 + 3*46*FLEN/8, x4, x1, x2)

inst_50735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28f000000000000; valaddr_reg:x3; val_offset:152205*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152205*0 + 3*47*FLEN/8, x4, x1, x2)

inst_50736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28f800000000000; valaddr_reg:x3; val_offset:152208*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152208*0 + 3*48*FLEN/8, x4, x1, x2)

inst_50737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fc00000000000; valaddr_reg:x3; val_offset:152211*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152211*0 + 3*49*FLEN/8, x4, x1, x2)

inst_50738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fe00000000000; valaddr_reg:x3; val_offset:152214*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152214*0 + 3*50*FLEN/8, x4, x1, x2)

inst_50739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ff00000000000; valaddr_reg:x3; val_offset:152217*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152217*0 + 3*51*FLEN/8, x4, x1, x2)

inst_50740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ff80000000000; valaddr_reg:x3; val_offset:152220*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152220*0 + 3*52*FLEN/8, x4, x1, x2)

inst_50741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffc0000000000; valaddr_reg:x3; val_offset:152223*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152223*0 + 3*53*FLEN/8, x4, x1, x2)

inst_50742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffe0000000000; valaddr_reg:x3; val_offset:152226*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152226*0 + 3*54*FLEN/8, x4, x1, x2)

inst_50743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fff0000000000; valaddr_reg:x3; val_offset:152229*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152229*0 + 3*55*FLEN/8, x4, x1, x2)

inst_50744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fff8000000000; valaddr_reg:x3; val_offset:152232*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152232*0 + 3*56*FLEN/8, x4, x1, x2)

inst_50745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffc000000000; valaddr_reg:x3; val_offset:152235*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152235*0 + 3*57*FLEN/8, x4, x1, x2)

inst_50746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffe000000000; valaddr_reg:x3; val_offset:152238*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152238*0 + 3*58*FLEN/8, x4, x1, x2)

inst_50747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffff000000000; valaddr_reg:x3; val_offset:152241*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152241*0 + 3*59*FLEN/8, x4, x1, x2)

inst_50748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffff800000000; valaddr_reg:x3; val_offset:152244*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152244*0 + 3*60*FLEN/8, x4, x1, x2)

inst_50749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffc00000000; valaddr_reg:x3; val_offset:152247*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152247*0 + 3*61*FLEN/8, x4, x1, x2)

inst_50750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffe00000000; valaddr_reg:x3; val_offset:152250*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152250*0 + 3*62*FLEN/8, x4, x1, x2)

inst_50751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffff00000000; valaddr_reg:x3; val_offset:152253*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152253*0 + 3*63*FLEN/8, x4, x1, x2)

inst_50752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffff80000000; valaddr_reg:x3; val_offset:152256*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152256*0 + 3*64*FLEN/8, x4, x1, x2)

inst_50753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffc0000000; valaddr_reg:x3; val_offset:152259*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152259*0 + 3*65*FLEN/8, x4, x1, x2)

inst_50754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffe0000000; valaddr_reg:x3; val_offset:152262*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152262*0 + 3*66*FLEN/8, x4, x1, x2)

inst_50755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffff0000000; valaddr_reg:x3; val_offset:152265*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152265*0 + 3*67*FLEN/8, x4, x1, x2)

inst_50756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffff8000000; valaddr_reg:x3; val_offset:152268*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152268*0 + 3*68*FLEN/8, x4, x1, x2)

inst_50757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffc000000; valaddr_reg:x3; val_offset:152271*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152271*0 + 3*69*FLEN/8, x4, x1, x2)

inst_50758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffe000000; valaddr_reg:x3; val_offset:152274*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152274*0 + 3*70*FLEN/8, x4, x1, x2)

inst_50759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffff000000; valaddr_reg:x3; val_offset:152277*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152277*0 + 3*71*FLEN/8, x4, x1, x2)

inst_50760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffff800000; valaddr_reg:x3; val_offset:152280*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152280*0 + 3*72*FLEN/8, x4, x1, x2)

inst_50761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffffc00000; valaddr_reg:x3; val_offset:152283*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152283*0 + 3*73*FLEN/8, x4, x1, x2)

inst_50762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffffe00000; valaddr_reg:x3; val_offset:152286*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152286*0 + 3*74*FLEN/8, x4, x1, x2)

inst_50763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffff00000; valaddr_reg:x3; val_offset:152289*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152289*0 + 3*75*FLEN/8, x4, x1, x2)

inst_50764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffff80000; valaddr_reg:x3; val_offset:152292*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152292*0 + 3*76*FLEN/8, x4, x1, x2)

inst_50765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffffc0000; valaddr_reg:x3; val_offset:152295*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152295*0 + 3*77*FLEN/8, x4, x1, x2)

inst_50766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffffe0000; valaddr_reg:x3; val_offset:152298*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152298*0 + 3*78*FLEN/8, x4, x1, x2)

inst_50767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffffff0000; valaddr_reg:x3; val_offset:152301*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152301*0 + 3*79*FLEN/8, x4, x1, x2)

inst_50768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffffff8000; valaddr_reg:x3; val_offset:152304*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152304*0 + 3*80*FLEN/8, x4, x1, x2)

inst_50769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffffffc000; valaddr_reg:x3; val_offset:152307*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152307*0 + 3*81*FLEN/8, x4, x1, x2)

inst_50770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffffffe000; valaddr_reg:x3; val_offset:152310*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152310*0 + 3*82*FLEN/8, x4, x1, x2)

inst_50771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffffff000; valaddr_reg:x3; val_offset:152313*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152313*0 + 3*83*FLEN/8, x4, x1, x2)

inst_50772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffffff800; valaddr_reg:x3; val_offset:152316*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152316*0 + 3*84*FLEN/8, x4, x1, x2)

inst_50773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffffffc00; valaddr_reg:x3; val_offset:152319*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152319*0 + 3*85*FLEN/8, x4, x1, x2)

inst_50774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffffffe00; valaddr_reg:x3; val_offset:152322*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152322*0 + 3*86*FLEN/8, x4, x1, x2)

inst_50775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffffffff00; valaddr_reg:x3; val_offset:152325*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152325*0 + 3*87*FLEN/8, x4, x1, x2)

inst_50776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffffffff80; valaddr_reg:x3; val_offset:152328*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152328*0 + 3*88*FLEN/8, x4, x1, x2)

inst_50777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffffffffc0; valaddr_reg:x3; val_offset:152331*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152331*0 + 3*89*FLEN/8, x4, x1, x2)

inst_50778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffffffffe0; valaddr_reg:x3; val_offset:152334*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152334*0 + 3*90*FLEN/8, x4, x1, x2)

inst_50779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffffffff0; valaddr_reg:x3; val_offset:152337*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152337*0 + 3*91*FLEN/8, x4, x1, x2)

inst_50780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffffffff8; valaddr_reg:x3; val_offset:152340*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152340*0 + 3*92*FLEN/8, x4, x1, x2)

inst_50781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffffffffc; valaddr_reg:x3; val_offset:152343*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152343*0 + 3*93*FLEN/8, x4, x1, x2)

inst_50782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28ffffffffffffe; valaddr_reg:x3; val_offset:152346*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152346*0 + 3*94*FLEN/8, x4, x1, x2)

inst_50783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xef9da9965f005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ef9da9965f005; op2val:0x0;
op3val:0x28fffffffffffff; valaddr_reg:x3; val_offset:152349*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152349*0 + 3*95*FLEN/8, x4, x1, x2)

inst_50784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000000000000; valaddr_reg:x3; val_offset:152352*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152352*0 + 3*96*FLEN/8, x4, x1, x2)

inst_50785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000000000001; valaddr_reg:x3; val_offset:152355*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152355*0 + 3*97*FLEN/8, x4, x1, x2)

inst_50786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000000000003; valaddr_reg:x3; val_offset:152358*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152358*0 + 3*98*FLEN/8, x4, x1, x2)

inst_50787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000000000007; valaddr_reg:x3; val_offset:152361*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152361*0 + 3*99*FLEN/8, x4, x1, x2)

inst_50788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000000000000f; valaddr_reg:x3; val_offset:152364*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152364*0 + 3*100*FLEN/8, x4, x1, x2)

inst_50789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000000000001f; valaddr_reg:x3; val_offset:152367*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152367*0 + 3*101*FLEN/8, x4, x1, x2)

inst_50790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000000000003f; valaddr_reg:x3; val_offset:152370*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152370*0 + 3*102*FLEN/8, x4, x1, x2)

inst_50791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000000000007f; valaddr_reg:x3; val_offset:152373*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152373*0 + 3*103*FLEN/8, x4, x1, x2)

inst_50792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700000000000ff; valaddr_reg:x3; val_offset:152376*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152376*0 + 3*104*FLEN/8, x4, x1, x2)

inst_50793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700000000001ff; valaddr_reg:x3; val_offset:152379*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152379*0 + 3*105*FLEN/8, x4, x1, x2)

inst_50794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700000000003ff; valaddr_reg:x3; val_offset:152382*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152382*0 + 3*106*FLEN/8, x4, x1, x2)

inst_50795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700000000007ff; valaddr_reg:x3; val_offset:152385*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152385*0 + 3*107*FLEN/8, x4, x1, x2)

inst_50796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000000000fff; valaddr_reg:x3; val_offset:152388*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152388*0 + 3*108*FLEN/8, x4, x1, x2)

inst_50797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000000001fff; valaddr_reg:x3; val_offset:152391*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152391*0 + 3*109*FLEN/8, x4, x1, x2)

inst_50798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000000003fff; valaddr_reg:x3; val_offset:152394*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152394*0 + 3*110*FLEN/8, x4, x1, x2)

inst_50799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000000007fff; valaddr_reg:x3; val_offset:152397*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152397*0 + 3*111*FLEN/8, x4, x1, x2)

inst_50800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000000000ffff; valaddr_reg:x3; val_offset:152400*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152400*0 + 3*112*FLEN/8, x4, x1, x2)

inst_50801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000000001ffff; valaddr_reg:x3; val_offset:152403*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152403*0 + 3*113*FLEN/8, x4, x1, x2)

inst_50802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000000003ffff; valaddr_reg:x3; val_offset:152406*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152406*0 + 3*114*FLEN/8, x4, x1, x2)

inst_50803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000000007ffff; valaddr_reg:x3; val_offset:152409*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152409*0 + 3*115*FLEN/8, x4, x1, x2)

inst_50804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700000000fffff; valaddr_reg:x3; val_offset:152412*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152412*0 + 3*116*FLEN/8, x4, x1, x2)

inst_50805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700000001fffff; valaddr_reg:x3; val_offset:152415*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152415*0 + 3*117*FLEN/8, x4, x1, x2)

inst_50806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700000003fffff; valaddr_reg:x3; val_offset:152418*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152418*0 + 3*118*FLEN/8, x4, x1, x2)

inst_50807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700000007fffff; valaddr_reg:x3; val_offset:152421*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152421*0 + 3*119*FLEN/8, x4, x1, x2)

inst_50808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000000ffffff; valaddr_reg:x3; val_offset:152424*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152424*0 + 3*120*FLEN/8, x4, x1, x2)

inst_50809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000001ffffff; valaddr_reg:x3; val_offset:152427*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152427*0 + 3*121*FLEN/8, x4, x1, x2)

inst_50810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000003ffffff; valaddr_reg:x3; val_offset:152430*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152430*0 + 3*122*FLEN/8, x4, x1, x2)

inst_50811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000007ffffff; valaddr_reg:x3; val_offset:152433*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152433*0 + 3*123*FLEN/8, x4, x1, x2)

inst_50812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000000fffffff; valaddr_reg:x3; val_offset:152436*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152436*0 + 3*124*FLEN/8, x4, x1, x2)

inst_50813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000001fffffff; valaddr_reg:x3; val_offset:152439*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152439*0 + 3*125*FLEN/8, x4, x1, x2)

inst_50814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000003fffffff; valaddr_reg:x3; val_offset:152442*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152442*0 + 3*126*FLEN/8, x4, x1, x2)

inst_50815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000007fffffff; valaddr_reg:x3; val_offset:152445*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152445*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_50816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700000ffffffff; valaddr_reg:x3; val_offset:152448*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152448*0 + 3*128*FLEN/8, x4, x1, x2)

inst_50817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700001ffffffff; valaddr_reg:x3; val_offset:152451*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152451*0 + 3*129*FLEN/8, x4, x1, x2)

inst_50818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700003ffffffff; valaddr_reg:x3; val_offset:152454*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152454*0 + 3*130*FLEN/8, x4, x1, x2)

inst_50819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700007ffffffff; valaddr_reg:x3; val_offset:152457*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152457*0 + 3*131*FLEN/8, x4, x1, x2)

inst_50820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70000fffffffff; valaddr_reg:x3; val_offset:152460*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152460*0 + 3*132*FLEN/8, x4, x1, x2)

inst_50821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70001fffffffff; valaddr_reg:x3; val_offset:152463*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152463*0 + 3*133*FLEN/8, x4, x1, x2)

inst_50822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70003fffffffff; valaddr_reg:x3; val_offset:152466*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152466*0 + 3*134*FLEN/8, x4, x1, x2)

inst_50823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70007fffffffff; valaddr_reg:x3; val_offset:152469*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152469*0 + 3*135*FLEN/8, x4, x1, x2)

inst_50824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7000ffffffffff; valaddr_reg:x3; val_offset:152472*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152472*0 + 3*136*FLEN/8, x4, x1, x2)

inst_50825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7001ffffffffff; valaddr_reg:x3; val_offset:152475*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152475*0 + 3*137*FLEN/8, x4, x1, x2)

inst_50826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7003ffffffffff; valaddr_reg:x3; val_offset:152478*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152478*0 + 3*138*FLEN/8, x4, x1, x2)

inst_50827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7007ffffffffff; valaddr_reg:x3; val_offset:152481*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152481*0 + 3*139*FLEN/8, x4, x1, x2)

inst_50828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc700fffffffffff; valaddr_reg:x3; val_offset:152484*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152484*0 + 3*140*FLEN/8, x4, x1, x2)

inst_50829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc701fffffffffff; valaddr_reg:x3; val_offset:152487*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152487*0 + 3*141*FLEN/8, x4, x1, x2)

inst_50830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc703fffffffffff; valaddr_reg:x3; val_offset:152490*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152490*0 + 3*142*FLEN/8, x4, x1, x2)

inst_50831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc707fffffffffff; valaddr_reg:x3; val_offset:152493*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152493*0 + 3*143*FLEN/8, x4, x1, x2)

inst_50832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc70ffffffffffff; valaddr_reg:x3; val_offset:152496*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152496*0 + 3*144*FLEN/8, x4, x1, x2)

inst_50833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc71ffffffffffff; valaddr_reg:x3; val_offset:152499*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152499*0 + 3*145*FLEN/8, x4, x1, x2)

inst_50834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc73ffffffffffff; valaddr_reg:x3; val_offset:152502*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152502*0 + 3*146*FLEN/8, x4, x1, x2)

inst_50835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc77ffffffffffff; valaddr_reg:x3; val_offset:152505*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152505*0 + 3*147*FLEN/8, x4, x1, x2)

inst_50836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc78000000000000; valaddr_reg:x3; val_offset:152508*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152508*0 + 3*148*FLEN/8, x4, x1, x2)

inst_50837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7c000000000000; valaddr_reg:x3; val_offset:152511*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152511*0 + 3*149*FLEN/8, x4, x1, x2)

inst_50838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7e000000000000; valaddr_reg:x3; val_offset:152514*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152514*0 + 3*150*FLEN/8, x4, x1, x2)

inst_50839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7f000000000000; valaddr_reg:x3; val_offset:152517*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152517*0 + 3*151*FLEN/8, x4, x1, x2)

inst_50840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7f800000000000; valaddr_reg:x3; val_offset:152520*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152520*0 + 3*152*FLEN/8, x4, x1, x2)

inst_50841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fc00000000000; valaddr_reg:x3; val_offset:152523*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152523*0 + 3*153*FLEN/8, x4, x1, x2)

inst_50842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fe00000000000; valaddr_reg:x3; val_offset:152526*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152526*0 + 3*154*FLEN/8, x4, x1, x2)

inst_50843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ff00000000000; valaddr_reg:x3; val_offset:152529*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152529*0 + 3*155*FLEN/8, x4, x1, x2)

inst_50844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ff80000000000; valaddr_reg:x3; val_offset:152532*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152532*0 + 3*156*FLEN/8, x4, x1, x2)

inst_50845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffc0000000000; valaddr_reg:x3; val_offset:152535*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152535*0 + 3*157*FLEN/8, x4, x1, x2)

inst_50846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffe0000000000; valaddr_reg:x3; val_offset:152538*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152538*0 + 3*158*FLEN/8, x4, x1, x2)

inst_50847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fff0000000000; valaddr_reg:x3; val_offset:152541*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152541*0 + 3*159*FLEN/8, x4, x1, x2)

inst_50848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fff8000000000; valaddr_reg:x3; val_offset:152544*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152544*0 + 3*160*FLEN/8, x4, x1, x2)

inst_50849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffc000000000; valaddr_reg:x3; val_offset:152547*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152547*0 + 3*161*FLEN/8, x4, x1, x2)

inst_50850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffe000000000; valaddr_reg:x3; val_offset:152550*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152550*0 + 3*162*FLEN/8, x4, x1, x2)

inst_50851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffff000000000; valaddr_reg:x3; val_offset:152553*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152553*0 + 3*163*FLEN/8, x4, x1, x2)

inst_50852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffff800000000; valaddr_reg:x3; val_offset:152556*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152556*0 + 3*164*FLEN/8, x4, x1, x2)

inst_50853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffc00000000; valaddr_reg:x3; val_offset:152559*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152559*0 + 3*165*FLEN/8, x4, x1, x2)

inst_50854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffe00000000; valaddr_reg:x3; val_offset:152562*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152562*0 + 3*166*FLEN/8, x4, x1, x2)

inst_50855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffff00000000; valaddr_reg:x3; val_offset:152565*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152565*0 + 3*167*FLEN/8, x4, x1, x2)

inst_50856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffff80000000; valaddr_reg:x3; val_offset:152568*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152568*0 + 3*168*FLEN/8, x4, x1, x2)

inst_50857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffc0000000; valaddr_reg:x3; val_offset:152571*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152571*0 + 3*169*FLEN/8, x4, x1, x2)

inst_50858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffe0000000; valaddr_reg:x3; val_offset:152574*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152574*0 + 3*170*FLEN/8, x4, x1, x2)

inst_50859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffff0000000; valaddr_reg:x3; val_offset:152577*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152577*0 + 3*171*FLEN/8, x4, x1, x2)

inst_50860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffff8000000; valaddr_reg:x3; val_offset:152580*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152580*0 + 3*172*FLEN/8, x4, x1, x2)

inst_50861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffc000000; valaddr_reg:x3; val_offset:152583*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152583*0 + 3*173*FLEN/8, x4, x1, x2)

inst_50862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffe000000; valaddr_reg:x3; val_offset:152586*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152586*0 + 3*174*FLEN/8, x4, x1, x2)

inst_50863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffff000000; valaddr_reg:x3; val_offset:152589*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152589*0 + 3*175*FLEN/8, x4, x1, x2)

inst_50864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffff800000; valaddr_reg:x3; val_offset:152592*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152592*0 + 3*176*FLEN/8, x4, x1, x2)

inst_50865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffffc00000; valaddr_reg:x3; val_offset:152595*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152595*0 + 3*177*FLEN/8, x4, x1, x2)

inst_50866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffffe00000; valaddr_reg:x3; val_offset:152598*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152598*0 + 3*178*FLEN/8, x4, x1, x2)

inst_50867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffff00000; valaddr_reg:x3; val_offset:152601*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152601*0 + 3*179*FLEN/8, x4, x1, x2)

inst_50868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffff80000; valaddr_reg:x3; val_offset:152604*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152604*0 + 3*180*FLEN/8, x4, x1, x2)

inst_50869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffffc0000; valaddr_reg:x3; val_offset:152607*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152607*0 + 3*181*FLEN/8, x4, x1, x2)

inst_50870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffffe0000; valaddr_reg:x3; val_offset:152610*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152610*0 + 3*182*FLEN/8, x4, x1, x2)

inst_50871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffffff0000; valaddr_reg:x3; val_offset:152613*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152613*0 + 3*183*FLEN/8, x4, x1, x2)

inst_50872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffffff8000; valaddr_reg:x3; val_offset:152616*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152616*0 + 3*184*FLEN/8, x4, x1, x2)

inst_50873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffffffc000; valaddr_reg:x3; val_offset:152619*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152619*0 + 3*185*FLEN/8, x4, x1, x2)

inst_50874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffffffe000; valaddr_reg:x3; val_offset:152622*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152622*0 + 3*186*FLEN/8, x4, x1, x2)

inst_50875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffffff000; valaddr_reg:x3; val_offset:152625*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152625*0 + 3*187*FLEN/8, x4, x1, x2)

inst_50876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffffff800; valaddr_reg:x3; val_offset:152628*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152628*0 + 3*188*FLEN/8, x4, x1, x2)

inst_50877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffffffc00; valaddr_reg:x3; val_offset:152631*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152631*0 + 3*189*FLEN/8, x4, x1, x2)

inst_50878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffffffe00; valaddr_reg:x3; val_offset:152634*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152634*0 + 3*190*FLEN/8, x4, x1, x2)

inst_50879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffffffff00; valaddr_reg:x3; val_offset:152637*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152637*0 + 3*191*FLEN/8, x4, x1, x2)

inst_50880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffffffff80; valaddr_reg:x3; val_offset:152640*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152640*0 + 3*192*FLEN/8, x4, x1, x2)

inst_50881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffffffffc0; valaddr_reg:x3; val_offset:152643*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152643*0 + 3*193*FLEN/8, x4, x1, x2)

inst_50882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffffffffe0; valaddr_reg:x3; val_offset:152646*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152646*0 + 3*194*FLEN/8, x4, x1, x2)

inst_50883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffffffff0; valaddr_reg:x3; val_offset:152649*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152649*0 + 3*195*FLEN/8, x4, x1, x2)

inst_50884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffffffff8; valaddr_reg:x3; val_offset:152652*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152652*0 + 3*196*FLEN/8, x4, x1, x2)

inst_50885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffffffffc; valaddr_reg:x3; val_offset:152655*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152655*0 + 3*197*FLEN/8, x4, x1, x2)

inst_50886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7ffffffffffffe; valaddr_reg:x3; val_offset:152658*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152658*0 + 3*198*FLEN/8, x4, x1, x2)

inst_50887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbc7fffffffffffff; valaddr_reg:x3; val_offset:152661*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152661*0 + 3*199*FLEN/8, x4, x1, x2)

inst_50888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:152664*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152664*0 + 3*200*FLEN/8, x4, x1, x2)

inst_50889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:152667*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152667*0 + 3*201*FLEN/8, x4, x1, x2)

inst_50890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:152670*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152670*0 + 3*202*FLEN/8, x4, x1, x2)

inst_50891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:152673*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152673*0 + 3*203*FLEN/8, x4, x1, x2)

inst_50892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:152676*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152676*0 + 3*204*FLEN/8, x4, x1, x2)

inst_50893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:152679*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152679*0 + 3*205*FLEN/8, x4, x1, x2)

inst_50894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:152682*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152682*0 + 3*206*FLEN/8, x4, x1, x2)

inst_50895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:152685*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152685*0 + 3*207*FLEN/8, x4, x1, x2)

inst_50896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:152688*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152688*0 + 3*208*FLEN/8, x4, x1, x2)

inst_50897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:152691*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152691*0 + 3*209*FLEN/8, x4, x1, x2)

inst_50898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:152694*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152694*0 + 3*210*FLEN/8, x4, x1, x2)

inst_50899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:152697*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152697*0 + 3*211*FLEN/8, x4, x1, x2)

inst_50900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:152700*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152700*0 + 3*212*FLEN/8, x4, x1, x2)

inst_50901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:152703*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152703*0 + 3*213*FLEN/8, x4, x1, x2)

inst_50902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:152706*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152706*0 + 3*214*FLEN/8, x4, x1, x2)

inst_50903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:152709*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152709*0 + 3*215*FLEN/8, x4, x1, x2)

inst_50904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:152712*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152712*0 + 3*216*FLEN/8, x4, x1, x2)

inst_50905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:152715*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152715*0 + 3*217*FLEN/8, x4, x1, x2)

inst_50906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:152718*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152718*0 + 3*218*FLEN/8, x4, x1, x2)

inst_50907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:152721*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152721*0 + 3*219*FLEN/8, x4, x1, x2)

inst_50908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:152724*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152724*0 + 3*220*FLEN/8, x4, x1, x2)

inst_50909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf0a3f5766442d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07ead2cd6a408 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f0a3f5766442d; op2val:0x9fd07ead2cd6a408;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:152727*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152727*0 + 3*221*FLEN/8, x4, x1, x2)

inst_50910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000000000000; valaddr_reg:x3; val_offset:152730*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152730*0 + 3*222*FLEN/8, x4, x1, x2)

inst_50911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000000000001; valaddr_reg:x3; val_offset:152733*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152733*0 + 3*223*FLEN/8, x4, x1, x2)

inst_50912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000000000003; valaddr_reg:x3; val_offset:152736*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152736*0 + 3*224*FLEN/8, x4, x1, x2)

inst_50913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000000000007; valaddr_reg:x3; val_offset:152739*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152739*0 + 3*225*FLEN/8, x4, x1, x2)

inst_50914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000000000000f; valaddr_reg:x3; val_offset:152742*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152742*0 + 3*226*FLEN/8, x4, x1, x2)

inst_50915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000000000001f; valaddr_reg:x3; val_offset:152745*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152745*0 + 3*227*FLEN/8, x4, x1, x2)

inst_50916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000000000003f; valaddr_reg:x3; val_offset:152748*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152748*0 + 3*228*FLEN/8, x4, x1, x2)

inst_50917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000000000007f; valaddr_reg:x3; val_offset:152751*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152751*0 + 3*229*FLEN/8, x4, x1, x2)

inst_50918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300000000000ff; valaddr_reg:x3; val_offset:152754*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152754*0 + 3*230*FLEN/8, x4, x1, x2)

inst_50919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300000000001ff; valaddr_reg:x3; val_offset:152757*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152757*0 + 3*231*FLEN/8, x4, x1, x2)

inst_50920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300000000003ff; valaddr_reg:x3; val_offset:152760*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152760*0 + 3*232*FLEN/8, x4, x1, x2)

inst_50921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300000000007ff; valaddr_reg:x3; val_offset:152763*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152763*0 + 3*233*FLEN/8, x4, x1, x2)

inst_50922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000000000fff; valaddr_reg:x3; val_offset:152766*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152766*0 + 3*234*FLEN/8, x4, x1, x2)

inst_50923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000000001fff; valaddr_reg:x3; val_offset:152769*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152769*0 + 3*235*FLEN/8, x4, x1, x2)

inst_50924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000000003fff; valaddr_reg:x3; val_offset:152772*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152772*0 + 3*236*FLEN/8, x4, x1, x2)

inst_50925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000000007fff; valaddr_reg:x3; val_offset:152775*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152775*0 + 3*237*FLEN/8, x4, x1, x2)

inst_50926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000000000ffff; valaddr_reg:x3; val_offset:152778*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152778*0 + 3*238*FLEN/8, x4, x1, x2)

inst_50927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000000001ffff; valaddr_reg:x3; val_offset:152781*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152781*0 + 3*239*FLEN/8, x4, x1, x2)

inst_50928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000000003ffff; valaddr_reg:x3; val_offset:152784*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152784*0 + 3*240*FLEN/8, x4, x1, x2)

inst_50929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000000007ffff; valaddr_reg:x3; val_offset:152787*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152787*0 + 3*241*FLEN/8, x4, x1, x2)

inst_50930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300000000fffff; valaddr_reg:x3; val_offset:152790*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152790*0 + 3*242*FLEN/8, x4, x1, x2)

inst_50931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300000001fffff; valaddr_reg:x3; val_offset:152793*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152793*0 + 3*243*FLEN/8, x4, x1, x2)

inst_50932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300000003fffff; valaddr_reg:x3; val_offset:152796*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152796*0 + 3*244*FLEN/8, x4, x1, x2)

inst_50933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300000007fffff; valaddr_reg:x3; val_offset:152799*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152799*0 + 3*245*FLEN/8, x4, x1, x2)

inst_50934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000000ffffff; valaddr_reg:x3; val_offset:152802*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152802*0 + 3*246*FLEN/8, x4, x1, x2)

inst_50935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000001ffffff; valaddr_reg:x3; val_offset:152805*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152805*0 + 3*247*FLEN/8, x4, x1, x2)

inst_50936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000003ffffff; valaddr_reg:x3; val_offset:152808*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152808*0 + 3*248*FLEN/8, x4, x1, x2)

inst_50937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000007ffffff; valaddr_reg:x3; val_offset:152811*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152811*0 + 3*249*FLEN/8, x4, x1, x2)

inst_50938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000000fffffff; valaddr_reg:x3; val_offset:152814*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152814*0 + 3*250*FLEN/8, x4, x1, x2)

inst_50939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000001fffffff; valaddr_reg:x3; val_offset:152817*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152817*0 + 3*251*FLEN/8, x4, x1, x2)

inst_50940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000003fffffff; valaddr_reg:x3; val_offset:152820*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152820*0 + 3*252*FLEN/8, x4, x1, x2)

inst_50941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000007fffffff; valaddr_reg:x3; val_offset:152823*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152823*0 + 3*253*FLEN/8, x4, x1, x2)

inst_50942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300000ffffffff; valaddr_reg:x3; val_offset:152826*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152826*0 + 3*254*FLEN/8, x4, x1, x2)

inst_50943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300001ffffffff; valaddr_reg:x3; val_offset:152829*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152829*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_50944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300003ffffffff; valaddr_reg:x3; val_offset:152832*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152832*0 + 3*256*FLEN/8, x4, x1, x2)

inst_50945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300007ffffffff; valaddr_reg:x3; val_offset:152835*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152835*0 + 3*257*FLEN/8, x4, x1, x2)

inst_50946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30000fffffffff; valaddr_reg:x3; val_offset:152838*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152838*0 + 3*258*FLEN/8, x4, x1, x2)

inst_50947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30001fffffffff; valaddr_reg:x3; val_offset:152841*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152841*0 + 3*259*FLEN/8, x4, x1, x2)

inst_50948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30003fffffffff; valaddr_reg:x3; val_offset:152844*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152844*0 + 3*260*FLEN/8, x4, x1, x2)

inst_50949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30007fffffffff; valaddr_reg:x3; val_offset:152847*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152847*0 + 3*261*FLEN/8, x4, x1, x2)

inst_50950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3000ffffffffff; valaddr_reg:x3; val_offset:152850*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152850*0 + 3*262*FLEN/8, x4, x1, x2)

inst_50951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3001ffffffffff; valaddr_reg:x3; val_offset:152853*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152853*0 + 3*263*FLEN/8, x4, x1, x2)

inst_50952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3003ffffffffff; valaddr_reg:x3; val_offset:152856*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152856*0 + 3*264*FLEN/8, x4, x1, x2)

inst_50953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3007ffffffffff; valaddr_reg:x3; val_offset:152859*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152859*0 + 3*265*FLEN/8, x4, x1, x2)

inst_50954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc300fffffffffff; valaddr_reg:x3; val_offset:152862*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152862*0 + 3*266*FLEN/8, x4, x1, x2)

inst_50955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc301fffffffffff; valaddr_reg:x3; val_offset:152865*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152865*0 + 3*267*FLEN/8, x4, x1, x2)

inst_50956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc303fffffffffff; valaddr_reg:x3; val_offset:152868*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152868*0 + 3*268*FLEN/8, x4, x1, x2)

inst_50957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc307fffffffffff; valaddr_reg:x3; val_offset:152871*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152871*0 + 3*269*FLEN/8, x4, x1, x2)

inst_50958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc30ffffffffffff; valaddr_reg:x3; val_offset:152874*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152874*0 + 3*270*FLEN/8, x4, x1, x2)

inst_50959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc31ffffffffffff; valaddr_reg:x3; val_offset:152877*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152877*0 + 3*271*FLEN/8, x4, x1, x2)

inst_50960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc33ffffffffffff; valaddr_reg:x3; val_offset:152880*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152880*0 + 3*272*FLEN/8, x4, x1, x2)

inst_50961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc37ffffffffffff; valaddr_reg:x3; val_offset:152883*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152883*0 + 3*273*FLEN/8, x4, x1, x2)

inst_50962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc38000000000000; valaddr_reg:x3; val_offset:152886*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152886*0 + 3*274*FLEN/8, x4, x1, x2)

inst_50963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3c000000000000; valaddr_reg:x3; val_offset:152889*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152889*0 + 3*275*FLEN/8, x4, x1, x2)

inst_50964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3e000000000000; valaddr_reg:x3; val_offset:152892*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152892*0 + 3*276*FLEN/8, x4, x1, x2)

inst_50965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3f000000000000; valaddr_reg:x3; val_offset:152895*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152895*0 + 3*277*FLEN/8, x4, x1, x2)

inst_50966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3f800000000000; valaddr_reg:x3; val_offset:152898*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152898*0 + 3*278*FLEN/8, x4, x1, x2)

inst_50967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fc00000000000; valaddr_reg:x3; val_offset:152901*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152901*0 + 3*279*FLEN/8, x4, x1, x2)

inst_50968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fe00000000000; valaddr_reg:x3; val_offset:152904*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152904*0 + 3*280*FLEN/8, x4, x1, x2)

inst_50969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ff00000000000; valaddr_reg:x3; val_offset:152907*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152907*0 + 3*281*FLEN/8, x4, x1, x2)

inst_50970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ff80000000000; valaddr_reg:x3; val_offset:152910*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152910*0 + 3*282*FLEN/8, x4, x1, x2)

inst_50971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffc0000000000; valaddr_reg:x3; val_offset:152913*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152913*0 + 3*283*FLEN/8, x4, x1, x2)

inst_50972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffe0000000000; valaddr_reg:x3; val_offset:152916*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152916*0 + 3*284*FLEN/8, x4, x1, x2)

inst_50973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fff0000000000; valaddr_reg:x3; val_offset:152919*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152919*0 + 3*285*FLEN/8, x4, x1, x2)

inst_50974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fff8000000000; valaddr_reg:x3; val_offset:152922*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152922*0 + 3*286*FLEN/8, x4, x1, x2)

inst_50975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffc000000000; valaddr_reg:x3; val_offset:152925*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152925*0 + 3*287*FLEN/8, x4, x1, x2)

inst_50976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffe000000000; valaddr_reg:x3; val_offset:152928*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152928*0 + 3*288*FLEN/8, x4, x1, x2)

inst_50977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffff000000000; valaddr_reg:x3; val_offset:152931*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152931*0 + 3*289*FLEN/8, x4, x1, x2)

inst_50978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffff800000000; valaddr_reg:x3; val_offset:152934*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152934*0 + 3*290*FLEN/8, x4, x1, x2)

inst_50979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffc00000000; valaddr_reg:x3; val_offset:152937*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152937*0 + 3*291*FLEN/8, x4, x1, x2)

inst_50980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffe00000000; valaddr_reg:x3; val_offset:152940*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152940*0 + 3*292*FLEN/8, x4, x1, x2)

inst_50981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffff00000000; valaddr_reg:x3; val_offset:152943*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152943*0 + 3*293*FLEN/8, x4, x1, x2)

inst_50982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffff80000000; valaddr_reg:x3; val_offset:152946*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152946*0 + 3*294*FLEN/8, x4, x1, x2)

inst_50983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffc0000000; valaddr_reg:x3; val_offset:152949*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152949*0 + 3*295*FLEN/8, x4, x1, x2)

inst_50984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffe0000000; valaddr_reg:x3; val_offset:152952*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152952*0 + 3*296*FLEN/8, x4, x1, x2)

inst_50985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffff0000000; valaddr_reg:x3; val_offset:152955*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152955*0 + 3*297*FLEN/8, x4, x1, x2)

inst_50986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffff8000000; valaddr_reg:x3; val_offset:152958*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152958*0 + 3*298*FLEN/8, x4, x1, x2)

inst_50987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffc000000; valaddr_reg:x3; val_offset:152961*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152961*0 + 3*299*FLEN/8, x4, x1, x2)

inst_50988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffe000000; valaddr_reg:x3; val_offset:152964*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152964*0 + 3*300*FLEN/8, x4, x1, x2)

inst_50989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffff000000; valaddr_reg:x3; val_offset:152967*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152967*0 + 3*301*FLEN/8, x4, x1, x2)

inst_50990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffff800000; valaddr_reg:x3; val_offset:152970*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152970*0 + 3*302*FLEN/8, x4, x1, x2)

inst_50991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffffc00000; valaddr_reg:x3; val_offset:152973*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152973*0 + 3*303*FLEN/8, x4, x1, x2)

inst_50992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffffe00000; valaddr_reg:x3; val_offset:152976*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152976*0 + 3*304*FLEN/8, x4, x1, x2)

inst_50993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffff00000; valaddr_reg:x3; val_offset:152979*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152979*0 + 3*305*FLEN/8, x4, x1, x2)

inst_50994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffff80000; valaddr_reg:x3; val_offset:152982*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152982*0 + 3*306*FLEN/8, x4, x1, x2)

inst_50995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffffc0000; valaddr_reg:x3; val_offset:152985*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152985*0 + 3*307*FLEN/8, x4, x1, x2)

inst_50996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffffe0000; valaddr_reg:x3; val_offset:152988*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152988*0 + 3*308*FLEN/8, x4, x1, x2)

inst_50997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffffff0000; valaddr_reg:x3; val_offset:152991*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152991*0 + 3*309*FLEN/8, x4, x1, x2)

inst_50998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffffff8000; valaddr_reg:x3; val_offset:152994*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152994*0 + 3*310*FLEN/8, x4, x1, x2)

inst_50999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffffffc000; valaddr_reg:x3; val_offset:152997*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152997*0 + 3*311*FLEN/8, x4, x1, x2)

inst_51000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffffffe000; valaddr_reg:x3; val_offset:153000*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153000*0 + 3*312*FLEN/8, x4, x1, x2)

inst_51001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffffff000; valaddr_reg:x3; val_offset:153003*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153003*0 + 3*313*FLEN/8, x4, x1, x2)

inst_51002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffffff800; valaddr_reg:x3; val_offset:153006*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153006*0 + 3*314*FLEN/8, x4, x1, x2)

inst_51003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffffffc00; valaddr_reg:x3; val_offset:153009*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153009*0 + 3*315*FLEN/8, x4, x1, x2)

inst_51004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffffffe00; valaddr_reg:x3; val_offset:153012*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153012*0 + 3*316*FLEN/8, x4, x1, x2)

inst_51005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffffffff00; valaddr_reg:x3; val_offset:153015*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153015*0 + 3*317*FLEN/8, x4, x1, x2)

inst_51006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffffffff80; valaddr_reg:x3; val_offset:153018*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153018*0 + 3*318*FLEN/8, x4, x1, x2)

inst_51007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffffffffc0; valaddr_reg:x3; val_offset:153021*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153021*0 + 3*319*FLEN/8, x4, x1, x2)

inst_51008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffffffffe0; valaddr_reg:x3; val_offset:153024*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153024*0 + 3*320*FLEN/8, x4, x1, x2)

inst_51009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffffffff0; valaddr_reg:x3; val_offset:153027*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153027*0 + 3*321*FLEN/8, x4, x1, x2)

inst_51010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffffffff8; valaddr_reg:x3; val_offset:153030*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153030*0 + 3*322*FLEN/8, x4, x1, x2)

inst_51011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffffffffc; valaddr_reg:x3; val_offset:153033*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153033*0 + 3*323*FLEN/8, x4, x1, x2)

inst_51012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3ffffffffffffe; valaddr_reg:x3; val_offset:153036*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153036*0 + 3*324*FLEN/8, x4, x1, x2)

inst_51013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3c3 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbc3fffffffffffff; valaddr_reg:x3; val_offset:153039*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153039*0 + 3*325*FLEN/8, x4, x1, x2)

inst_51014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:153042*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153042*0 + 3*326*FLEN/8, x4, x1, x2)

inst_51015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:153045*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153045*0 + 3*327*FLEN/8, x4, x1, x2)

inst_51016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:153048*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153048*0 + 3*328*FLEN/8, x4, x1, x2)

inst_51017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:153051*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153051*0 + 3*329*FLEN/8, x4, x1, x2)

inst_51018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:153054*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153054*0 + 3*330*FLEN/8, x4, x1, x2)

inst_51019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:153057*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153057*0 + 3*331*FLEN/8, x4, x1, x2)

inst_51020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:153060*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153060*0 + 3*332*FLEN/8, x4, x1, x2)

inst_51021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:153063*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153063*0 + 3*333*FLEN/8, x4, x1, x2)

inst_51022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:153066*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153066*0 + 3*334*FLEN/8, x4, x1, x2)

inst_51023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:153069*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153069*0 + 3*335*FLEN/8, x4, x1, x2)

inst_51024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:153072*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153072*0 + 3*336*FLEN/8, x4, x1, x2)

inst_51025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:153075*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153075*0 + 3*337*FLEN/8, x4, x1, x2)

inst_51026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:153078*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153078*0 + 3*338*FLEN/8, x4, x1, x2)

inst_51027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:153081*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153081*0 + 3*339*FLEN/8, x4, x1, x2)

inst_51028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:153084*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153084*0 + 3*340*FLEN/8, x4, x1, x2)

inst_51029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:153087*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153087*0 + 3*341*FLEN/8, x4, x1, x2)

inst_51030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:153090*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153090*0 + 3*342*FLEN/8, x4, x1, x2)

inst_51031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:153093*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153093*0 + 3*343*FLEN/8, x4, x1, x2)

inst_51032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:153096*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153096*0 + 3*344*FLEN/8, x4, x1, x2)

inst_51033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:153099*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153099*0 + 3*345*FLEN/8, x4, x1, x2)

inst_51034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:153102*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153102*0 + 3*346*FLEN/8, x4, x1, x2)

inst_51035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf112c2c43eca3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x07affe75bfdab and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f112c2c43eca3; op2val:0x9fd07affe75bfdab;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:153105*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153105*0 + 3*347*FLEN/8, x4, x1, x2)

inst_51036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000000000000; valaddr_reg:x3; val_offset:153108*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153108*0 + 3*348*FLEN/8, x4, x1, x2)

inst_51037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000000000001; valaddr_reg:x3; val_offset:153111*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153111*0 + 3*349*FLEN/8, x4, x1, x2)

inst_51038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000000000003; valaddr_reg:x3; val_offset:153114*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153114*0 + 3*350*FLEN/8, x4, x1, x2)

inst_51039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000000000007; valaddr_reg:x3; val_offset:153117*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153117*0 + 3*351*FLEN/8, x4, x1, x2)

inst_51040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000000000000f; valaddr_reg:x3; val_offset:153120*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153120*0 + 3*352*FLEN/8, x4, x1, x2)

inst_51041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000000000001f; valaddr_reg:x3; val_offset:153123*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153123*0 + 3*353*FLEN/8, x4, x1, x2)

inst_51042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000000000003f; valaddr_reg:x3; val_offset:153126*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153126*0 + 3*354*FLEN/8, x4, x1, x2)

inst_51043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000000000007f; valaddr_reg:x3; val_offset:153129*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153129*0 + 3*355*FLEN/8, x4, x1, x2)

inst_51044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900000000000ff; valaddr_reg:x3; val_offset:153132*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153132*0 + 3*356*FLEN/8, x4, x1, x2)

inst_51045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900000000001ff; valaddr_reg:x3; val_offset:153135*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153135*0 + 3*357*FLEN/8, x4, x1, x2)

inst_51046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900000000003ff; valaddr_reg:x3; val_offset:153138*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153138*0 + 3*358*FLEN/8, x4, x1, x2)

inst_51047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900000000007ff; valaddr_reg:x3; val_offset:153141*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153141*0 + 3*359*FLEN/8, x4, x1, x2)

inst_51048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000000000fff; valaddr_reg:x3; val_offset:153144*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153144*0 + 3*360*FLEN/8, x4, x1, x2)

inst_51049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000000001fff; valaddr_reg:x3; val_offset:153147*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153147*0 + 3*361*FLEN/8, x4, x1, x2)

inst_51050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000000003fff; valaddr_reg:x3; val_offset:153150*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153150*0 + 3*362*FLEN/8, x4, x1, x2)

inst_51051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000000007fff; valaddr_reg:x3; val_offset:153153*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153153*0 + 3*363*FLEN/8, x4, x1, x2)

inst_51052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000000000ffff; valaddr_reg:x3; val_offset:153156*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153156*0 + 3*364*FLEN/8, x4, x1, x2)

inst_51053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000000001ffff; valaddr_reg:x3; val_offset:153159*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153159*0 + 3*365*FLEN/8, x4, x1, x2)

inst_51054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000000003ffff; valaddr_reg:x3; val_offset:153162*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153162*0 + 3*366*FLEN/8, x4, x1, x2)

inst_51055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000000007ffff; valaddr_reg:x3; val_offset:153165*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153165*0 + 3*367*FLEN/8, x4, x1, x2)

inst_51056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900000000fffff; valaddr_reg:x3; val_offset:153168*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153168*0 + 3*368*FLEN/8, x4, x1, x2)

inst_51057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900000001fffff; valaddr_reg:x3; val_offset:153171*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153171*0 + 3*369*FLEN/8, x4, x1, x2)

inst_51058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900000003fffff; valaddr_reg:x3; val_offset:153174*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153174*0 + 3*370*FLEN/8, x4, x1, x2)

inst_51059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900000007fffff; valaddr_reg:x3; val_offset:153177*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153177*0 + 3*371*FLEN/8, x4, x1, x2)

inst_51060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000000ffffff; valaddr_reg:x3; val_offset:153180*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153180*0 + 3*372*FLEN/8, x4, x1, x2)

inst_51061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000001ffffff; valaddr_reg:x3; val_offset:153183*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153183*0 + 3*373*FLEN/8, x4, x1, x2)

inst_51062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000003ffffff; valaddr_reg:x3; val_offset:153186*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153186*0 + 3*374*FLEN/8, x4, x1, x2)

inst_51063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000007ffffff; valaddr_reg:x3; val_offset:153189*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153189*0 + 3*375*FLEN/8, x4, x1, x2)

inst_51064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000000fffffff; valaddr_reg:x3; val_offset:153192*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153192*0 + 3*376*FLEN/8, x4, x1, x2)

inst_51065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000001fffffff; valaddr_reg:x3; val_offset:153195*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153195*0 + 3*377*FLEN/8, x4, x1, x2)

inst_51066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000003fffffff; valaddr_reg:x3; val_offset:153198*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153198*0 + 3*378*FLEN/8, x4, x1, x2)

inst_51067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000007fffffff; valaddr_reg:x3; val_offset:153201*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153201*0 + 3*379*FLEN/8, x4, x1, x2)

inst_51068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900000ffffffff; valaddr_reg:x3; val_offset:153204*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153204*0 + 3*380*FLEN/8, x4, x1, x2)

inst_51069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900001ffffffff; valaddr_reg:x3; val_offset:153207*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153207*0 + 3*381*FLEN/8, x4, x1, x2)

inst_51070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900003ffffffff; valaddr_reg:x3; val_offset:153210*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153210*0 + 3*382*FLEN/8, x4, x1, x2)

inst_51071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900007ffffffff; valaddr_reg:x3; val_offset:153213*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153213*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_51072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90000fffffffff; valaddr_reg:x3; val_offset:153216*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153216*0 + 3*384*FLEN/8, x4, x1, x2)

inst_51073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90001fffffffff; valaddr_reg:x3; val_offset:153219*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153219*0 + 3*385*FLEN/8, x4, x1, x2)

inst_51074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90003fffffffff; valaddr_reg:x3; val_offset:153222*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153222*0 + 3*386*FLEN/8, x4, x1, x2)

inst_51075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90007fffffffff; valaddr_reg:x3; val_offset:153225*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153225*0 + 3*387*FLEN/8, x4, x1, x2)

inst_51076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9000ffffffffff; valaddr_reg:x3; val_offset:153228*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153228*0 + 3*388*FLEN/8, x4, x1, x2)

inst_51077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9001ffffffffff; valaddr_reg:x3; val_offset:153231*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153231*0 + 3*389*FLEN/8, x4, x1, x2)

inst_51078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9003ffffffffff; valaddr_reg:x3; val_offset:153234*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153234*0 + 3*390*FLEN/8, x4, x1, x2)

inst_51079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9007ffffffffff; valaddr_reg:x3; val_offset:153237*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153237*0 + 3*391*FLEN/8, x4, x1, x2)

inst_51080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c900fffffffffff; valaddr_reg:x3; val_offset:153240*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153240*0 + 3*392*FLEN/8, x4, x1, x2)

inst_51081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c901fffffffffff; valaddr_reg:x3; val_offset:153243*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153243*0 + 3*393*FLEN/8, x4, x1, x2)

inst_51082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c903fffffffffff; valaddr_reg:x3; val_offset:153246*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153246*0 + 3*394*FLEN/8, x4, x1, x2)

inst_51083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c907fffffffffff; valaddr_reg:x3; val_offset:153249*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153249*0 + 3*395*FLEN/8, x4, x1, x2)

inst_51084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c90ffffffffffff; valaddr_reg:x3; val_offset:153252*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153252*0 + 3*396*FLEN/8, x4, x1, x2)

inst_51085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c91ffffffffffff; valaddr_reg:x3; val_offset:153255*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153255*0 + 3*397*FLEN/8, x4, x1, x2)

inst_51086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c93ffffffffffff; valaddr_reg:x3; val_offset:153258*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153258*0 + 3*398*FLEN/8, x4, x1, x2)

inst_51087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c97ffffffffffff; valaddr_reg:x3; val_offset:153261*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153261*0 + 3*399*FLEN/8, x4, x1, x2)

inst_51088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c98000000000000; valaddr_reg:x3; val_offset:153264*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153264*0 + 3*400*FLEN/8, x4, x1, x2)

inst_51089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9c000000000000; valaddr_reg:x3; val_offset:153267*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153267*0 + 3*401*FLEN/8, x4, x1, x2)

inst_51090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9e000000000000; valaddr_reg:x3; val_offset:153270*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153270*0 + 3*402*FLEN/8, x4, x1, x2)

inst_51091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9f000000000000; valaddr_reg:x3; val_offset:153273*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153273*0 + 3*403*FLEN/8, x4, x1, x2)

inst_51092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9f800000000000; valaddr_reg:x3; val_offset:153276*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153276*0 + 3*404*FLEN/8, x4, x1, x2)

inst_51093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fc00000000000; valaddr_reg:x3; val_offset:153279*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153279*0 + 3*405*FLEN/8, x4, x1, x2)

inst_51094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fe00000000000; valaddr_reg:x3; val_offset:153282*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153282*0 + 3*406*FLEN/8, x4, x1, x2)

inst_51095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ff00000000000; valaddr_reg:x3; val_offset:153285*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153285*0 + 3*407*FLEN/8, x4, x1, x2)

inst_51096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ff80000000000; valaddr_reg:x3; val_offset:153288*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153288*0 + 3*408*FLEN/8, x4, x1, x2)

inst_51097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffc0000000000; valaddr_reg:x3; val_offset:153291*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153291*0 + 3*409*FLEN/8, x4, x1, x2)

inst_51098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffe0000000000; valaddr_reg:x3; val_offset:153294*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153294*0 + 3*410*FLEN/8, x4, x1, x2)

inst_51099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fff0000000000; valaddr_reg:x3; val_offset:153297*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153297*0 + 3*411*FLEN/8, x4, x1, x2)

inst_51100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fff8000000000; valaddr_reg:x3; val_offset:153300*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153300*0 + 3*412*FLEN/8, x4, x1, x2)

inst_51101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffc000000000; valaddr_reg:x3; val_offset:153303*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153303*0 + 3*413*FLEN/8, x4, x1, x2)

inst_51102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffe000000000; valaddr_reg:x3; val_offset:153306*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153306*0 + 3*414*FLEN/8, x4, x1, x2)

inst_51103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffff000000000; valaddr_reg:x3; val_offset:153309*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153309*0 + 3*415*FLEN/8, x4, x1, x2)

inst_51104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffff800000000; valaddr_reg:x3; val_offset:153312*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153312*0 + 3*416*FLEN/8, x4, x1, x2)

inst_51105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffc00000000; valaddr_reg:x3; val_offset:153315*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153315*0 + 3*417*FLEN/8, x4, x1, x2)

inst_51106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffe00000000; valaddr_reg:x3; val_offset:153318*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153318*0 + 3*418*FLEN/8, x4, x1, x2)

inst_51107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffff00000000; valaddr_reg:x3; val_offset:153321*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153321*0 + 3*419*FLEN/8, x4, x1, x2)

inst_51108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffff80000000; valaddr_reg:x3; val_offset:153324*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153324*0 + 3*420*FLEN/8, x4, x1, x2)

inst_51109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffc0000000; valaddr_reg:x3; val_offset:153327*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153327*0 + 3*421*FLEN/8, x4, x1, x2)

inst_51110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffe0000000; valaddr_reg:x3; val_offset:153330*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153330*0 + 3*422*FLEN/8, x4, x1, x2)

inst_51111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffff0000000; valaddr_reg:x3; val_offset:153333*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153333*0 + 3*423*FLEN/8, x4, x1, x2)

inst_51112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffff8000000; valaddr_reg:x3; val_offset:153336*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153336*0 + 3*424*FLEN/8, x4, x1, x2)

inst_51113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffc000000; valaddr_reg:x3; val_offset:153339*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153339*0 + 3*425*FLEN/8, x4, x1, x2)

inst_51114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffe000000; valaddr_reg:x3; val_offset:153342*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153342*0 + 3*426*FLEN/8, x4, x1, x2)

inst_51115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffff000000; valaddr_reg:x3; val_offset:153345*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153345*0 + 3*427*FLEN/8, x4, x1, x2)

inst_51116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffff800000; valaddr_reg:x3; val_offset:153348*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153348*0 + 3*428*FLEN/8, x4, x1, x2)

inst_51117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffffc00000; valaddr_reg:x3; val_offset:153351*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153351*0 + 3*429*FLEN/8, x4, x1, x2)

inst_51118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffffe00000; valaddr_reg:x3; val_offset:153354*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153354*0 + 3*430*FLEN/8, x4, x1, x2)

inst_51119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffff00000; valaddr_reg:x3; val_offset:153357*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153357*0 + 3*431*FLEN/8, x4, x1, x2)

inst_51120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffff80000; valaddr_reg:x3; val_offset:153360*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153360*0 + 3*432*FLEN/8, x4, x1, x2)

inst_51121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffffc0000; valaddr_reg:x3; val_offset:153363*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153363*0 + 3*433*FLEN/8, x4, x1, x2)

inst_51122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffffe0000; valaddr_reg:x3; val_offset:153366*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153366*0 + 3*434*FLEN/8, x4, x1, x2)

inst_51123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffffff0000; valaddr_reg:x3; val_offset:153369*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153369*0 + 3*435*FLEN/8, x4, x1, x2)

inst_51124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffffff8000; valaddr_reg:x3; val_offset:153372*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153372*0 + 3*436*FLEN/8, x4, x1, x2)

inst_51125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffffffc000; valaddr_reg:x3; val_offset:153375*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153375*0 + 3*437*FLEN/8, x4, x1, x2)

inst_51126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffffffe000; valaddr_reg:x3; val_offset:153378*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153378*0 + 3*438*FLEN/8, x4, x1, x2)

inst_51127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffffff000; valaddr_reg:x3; val_offset:153381*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153381*0 + 3*439*FLEN/8, x4, x1, x2)

inst_51128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffffff800; valaddr_reg:x3; val_offset:153384*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153384*0 + 3*440*FLEN/8, x4, x1, x2)

inst_51129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffffffc00; valaddr_reg:x3; val_offset:153387*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153387*0 + 3*441*FLEN/8, x4, x1, x2)

inst_51130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffffffe00; valaddr_reg:x3; val_offset:153390*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153390*0 + 3*442*FLEN/8, x4, x1, x2)

inst_51131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffffffff00; valaddr_reg:x3; val_offset:153393*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153393*0 + 3*443*FLEN/8, x4, x1, x2)

inst_51132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffffffff80; valaddr_reg:x3; val_offset:153396*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153396*0 + 3*444*FLEN/8, x4, x1, x2)

inst_51133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffffffffc0; valaddr_reg:x3; val_offset:153399*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153399*0 + 3*445*FLEN/8, x4, x1, x2)

inst_51134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffffffffe0; valaddr_reg:x3; val_offset:153402*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153402*0 + 3*446*FLEN/8, x4, x1, x2)

inst_51135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffffffff0; valaddr_reg:x3; val_offset:153405*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153405*0 + 3*447*FLEN/8, x4, x1, x2)

inst_51136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffffffff8; valaddr_reg:x3; val_offset:153408*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153408*0 + 3*448*FLEN/8, x4, x1, x2)

inst_51137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffffffffc; valaddr_reg:x3; val_offset:153411*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153411*0 + 3*449*FLEN/8, x4, x1, x2)

inst_51138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9ffffffffffffe; valaddr_reg:x3; val_offset:153414*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153414*0 + 3*450*FLEN/8, x4, x1, x2)

inst_51139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3c9fffffffffffff; valaddr_reg:x3; val_offset:153417*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153417*0 + 3*451*FLEN/8, x4, x1, x2)

inst_51140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:153420*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153420*0 + 3*452*FLEN/8, x4, x1, x2)

inst_51141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:153423*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153423*0 + 3*453*FLEN/8, x4, x1, x2)

inst_51142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:153426*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153426*0 + 3*454*FLEN/8, x4, x1, x2)

inst_51143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:153429*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153429*0 + 3*455*FLEN/8, x4, x1, x2)

inst_51144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:153432*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153432*0 + 3*456*FLEN/8, x4, x1, x2)

inst_51145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:153435*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153435*0 + 3*457*FLEN/8, x4, x1, x2)

inst_51146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:153438*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153438*0 + 3*458*FLEN/8, x4, x1, x2)

inst_51147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:153441*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153441*0 + 3*459*FLEN/8, x4, x1, x2)

inst_51148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:153444*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153444*0 + 3*460*FLEN/8, x4, x1, x2)

inst_51149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:153447*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153447*0 + 3*461*FLEN/8, x4, x1, x2)

inst_51150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:153450*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153450*0 + 3*462*FLEN/8, x4, x1, x2)

inst_51151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:153453*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153453*0 + 3*463*FLEN/8, x4, x1, x2)

inst_51152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:153456*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153456*0 + 3*464*FLEN/8, x4, x1, x2)

inst_51153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:153459*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153459*0 + 3*465*FLEN/8, x4, x1, x2)

inst_51154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:153462*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153462*0 + 3*466*FLEN/8, x4, x1, x2)

inst_51155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:153465*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153465*0 + 3*467*FLEN/8, x4, x1, x2)

inst_51156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:153468*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153468*0 + 3*468*FLEN/8, x4, x1, x2)

inst_51157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:153471*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153471*0 + 3*469*FLEN/8, x4, x1, x2)

inst_51158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:153474*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153474*0 + 3*470*FLEN/8, x4, x1, x2)

inst_51159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:153477*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153477*0 + 3*471*FLEN/8, x4, x1, x2)

inst_51160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:153480*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153480*0 + 3*472*FLEN/8, x4, x1, x2)

inst_51161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0772e3445d62b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f1860e3b4eb81; op2val:0x2040772e3445d62b;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:153483*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153483*0 + 3*473*FLEN/8, x4, x1, x2)

inst_51162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:153486*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153486*0 + 3*474*FLEN/8, x4, x1, x2)

inst_51163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:153489*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153489*0 + 3*475*FLEN/8, x4, x1, x2)

inst_51164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:153492*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153492*0 + 3*476*FLEN/8, x4, x1, x2)

inst_51165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:153495*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153495*0 + 3*477*FLEN/8, x4, x1, x2)

inst_51166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:153498*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153498*0 + 3*478*FLEN/8, x4, x1, x2)

inst_51167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:153501*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153501*0 + 3*479*FLEN/8, x4, x1, x2)

inst_51168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:153504*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153504*0 + 3*480*FLEN/8, x4, x1, x2)

inst_51169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:153507*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153507*0 + 3*481*FLEN/8, x4, x1, x2)

inst_51170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:153510*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153510*0 + 3*482*FLEN/8, x4, x1, x2)

inst_51171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:153513*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153513*0 + 3*483*FLEN/8, x4, x1, x2)

inst_51172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:153516*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153516*0 + 3*484*FLEN/8, x4, x1, x2)

inst_51173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:153519*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153519*0 + 3*485*FLEN/8, x4, x1, x2)

inst_51174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:153522*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153522*0 + 3*486*FLEN/8, x4, x1, x2)

inst_51175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:153525*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153525*0 + 3*487*FLEN/8, x4, x1, x2)

inst_51176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:153528*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153528*0 + 3*488*FLEN/8, x4, x1, x2)

inst_51177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:153531*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153531*0 + 3*489*FLEN/8, x4, x1, x2)

inst_51178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:153534*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153534*0 + 3*490*FLEN/8, x4, x1, x2)

inst_51179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:153537*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153537*0 + 3*491*FLEN/8, x4, x1, x2)

inst_51180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:153540*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153540*0 + 3*492*FLEN/8, x4, x1, x2)

inst_51181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:153543*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153543*0 + 3*493*FLEN/8, x4, x1, x2)

inst_51182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:153546*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153546*0 + 3*494*FLEN/8, x4, x1, x2)

inst_51183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:153549*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153549*0 + 3*495*FLEN/8, x4, x1, x2)

inst_51184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000000000000; valaddr_reg:x3; val_offset:153552*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153552*0 + 3*496*FLEN/8, x4, x1, x2)

inst_51185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000000000001; valaddr_reg:x3; val_offset:153555*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153555*0 + 3*497*FLEN/8, x4, x1, x2)

inst_51186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000000000003; valaddr_reg:x3; val_offset:153558*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153558*0 + 3*498*FLEN/8, x4, x1, x2)

inst_51187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000000000007; valaddr_reg:x3; val_offset:153561*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153561*0 + 3*499*FLEN/8, x4, x1, x2)

inst_51188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000000000000f; valaddr_reg:x3; val_offset:153564*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153564*0 + 3*500*FLEN/8, x4, x1, x2)

inst_51189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000000000001f; valaddr_reg:x3; val_offset:153567*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153567*0 + 3*501*FLEN/8, x4, x1, x2)

inst_51190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000000000003f; valaddr_reg:x3; val_offset:153570*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153570*0 + 3*502*FLEN/8, x4, x1, x2)

inst_51191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000000000007f; valaddr_reg:x3; val_offset:153573*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153573*0 + 3*503*FLEN/8, x4, x1, x2)

inst_51192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00000000000ff; valaddr_reg:x3; val_offset:153576*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153576*0 + 3*504*FLEN/8, x4, x1, x2)

inst_51193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00000000001ff; valaddr_reg:x3; val_offset:153579*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153579*0 + 3*505*FLEN/8, x4, x1, x2)

inst_51194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00000000003ff; valaddr_reg:x3; val_offset:153582*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153582*0 + 3*506*FLEN/8, x4, x1, x2)

inst_51195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00000000007ff; valaddr_reg:x3; val_offset:153585*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153585*0 + 3*507*FLEN/8, x4, x1, x2)

inst_51196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000000000fff; valaddr_reg:x3; val_offset:153588*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153588*0 + 3*508*FLEN/8, x4, x1, x2)

inst_51197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000000001fff; valaddr_reg:x3; val_offset:153591*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153591*0 + 3*509*FLEN/8, x4, x1, x2)

inst_51198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000000003fff; valaddr_reg:x3; val_offset:153594*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153594*0 + 3*510*FLEN/8, x4, x1, x2)

inst_51199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000000007fff; valaddr_reg:x3; val_offset:153597*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153597*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_51200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000000000ffff; valaddr_reg:x3; val_offset:153600*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153600*0 + 3*512*FLEN/8, x4, x1, x2)

inst_51201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000000001ffff; valaddr_reg:x3; val_offset:153603*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153603*0 + 3*513*FLEN/8, x4, x1, x2)

inst_51202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000000003ffff; valaddr_reg:x3; val_offset:153606*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153606*0 + 3*514*FLEN/8, x4, x1, x2)

inst_51203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000000007ffff; valaddr_reg:x3; val_offset:153609*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153609*0 + 3*515*FLEN/8, x4, x1, x2)

inst_51204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00000000fffff; valaddr_reg:x3; val_offset:153612*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153612*0 + 3*516*FLEN/8, x4, x1, x2)

inst_51205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00000001fffff; valaddr_reg:x3; val_offset:153615*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153615*0 + 3*517*FLEN/8, x4, x1, x2)

inst_51206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00000003fffff; valaddr_reg:x3; val_offset:153618*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153618*0 + 3*518*FLEN/8, x4, x1, x2)

inst_51207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00000007fffff; valaddr_reg:x3; val_offset:153621*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153621*0 + 3*519*FLEN/8, x4, x1, x2)

inst_51208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000000ffffff; valaddr_reg:x3; val_offset:153624*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153624*0 + 3*520*FLEN/8, x4, x1, x2)

inst_51209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000001ffffff; valaddr_reg:x3; val_offset:153627*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153627*0 + 3*521*FLEN/8, x4, x1, x2)

inst_51210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000003ffffff; valaddr_reg:x3; val_offset:153630*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153630*0 + 3*522*FLEN/8, x4, x1, x2)

inst_51211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000007ffffff; valaddr_reg:x3; val_offset:153633*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153633*0 + 3*523*FLEN/8, x4, x1, x2)

inst_51212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000000fffffff; valaddr_reg:x3; val_offset:153636*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153636*0 + 3*524*FLEN/8, x4, x1, x2)

inst_51213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000001fffffff; valaddr_reg:x3; val_offset:153639*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153639*0 + 3*525*FLEN/8, x4, x1, x2)

inst_51214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000003fffffff; valaddr_reg:x3; val_offset:153642*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153642*0 + 3*526*FLEN/8, x4, x1, x2)

inst_51215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000007fffffff; valaddr_reg:x3; val_offset:153645*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153645*0 + 3*527*FLEN/8, x4, x1, x2)

inst_51216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00000ffffffff; valaddr_reg:x3; val_offset:153648*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153648*0 + 3*528*FLEN/8, x4, x1, x2)

inst_51217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00001ffffffff; valaddr_reg:x3; val_offset:153651*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153651*0 + 3*529*FLEN/8, x4, x1, x2)

inst_51218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00003ffffffff; valaddr_reg:x3; val_offset:153654*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153654*0 + 3*530*FLEN/8, x4, x1, x2)

inst_51219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00007ffffffff; valaddr_reg:x3; val_offset:153657*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153657*0 + 3*531*FLEN/8, x4, x1, x2)

inst_51220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0000fffffffff; valaddr_reg:x3; val_offset:153660*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153660*0 + 3*532*FLEN/8, x4, x1, x2)

inst_51221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0001fffffffff; valaddr_reg:x3; val_offset:153663*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153663*0 + 3*533*FLEN/8, x4, x1, x2)

inst_51222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0003fffffffff; valaddr_reg:x3; val_offset:153666*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153666*0 + 3*534*FLEN/8, x4, x1, x2)

inst_51223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0007fffffffff; valaddr_reg:x3; val_offset:153669*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153669*0 + 3*535*FLEN/8, x4, x1, x2)

inst_51224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a000ffffffffff; valaddr_reg:x3; val_offset:153672*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153672*0 + 3*536*FLEN/8, x4, x1, x2)

inst_51225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a001ffffffffff; valaddr_reg:x3; val_offset:153675*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153675*0 + 3*537*FLEN/8, x4, x1, x2)

inst_51226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a003ffffffffff; valaddr_reg:x3; val_offset:153678*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153678*0 + 3*538*FLEN/8, x4, x1, x2)

inst_51227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a007ffffffffff; valaddr_reg:x3; val_offset:153681*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153681*0 + 3*539*FLEN/8, x4, x1, x2)

inst_51228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a00fffffffffff; valaddr_reg:x3; val_offset:153684*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153684*0 + 3*540*FLEN/8, x4, x1, x2)

inst_51229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a01fffffffffff; valaddr_reg:x3; val_offset:153687*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153687*0 + 3*541*FLEN/8, x4, x1, x2)

inst_51230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a03fffffffffff; valaddr_reg:x3; val_offset:153690*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153690*0 + 3*542*FLEN/8, x4, x1, x2)

inst_51231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a07fffffffffff; valaddr_reg:x3; val_offset:153693*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153693*0 + 3*543*FLEN/8, x4, x1, x2)

inst_51232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a0ffffffffffff; valaddr_reg:x3; val_offset:153696*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153696*0 + 3*544*FLEN/8, x4, x1, x2)

inst_51233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a1ffffffffffff; valaddr_reg:x3; val_offset:153699*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153699*0 + 3*545*FLEN/8, x4, x1, x2)

inst_51234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a3ffffffffffff; valaddr_reg:x3; val_offset:153702*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153702*0 + 3*546*FLEN/8, x4, x1, x2)

inst_51235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a7ffffffffffff; valaddr_reg:x3; val_offset:153705*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153705*0 + 3*547*FLEN/8, x4, x1, x2)

inst_51236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3a8000000000000; valaddr_reg:x3; val_offset:153708*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153708*0 + 3*548*FLEN/8, x4, x1, x2)

inst_51237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3ac000000000000; valaddr_reg:x3; val_offset:153711*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153711*0 + 3*549*FLEN/8, x4, x1, x2)

inst_51238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3ae000000000000; valaddr_reg:x3; val_offset:153714*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153714*0 + 3*550*FLEN/8, x4, x1, x2)

inst_51239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3af000000000000; valaddr_reg:x3; val_offset:153717*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153717*0 + 3*551*FLEN/8, x4, x1, x2)

inst_51240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3af800000000000; valaddr_reg:x3; val_offset:153720*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153720*0 + 3*552*FLEN/8, x4, x1, x2)

inst_51241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afc00000000000; valaddr_reg:x3; val_offset:153723*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153723*0 + 3*553*FLEN/8, x4, x1, x2)

inst_51242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afe00000000000; valaddr_reg:x3; val_offset:153726*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153726*0 + 3*554*FLEN/8, x4, x1, x2)

inst_51243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3aff00000000000; valaddr_reg:x3; val_offset:153729*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153729*0 + 3*555*FLEN/8, x4, x1, x2)

inst_51244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3aff80000000000; valaddr_reg:x3; val_offset:153732*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153732*0 + 3*556*FLEN/8, x4, x1, x2)

inst_51245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affc0000000000; valaddr_reg:x3; val_offset:153735*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153735*0 + 3*557*FLEN/8, x4, x1, x2)

inst_51246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affe0000000000; valaddr_reg:x3; val_offset:153738*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153738*0 + 3*558*FLEN/8, x4, x1, x2)

inst_51247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afff0000000000; valaddr_reg:x3; val_offset:153741*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153741*0 + 3*559*FLEN/8, x4, x1, x2)

inst_51248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afff8000000000; valaddr_reg:x3; val_offset:153744*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153744*0 + 3*560*FLEN/8, x4, x1, x2)

inst_51249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffc000000000; valaddr_reg:x3; val_offset:153747*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153747*0 + 3*561*FLEN/8, x4, x1, x2)

inst_51250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffe000000000; valaddr_reg:x3; val_offset:153750*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153750*0 + 3*562*FLEN/8, x4, x1, x2)

inst_51251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affff000000000; valaddr_reg:x3; val_offset:153753*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153753*0 + 3*563*FLEN/8, x4, x1, x2)

inst_51252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affff800000000; valaddr_reg:x3; val_offset:153756*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153756*0 + 3*564*FLEN/8, x4, x1, x2)

inst_51253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffc00000000; valaddr_reg:x3; val_offset:153759*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153759*0 + 3*565*FLEN/8, x4, x1, x2)

inst_51254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffe00000000; valaddr_reg:x3; val_offset:153762*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153762*0 + 3*566*FLEN/8, x4, x1, x2)

inst_51255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffff00000000; valaddr_reg:x3; val_offset:153765*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153765*0 + 3*567*FLEN/8, x4, x1, x2)

inst_51256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffff80000000; valaddr_reg:x3; val_offset:153768*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153768*0 + 3*568*FLEN/8, x4, x1, x2)

inst_51257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffc0000000; valaddr_reg:x3; val_offset:153771*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153771*0 + 3*569*FLEN/8, x4, x1, x2)

inst_51258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffe0000000; valaddr_reg:x3; val_offset:153774*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153774*0 + 3*570*FLEN/8, x4, x1, x2)

inst_51259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffff0000000; valaddr_reg:x3; val_offset:153777*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153777*0 + 3*571*FLEN/8, x4, x1, x2)

inst_51260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffff8000000; valaddr_reg:x3; val_offset:153780*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153780*0 + 3*572*FLEN/8, x4, x1, x2)

inst_51261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffc000000; valaddr_reg:x3; val_offset:153783*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153783*0 + 3*573*FLEN/8, x4, x1, x2)

inst_51262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffe000000; valaddr_reg:x3; val_offset:153786*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153786*0 + 3*574*FLEN/8, x4, x1, x2)

inst_51263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffff000000; valaddr_reg:x3; val_offset:153789*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153789*0 + 3*575*FLEN/8, x4, x1, x2)

inst_51264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffff800000; valaddr_reg:x3; val_offset:153792*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153792*0 + 3*576*FLEN/8, x4, x1, x2)

inst_51265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffffc00000; valaddr_reg:x3; val_offset:153795*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153795*0 + 3*577*FLEN/8, x4, x1, x2)

inst_51266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffffe00000; valaddr_reg:x3; val_offset:153798*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153798*0 + 3*578*FLEN/8, x4, x1, x2)

inst_51267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffff00000; valaddr_reg:x3; val_offset:153801*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153801*0 + 3*579*FLEN/8, x4, x1, x2)

inst_51268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffff80000; valaddr_reg:x3; val_offset:153804*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153804*0 + 3*580*FLEN/8, x4, x1, x2)

inst_51269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffffc0000; valaddr_reg:x3; val_offset:153807*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153807*0 + 3*581*FLEN/8, x4, x1, x2)

inst_51270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffffe0000; valaddr_reg:x3; val_offset:153810*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153810*0 + 3*582*FLEN/8, x4, x1, x2)

inst_51271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffffff0000; valaddr_reg:x3; val_offset:153813*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153813*0 + 3*583*FLEN/8, x4, x1, x2)

inst_51272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffffff8000; valaddr_reg:x3; val_offset:153816*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153816*0 + 3*584*FLEN/8, x4, x1, x2)

inst_51273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffffffc000; valaddr_reg:x3; val_offset:153819*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153819*0 + 3*585*FLEN/8, x4, x1, x2)

inst_51274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffffffe000; valaddr_reg:x3; val_offset:153822*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153822*0 + 3*586*FLEN/8, x4, x1, x2)

inst_51275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffffff000; valaddr_reg:x3; val_offset:153825*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153825*0 + 3*587*FLEN/8, x4, x1, x2)

inst_51276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffffff800; valaddr_reg:x3; val_offset:153828*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153828*0 + 3*588*FLEN/8, x4, x1, x2)

inst_51277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffffffc00; valaddr_reg:x3; val_offset:153831*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153831*0 + 3*589*FLEN/8, x4, x1, x2)

inst_51278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffffffe00; valaddr_reg:x3; val_offset:153834*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153834*0 + 3*590*FLEN/8, x4, x1, x2)

inst_51279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffffffff00; valaddr_reg:x3; val_offset:153837*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153837*0 + 3*591*FLEN/8, x4, x1, x2)

inst_51280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffffffff80; valaddr_reg:x3; val_offset:153840*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153840*0 + 3*592*FLEN/8, x4, x1, x2)

inst_51281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffffffffc0; valaddr_reg:x3; val_offset:153843*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153843*0 + 3*593*FLEN/8, x4, x1, x2)

inst_51282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffffffffe0; valaddr_reg:x3; val_offset:153846*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153846*0 + 3*594*FLEN/8, x4, x1, x2)

inst_51283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffffffff0; valaddr_reg:x3; val_offset:153849*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153849*0 + 3*595*FLEN/8, x4, x1, x2)

inst_51284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffffffff8; valaddr_reg:x3; val_offset:153852*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153852*0 + 3*596*FLEN/8, x4, x1, x2)

inst_51285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffffffffc; valaddr_reg:x3; val_offset:153855*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153855*0 + 3*597*FLEN/8, x4, x1, x2)

inst_51286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3affffffffffffe; valaddr_reg:x3; val_offset:153858*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153858*0 + 3*598*FLEN/8, x4, x1, x2)

inst_51287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f2498354565a7; op2val:0x0;
op3val:0x3afffffffffffff; valaddr_reg:x3; val_offset:153861*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153861*0 + 3*599*FLEN/8, x4, x1, x2)

inst_51288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:153864*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153864*0 + 3*600*FLEN/8, x4, x1, x2)

inst_51289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:153867*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153867*0 + 3*601*FLEN/8, x4, x1, x2)

inst_51290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:153870*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153870*0 + 3*602*FLEN/8, x4, x1, x2)

inst_51291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:153873*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153873*0 + 3*603*FLEN/8, x4, x1, x2)

inst_51292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:153876*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153876*0 + 3*604*FLEN/8, x4, x1, x2)

inst_51293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:153879*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153879*0 + 3*605*FLEN/8, x4, x1, x2)

inst_51294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:153882*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153882*0 + 3*606*FLEN/8, x4, x1, x2)

inst_51295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:153885*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153885*0 + 3*607*FLEN/8, x4, x1, x2)

inst_51296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:153888*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153888*0 + 3*608*FLEN/8, x4, x1, x2)

inst_51297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:153891*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153891*0 + 3*609*FLEN/8, x4, x1, x2)

inst_51298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:153894*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153894*0 + 3*610*FLEN/8, x4, x1, x2)

inst_51299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:153897*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153897*0 + 3*611*FLEN/8, x4, x1, x2)

inst_51300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:153900*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153900*0 + 3*612*FLEN/8, x4, x1, x2)

inst_51301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:153903*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153903*0 + 3*613*FLEN/8, x4, x1, x2)

inst_51302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:153906*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153906*0 + 3*614*FLEN/8, x4, x1, x2)

inst_51303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:153909*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153909*0 + 3*615*FLEN/8, x4, x1, x2)

inst_51304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:153912*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153912*0 + 3*616*FLEN/8, x4, x1, x2)

inst_51305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:153915*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153915*0 + 3*617*FLEN/8, x4, x1, x2)

inst_51306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:153918*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153918*0 + 3*618*FLEN/8, x4, x1, x2)

inst_51307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:153921*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153921*0 + 3*619*FLEN/8, x4, x1, x2)

inst_51308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:153924*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153924*0 + 3*620*FLEN/8, x4, x1, x2)

inst_51309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:153927*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153927*0 + 3*621*FLEN/8, x4, x1, x2)

inst_51310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000000000000; valaddr_reg:x3; val_offset:153930*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153930*0 + 3*622*FLEN/8, x4, x1, x2)

inst_51311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000000000001; valaddr_reg:x3; val_offset:153933*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153933*0 + 3*623*FLEN/8, x4, x1, x2)

inst_51312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000000000003; valaddr_reg:x3; val_offset:153936*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153936*0 + 3*624*FLEN/8, x4, x1, x2)

inst_51313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000000000007; valaddr_reg:x3; val_offset:153939*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153939*0 + 3*625*FLEN/8, x4, x1, x2)

inst_51314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000000000000f; valaddr_reg:x3; val_offset:153942*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153942*0 + 3*626*FLEN/8, x4, x1, x2)

inst_51315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000000000001f; valaddr_reg:x3; val_offset:153945*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153945*0 + 3*627*FLEN/8, x4, x1, x2)

inst_51316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000000000003f; valaddr_reg:x3; val_offset:153948*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153948*0 + 3*628*FLEN/8, x4, x1, x2)

inst_51317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000000000007f; valaddr_reg:x3; val_offset:153951*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153951*0 + 3*629*FLEN/8, x4, x1, x2)

inst_51318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500000000000ff; valaddr_reg:x3; val_offset:153954*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153954*0 + 3*630*FLEN/8, x4, x1, x2)

inst_51319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500000000001ff; valaddr_reg:x3; val_offset:153957*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153957*0 + 3*631*FLEN/8, x4, x1, x2)

inst_51320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500000000003ff; valaddr_reg:x3; val_offset:153960*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153960*0 + 3*632*FLEN/8, x4, x1, x2)

inst_51321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500000000007ff; valaddr_reg:x3; val_offset:153963*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153963*0 + 3*633*FLEN/8, x4, x1, x2)

inst_51322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000000000fff; valaddr_reg:x3; val_offset:153966*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153966*0 + 3*634*FLEN/8, x4, x1, x2)

inst_51323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000000001fff; valaddr_reg:x3; val_offset:153969*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153969*0 + 3*635*FLEN/8, x4, x1, x2)

inst_51324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000000003fff; valaddr_reg:x3; val_offset:153972*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153972*0 + 3*636*FLEN/8, x4, x1, x2)

inst_51325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000000007fff; valaddr_reg:x3; val_offset:153975*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153975*0 + 3*637*FLEN/8, x4, x1, x2)

inst_51326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000000000ffff; valaddr_reg:x3; val_offset:153978*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153978*0 + 3*638*FLEN/8, x4, x1, x2)

inst_51327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000000001ffff; valaddr_reg:x3; val_offset:153981*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153981*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_51328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000000003ffff; valaddr_reg:x3; val_offset:153984*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153984*0 + 3*640*FLEN/8, x4, x1, x2)

inst_51329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000000007ffff; valaddr_reg:x3; val_offset:153987*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153987*0 + 3*641*FLEN/8, x4, x1, x2)

inst_51330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500000000fffff; valaddr_reg:x3; val_offset:153990*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153990*0 + 3*642*FLEN/8, x4, x1, x2)

inst_51331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500000001fffff; valaddr_reg:x3; val_offset:153993*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153993*0 + 3*643*FLEN/8, x4, x1, x2)

inst_51332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500000003fffff; valaddr_reg:x3; val_offset:153996*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153996*0 + 3*644*FLEN/8, x4, x1, x2)

inst_51333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500000007fffff; valaddr_reg:x3; val_offset:153999*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153999*0 + 3*645*FLEN/8, x4, x1, x2)

inst_51334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000000ffffff; valaddr_reg:x3; val_offset:154002*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154002*0 + 3*646*FLEN/8, x4, x1, x2)

inst_51335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000001ffffff; valaddr_reg:x3; val_offset:154005*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154005*0 + 3*647*FLEN/8, x4, x1, x2)

inst_51336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000003ffffff; valaddr_reg:x3; val_offset:154008*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154008*0 + 3*648*FLEN/8, x4, x1, x2)

inst_51337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000007ffffff; valaddr_reg:x3; val_offset:154011*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154011*0 + 3*649*FLEN/8, x4, x1, x2)

inst_51338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000000fffffff; valaddr_reg:x3; val_offset:154014*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154014*0 + 3*650*FLEN/8, x4, x1, x2)

inst_51339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000001fffffff; valaddr_reg:x3; val_offset:154017*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154017*0 + 3*651*FLEN/8, x4, x1, x2)

inst_51340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000003fffffff; valaddr_reg:x3; val_offset:154020*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154020*0 + 3*652*FLEN/8, x4, x1, x2)

inst_51341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000007fffffff; valaddr_reg:x3; val_offset:154023*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154023*0 + 3*653*FLEN/8, x4, x1, x2)

inst_51342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500000ffffffff; valaddr_reg:x3; val_offset:154026*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154026*0 + 3*654*FLEN/8, x4, x1, x2)

inst_51343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500001ffffffff; valaddr_reg:x3; val_offset:154029*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154029*0 + 3*655*FLEN/8, x4, x1, x2)

inst_51344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500003ffffffff; valaddr_reg:x3; val_offset:154032*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154032*0 + 3*656*FLEN/8, x4, x1, x2)

inst_51345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500007ffffffff; valaddr_reg:x3; val_offset:154035*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154035*0 + 3*657*FLEN/8, x4, x1, x2)

inst_51346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350000fffffffff; valaddr_reg:x3; val_offset:154038*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154038*0 + 3*658*FLEN/8, x4, x1, x2)

inst_51347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350001fffffffff; valaddr_reg:x3; val_offset:154041*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154041*0 + 3*659*FLEN/8, x4, x1, x2)

inst_51348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350003fffffffff; valaddr_reg:x3; val_offset:154044*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154044*0 + 3*660*FLEN/8, x4, x1, x2)

inst_51349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350007fffffffff; valaddr_reg:x3; val_offset:154047*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154047*0 + 3*661*FLEN/8, x4, x1, x2)

inst_51350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835000ffffffffff; valaddr_reg:x3; val_offset:154050*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154050*0 + 3*662*FLEN/8, x4, x1, x2)

inst_51351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835001ffffffffff; valaddr_reg:x3; val_offset:154053*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154053*0 + 3*663*FLEN/8, x4, x1, x2)

inst_51352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835003ffffffffff; valaddr_reg:x3; val_offset:154056*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154056*0 + 3*664*FLEN/8, x4, x1, x2)

inst_51353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835007ffffffffff; valaddr_reg:x3; val_offset:154059*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154059*0 + 3*665*FLEN/8, x4, x1, x2)

inst_51354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83500fffffffffff; valaddr_reg:x3; val_offset:154062*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154062*0 + 3*666*FLEN/8, x4, x1, x2)

inst_51355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83501fffffffffff; valaddr_reg:x3; val_offset:154065*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154065*0 + 3*667*FLEN/8, x4, x1, x2)

inst_51356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83503fffffffffff; valaddr_reg:x3; val_offset:154068*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154068*0 + 3*668*FLEN/8, x4, x1, x2)

inst_51357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x83507fffffffffff; valaddr_reg:x3; val_offset:154071*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154071*0 + 3*669*FLEN/8, x4, x1, x2)

inst_51358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8350ffffffffffff; valaddr_reg:x3; val_offset:154074*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154074*0 + 3*670*FLEN/8, x4, x1, x2)

inst_51359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8351ffffffffffff; valaddr_reg:x3; val_offset:154077*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154077*0 + 3*671*FLEN/8, x4, x1, x2)

inst_51360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8353ffffffffffff; valaddr_reg:x3; val_offset:154080*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154080*0 + 3*672*FLEN/8, x4, x1, x2)

inst_51361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8357ffffffffffff; valaddr_reg:x3; val_offset:154083*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154083*0 + 3*673*FLEN/8, x4, x1, x2)

inst_51362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x8358000000000000; valaddr_reg:x3; val_offset:154086*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154086*0 + 3*674*FLEN/8, x4, x1, x2)

inst_51363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835c000000000000; valaddr_reg:x3; val_offset:154089*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154089*0 + 3*675*FLEN/8, x4, x1, x2)

inst_51364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835e000000000000; valaddr_reg:x3; val_offset:154092*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154092*0 + 3*676*FLEN/8, x4, x1, x2)

inst_51365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835f000000000000; valaddr_reg:x3; val_offset:154095*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154095*0 + 3*677*FLEN/8, x4, x1, x2)

inst_51366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835f800000000000; valaddr_reg:x3; val_offset:154098*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154098*0 + 3*678*FLEN/8, x4, x1, x2)

inst_51367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fc00000000000; valaddr_reg:x3; val_offset:154101*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154101*0 + 3*679*FLEN/8, x4, x1, x2)

inst_51368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fe00000000000; valaddr_reg:x3; val_offset:154104*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154104*0 + 3*680*FLEN/8, x4, x1, x2)

inst_51369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ff00000000000; valaddr_reg:x3; val_offset:154107*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154107*0 + 3*681*FLEN/8, x4, x1, x2)

inst_51370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ff80000000000; valaddr_reg:x3; val_offset:154110*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154110*0 + 3*682*FLEN/8, x4, x1, x2)

inst_51371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffc0000000000; valaddr_reg:x3; val_offset:154113*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154113*0 + 3*683*FLEN/8, x4, x1, x2)

inst_51372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffe0000000000; valaddr_reg:x3; val_offset:154116*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154116*0 + 3*684*FLEN/8, x4, x1, x2)

inst_51373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fff0000000000; valaddr_reg:x3; val_offset:154119*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154119*0 + 3*685*FLEN/8, x4, x1, x2)

inst_51374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fff8000000000; valaddr_reg:x3; val_offset:154122*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154122*0 + 3*686*FLEN/8, x4, x1, x2)

inst_51375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffc000000000; valaddr_reg:x3; val_offset:154125*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154125*0 + 3*687*FLEN/8, x4, x1, x2)

inst_51376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffe000000000; valaddr_reg:x3; val_offset:154128*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154128*0 + 3*688*FLEN/8, x4, x1, x2)

inst_51377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffff000000000; valaddr_reg:x3; val_offset:154131*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154131*0 + 3*689*FLEN/8, x4, x1, x2)

inst_51378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffff800000000; valaddr_reg:x3; val_offset:154134*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154134*0 + 3*690*FLEN/8, x4, x1, x2)

inst_51379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffc00000000; valaddr_reg:x3; val_offset:154137*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154137*0 + 3*691*FLEN/8, x4, x1, x2)

inst_51380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffe00000000; valaddr_reg:x3; val_offset:154140*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154140*0 + 3*692*FLEN/8, x4, x1, x2)

inst_51381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffff00000000; valaddr_reg:x3; val_offset:154143*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154143*0 + 3*693*FLEN/8, x4, x1, x2)

inst_51382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffff80000000; valaddr_reg:x3; val_offset:154146*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154146*0 + 3*694*FLEN/8, x4, x1, x2)

inst_51383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffc0000000; valaddr_reg:x3; val_offset:154149*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154149*0 + 3*695*FLEN/8, x4, x1, x2)

inst_51384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffe0000000; valaddr_reg:x3; val_offset:154152*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154152*0 + 3*696*FLEN/8, x4, x1, x2)

inst_51385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffff0000000; valaddr_reg:x3; val_offset:154155*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154155*0 + 3*697*FLEN/8, x4, x1, x2)

inst_51386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffff8000000; valaddr_reg:x3; val_offset:154158*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154158*0 + 3*698*FLEN/8, x4, x1, x2)

inst_51387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffc000000; valaddr_reg:x3; val_offset:154161*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154161*0 + 3*699*FLEN/8, x4, x1, x2)

inst_51388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffe000000; valaddr_reg:x3; val_offset:154164*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154164*0 + 3*700*FLEN/8, x4, x1, x2)

inst_51389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffff000000; valaddr_reg:x3; val_offset:154167*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154167*0 + 3*701*FLEN/8, x4, x1, x2)

inst_51390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffff800000; valaddr_reg:x3; val_offset:154170*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154170*0 + 3*702*FLEN/8, x4, x1, x2)

inst_51391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffffc00000; valaddr_reg:x3; val_offset:154173*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154173*0 + 3*703*FLEN/8, x4, x1, x2)

inst_51392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffffe00000; valaddr_reg:x3; val_offset:154176*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154176*0 + 3*704*FLEN/8, x4, x1, x2)

inst_51393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffff00000; valaddr_reg:x3; val_offset:154179*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154179*0 + 3*705*FLEN/8, x4, x1, x2)

inst_51394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffff80000; valaddr_reg:x3; val_offset:154182*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154182*0 + 3*706*FLEN/8, x4, x1, x2)

inst_51395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffffc0000; valaddr_reg:x3; val_offset:154185*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154185*0 + 3*707*FLEN/8, x4, x1, x2)

inst_51396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffffe0000; valaddr_reg:x3; val_offset:154188*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154188*0 + 3*708*FLEN/8, x4, x1, x2)

inst_51397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffffff0000; valaddr_reg:x3; val_offset:154191*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154191*0 + 3*709*FLEN/8, x4, x1, x2)

inst_51398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffffff8000; valaddr_reg:x3; val_offset:154194*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154194*0 + 3*710*FLEN/8, x4, x1, x2)

inst_51399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffffffc000; valaddr_reg:x3; val_offset:154197*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154197*0 + 3*711*FLEN/8, x4, x1, x2)

inst_51400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffffffe000; valaddr_reg:x3; val_offset:154200*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154200*0 + 3*712*FLEN/8, x4, x1, x2)

inst_51401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffffff000; valaddr_reg:x3; val_offset:154203*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154203*0 + 3*713*FLEN/8, x4, x1, x2)

inst_51402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffffff800; valaddr_reg:x3; val_offset:154206*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154206*0 + 3*714*FLEN/8, x4, x1, x2)

inst_51403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffffffc00; valaddr_reg:x3; val_offset:154209*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154209*0 + 3*715*FLEN/8, x4, x1, x2)

inst_51404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffffffe00; valaddr_reg:x3; val_offset:154212*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154212*0 + 3*716*FLEN/8, x4, x1, x2)

inst_51405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffffffff00; valaddr_reg:x3; val_offset:154215*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154215*0 + 3*717*FLEN/8, x4, x1, x2)

inst_51406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffffffff80; valaddr_reg:x3; val_offset:154218*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154218*0 + 3*718*FLEN/8, x4, x1, x2)

inst_51407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffffffffc0; valaddr_reg:x3; val_offset:154221*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154221*0 + 3*719*FLEN/8, x4, x1, x2)

inst_51408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffffffffe0; valaddr_reg:x3; val_offset:154224*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154224*0 + 3*720*FLEN/8, x4, x1, x2)

inst_51409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffffffff0; valaddr_reg:x3; val_offset:154227*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154227*0 + 3*721*FLEN/8, x4, x1, x2)

inst_51410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffffffff8; valaddr_reg:x3; val_offset:154230*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154230*0 + 3*722*FLEN/8, x4, x1, x2)

inst_51411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffffffffc; valaddr_reg:x3; val_offset:154233*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154233*0 + 3*723*FLEN/8, x4, x1, x2)

inst_51412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835ffffffffffffe; valaddr_reg:x3; val_offset:154236*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154236*0 + 3*724*FLEN/8, x4, x1, x2)

inst_51413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf47dc503f19c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f47dc503f19c1; op2val:0x8000;
op3val:0x835fffffffffffff; valaddr_reg:x3; val_offset:154239*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154239*0 + 3*725*FLEN/8, x4, x1, x2)

inst_51414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000000000000; valaddr_reg:x3; val_offset:154242*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154242*0 + 3*726*FLEN/8, x4, x1, x2)

inst_51415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000000000001; valaddr_reg:x3; val_offset:154245*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154245*0 + 3*727*FLEN/8, x4, x1, x2)

inst_51416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000000000003; valaddr_reg:x3; val_offset:154248*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154248*0 + 3*728*FLEN/8, x4, x1, x2)

inst_51417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000000000007; valaddr_reg:x3; val_offset:154251*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154251*0 + 3*729*FLEN/8, x4, x1, x2)

inst_51418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000000000000f; valaddr_reg:x3; val_offset:154254*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154254*0 + 3*730*FLEN/8, x4, x1, x2)

inst_51419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000000000001f; valaddr_reg:x3; val_offset:154257*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154257*0 + 3*731*FLEN/8, x4, x1, x2)

inst_51420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000000000003f; valaddr_reg:x3; val_offset:154260*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154260*0 + 3*732*FLEN/8, x4, x1, x2)

inst_51421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000000000007f; valaddr_reg:x3; val_offset:154263*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154263*0 + 3*733*FLEN/8, x4, x1, x2)

inst_51422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000000000000ff; valaddr_reg:x3; val_offset:154266*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154266*0 + 3*734*FLEN/8, x4, x1, x2)

inst_51423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000000000001ff; valaddr_reg:x3; val_offset:154269*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154269*0 + 3*735*FLEN/8, x4, x1, x2)

inst_51424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000000000003ff; valaddr_reg:x3; val_offset:154272*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154272*0 + 3*736*FLEN/8, x4, x1, x2)

inst_51425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000000000007ff; valaddr_reg:x3; val_offset:154275*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154275*0 + 3*737*FLEN/8, x4, x1, x2)

inst_51426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000000000fff; valaddr_reg:x3; val_offset:154278*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154278*0 + 3*738*FLEN/8, x4, x1, x2)

inst_51427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000000001fff; valaddr_reg:x3; val_offset:154281*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154281*0 + 3*739*FLEN/8, x4, x1, x2)

inst_51428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000000003fff; valaddr_reg:x3; val_offset:154284*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154284*0 + 3*740*FLEN/8, x4, x1, x2)

inst_51429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000000007fff; valaddr_reg:x3; val_offset:154287*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154287*0 + 3*741*FLEN/8, x4, x1, x2)

inst_51430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000000000ffff; valaddr_reg:x3; val_offset:154290*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154290*0 + 3*742*FLEN/8, x4, x1, x2)

inst_51431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000000001ffff; valaddr_reg:x3; val_offset:154293*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154293*0 + 3*743*FLEN/8, x4, x1, x2)

inst_51432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000000003ffff; valaddr_reg:x3; val_offset:154296*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154296*0 + 3*744*FLEN/8, x4, x1, x2)

inst_51433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000000007ffff; valaddr_reg:x3; val_offset:154299*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154299*0 + 3*745*FLEN/8, x4, x1, x2)

inst_51434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000000000fffff; valaddr_reg:x3; val_offset:154302*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154302*0 + 3*746*FLEN/8, x4, x1, x2)

inst_51435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000000001fffff; valaddr_reg:x3; val_offset:154305*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154305*0 + 3*747*FLEN/8, x4, x1, x2)

inst_51436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000000003fffff; valaddr_reg:x3; val_offset:154308*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154308*0 + 3*748*FLEN/8, x4, x1, x2)

inst_51437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000000007fffff; valaddr_reg:x3; val_offset:154311*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154311*0 + 3*749*FLEN/8, x4, x1, x2)

inst_51438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000000ffffff; valaddr_reg:x3; val_offset:154314*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154314*0 + 3*750*FLEN/8, x4, x1, x2)

inst_51439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000001ffffff; valaddr_reg:x3; val_offset:154317*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154317*0 + 3*751*FLEN/8, x4, x1, x2)

inst_51440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000003ffffff; valaddr_reg:x3; val_offset:154320*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154320*0 + 3*752*FLEN/8, x4, x1, x2)

inst_51441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000007ffffff; valaddr_reg:x3; val_offset:154323*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154323*0 + 3*753*FLEN/8, x4, x1, x2)

inst_51442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000000fffffff; valaddr_reg:x3; val_offset:154326*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154326*0 + 3*754*FLEN/8, x4, x1, x2)

inst_51443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000001fffffff; valaddr_reg:x3; val_offset:154329*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154329*0 + 3*755*FLEN/8, x4, x1, x2)

inst_51444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000003fffffff; valaddr_reg:x3; val_offset:154332*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154332*0 + 3*756*FLEN/8, x4, x1, x2)

inst_51445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000007fffffff; valaddr_reg:x3; val_offset:154335*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154335*0 + 3*757*FLEN/8, x4, x1, x2)

inst_51446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000000ffffffff; valaddr_reg:x3; val_offset:154338*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154338*0 + 3*758*FLEN/8, x4, x1, x2)

inst_51447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000001ffffffff; valaddr_reg:x3; val_offset:154341*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154341*0 + 3*759*FLEN/8, x4, x1, x2)

inst_51448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000003ffffffff; valaddr_reg:x3; val_offset:154344*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154344*0 + 3*760*FLEN/8, x4, x1, x2)

inst_51449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f000007ffffffff; valaddr_reg:x3; val_offset:154347*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154347*0 + 3*761*FLEN/8, x4, x1, x2)

inst_51450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00000fffffffff; valaddr_reg:x3; val_offset:154350*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154350*0 + 3*762*FLEN/8, x4, x1, x2)

inst_51451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00001fffffffff; valaddr_reg:x3; val_offset:154353*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154353*0 + 3*763*FLEN/8, x4, x1, x2)

inst_51452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00003fffffffff; valaddr_reg:x3; val_offset:154356*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154356*0 + 3*764*FLEN/8, x4, x1, x2)

inst_51453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f00007fffffffff; valaddr_reg:x3; val_offset:154359*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154359*0 + 3*765*FLEN/8, x4, x1, x2)

inst_51454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0000ffffffffff; valaddr_reg:x3; val_offset:154362*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154362*0 + 3*766*FLEN/8, x4, x1, x2)

inst_51455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x05df1640e9f6b and fs3 == 0 and fe3 == 0x3f0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9f4853a4c5bef9; op2val:0x20405df1640e9f6b;
op3val:0x3f0001ffffffffff; valaddr_reg:x3; val_offset:154365*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154365*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820095,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820351,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820863,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094821887,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094823935,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094828031,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094836223,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094852607,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094885375,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094950911,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095081983,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095344127,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095868415,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985096916991,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985099014143,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985103208447,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985111597055,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985128374271,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985161928703,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985229037567,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985363255295,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985631690751,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143986168561663,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143987242303487,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143989389787135,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143993684754431,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144002274689023,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144019454558207,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144053814296575,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144122533773311,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144259972726783,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144534850633727,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180145084606447615,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180146184118075391,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180148383141330943,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180152781187842047,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180161577280864255,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180179169466908671,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180214353838997503,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180284722583175167,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180425460071530495,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180706935048241151,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(181269885001662463,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(182395784908505087,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(182395784908505088,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(183521684815347712,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184084634768769024,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184366109745479680,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184506847233835008,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184577215978012672,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184612400350101504,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184629992536145920,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184638788629168128,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184643186675679232,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184645385698934784,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184646485210562560,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647034966376448,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647309844283392,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647447283236864,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647516002713600,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647550362451968,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647567542321152,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647576132255744,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647580427223040,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647582574706688,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647583648448512,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584185319424,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584453754880,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584587972608,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584655081472,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584688635904,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584705413120,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584713801728,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584717996032,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584720093184,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721141760,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721666048,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721928192,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722059264,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722124800,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722157568,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722173952,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722182144,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722186240,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722188288,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722189312,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722189824,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190080,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190208,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190272,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190304,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190320,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190328,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190332,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190334,64,FLEN)
NAN_BOXED(6890219197195218949,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190335,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522045440,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522045441,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522045443,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522045447,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522045455,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522045471,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522045503,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522045567,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522045695,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522045951,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522046463,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522047487,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522049535,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522053631,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522061823,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522078207,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522110975,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522176511,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522307583,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876522569727,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876523094015,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876524142591,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876526239743,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876530434047,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876538822655,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876555599871,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876589154303,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876656263167,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352876790480895,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352877058916351,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352877595787263,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352878669529087,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352880817012735,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352885111980031,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352893701914623,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352910881783807,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578352945241522175,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578353013960998911,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578353151399952383,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578353426277859327,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578353976033673215,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578355075545300991,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578357274568556543,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578361672615067647,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578370468708089855,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578388060894134271,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578423245266223103,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578493614010400767,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578634351498756095,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13578915826475466751,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13579478776428888063,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13580604676335730687,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13580604676335730688,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13581730576242573312,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582293526195994624,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582575001172705280,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582715738661060608,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582786107405238272,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582821291777327104,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582838883963371520,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582847680056393728,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582852078102904832,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582854277126160384,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582855376637788160,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582855926393602048,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856201271508992,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856338710462464,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856407429939200,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856441789677568,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856458969546752,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856467559481344,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856471854448640,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856474001932288,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856475075674112,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856475612545024,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856475880980480,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476015198208,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476082307072,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476115861504,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476132638720,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476141027328,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476145221632,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476147318784,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476148367360,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476148891648,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149153792,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149284864,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149350400,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149383168,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149399552,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149407744,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149411840,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149413888,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149414912,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149415424,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149415680,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149415808,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149415872,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149415904,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149415920,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149415928,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149415932,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149415934,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13582856476149415935,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890237222065685549,64,FLEN)
NAN_BOXED(11515843529433064456,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012563456,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012563457,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012563459,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012563463,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012563471,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012563487,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012563519,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012563583,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012563711,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012563967,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012564479,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012565503,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012567551,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012571647,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012579839,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012596223,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012628991,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012694527,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478012825599,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478013087743,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478013612031,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478014660607,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478016757759,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478020952063,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478029340671,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478046117887,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478079672319,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478146781183,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478280998911,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338478549434367,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338479086305279,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338480160047103,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338482307530751,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338486602498047,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338495192432639,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338512372301823,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338546732040191,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338615451516927,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560338752890470399,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560339027768377343,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560339577524191231,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560340677035819007,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560342876059074559,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560347274105585663,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560356070198607871,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560373662384652287,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560408846756741119,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560479215500918783,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560619952989274111,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13560901427965984767,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13561464377919406079,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13562590277826248703,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13562590277826248704,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13563716177733091328,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564279127686512640,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564560602663223296,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564701340151578624,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564771708895756288,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564806893267845120,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564824485453889536,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564833281546911744,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564837679593422848,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564839878616678400,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564840978128306176,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564841527884120064,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564841802762027008,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564841940200980480,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842008920457216,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842043280195584,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842060460064768,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842069049999360,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842073344966656,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842075492450304,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842076566192128,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077103063040,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077371498496,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077505716224,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077572825088,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077606379520,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077623156736,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077631545344,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077635739648,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077637836800,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077638885376,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639409664,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639671808,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639802880,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639868416,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639901184,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639917568,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639925760,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639929856,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639931904,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639932928,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639933440,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639933696,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639933824,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639933888,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639933920,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639933936,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639933944,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639933948,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639933950,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13564842077639933951,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890244836319030435,64,FLEN)
NAN_BOXED(11515839486703173035,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922010624,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922010625,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922010627,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922010631,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922010639,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922010655,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922010687,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922010751,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922010879,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922011135,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922011647,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922012671,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922014719,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922018815,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922027007,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922043391,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922076159,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922141695,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922272767,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038922534911,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038923059199,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038924107775,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038926204927,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038930399231,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038938787839,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038955565055,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988038989119487,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988039056228351,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988039190446079,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988039458881535,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988039995752447,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988041069494271,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988043216977919,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988047511945215,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988056101879807,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988073281748991,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988107641487359,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988176360964095,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988313799917567,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363988588677824511,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363989138433638399,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363990237945266175,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363992436968521727,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4363996835015032831,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4364005631108055039,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4364023223294099455,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4364058407666188287,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4364128776410365951,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4364269513898721279,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4364550988875431935,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4365113938828853247,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4366239838735695871,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4366239838735695872,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4367365738642538496,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4367928688595959808,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368210163572670464,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368350901061025792,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368421269805203456,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368456454177292288,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368474046363336704,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368482842456358912,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368487240502870016,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368489439526125568,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368490539037753344,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491088793567232,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491363671474176,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491501110427648,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491569829904384,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491604189642752,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491621369511936,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491629959446528,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491634254413824,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491636401897472,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491637475639296,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638012510208,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638280945664,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638415163392,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638482272256,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638515826688,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638532603904,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638540992512,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638545186816,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638547283968,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638548332544,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638548856832,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549118976,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549250048,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549315584,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549348352,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549364736,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549372928,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549377024,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549379072,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549380096,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549380608,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549380864,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549380992,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549381056,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549381088,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549381104,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549381112,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549381116,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549381118,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4368491638549381119,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890252759316360065,64,FLEN)
NAN_BOXED(2323988448052368939,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488768,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488769,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488771,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488775,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488783,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488799,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488831,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488895,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489023,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489279,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489791,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387490815,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387492863,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387496959,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387505151,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387521535,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387554303,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387619839,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387750911,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388013055,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388537343,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778389585919,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778391683071,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778395877375,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778404265983,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778421043199,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778454597631,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778521706495,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778655924223,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778924359679,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208779461230591,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208780534972415,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208782682456063,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208786977423359,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208795567357951,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208812747227135,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208847106965503,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208915826442239,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209053265395711,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209328143302655,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209877899116543,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261210977410744319,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261213176433999871,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261217574480510975,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261226370573533183,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261243962759577599,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261279147131666431,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261349515875844095,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261490253364199423,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261771728340910079,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262334678294331391,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174015,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174016,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(264586478108016640,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265149428061437952,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265430903038148608,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265571640526503936,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265642009270681600,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265677193642770432,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265694785828814848,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265703581921837056,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265707979968348160,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265710178991603712,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711278503231488,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711828259045376,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712103136952320,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712240575905792,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712309295382528,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712343655120896,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712360834990080,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712369424924672,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712373719891968,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712375867375616,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712376941117440,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377477988352,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377746423808,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377880641536,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377947750400,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377981304832,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377998082048,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378006470656,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378010664960,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378012762112,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378013810688,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014334976,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014597120,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014728192,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014793728,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014826496,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014842880,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014851072,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014855168,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014857216,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858240,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858752,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859008,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859136,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859200,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859232,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859248,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859256,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859260,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859262,64,FLEN)
NAN_BOXED(6890266191047517607,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859263,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412096,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412097,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412099,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412103,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412111,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412127,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412159,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412223,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412351,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412607,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105413119,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105414143,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105416191,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105420287,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105428479,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105444863,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105477631,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105543167,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105674239,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105936383,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817106460671,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817107509247,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817109606399,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817113800703,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817122189311,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817138966527,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817172520959,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817239629823,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817373847551,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817642283007,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062818179153919,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062819252895743,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062821400379391,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062825695346687,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062834285281279,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062851465150463,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062885824888831,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062954544365567,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063091983319039,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063366861225983,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063916617039871,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462065016128667647,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462067215151923199,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462071613198434303,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462080409291456511,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462098001477500927,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462133185849589759,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462203554593767423,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462344292082122751,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462625767058833407,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9463188717012254719,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097343,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097344,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9465440516825939968,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466003466779361280,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466284941756071936,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466425679244427264,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466496047988604928,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466531232360693760,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466548824546738176,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466557620639760384,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466562018686271488,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466564217709527040,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565317221154816,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565866976968704,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566141854875648,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566279293829120,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566348013305856,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566382373044224,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566399552913408,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566408142848000,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566412437815296,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566414585298944,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566415659040768,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416195911680,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416464347136,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416598564864,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416665673728,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416699228160,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416716005376,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416724393984,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416728588288,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416730685440,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416731734016,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732258304,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732520448,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732651520,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732717056,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732749824,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732766208,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732774400,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732778496,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732780544,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732781568,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782080,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782336,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782464,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782528,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782560,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782576,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782584,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782588,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782590,64,FLEN)
NAN_BOXED(6890304966464838081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782591,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389459968,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389459969,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389459971,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389459975,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389459983,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389459999,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389460031,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389460095,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389460223,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389460479,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389460991,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389462015,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389464063,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389468159,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389476351,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389492735,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389525503,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389591039,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389722111,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424389984255,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424390508543,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424391557119,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424393654271,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424397848575,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424406237183,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424423014399,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424456568831,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424523677695,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424657895423,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628424926330879,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628425463201791,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628426536943615,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628428684427263,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628432979394559,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628441569329151,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628458749198335,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628493108936703,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628561828413439,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628699267366911,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539628974145273855,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539629523901087743,64,FLEN)
NAN_BOXED(6890305478984056569,64,FLEN)
NAN_BOXED(2323960699070357355,64,FLEN)
NAN_BOXED(4539630623412715519,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
