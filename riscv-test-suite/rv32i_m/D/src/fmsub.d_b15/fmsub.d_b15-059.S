
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_44544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000003ffffff; valaddr_reg:x3; val_offset:133632*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133632*0 + 3*0*FLEN/8, x4, x1, x2)

inst_44545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000007ffffff; valaddr_reg:x3; val_offset:133635*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133635*0 + 3*1*FLEN/8, x4, x1, x2)

inst_44546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000000fffffff; valaddr_reg:x3; val_offset:133638*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133638*0 + 3*2*FLEN/8, x4, x1, x2)

inst_44547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000001fffffff; valaddr_reg:x3; val_offset:133641*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133641*0 + 3*3*FLEN/8, x4, x1, x2)

inst_44548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000003fffffff; valaddr_reg:x3; val_offset:133644*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133644*0 + 3*4*FLEN/8, x4, x1, x2)

inst_44549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000007fffffff; valaddr_reg:x3; val_offset:133647*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133647*0 + 3*5*FLEN/8, x4, x1, x2)

inst_44550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00000ffffffff; valaddr_reg:x3; val_offset:133650*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133650*0 + 3*6*FLEN/8, x4, x1, x2)

inst_44551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00001ffffffff; valaddr_reg:x3; val_offset:133653*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133653*0 + 3*7*FLEN/8, x4, x1, x2)

inst_44552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00003ffffffff; valaddr_reg:x3; val_offset:133656*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133656*0 + 3*8*FLEN/8, x4, x1, x2)

inst_44553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00007ffffffff; valaddr_reg:x3; val_offset:133659*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133659*0 + 3*9*FLEN/8, x4, x1, x2)

inst_44554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000fffffffff; valaddr_reg:x3; val_offset:133662*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133662*0 + 3*10*FLEN/8, x4, x1, x2)

inst_44555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0001fffffffff; valaddr_reg:x3; val_offset:133665*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133665*0 + 3*11*FLEN/8, x4, x1, x2)

inst_44556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0003fffffffff; valaddr_reg:x3; val_offset:133668*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133668*0 + 3*12*FLEN/8, x4, x1, x2)

inst_44557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0007fffffffff; valaddr_reg:x3; val_offset:133671*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133671*0 + 3*13*FLEN/8, x4, x1, x2)

inst_44558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000ffffffffff; valaddr_reg:x3; val_offset:133674*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133674*0 + 3*14*FLEN/8, x4, x1, x2)

inst_44559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d001ffffffffff; valaddr_reg:x3; val_offset:133677*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133677*0 + 3*15*FLEN/8, x4, x1, x2)

inst_44560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d003ffffffffff; valaddr_reg:x3; val_offset:133680*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133680*0 + 3*16*FLEN/8, x4, x1, x2)

inst_44561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d007ffffffffff; valaddr_reg:x3; val_offset:133683*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133683*0 + 3*17*FLEN/8, x4, x1, x2)

inst_44562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00fffffffffff; valaddr_reg:x3; val_offset:133686*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133686*0 + 3*18*FLEN/8, x4, x1, x2)

inst_44563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d01fffffffffff; valaddr_reg:x3; val_offset:133689*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133689*0 + 3*19*FLEN/8, x4, x1, x2)

inst_44564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d03fffffffffff; valaddr_reg:x3; val_offset:133692*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133692*0 + 3*20*FLEN/8, x4, x1, x2)

inst_44565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d07fffffffffff; valaddr_reg:x3; val_offset:133695*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133695*0 + 3*21*FLEN/8, x4, x1, x2)

inst_44566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0ffffffffffff; valaddr_reg:x3; val_offset:133698*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133698*0 + 3*22*FLEN/8, x4, x1, x2)

inst_44567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d1ffffffffffff; valaddr_reg:x3; val_offset:133701*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133701*0 + 3*23*FLEN/8, x4, x1, x2)

inst_44568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d3ffffffffffff; valaddr_reg:x3; val_offset:133704*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133704*0 + 3*24*FLEN/8, x4, x1, x2)

inst_44569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d7ffffffffffff; valaddr_reg:x3; val_offset:133707*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133707*0 + 3*25*FLEN/8, x4, x1, x2)

inst_44570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d8000000000000; valaddr_reg:x3; val_offset:133710*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133710*0 + 3*26*FLEN/8, x4, x1, x2)

inst_44571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dc000000000000; valaddr_reg:x3; val_offset:133713*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133713*0 + 3*27*FLEN/8, x4, x1, x2)

inst_44572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80de000000000000; valaddr_reg:x3; val_offset:133716*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133716*0 + 3*28*FLEN/8, x4, x1, x2)

inst_44573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80df000000000000; valaddr_reg:x3; val_offset:133719*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133719*0 + 3*29*FLEN/8, x4, x1, x2)

inst_44574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80df800000000000; valaddr_reg:x3; val_offset:133722*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133722*0 + 3*30*FLEN/8, x4, x1, x2)

inst_44575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfc00000000000; valaddr_reg:x3; val_offset:133725*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133725*0 + 3*31*FLEN/8, x4, x1, x2)

inst_44576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfe00000000000; valaddr_reg:x3; val_offset:133728*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133728*0 + 3*32*FLEN/8, x4, x1, x2)

inst_44577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dff00000000000; valaddr_reg:x3; val_offset:133731*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133731*0 + 3*33*FLEN/8, x4, x1, x2)

inst_44578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dff80000000000; valaddr_reg:x3; val_offset:133734*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133734*0 + 3*34*FLEN/8, x4, x1, x2)

inst_44579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffc0000000000; valaddr_reg:x3; val_offset:133737*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133737*0 + 3*35*FLEN/8, x4, x1, x2)

inst_44580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffe0000000000; valaddr_reg:x3; val_offset:133740*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133740*0 + 3*36*FLEN/8, x4, x1, x2)

inst_44581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfff0000000000; valaddr_reg:x3; val_offset:133743*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133743*0 + 3*37*FLEN/8, x4, x1, x2)

inst_44582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfff8000000000; valaddr_reg:x3; val_offset:133746*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133746*0 + 3*38*FLEN/8, x4, x1, x2)

inst_44583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffc000000000; valaddr_reg:x3; val_offset:133749*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133749*0 + 3*39*FLEN/8, x4, x1, x2)

inst_44584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffe000000000; valaddr_reg:x3; val_offset:133752*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133752*0 + 3*40*FLEN/8, x4, x1, x2)

inst_44585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffff000000000; valaddr_reg:x3; val_offset:133755*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133755*0 + 3*41*FLEN/8, x4, x1, x2)

inst_44586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffff800000000; valaddr_reg:x3; val_offset:133758*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133758*0 + 3*42*FLEN/8, x4, x1, x2)

inst_44587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffc00000000; valaddr_reg:x3; val_offset:133761*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133761*0 + 3*43*FLEN/8, x4, x1, x2)

inst_44588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffe00000000; valaddr_reg:x3; val_offset:133764*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133764*0 + 3*44*FLEN/8, x4, x1, x2)

inst_44589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffff00000000; valaddr_reg:x3; val_offset:133767*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133767*0 + 3*45*FLEN/8, x4, x1, x2)

inst_44590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffff80000000; valaddr_reg:x3; val_offset:133770*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133770*0 + 3*46*FLEN/8, x4, x1, x2)

inst_44591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffc0000000; valaddr_reg:x3; val_offset:133773*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133773*0 + 3*47*FLEN/8, x4, x1, x2)

inst_44592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffe0000000; valaddr_reg:x3; val_offset:133776*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133776*0 + 3*48*FLEN/8, x4, x1, x2)

inst_44593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffff0000000; valaddr_reg:x3; val_offset:133779*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133779*0 + 3*49*FLEN/8, x4, x1, x2)

inst_44594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffff8000000; valaddr_reg:x3; val_offset:133782*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133782*0 + 3*50*FLEN/8, x4, x1, x2)

inst_44595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffc000000; valaddr_reg:x3; val_offset:133785*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133785*0 + 3*51*FLEN/8, x4, x1, x2)

inst_44596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffe000000; valaddr_reg:x3; val_offset:133788*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133788*0 + 3*52*FLEN/8, x4, x1, x2)

inst_44597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffff000000; valaddr_reg:x3; val_offset:133791*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133791*0 + 3*53*FLEN/8, x4, x1, x2)

inst_44598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffff800000; valaddr_reg:x3; val_offset:133794*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133794*0 + 3*54*FLEN/8, x4, x1, x2)

inst_44599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffffc00000; valaddr_reg:x3; val_offset:133797*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133797*0 + 3*55*FLEN/8, x4, x1, x2)

inst_44600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffffe00000; valaddr_reg:x3; val_offset:133800*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133800*0 + 3*56*FLEN/8, x4, x1, x2)

inst_44601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffff00000; valaddr_reg:x3; val_offset:133803*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133803*0 + 3*57*FLEN/8, x4, x1, x2)

inst_44602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffff80000; valaddr_reg:x3; val_offset:133806*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133806*0 + 3*58*FLEN/8, x4, x1, x2)

inst_44603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffffc0000; valaddr_reg:x3; val_offset:133809*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133809*0 + 3*59*FLEN/8, x4, x1, x2)

inst_44604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffffe0000; valaddr_reg:x3; val_offset:133812*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133812*0 + 3*60*FLEN/8, x4, x1, x2)

inst_44605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffffff0000; valaddr_reg:x3; val_offset:133815*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133815*0 + 3*61*FLEN/8, x4, x1, x2)

inst_44606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffffff8000; valaddr_reg:x3; val_offset:133818*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133818*0 + 3*62*FLEN/8, x4, x1, x2)

inst_44607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffffffc000; valaddr_reg:x3; val_offset:133821*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133821*0 + 3*63*FLEN/8, x4, x1, x2)

inst_44608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffffffe000; valaddr_reg:x3; val_offset:133824*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133824*0 + 3*64*FLEN/8, x4, x1, x2)

inst_44609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffffff000; valaddr_reg:x3; val_offset:133827*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133827*0 + 3*65*FLEN/8, x4, x1, x2)

inst_44610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffffff800; valaddr_reg:x3; val_offset:133830*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133830*0 + 3*66*FLEN/8, x4, x1, x2)

inst_44611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffffffc00; valaddr_reg:x3; val_offset:133833*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133833*0 + 3*67*FLEN/8, x4, x1, x2)

inst_44612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffffffe00; valaddr_reg:x3; val_offset:133836*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133836*0 + 3*68*FLEN/8, x4, x1, x2)

inst_44613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffffffff00; valaddr_reg:x3; val_offset:133839*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133839*0 + 3*69*FLEN/8, x4, x1, x2)

inst_44614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffffffff80; valaddr_reg:x3; val_offset:133842*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133842*0 + 3*70*FLEN/8, x4, x1, x2)

inst_44615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffffffffc0; valaddr_reg:x3; val_offset:133845*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133845*0 + 3*71*FLEN/8, x4, x1, x2)

inst_44616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffffffffe0; valaddr_reg:x3; val_offset:133848*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133848*0 + 3*72*FLEN/8, x4, x1, x2)

inst_44617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffffffff0; valaddr_reg:x3; val_offset:133851*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133851*0 + 3*73*FLEN/8, x4, x1, x2)

inst_44618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffffffff8; valaddr_reg:x3; val_offset:133854*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133854*0 + 3*74*FLEN/8, x4, x1, x2)

inst_44619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffffffffc; valaddr_reg:x3; val_offset:133857*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133857*0 + 3*75*FLEN/8, x4, x1, x2)

inst_44620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dffffffffffffe; valaddr_reg:x3; val_offset:133860*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133860*0 + 3*76*FLEN/8, x4, x1, x2)

inst_44621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80dfffffffffffff; valaddr_reg:x3; val_offset:133863*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133863*0 + 3*77*FLEN/8, x4, x1, x2)

inst_44622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:133866*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133866*0 + 3*78*FLEN/8, x4, x1, x2)

inst_44623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:133869*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133869*0 + 3*79*FLEN/8, x4, x1, x2)

inst_44624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:133872*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133872*0 + 3*80*FLEN/8, x4, x1, x2)

inst_44625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:133875*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133875*0 + 3*81*FLEN/8, x4, x1, x2)

inst_44626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:133878*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133878*0 + 3*82*FLEN/8, x4, x1, x2)

inst_44627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:133881*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133881*0 + 3*83*FLEN/8, x4, x1, x2)

inst_44628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:133884*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133884*0 + 3*84*FLEN/8, x4, x1, x2)

inst_44629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:133887*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133887*0 + 3*85*FLEN/8, x4, x1, x2)

inst_44630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:133890*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133890*0 + 3*86*FLEN/8, x4, x1, x2)

inst_44631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:133893*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133893*0 + 3*87*FLEN/8, x4, x1, x2)

inst_44632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:133896*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133896*0 + 3*88*FLEN/8, x4, x1, x2)

inst_44633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:133899*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133899*0 + 3*89*FLEN/8, x4, x1, x2)

inst_44634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:133902*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133902*0 + 3*90*FLEN/8, x4, x1, x2)

inst_44635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:133905*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133905*0 + 3*91*FLEN/8, x4, x1, x2)

inst_44636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:133908*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133908*0 + 3*92*FLEN/8, x4, x1, x2)

inst_44637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:133911*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133911*0 + 3*93*FLEN/8, x4, x1, x2)

inst_44638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:133914*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133914*0 + 3*94*FLEN/8, x4, x1, x2)

inst_44639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:133917*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133917*0 + 3*95*FLEN/8, x4, x1, x2)

inst_44640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:133920*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133920*0 + 3*96*FLEN/8, x4, x1, x2)

inst_44641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:133923*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133923*0 + 3*97*FLEN/8, x4, x1, x2)

inst_44642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:133926*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133926*0 + 3*98*FLEN/8, x4, x1, x2)

inst_44643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:133929*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133929*0 + 3*99*FLEN/8, x4, x1, x2)

inst_44644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000000000000; valaddr_reg:x3; val_offset:133932*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133932*0 + 3*100*FLEN/8, x4, x1, x2)

inst_44645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000000000001; valaddr_reg:x3; val_offset:133935*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133935*0 + 3*101*FLEN/8, x4, x1, x2)

inst_44646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000000000003; valaddr_reg:x3; val_offset:133938*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133938*0 + 3*102*FLEN/8, x4, x1, x2)

inst_44647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000000000007; valaddr_reg:x3; val_offset:133941*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133941*0 + 3*103*FLEN/8, x4, x1, x2)

inst_44648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000000000000f; valaddr_reg:x3; val_offset:133944*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133944*0 + 3*104*FLEN/8, x4, x1, x2)

inst_44649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000000000001f; valaddr_reg:x3; val_offset:133947*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133947*0 + 3*105*FLEN/8, x4, x1, x2)

inst_44650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000000000003f; valaddr_reg:x3; val_offset:133950*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133950*0 + 3*106*FLEN/8, x4, x1, x2)

inst_44651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000000000007f; valaddr_reg:x3; val_offset:133953*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133953*0 + 3*107*FLEN/8, x4, x1, x2)

inst_44652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000000000000ff; valaddr_reg:x3; val_offset:133956*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133956*0 + 3*108*FLEN/8, x4, x1, x2)

inst_44653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000000000001ff; valaddr_reg:x3; val_offset:133959*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133959*0 + 3*109*FLEN/8, x4, x1, x2)

inst_44654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000000000003ff; valaddr_reg:x3; val_offset:133962*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133962*0 + 3*110*FLEN/8, x4, x1, x2)

inst_44655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000000000007ff; valaddr_reg:x3; val_offset:133965*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133965*0 + 3*111*FLEN/8, x4, x1, x2)

inst_44656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000000000fff; valaddr_reg:x3; val_offset:133968*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133968*0 + 3*112*FLEN/8, x4, x1, x2)

inst_44657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000000001fff; valaddr_reg:x3; val_offset:133971*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133971*0 + 3*113*FLEN/8, x4, x1, x2)

inst_44658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000000003fff; valaddr_reg:x3; val_offset:133974*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133974*0 + 3*114*FLEN/8, x4, x1, x2)

inst_44659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000000007fff; valaddr_reg:x3; val_offset:133977*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133977*0 + 3*115*FLEN/8, x4, x1, x2)

inst_44660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000000000ffff; valaddr_reg:x3; val_offset:133980*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133980*0 + 3*116*FLEN/8, x4, x1, x2)

inst_44661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000000001ffff; valaddr_reg:x3; val_offset:133983*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133983*0 + 3*117*FLEN/8, x4, x1, x2)

inst_44662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000000003ffff; valaddr_reg:x3; val_offset:133986*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133986*0 + 3*118*FLEN/8, x4, x1, x2)

inst_44663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000000007ffff; valaddr_reg:x3; val_offset:133989*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133989*0 + 3*119*FLEN/8, x4, x1, x2)

inst_44664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000000000fffff; valaddr_reg:x3; val_offset:133992*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133992*0 + 3*120*FLEN/8, x4, x1, x2)

inst_44665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000000001fffff; valaddr_reg:x3; val_offset:133995*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133995*0 + 3*121*FLEN/8, x4, x1, x2)

inst_44666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000000003fffff; valaddr_reg:x3; val_offset:133998*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133998*0 + 3*122*FLEN/8, x4, x1, x2)

inst_44667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000000007fffff; valaddr_reg:x3; val_offset:134001*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134001*0 + 3*123*FLEN/8, x4, x1, x2)

inst_44668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000000ffffff; valaddr_reg:x3; val_offset:134004*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134004*0 + 3*124*FLEN/8, x4, x1, x2)

inst_44669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000001ffffff; valaddr_reg:x3; val_offset:134007*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134007*0 + 3*125*FLEN/8, x4, x1, x2)

inst_44670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000003ffffff; valaddr_reg:x3; val_offset:134010*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134010*0 + 3*126*FLEN/8, x4, x1, x2)

inst_44671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000007ffffff; valaddr_reg:x3; val_offset:134013*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134013*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_44672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000000fffffff; valaddr_reg:x3; val_offset:134016*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134016*0 + 3*128*FLEN/8, x4, x1, x2)

inst_44673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000001fffffff; valaddr_reg:x3; val_offset:134019*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134019*0 + 3*129*FLEN/8, x4, x1, x2)

inst_44674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000003fffffff; valaddr_reg:x3; val_offset:134022*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134022*0 + 3*130*FLEN/8, x4, x1, x2)

inst_44675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000007fffffff; valaddr_reg:x3; val_offset:134025*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134025*0 + 3*131*FLEN/8, x4, x1, x2)

inst_44676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000000ffffffff; valaddr_reg:x3; val_offset:134028*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134028*0 + 3*132*FLEN/8, x4, x1, x2)

inst_44677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000001ffffffff; valaddr_reg:x3; val_offset:134031*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134031*0 + 3*133*FLEN/8, x4, x1, x2)

inst_44678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000003ffffffff; valaddr_reg:x3; val_offset:134034*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134034*0 + 3*134*FLEN/8, x4, x1, x2)

inst_44679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000007ffffffff; valaddr_reg:x3; val_offset:134037*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134037*0 + 3*135*FLEN/8, x4, x1, x2)

inst_44680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200000fffffffff; valaddr_reg:x3; val_offset:134040*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134040*0 + 3*136*FLEN/8, x4, x1, x2)

inst_44681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200001fffffffff; valaddr_reg:x3; val_offset:134043*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134043*0 + 3*137*FLEN/8, x4, x1, x2)

inst_44682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200003fffffffff; valaddr_reg:x3; val_offset:134046*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134046*0 + 3*138*FLEN/8, x4, x1, x2)

inst_44683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200007fffffffff; valaddr_reg:x3; val_offset:134049*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134049*0 + 3*139*FLEN/8, x4, x1, x2)

inst_44684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20000ffffffffff; valaddr_reg:x3; val_offset:134052*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134052*0 + 3*140*FLEN/8, x4, x1, x2)

inst_44685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20001ffffffffff; valaddr_reg:x3; val_offset:134055*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134055*0 + 3*141*FLEN/8, x4, x1, x2)

inst_44686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20003ffffffffff; valaddr_reg:x3; val_offset:134058*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134058*0 + 3*142*FLEN/8, x4, x1, x2)

inst_44687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20007ffffffffff; valaddr_reg:x3; val_offset:134061*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134061*0 + 3*143*FLEN/8, x4, x1, x2)

inst_44688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2000fffffffffff; valaddr_reg:x3; val_offset:134064*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134064*0 + 3*144*FLEN/8, x4, x1, x2)

inst_44689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2001fffffffffff; valaddr_reg:x3; val_offset:134067*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134067*0 + 3*145*FLEN/8, x4, x1, x2)

inst_44690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2003fffffffffff; valaddr_reg:x3; val_offset:134070*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134070*0 + 3*146*FLEN/8, x4, x1, x2)

inst_44691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x2007fffffffffff; valaddr_reg:x3; val_offset:134073*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134073*0 + 3*147*FLEN/8, x4, x1, x2)

inst_44692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x200ffffffffffff; valaddr_reg:x3; val_offset:134076*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134076*0 + 3*148*FLEN/8, x4, x1, x2)

inst_44693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x201ffffffffffff; valaddr_reg:x3; val_offset:134079*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134079*0 + 3*149*FLEN/8, x4, x1, x2)

inst_44694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x203ffffffffffff; valaddr_reg:x3; val_offset:134082*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134082*0 + 3*150*FLEN/8, x4, x1, x2)

inst_44695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x207ffffffffffff; valaddr_reg:x3; val_offset:134085*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134085*0 + 3*151*FLEN/8, x4, x1, x2)

inst_44696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x208000000000000; valaddr_reg:x3; val_offset:134088*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134088*0 + 3*152*FLEN/8, x4, x1, x2)

inst_44697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20c000000000000; valaddr_reg:x3; val_offset:134091*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134091*0 + 3*153*FLEN/8, x4, x1, x2)

inst_44698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20e000000000000; valaddr_reg:x3; val_offset:134094*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134094*0 + 3*154*FLEN/8, x4, x1, x2)

inst_44699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20f000000000000; valaddr_reg:x3; val_offset:134097*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134097*0 + 3*155*FLEN/8, x4, x1, x2)

inst_44700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20f800000000000; valaddr_reg:x3; val_offset:134100*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134100*0 + 3*156*FLEN/8, x4, x1, x2)

inst_44701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fc00000000000; valaddr_reg:x3; val_offset:134103*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134103*0 + 3*157*FLEN/8, x4, x1, x2)

inst_44702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fe00000000000; valaddr_reg:x3; val_offset:134106*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134106*0 + 3*158*FLEN/8, x4, x1, x2)

inst_44703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ff00000000000; valaddr_reg:x3; val_offset:134109*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134109*0 + 3*159*FLEN/8, x4, x1, x2)

inst_44704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ff80000000000; valaddr_reg:x3; val_offset:134112*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134112*0 + 3*160*FLEN/8, x4, x1, x2)

inst_44705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffc0000000000; valaddr_reg:x3; val_offset:134115*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134115*0 + 3*161*FLEN/8, x4, x1, x2)

inst_44706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffe0000000000; valaddr_reg:x3; val_offset:134118*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134118*0 + 3*162*FLEN/8, x4, x1, x2)

inst_44707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fff0000000000; valaddr_reg:x3; val_offset:134121*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134121*0 + 3*163*FLEN/8, x4, x1, x2)

inst_44708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fff8000000000; valaddr_reg:x3; val_offset:134124*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134124*0 + 3*164*FLEN/8, x4, x1, x2)

inst_44709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffc000000000; valaddr_reg:x3; val_offset:134127*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134127*0 + 3*165*FLEN/8, x4, x1, x2)

inst_44710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffe000000000; valaddr_reg:x3; val_offset:134130*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134130*0 + 3*166*FLEN/8, x4, x1, x2)

inst_44711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffff000000000; valaddr_reg:x3; val_offset:134133*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134133*0 + 3*167*FLEN/8, x4, x1, x2)

inst_44712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffff800000000; valaddr_reg:x3; val_offset:134136*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134136*0 + 3*168*FLEN/8, x4, x1, x2)

inst_44713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffc00000000; valaddr_reg:x3; val_offset:134139*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134139*0 + 3*169*FLEN/8, x4, x1, x2)

inst_44714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffe00000000; valaddr_reg:x3; val_offset:134142*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134142*0 + 3*170*FLEN/8, x4, x1, x2)

inst_44715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffff00000000; valaddr_reg:x3; val_offset:134145*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134145*0 + 3*171*FLEN/8, x4, x1, x2)

inst_44716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffff80000000; valaddr_reg:x3; val_offset:134148*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134148*0 + 3*172*FLEN/8, x4, x1, x2)

inst_44717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffc0000000; valaddr_reg:x3; val_offset:134151*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134151*0 + 3*173*FLEN/8, x4, x1, x2)

inst_44718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffe0000000; valaddr_reg:x3; val_offset:134154*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134154*0 + 3*174*FLEN/8, x4, x1, x2)

inst_44719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffff0000000; valaddr_reg:x3; val_offset:134157*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134157*0 + 3*175*FLEN/8, x4, x1, x2)

inst_44720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffff8000000; valaddr_reg:x3; val_offset:134160*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134160*0 + 3*176*FLEN/8, x4, x1, x2)

inst_44721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffc000000; valaddr_reg:x3; val_offset:134163*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134163*0 + 3*177*FLEN/8, x4, x1, x2)

inst_44722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffe000000; valaddr_reg:x3; val_offset:134166*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134166*0 + 3*178*FLEN/8, x4, x1, x2)

inst_44723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffff000000; valaddr_reg:x3; val_offset:134169*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134169*0 + 3*179*FLEN/8, x4, x1, x2)

inst_44724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffff800000; valaddr_reg:x3; val_offset:134172*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134172*0 + 3*180*FLEN/8, x4, x1, x2)

inst_44725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffffc00000; valaddr_reg:x3; val_offset:134175*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134175*0 + 3*181*FLEN/8, x4, x1, x2)

inst_44726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffffe00000; valaddr_reg:x3; val_offset:134178*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134178*0 + 3*182*FLEN/8, x4, x1, x2)

inst_44727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffff00000; valaddr_reg:x3; val_offset:134181*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134181*0 + 3*183*FLEN/8, x4, x1, x2)

inst_44728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffff80000; valaddr_reg:x3; val_offset:134184*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134184*0 + 3*184*FLEN/8, x4, x1, x2)

inst_44729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffffc0000; valaddr_reg:x3; val_offset:134187*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134187*0 + 3*185*FLEN/8, x4, x1, x2)

inst_44730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffffe0000; valaddr_reg:x3; val_offset:134190*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134190*0 + 3*186*FLEN/8, x4, x1, x2)

inst_44731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffffff0000; valaddr_reg:x3; val_offset:134193*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134193*0 + 3*187*FLEN/8, x4, x1, x2)

inst_44732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffffff8000; valaddr_reg:x3; val_offset:134196*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134196*0 + 3*188*FLEN/8, x4, x1, x2)

inst_44733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffffffc000; valaddr_reg:x3; val_offset:134199*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134199*0 + 3*189*FLEN/8, x4, x1, x2)

inst_44734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffffffe000; valaddr_reg:x3; val_offset:134202*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134202*0 + 3*190*FLEN/8, x4, x1, x2)

inst_44735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffffff000; valaddr_reg:x3; val_offset:134205*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134205*0 + 3*191*FLEN/8, x4, x1, x2)

inst_44736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffffff800; valaddr_reg:x3; val_offset:134208*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134208*0 + 3*192*FLEN/8, x4, x1, x2)

inst_44737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffffffc00; valaddr_reg:x3; val_offset:134211*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134211*0 + 3*193*FLEN/8, x4, x1, x2)

inst_44738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffffffe00; valaddr_reg:x3; val_offset:134214*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134214*0 + 3*194*FLEN/8, x4, x1, x2)

inst_44739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffffffff00; valaddr_reg:x3; val_offset:134217*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134217*0 + 3*195*FLEN/8, x4, x1, x2)

inst_44740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffffffff80; valaddr_reg:x3; val_offset:134220*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134220*0 + 3*196*FLEN/8, x4, x1, x2)

inst_44741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffffffffc0; valaddr_reg:x3; val_offset:134223*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134223*0 + 3*197*FLEN/8, x4, x1, x2)

inst_44742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffffffffe0; valaddr_reg:x3; val_offset:134226*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134226*0 + 3*198*FLEN/8, x4, x1, x2)

inst_44743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffffffff0; valaddr_reg:x3; val_offset:134229*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134229*0 + 3*199*FLEN/8, x4, x1, x2)

inst_44744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffffffff8; valaddr_reg:x3; val_offset:134232*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134232*0 + 3*200*FLEN/8, x4, x1, x2)

inst_44745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffffffffc; valaddr_reg:x3; val_offset:134235*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134235*0 + 3*201*FLEN/8, x4, x1, x2)

inst_44746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20ffffffffffffe; valaddr_reg:x3; val_offset:134238*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134238*0 + 3*202*FLEN/8, x4, x1, x2)

inst_44747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0d9b365409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0d9b365409; op2val:0x0;
op3val:0x20fffffffffffff; valaddr_reg:x3; val_offset:134241*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134241*0 + 3*203*FLEN/8, x4, x1, x2)

inst_44748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:134244*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134244*0 + 3*204*FLEN/8, x4, x1, x2)

inst_44749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:134247*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134247*0 + 3*205*FLEN/8, x4, x1, x2)

inst_44750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:134250*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134250*0 + 3*206*FLEN/8, x4, x1, x2)

inst_44751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:134253*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134253*0 + 3*207*FLEN/8, x4, x1, x2)

inst_44752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:134256*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134256*0 + 3*208*FLEN/8, x4, x1, x2)

inst_44753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:134259*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134259*0 + 3*209*FLEN/8, x4, x1, x2)

inst_44754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:134262*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134262*0 + 3*210*FLEN/8, x4, x1, x2)

inst_44755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:134265*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134265*0 + 3*211*FLEN/8, x4, x1, x2)

inst_44756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:134268*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134268*0 + 3*212*FLEN/8, x4, x1, x2)

inst_44757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:134271*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134271*0 + 3*213*FLEN/8, x4, x1, x2)

inst_44758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:134274*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134274*0 + 3*214*FLEN/8, x4, x1, x2)

inst_44759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:134277*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134277*0 + 3*215*FLEN/8, x4, x1, x2)

inst_44760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:134280*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134280*0 + 3*216*FLEN/8, x4, x1, x2)

inst_44761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:134283*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134283*0 + 3*217*FLEN/8, x4, x1, x2)

inst_44762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:134286*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134286*0 + 3*218*FLEN/8, x4, x1, x2)

inst_44763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:134289*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134289*0 + 3*219*FLEN/8, x4, x1, x2)

inst_44764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:134292*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134292*0 + 3*220*FLEN/8, x4, x1, x2)

inst_44765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:134295*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134295*0 + 3*221*FLEN/8, x4, x1, x2)

inst_44766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:134298*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134298*0 + 3*222*FLEN/8, x4, x1, x2)

inst_44767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:134301*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134301*0 + 3*223*FLEN/8, x4, x1, x2)

inst_44768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:134304*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134304*0 + 3*224*FLEN/8, x4, x1, x2)

inst_44769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:134307*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134307*0 + 3*225*FLEN/8, x4, x1, x2)

inst_44770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000000000000; valaddr_reg:x3; val_offset:134310*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134310*0 + 3*226*FLEN/8, x4, x1, x2)

inst_44771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000000000001; valaddr_reg:x3; val_offset:134313*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134313*0 + 3*227*FLEN/8, x4, x1, x2)

inst_44772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000000000003; valaddr_reg:x3; val_offset:134316*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134316*0 + 3*228*FLEN/8, x4, x1, x2)

inst_44773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000000000007; valaddr_reg:x3; val_offset:134319*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134319*0 + 3*229*FLEN/8, x4, x1, x2)

inst_44774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000000000000f; valaddr_reg:x3; val_offset:134322*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134322*0 + 3*230*FLEN/8, x4, x1, x2)

inst_44775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000000000001f; valaddr_reg:x3; val_offset:134325*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134325*0 + 3*231*FLEN/8, x4, x1, x2)

inst_44776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000000000003f; valaddr_reg:x3; val_offset:134328*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134328*0 + 3*232*FLEN/8, x4, x1, x2)

inst_44777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000000000007f; valaddr_reg:x3; val_offset:134331*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134331*0 + 3*233*FLEN/8, x4, x1, x2)

inst_44778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900000000000ff; valaddr_reg:x3; val_offset:134334*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134334*0 + 3*234*FLEN/8, x4, x1, x2)

inst_44779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900000000001ff; valaddr_reg:x3; val_offset:134337*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134337*0 + 3*235*FLEN/8, x4, x1, x2)

inst_44780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900000000003ff; valaddr_reg:x3; val_offset:134340*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134340*0 + 3*236*FLEN/8, x4, x1, x2)

inst_44781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900000000007ff; valaddr_reg:x3; val_offset:134343*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134343*0 + 3*237*FLEN/8, x4, x1, x2)

inst_44782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000000000fff; valaddr_reg:x3; val_offset:134346*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134346*0 + 3*238*FLEN/8, x4, x1, x2)

inst_44783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000000001fff; valaddr_reg:x3; val_offset:134349*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134349*0 + 3*239*FLEN/8, x4, x1, x2)

inst_44784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000000003fff; valaddr_reg:x3; val_offset:134352*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134352*0 + 3*240*FLEN/8, x4, x1, x2)

inst_44785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000000007fff; valaddr_reg:x3; val_offset:134355*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134355*0 + 3*241*FLEN/8, x4, x1, x2)

inst_44786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000000000ffff; valaddr_reg:x3; val_offset:134358*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134358*0 + 3*242*FLEN/8, x4, x1, x2)

inst_44787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000000001ffff; valaddr_reg:x3; val_offset:134361*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134361*0 + 3*243*FLEN/8, x4, x1, x2)

inst_44788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000000003ffff; valaddr_reg:x3; val_offset:134364*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134364*0 + 3*244*FLEN/8, x4, x1, x2)

inst_44789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000000007ffff; valaddr_reg:x3; val_offset:134367*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134367*0 + 3*245*FLEN/8, x4, x1, x2)

inst_44790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900000000fffff; valaddr_reg:x3; val_offset:134370*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134370*0 + 3*246*FLEN/8, x4, x1, x2)

inst_44791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900000001fffff; valaddr_reg:x3; val_offset:134373*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134373*0 + 3*247*FLEN/8, x4, x1, x2)

inst_44792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900000003fffff; valaddr_reg:x3; val_offset:134376*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134376*0 + 3*248*FLEN/8, x4, x1, x2)

inst_44793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900000007fffff; valaddr_reg:x3; val_offset:134379*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134379*0 + 3*249*FLEN/8, x4, x1, x2)

inst_44794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000000ffffff; valaddr_reg:x3; val_offset:134382*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134382*0 + 3*250*FLEN/8, x4, x1, x2)

inst_44795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000001ffffff; valaddr_reg:x3; val_offset:134385*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134385*0 + 3*251*FLEN/8, x4, x1, x2)

inst_44796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000003ffffff; valaddr_reg:x3; val_offset:134388*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134388*0 + 3*252*FLEN/8, x4, x1, x2)

inst_44797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000007ffffff; valaddr_reg:x3; val_offset:134391*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134391*0 + 3*253*FLEN/8, x4, x1, x2)

inst_44798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000000fffffff; valaddr_reg:x3; val_offset:134394*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134394*0 + 3*254*FLEN/8, x4, x1, x2)

inst_44799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000001fffffff; valaddr_reg:x3; val_offset:134397*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134397*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_44800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000003fffffff; valaddr_reg:x3; val_offset:134400*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134400*0 + 3*256*FLEN/8, x4, x1, x2)

inst_44801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000007fffffff; valaddr_reg:x3; val_offset:134403*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134403*0 + 3*257*FLEN/8, x4, x1, x2)

inst_44802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900000ffffffff; valaddr_reg:x3; val_offset:134406*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134406*0 + 3*258*FLEN/8, x4, x1, x2)

inst_44803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900001ffffffff; valaddr_reg:x3; val_offset:134409*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134409*0 + 3*259*FLEN/8, x4, x1, x2)

inst_44804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900003ffffffff; valaddr_reg:x3; val_offset:134412*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134412*0 + 3*260*FLEN/8, x4, x1, x2)

inst_44805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900007ffffffff; valaddr_reg:x3; val_offset:134415*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134415*0 + 3*261*FLEN/8, x4, x1, x2)

inst_44806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90000fffffffff; valaddr_reg:x3; val_offset:134418*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134418*0 + 3*262*FLEN/8, x4, x1, x2)

inst_44807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90001fffffffff; valaddr_reg:x3; val_offset:134421*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134421*0 + 3*263*FLEN/8, x4, x1, x2)

inst_44808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90003fffffffff; valaddr_reg:x3; val_offset:134424*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134424*0 + 3*264*FLEN/8, x4, x1, x2)

inst_44809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90007fffffffff; valaddr_reg:x3; val_offset:134427*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134427*0 + 3*265*FLEN/8, x4, x1, x2)

inst_44810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9000ffffffffff; valaddr_reg:x3; val_offset:134430*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134430*0 + 3*266*FLEN/8, x4, x1, x2)

inst_44811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9001ffffffffff; valaddr_reg:x3; val_offset:134433*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134433*0 + 3*267*FLEN/8, x4, x1, x2)

inst_44812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9003ffffffffff; valaddr_reg:x3; val_offset:134436*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134436*0 + 3*268*FLEN/8, x4, x1, x2)

inst_44813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9007ffffffffff; valaddr_reg:x3; val_offset:134439*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134439*0 + 3*269*FLEN/8, x4, x1, x2)

inst_44814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x900fffffffffff; valaddr_reg:x3; val_offset:134442*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134442*0 + 3*270*FLEN/8, x4, x1, x2)

inst_44815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x901fffffffffff; valaddr_reg:x3; val_offset:134445*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134445*0 + 3*271*FLEN/8, x4, x1, x2)

inst_44816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x903fffffffffff; valaddr_reg:x3; val_offset:134448*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134448*0 + 3*272*FLEN/8, x4, x1, x2)

inst_44817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x907fffffffffff; valaddr_reg:x3; val_offset:134451*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134451*0 + 3*273*FLEN/8, x4, x1, x2)

inst_44818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x90ffffffffffff; valaddr_reg:x3; val_offset:134454*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134454*0 + 3*274*FLEN/8, x4, x1, x2)

inst_44819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x91ffffffffffff; valaddr_reg:x3; val_offset:134457*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134457*0 + 3*275*FLEN/8, x4, x1, x2)

inst_44820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x93ffffffffffff; valaddr_reg:x3; val_offset:134460*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134460*0 + 3*276*FLEN/8, x4, x1, x2)

inst_44821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x97ffffffffffff; valaddr_reg:x3; val_offset:134463*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134463*0 + 3*277*FLEN/8, x4, x1, x2)

inst_44822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x98000000000000; valaddr_reg:x3; val_offset:134466*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134466*0 + 3*278*FLEN/8, x4, x1, x2)

inst_44823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9c000000000000; valaddr_reg:x3; val_offset:134469*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134469*0 + 3*279*FLEN/8, x4, x1, x2)

inst_44824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9e000000000000; valaddr_reg:x3; val_offset:134472*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134472*0 + 3*280*FLEN/8, x4, x1, x2)

inst_44825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9f000000000000; valaddr_reg:x3; val_offset:134475*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134475*0 + 3*281*FLEN/8, x4, x1, x2)

inst_44826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9f800000000000; valaddr_reg:x3; val_offset:134478*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134478*0 + 3*282*FLEN/8, x4, x1, x2)

inst_44827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fc00000000000; valaddr_reg:x3; val_offset:134481*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134481*0 + 3*283*FLEN/8, x4, x1, x2)

inst_44828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fe00000000000; valaddr_reg:x3; val_offset:134484*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134484*0 + 3*284*FLEN/8, x4, x1, x2)

inst_44829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ff00000000000; valaddr_reg:x3; val_offset:134487*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134487*0 + 3*285*FLEN/8, x4, x1, x2)

inst_44830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ff80000000000; valaddr_reg:x3; val_offset:134490*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134490*0 + 3*286*FLEN/8, x4, x1, x2)

inst_44831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffc0000000000; valaddr_reg:x3; val_offset:134493*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134493*0 + 3*287*FLEN/8, x4, x1, x2)

inst_44832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffe0000000000; valaddr_reg:x3; val_offset:134496*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134496*0 + 3*288*FLEN/8, x4, x1, x2)

inst_44833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fff0000000000; valaddr_reg:x3; val_offset:134499*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134499*0 + 3*289*FLEN/8, x4, x1, x2)

inst_44834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fff8000000000; valaddr_reg:x3; val_offset:134502*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134502*0 + 3*290*FLEN/8, x4, x1, x2)

inst_44835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffc000000000; valaddr_reg:x3; val_offset:134505*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134505*0 + 3*291*FLEN/8, x4, x1, x2)

inst_44836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffe000000000; valaddr_reg:x3; val_offset:134508*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134508*0 + 3*292*FLEN/8, x4, x1, x2)

inst_44837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffff000000000; valaddr_reg:x3; val_offset:134511*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134511*0 + 3*293*FLEN/8, x4, x1, x2)

inst_44838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffff800000000; valaddr_reg:x3; val_offset:134514*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134514*0 + 3*294*FLEN/8, x4, x1, x2)

inst_44839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffc00000000; valaddr_reg:x3; val_offset:134517*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134517*0 + 3*295*FLEN/8, x4, x1, x2)

inst_44840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffe00000000; valaddr_reg:x3; val_offset:134520*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134520*0 + 3*296*FLEN/8, x4, x1, x2)

inst_44841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffff00000000; valaddr_reg:x3; val_offset:134523*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134523*0 + 3*297*FLEN/8, x4, x1, x2)

inst_44842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffff80000000; valaddr_reg:x3; val_offset:134526*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134526*0 + 3*298*FLEN/8, x4, x1, x2)

inst_44843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffc0000000; valaddr_reg:x3; val_offset:134529*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134529*0 + 3*299*FLEN/8, x4, x1, x2)

inst_44844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffe0000000; valaddr_reg:x3; val_offset:134532*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134532*0 + 3*300*FLEN/8, x4, x1, x2)

inst_44845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffff0000000; valaddr_reg:x3; val_offset:134535*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134535*0 + 3*301*FLEN/8, x4, x1, x2)

inst_44846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffff8000000; valaddr_reg:x3; val_offset:134538*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134538*0 + 3*302*FLEN/8, x4, x1, x2)

inst_44847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffc000000; valaddr_reg:x3; val_offset:134541*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134541*0 + 3*303*FLEN/8, x4, x1, x2)

inst_44848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffe000000; valaddr_reg:x3; val_offset:134544*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134544*0 + 3*304*FLEN/8, x4, x1, x2)

inst_44849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffff000000; valaddr_reg:x3; val_offset:134547*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134547*0 + 3*305*FLEN/8, x4, x1, x2)

inst_44850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffff800000; valaddr_reg:x3; val_offset:134550*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134550*0 + 3*306*FLEN/8, x4, x1, x2)

inst_44851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffffc00000; valaddr_reg:x3; val_offset:134553*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134553*0 + 3*307*FLEN/8, x4, x1, x2)

inst_44852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffffe00000; valaddr_reg:x3; val_offset:134556*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134556*0 + 3*308*FLEN/8, x4, x1, x2)

inst_44853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffff00000; valaddr_reg:x3; val_offset:134559*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134559*0 + 3*309*FLEN/8, x4, x1, x2)

inst_44854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffff80000; valaddr_reg:x3; val_offset:134562*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134562*0 + 3*310*FLEN/8, x4, x1, x2)

inst_44855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffffc0000; valaddr_reg:x3; val_offset:134565*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134565*0 + 3*311*FLEN/8, x4, x1, x2)

inst_44856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffffe0000; valaddr_reg:x3; val_offset:134568*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134568*0 + 3*312*FLEN/8, x4, x1, x2)

inst_44857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffffff0000; valaddr_reg:x3; val_offset:134571*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134571*0 + 3*313*FLEN/8, x4, x1, x2)

inst_44858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffffff8000; valaddr_reg:x3; val_offset:134574*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134574*0 + 3*314*FLEN/8, x4, x1, x2)

inst_44859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffffffc000; valaddr_reg:x3; val_offset:134577*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134577*0 + 3*315*FLEN/8, x4, x1, x2)

inst_44860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffffffe000; valaddr_reg:x3; val_offset:134580*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134580*0 + 3*316*FLEN/8, x4, x1, x2)

inst_44861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffffff000; valaddr_reg:x3; val_offset:134583*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134583*0 + 3*317*FLEN/8, x4, x1, x2)

inst_44862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffffff800; valaddr_reg:x3; val_offset:134586*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134586*0 + 3*318*FLEN/8, x4, x1, x2)

inst_44863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffffffc00; valaddr_reg:x3; val_offset:134589*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134589*0 + 3*319*FLEN/8, x4, x1, x2)

inst_44864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffffffe00; valaddr_reg:x3; val_offset:134592*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134592*0 + 3*320*FLEN/8, x4, x1, x2)

inst_44865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffffffff00; valaddr_reg:x3; val_offset:134595*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134595*0 + 3*321*FLEN/8, x4, x1, x2)

inst_44866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffffffff80; valaddr_reg:x3; val_offset:134598*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134598*0 + 3*322*FLEN/8, x4, x1, x2)

inst_44867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffffffffc0; valaddr_reg:x3; val_offset:134601*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134601*0 + 3*323*FLEN/8, x4, x1, x2)

inst_44868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffffffffe0; valaddr_reg:x3; val_offset:134604*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134604*0 + 3*324*FLEN/8, x4, x1, x2)

inst_44869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffffffff0; valaddr_reg:x3; val_offset:134607*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134607*0 + 3*325*FLEN/8, x4, x1, x2)

inst_44870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffffffff8; valaddr_reg:x3; val_offset:134610*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134610*0 + 3*326*FLEN/8, x4, x1, x2)

inst_44871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffffffffc; valaddr_reg:x3; val_offset:134613*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134613*0 + 3*327*FLEN/8, x4, x1, x2)

inst_44872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9ffffffffffffe; valaddr_reg:x3; val_offset:134616*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134616*0 + 3*328*FLEN/8, x4, x1, x2)

inst_44873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9017651b96db; op2val:0x0;
op3val:0x9fffffffffffff; valaddr_reg:x3; val_offset:134619*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134619*0 + 3*329*FLEN/8, x4, x1, x2)

inst_44874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000000000000; valaddr_reg:x3; val_offset:134622*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134622*0 + 3*330*FLEN/8, x4, x1, x2)

inst_44875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000000000001; valaddr_reg:x3; val_offset:134625*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134625*0 + 3*331*FLEN/8, x4, x1, x2)

inst_44876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000000000003; valaddr_reg:x3; val_offset:134628*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134628*0 + 3*332*FLEN/8, x4, x1, x2)

inst_44877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000000000007; valaddr_reg:x3; val_offset:134631*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134631*0 + 3*333*FLEN/8, x4, x1, x2)

inst_44878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000000000000f; valaddr_reg:x3; val_offset:134634*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134634*0 + 3*334*FLEN/8, x4, x1, x2)

inst_44879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000000000001f; valaddr_reg:x3; val_offset:134637*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134637*0 + 3*335*FLEN/8, x4, x1, x2)

inst_44880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000000000003f; valaddr_reg:x3; val_offset:134640*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134640*0 + 3*336*FLEN/8, x4, x1, x2)

inst_44881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000000000007f; valaddr_reg:x3; val_offset:134643*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134643*0 + 3*337*FLEN/8, x4, x1, x2)

inst_44882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000000000000ff; valaddr_reg:x3; val_offset:134646*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134646*0 + 3*338*FLEN/8, x4, x1, x2)

inst_44883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000000000001ff; valaddr_reg:x3; val_offset:134649*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134649*0 + 3*339*FLEN/8, x4, x1, x2)

inst_44884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000000000003ff; valaddr_reg:x3; val_offset:134652*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134652*0 + 3*340*FLEN/8, x4, x1, x2)

inst_44885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000000000007ff; valaddr_reg:x3; val_offset:134655*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134655*0 + 3*341*FLEN/8, x4, x1, x2)

inst_44886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000000000fff; valaddr_reg:x3; val_offset:134658*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134658*0 + 3*342*FLEN/8, x4, x1, x2)

inst_44887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000000001fff; valaddr_reg:x3; val_offset:134661*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134661*0 + 3*343*FLEN/8, x4, x1, x2)

inst_44888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000000003fff; valaddr_reg:x3; val_offset:134664*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134664*0 + 3*344*FLEN/8, x4, x1, x2)

inst_44889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000000007fff; valaddr_reg:x3; val_offset:134667*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134667*0 + 3*345*FLEN/8, x4, x1, x2)

inst_44890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000000000ffff; valaddr_reg:x3; val_offset:134670*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134670*0 + 3*346*FLEN/8, x4, x1, x2)

inst_44891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000000001ffff; valaddr_reg:x3; val_offset:134673*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134673*0 + 3*347*FLEN/8, x4, x1, x2)

inst_44892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000000003ffff; valaddr_reg:x3; val_offset:134676*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134676*0 + 3*348*FLEN/8, x4, x1, x2)

inst_44893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000000007ffff; valaddr_reg:x3; val_offset:134679*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134679*0 + 3*349*FLEN/8, x4, x1, x2)

inst_44894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000000000fffff; valaddr_reg:x3; val_offset:134682*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134682*0 + 3*350*FLEN/8, x4, x1, x2)

inst_44895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000000001fffff; valaddr_reg:x3; val_offset:134685*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134685*0 + 3*351*FLEN/8, x4, x1, x2)

inst_44896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000000003fffff; valaddr_reg:x3; val_offset:134688*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134688*0 + 3*352*FLEN/8, x4, x1, x2)

inst_44897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000000007fffff; valaddr_reg:x3; val_offset:134691*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134691*0 + 3*353*FLEN/8, x4, x1, x2)

inst_44898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000000ffffff; valaddr_reg:x3; val_offset:134694*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134694*0 + 3*354*FLEN/8, x4, x1, x2)

inst_44899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000001ffffff; valaddr_reg:x3; val_offset:134697*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134697*0 + 3*355*FLEN/8, x4, x1, x2)

inst_44900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000003ffffff; valaddr_reg:x3; val_offset:134700*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134700*0 + 3*356*FLEN/8, x4, x1, x2)

inst_44901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000007ffffff; valaddr_reg:x3; val_offset:134703*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134703*0 + 3*357*FLEN/8, x4, x1, x2)

inst_44902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000000fffffff; valaddr_reg:x3; val_offset:134706*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134706*0 + 3*358*FLEN/8, x4, x1, x2)

inst_44903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000001fffffff; valaddr_reg:x3; val_offset:134709*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134709*0 + 3*359*FLEN/8, x4, x1, x2)

inst_44904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000003fffffff; valaddr_reg:x3; val_offset:134712*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134712*0 + 3*360*FLEN/8, x4, x1, x2)

inst_44905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000007fffffff; valaddr_reg:x3; val_offset:134715*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134715*0 + 3*361*FLEN/8, x4, x1, x2)

inst_44906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000000ffffffff; valaddr_reg:x3; val_offset:134718*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134718*0 + 3*362*FLEN/8, x4, x1, x2)

inst_44907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000001ffffffff; valaddr_reg:x3; val_offset:134721*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134721*0 + 3*363*FLEN/8, x4, x1, x2)

inst_44908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000003ffffffff; valaddr_reg:x3; val_offset:134724*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134724*0 + 3*364*FLEN/8, x4, x1, x2)

inst_44909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000007ffffffff; valaddr_reg:x3; val_offset:134727*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134727*0 + 3*365*FLEN/8, x4, x1, x2)

inst_44910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00000fffffffff; valaddr_reg:x3; val_offset:134730*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134730*0 + 3*366*FLEN/8, x4, x1, x2)

inst_44911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00001fffffffff; valaddr_reg:x3; val_offset:134733*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134733*0 + 3*367*FLEN/8, x4, x1, x2)

inst_44912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00003fffffffff; valaddr_reg:x3; val_offset:134736*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134736*0 + 3*368*FLEN/8, x4, x1, x2)

inst_44913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00007fffffffff; valaddr_reg:x3; val_offset:134739*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134739*0 + 3*369*FLEN/8, x4, x1, x2)

inst_44914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0000ffffffffff; valaddr_reg:x3; val_offset:134742*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134742*0 + 3*370*FLEN/8, x4, x1, x2)

inst_44915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0001ffffffffff; valaddr_reg:x3; val_offset:134745*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134745*0 + 3*371*FLEN/8, x4, x1, x2)

inst_44916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0003ffffffffff; valaddr_reg:x3; val_offset:134748*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134748*0 + 3*372*FLEN/8, x4, x1, x2)

inst_44917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0007ffffffffff; valaddr_reg:x3; val_offset:134751*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134751*0 + 3*373*FLEN/8, x4, x1, x2)

inst_44918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b000fffffffffff; valaddr_reg:x3; val_offset:134754*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134754*0 + 3*374*FLEN/8, x4, x1, x2)

inst_44919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b001fffffffffff; valaddr_reg:x3; val_offset:134757*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134757*0 + 3*375*FLEN/8, x4, x1, x2)

inst_44920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b003fffffffffff; valaddr_reg:x3; val_offset:134760*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134760*0 + 3*376*FLEN/8, x4, x1, x2)

inst_44921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b007fffffffffff; valaddr_reg:x3; val_offset:134763*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134763*0 + 3*377*FLEN/8, x4, x1, x2)

inst_44922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b00ffffffffffff; valaddr_reg:x3; val_offset:134766*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134766*0 + 3*378*FLEN/8, x4, x1, x2)

inst_44923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b01ffffffffffff; valaddr_reg:x3; val_offset:134769*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134769*0 + 3*379*FLEN/8, x4, x1, x2)

inst_44924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b03ffffffffffff; valaddr_reg:x3; val_offset:134772*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134772*0 + 3*380*FLEN/8, x4, x1, x2)

inst_44925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b07ffffffffffff; valaddr_reg:x3; val_offset:134775*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134775*0 + 3*381*FLEN/8, x4, x1, x2)

inst_44926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b08000000000000; valaddr_reg:x3; val_offset:134778*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134778*0 + 3*382*FLEN/8, x4, x1, x2)

inst_44927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0c000000000000; valaddr_reg:x3; val_offset:134781*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134781*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_44928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0e000000000000; valaddr_reg:x3; val_offset:134784*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134784*0 + 3*384*FLEN/8, x4, x1, x2)

inst_44929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0f000000000000; valaddr_reg:x3; val_offset:134787*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134787*0 + 3*385*FLEN/8, x4, x1, x2)

inst_44930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0f800000000000; valaddr_reg:x3; val_offset:134790*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134790*0 + 3*386*FLEN/8, x4, x1, x2)

inst_44931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fc00000000000; valaddr_reg:x3; val_offset:134793*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134793*0 + 3*387*FLEN/8, x4, x1, x2)

inst_44932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fe00000000000; valaddr_reg:x3; val_offset:134796*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134796*0 + 3*388*FLEN/8, x4, x1, x2)

inst_44933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ff00000000000; valaddr_reg:x3; val_offset:134799*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134799*0 + 3*389*FLEN/8, x4, x1, x2)

inst_44934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ff80000000000; valaddr_reg:x3; val_offset:134802*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134802*0 + 3*390*FLEN/8, x4, x1, x2)

inst_44935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffc0000000000; valaddr_reg:x3; val_offset:134805*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134805*0 + 3*391*FLEN/8, x4, x1, x2)

inst_44936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffe0000000000; valaddr_reg:x3; val_offset:134808*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134808*0 + 3*392*FLEN/8, x4, x1, x2)

inst_44937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fff0000000000; valaddr_reg:x3; val_offset:134811*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134811*0 + 3*393*FLEN/8, x4, x1, x2)

inst_44938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fff8000000000; valaddr_reg:x3; val_offset:134814*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134814*0 + 3*394*FLEN/8, x4, x1, x2)

inst_44939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffc000000000; valaddr_reg:x3; val_offset:134817*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134817*0 + 3*395*FLEN/8, x4, x1, x2)

inst_44940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffe000000000; valaddr_reg:x3; val_offset:134820*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134820*0 + 3*396*FLEN/8, x4, x1, x2)

inst_44941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffff000000000; valaddr_reg:x3; val_offset:134823*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134823*0 + 3*397*FLEN/8, x4, x1, x2)

inst_44942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffff800000000; valaddr_reg:x3; val_offset:134826*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134826*0 + 3*398*FLEN/8, x4, x1, x2)

inst_44943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffc00000000; valaddr_reg:x3; val_offset:134829*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134829*0 + 3*399*FLEN/8, x4, x1, x2)

inst_44944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffe00000000; valaddr_reg:x3; val_offset:134832*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134832*0 + 3*400*FLEN/8, x4, x1, x2)

inst_44945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffff00000000; valaddr_reg:x3; val_offset:134835*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134835*0 + 3*401*FLEN/8, x4, x1, x2)

inst_44946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffff80000000; valaddr_reg:x3; val_offset:134838*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134838*0 + 3*402*FLEN/8, x4, x1, x2)

inst_44947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffc0000000; valaddr_reg:x3; val_offset:134841*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134841*0 + 3*403*FLEN/8, x4, x1, x2)

inst_44948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffe0000000; valaddr_reg:x3; val_offset:134844*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134844*0 + 3*404*FLEN/8, x4, x1, x2)

inst_44949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffff0000000; valaddr_reg:x3; val_offset:134847*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134847*0 + 3*405*FLEN/8, x4, x1, x2)

inst_44950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffff8000000; valaddr_reg:x3; val_offset:134850*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134850*0 + 3*406*FLEN/8, x4, x1, x2)

inst_44951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffc000000; valaddr_reg:x3; val_offset:134853*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134853*0 + 3*407*FLEN/8, x4, x1, x2)

inst_44952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffe000000; valaddr_reg:x3; val_offset:134856*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134856*0 + 3*408*FLEN/8, x4, x1, x2)

inst_44953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffff000000; valaddr_reg:x3; val_offset:134859*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134859*0 + 3*409*FLEN/8, x4, x1, x2)

inst_44954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffff800000; valaddr_reg:x3; val_offset:134862*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134862*0 + 3*410*FLEN/8, x4, x1, x2)

inst_44955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffffc00000; valaddr_reg:x3; val_offset:134865*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134865*0 + 3*411*FLEN/8, x4, x1, x2)

inst_44956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffffe00000; valaddr_reg:x3; val_offset:134868*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134868*0 + 3*412*FLEN/8, x4, x1, x2)

inst_44957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffff00000; valaddr_reg:x3; val_offset:134871*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134871*0 + 3*413*FLEN/8, x4, x1, x2)

inst_44958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffff80000; valaddr_reg:x3; val_offset:134874*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134874*0 + 3*414*FLEN/8, x4, x1, x2)

inst_44959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffffc0000; valaddr_reg:x3; val_offset:134877*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134877*0 + 3*415*FLEN/8, x4, x1, x2)

inst_44960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffffe0000; valaddr_reg:x3; val_offset:134880*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134880*0 + 3*416*FLEN/8, x4, x1, x2)

inst_44961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffffff0000; valaddr_reg:x3; val_offset:134883*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134883*0 + 3*417*FLEN/8, x4, x1, x2)

inst_44962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffffff8000; valaddr_reg:x3; val_offset:134886*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134886*0 + 3*418*FLEN/8, x4, x1, x2)

inst_44963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffffffc000; valaddr_reg:x3; val_offset:134889*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134889*0 + 3*419*FLEN/8, x4, x1, x2)

inst_44964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffffffe000; valaddr_reg:x3; val_offset:134892*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134892*0 + 3*420*FLEN/8, x4, x1, x2)

inst_44965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffffff000; valaddr_reg:x3; val_offset:134895*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134895*0 + 3*421*FLEN/8, x4, x1, x2)

inst_44966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffffff800; valaddr_reg:x3; val_offset:134898*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134898*0 + 3*422*FLEN/8, x4, x1, x2)

inst_44967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffffffc00; valaddr_reg:x3; val_offset:134901*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134901*0 + 3*423*FLEN/8, x4, x1, x2)

inst_44968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffffffe00; valaddr_reg:x3; val_offset:134904*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134904*0 + 3*424*FLEN/8, x4, x1, x2)

inst_44969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffffffff00; valaddr_reg:x3; val_offset:134907*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134907*0 + 3*425*FLEN/8, x4, x1, x2)

inst_44970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffffffff80; valaddr_reg:x3; val_offset:134910*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134910*0 + 3*426*FLEN/8, x4, x1, x2)

inst_44971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffffffffc0; valaddr_reg:x3; val_offset:134913*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134913*0 + 3*427*FLEN/8, x4, x1, x2)

inst_44972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffffffffe0; valaddr_reg:x3; val_offset:134916*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134916*0 + 3*428*FLEN/8, x4, x1, x2)

inst_44973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffffffff0; valaddr_reg:x3; val_offset:134919*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134919*0 + 3*429*FLEN/8, x4, x1, x2)

inst_44974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffffffff8; valaddr_reg:x3; val_offset:134922*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134922*0 + 3*430*FLEN/8, x4, x1, x2)

inst_44975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffffffffc; valaddr_reg:x3; val_offset:134925*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134925*0 + 3*431*FLEN/8, x4, x1, x2)

inst_44976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0ffffffffffffe; valaddr_reg:x3; val_offset:134928*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134928*0 + 3*432*FLEN/8, x4, x1, x2)

inst_44977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3b0fffffffffffff; valaddr_reg:x3; val_offset:134931*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134931*0 + 3*433*FLEN/8, x4, x1, x2)

inst_44978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:134934*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134934*0 + 3*434*FLEN/8, x4, x1, x2)

inst_44979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:134937*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134937*0 + 3*435*FLEN/8, x4, x1, x2)

inst_44980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:134940*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134940*0 + 3*436*FLEN/8, x4, x1, x2)

inst_44981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:134943*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134943*0 + 3*437*FLEN/8, x4, x1, x2)

inst_44982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:134946*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134946*0 + 3*438*FLEN/8, x4, x1, x2)

inst_44983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:134949*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134949*0 + 3*439*FLEN/8, x4, x1, x2)

inst_44984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:134952*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134952*0 + 3*440*FLEN/8, x4, x1, x2)

inst_44985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:134955*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134955*0 + 3*441*FLEN/8, x4, x1, x2)

inst_44986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:134958*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134958*0 + 3*442*FLEN/8, x4, x1, x2)

inst_44987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:134961*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134961*0 + 3*443*FLEN/8, x4, x1, x2)

inst_44988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:134964*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134964*0 + 3*444*FLEN/8, x4, x1, x2)

inst_44989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:134967*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134967*0 + 3*445*FLEN/8, x4, x1, x2)

inst_44990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:134970*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134970*0 + 3*446*FLEN/8, x4, x1, x2)

inst_44991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:134973*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134973*0 + 3*447*FLEN/8, x4, x1, x2)

inst_44992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:134976*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134976*0 + 3*448*FLEN/8, x4, x1, x2)

inst_44993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:134979*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134979*0 + 3*449*FLEN/8, x4, x1, x2)

inst_44994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:134982*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134982*0 + 3*450*FLEN/8, x4, x1, x2)

inst_44995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:134985*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134985*0 + 3*451*FLEN/8, x4, x1, x2)

inst_44996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:134988*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134988*0 + 3*452*FLEN/8, x4, x1, x2)

inst_44997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:134991*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134991*0 + 3*453*FLEN/8, x4, x1, x2)

inst_44998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:134994*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134994*0 + 3*454*FLEN/8, x4, x1, x2)

inst_44999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x204 and fm2 == 0x271ca18866b27 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bc24bb367a06b; op2val:0x204271ca18866b27;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:134997*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134997*0 + 3*455*FLEN/8, x4, x1, x2)

inst_45000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000000000000; valaddr_reg:x3; val_offset:135000*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135000*0 + 3*456*FLEN/8, x4, x1, x2)

inst_45001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000000000001; valaddr_reg:x3; val_offset:135003*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135003*0 + 3*457*FLEN/8, x4, x1, x2)

inst_45002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000000000003; valaddr_reg:x3; val_offset:135006*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135006*0 + 3*458*FLEN/8, x4, x1, x2)

inst_45003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000000000007; valaddr_reg:x3; val_offset:135009*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135009*0 + 3*459*FLEN/8, x4, x1, x2)

inst_45004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000000000000f; valaddr_reg:x3; val_offset:135012*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135012*0 + 3*460*FLEN/8, x4, x1, x2)

inst_45005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000000000001f; valaddr_reg:x3; val_offset:135015*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135015*0 + 3*461*FLEN/8, x4, x1, x2)

inst_45006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000000000003f; valaddr_reg:x3; val_offset:135018*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135018*0 + 3*462*FLEN/8, x4, x1, x2)

inst_45007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000000000007f; valaddr_reg:x3; val_offset:135021*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135021*0 + 3*463*FLEN/8, x4, x1, x2)

inst_45008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00000000000ff; valaddr_reg:x3; val_offset:135024*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135024*0 + 3*464*FLEN/8, x4, x1, x2)

inst_45009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00000000001ff; valaddr_reg:x3; val_offset:135027*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135027*0 + 3*465*FLEN/8, x4, x1, x2)

inst_45010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00000000003ff; valaddr_reg:x3; val_offset:135030*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135030*0 + 3*466*FLEN/8, x4, x1, x2)

inst_45011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00000000007ff; valaddr_reg:x3; val_offset:135033*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135033*0 + 3*467*FLEN/8, x4, x1, x2)

inst_45012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000000000fff; valaddr_reg:x3; val_offset:135036*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135036*0 + 3*468*FLEN/8, x4, x1, x2)

inst_45013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000000001fff; valaddr_reg:x3; val_offset:135039*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135039*0 + 3*469*FLEN/8, x4, x1, x2)

inst_45014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000000003fff; valaddr_reg:x3; val_offset:135042*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135042*0 + 3*470*FLEN/8, x4, x1, x2)

inst_45015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000000007fff; valaddr_reg:x3; val_offset:135045*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135045*0 + 3*471*FLEN/8, x4, x1, x2)

inst_45016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000000000ffff; valaddr_reg:x3; val_offset:135048*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135048*0 + 3*472*FLEN/8, x4, x1, x2)

inst_45017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000000001ffff; valaddr_reg:x3; val_offset:135051*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135051*0 + 3*473*FLEN/8, x4, x1, x2)

inst_45018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000000003ffff; valaddr_reg:x3; val_offset:135054*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135054*0 + 3*474*FLEN/8, x4, x1, x2)

inst_45019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000000007ffff; valaddr_reg:x3; val_offset:135057*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135057*0 + 3*475*FLEN/8, x4, x1, x2)

inst_45020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00000000fffff; valaddr_reg:x3; val_offset:135060*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135060*0 + 3*476*FLEN/8, x4, x1, x2)

inst_45021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00000001fffff; valaddr_reg:x3; val_offset:135063*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135063*0 + 3*477*FLEN/8, x4, x1, x2)

inst_45022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00000003fffff; valaddr_reg:x3; val_offset:135066*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135066*0 + 3*478*FLEN/8, x4, x1, x2)

inst_45023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00000007fffff; valaddr_reg:x3; val_offset:135069*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135069*0 + 3*479*FLEN/8, x4, x1, x2)

inst_45024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000000ffffff; valaddr_reg:x3; val_offset:135072*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135072*0 + 3*480*FLEN/8, x4, x1, x2)

inst_45025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000001ffffff; valaddr_reg:x3; val_offset:135075*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135075*0 + 3*481*FLEN/8, x4, x1, x2)

inst_45026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000003ffffff; valaddr_reg:x3; val_offset:135078*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135078*0 + 3*482*FLEN/8, x4, x1, x2)

inst_45027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000007ffffff; valaddr_reg:x3; val_offset:135081*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135081*0 + 3*483*FLEN/8, x4, x1, x2)

inst_45028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000000fffffff; valaddr_reg:x3; val_offset:135084*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135084*0 + 3*484*FLEN/8, x4, x1, x2)

inst_45029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000001fffffff; valaddr_reg:x3; val_offset:135087*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135087*0 + 3*485*FLEN/8, x4, x1, x2)

inst_45030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000003fffffff; valaddr_reg:x3; val_offset:135090*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135090*0 + 3*486*FLEN/8, x4, x1, x2)

inst_45031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000007fffffff; valaddr_reg:x3; val_offset:135093*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135093*0 + 3*487*FLEN/8, x4, x1, x2)

inst_45032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00000ffffffff; valaddr_reg:x3; val_offset:135096*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135096*0 + 3*488*FLEN/8, x4, x1, x2)

inst_45033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00001ffffffff; valaddr_reg:x3; val_offset:135099*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135099*0 + 3*489*FLEN/8, x4, x1, x2)

inst_45034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00003ffffffff; valaddr_reg:x3; val_offset:135102*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135102*0 + 3*490*FLEN/8, x4, x1, x2)

inst_45035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00007ffffffff; valaddr_reg:x3; val_offset:135105*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135105*0 + 3*491*FLEN/8, x4, x1, x2)

inst_45036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0000fffffffff; valaddr_reg:x3; val_offset:135108*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135108*0 + 3*492*FLEN/8, x4, x1, x2)

inst_45037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0001fffffffff; valaddr_reg:x3; val_offset:135111*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135111*0 + 3*493*FLEN/8, x4, x1, x2)

inst_45038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0003fffffffff; valaddr_reg:x3; val_offset:135114*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135114*0 + 3*494*FLEN/8, x4, x1, x2)

inst_45039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0007fffffffff; valaddr_reg:x3; val_offset:135117*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135117*0 + 3*495*FLEN/8, x4, x1, x2)

inst_45040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb000ffffffffff; valaddr_reg:x3; val_offset:135120*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135120*0 + 3*496*FLEN/8, x4, x1, x2)

inst_45041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb001ffffffffff; valaddr_reg:x3; val_offset:135123*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135123*0 + 3*497*FLEN/8, x4, x1, x2)

inst_45042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb003ffffffffff; valaddr_reg:x3; val_offset:135126*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135126*0 + 3*498*FLEN/8, x4, x1, x2)

inst_45043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb007ffffffffff; valaddr_reg:x3; val_offset:135129*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135129*0 + 3*499*FLEN/8, x4, x1, x2)

inst_45044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb00fffffffffff; valaddr_reg:x3; val_offset:135132*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135132*0 + 3*500*FLEN/8, x4, x1, x2)

inst_45045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb01fffffffffff; valaddr_reg:x3; val_offset:135135*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135135*0 + 3*501*FLEN/8, x4, x1, x2)

inst_45046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb03fffffffffff; valaddr_reg:x3; val_offset:135138*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135138*0 + 3*502*FLEN/8, x4, x1, x2)

inst_45047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb07fffffffffff; valaddr_reg:x3; val_offset:135141*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135141*0 + 3*503*FLEN/8, x4, x1, x2)

inst_45048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb0ffffffffffff; valaddr_reg:x3; val_offset:135144*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135144*0 + 3*504*FLEN/8, x4, x1, x2)

inst_45049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb1ffffffffffff; valaddr_reg:x3; val_offset:135147*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135147*0 + 3*505*FLEN/8, x4, x1, x2)

inst_45050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb3ffffffffffff; valaddr_reg:x3; val_offset:135150*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135150*0 + 3*506*FLEN/8, x4, x1, x2)

inst_45051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb7ffffffffffff; valaddr_reg:x3; val_offset:135153*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135153*0 + 3*507*FLEN/8, x4, x1, x2)

inst_45052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbb8000000000000; valaddr_reg:x3; val_offset:135156*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135156*0 + 3*508*FLEN/8, x4, x1, x2)

inst_45053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbc000000000000; valaddr_reg:x3; val_offset:135159*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135159*0 + 3*509*FLEN/8, x4, x1, x2)

inst_45054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbe000000000000; valaddr_reg:x3; val_offset:135162*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135162*0 + 3*510*FLEN/8, x4, x1, x2)

inst_45055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbf000000000000; valaddr_reg:x3; val_offset:135165*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135165*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_45056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbf800000000000; valaddr_reg:x3; val_offset:135168*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135168*0 + 3*512*FLEN/8, x4, x1, x2)

inst_45057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfc00000000000; valaddr_reg:x3; val_offset:135171*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135171*0 + 3*513*FLEN/8, x4, x1, x2)

inst_45058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfe00000000000; valaddr_reg:x3; val_offset:135174*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135174*0 + 3*514*FLEN/8, x4, x1, x2)

inst_45059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbff00000000000; valaddr_reg:x3; val_offset:135177*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135177*0 + 3*515*FLEN/8, x4, x1, x2)

inst_45060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbff80000000000; valaddr_reg:x3; val_offset:135180*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135180*0 + 3*516*FLEN/8, x4, x1, x2)

inst_45061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffc0000000000; valaddr_reg:x3; val_offset:135183*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135183*0 + 3*517*FLEN/8, x4, x1, x2)

inst_45062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffe0000000000; valaddr_reg:x3; val_offset:135186*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135186*0 + 3*518*FLEN/8, x4, x1, x2)

inst_45063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfff0000000000; valaddr_reg:x3; val_offset:135189*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135189*0 + 3*519*FLEN/8, x4, x1, x2)

inst_45064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfff8000000000; valaddr_reg:x3; val_offset:135192*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135192*0 + 3*520*FLEN/8, x4, x1, x2)

inst_45065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffc000000000; valaddr_reg:x3; val_offset:135195*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135195*0 + 3*521*FLEN/8, x4, x1, x2)

inst_45066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffe000000000; valaddr_reg:x3; val_offset:135198*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135198*0 + 3*522*FLEN/8, x4, x1, x2)

inst_45067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffff000000000; valaddr_reg:x3; val_offset:135201*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135201*0 + 3*523*FLEN/8, x4, x1, x2)

inst_45068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffff800000000; valaddr_reg:x3; val_offset:135204*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135204*0 + 3*524*FLEN/8, x4, x1, x2)

inst_45069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffc00000000; valaddr_reg:x3; val_offset:135207*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135207*0 + 3*525*FLEN/8, x4, x1, x2)

inst_45070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffe00000000; valaddr_reg:x3; val_offset:135210*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135210*0 + 3*526*FLEN/8, x4, x1, x2)

inst_45071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffff00000000; valaddr_reg:x3; val_offset:135213*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135213*0 + 3*527*FLEN/8, x4, x1, x2)

inst_45072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffff80000000; valaddr_reg:x3; val_offset:135216*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135216*0 + 3*528*FLEN/8, x4, x1, x2)

inst_45073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffc0000000; valaddr_reg:x3; val_offset:135219*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135219*0 + 3*529*FLEN/8, x4, x1, x2)

inst_45074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffe0000000; valaddr_reg:x3; val_offset:135222*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135222*0 + 3*530*FLEN/8, x4, x1, x2)

inst_45075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffff0000000; valaddr_reg:x3; val_offset:135225*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135225*0 + 3*531*FLEN/8, x4, x1, x2)

inst_45076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffff8000000; valaddr_reg:x3; val_offset:135228*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135228*0 + 3*532*FLEN/8, x4, x1, x2)

inst_45077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffc000000; valaddr_reg:x3; val_offset:135231*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135231*0 + 3*533*FLEN/8, x4, x1, x2)

inst_45078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffe000000; valaddr_reg:x3; val_offset:135234*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135234*0 + 3*534*FLEN/8, x4, x1, x2)

inst_45079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffff000000; valaddr_reg:x3; val_offset:135237*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135237*0 + 3*535*FLEN/8, x4, x1, x2)

inst_45080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffff800000; valaddr_reg:x3; val_offset:135240*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135240*0 + 3*536*FLEN/8, x4, x1, x2)

inst_45081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffffc00000; valaddr_reg:x3; val_offset:135243*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135243*0 + 3*537*FLEN/8, x4, x1, x2)

inst_45082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffffe00000; valaddr_reg:x3; val_offset:135246*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135246*0 + 3*538*FLEN/8, x4, x1, x2)

inst_45083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffff00000; valaddr_reg:x3; val_offset:135249*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135249*0 + 3*539*FLEN/8, x4, x1, x2)

inst_45084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffff80000; valaddr_reg:x3; val_offset:135252*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135252*0 + 3*540*FLEN/8, x4, x1, x2)

inst_45085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffffc0000; valaddr_reg:x3; val_offset:135255*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135255*0 + 3*541*FLEN/8, x4, x1, x2)

inst_45086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffffe0000; valaddr_reg:x3; val_offset:135258*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135258*0 + 3*542*FLEN/8, x4, x1, x2)

inst_45087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffffff0000; valaddr_reg:x3; val_offset:135261*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135261*0 + 3*543*FLEN/8, x4, x1, x2)

inst_45088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffffff8000; valaddr_reg:x3; val_offset:135264*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135264*0 + 3*544*FLEN/8, x4, x1, x2)

inst_45089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffffffc000; valaddr_reg:x3; val_offset:135267*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135267*0 + 3*545*FLEN/8, x4, x1, x2)

inst_45090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffffffe000; valaddr_reg:x3; val_offset:135270*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135270*0 + 3*546*FLEN/8, x4, x1, x2)

inst_45091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffffff000; valaddr_reg:x3; val_offset:135273*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135273*0 + 3*547*FLEN/8, x4, x1, x2)

inst_45092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffffff800; valaddr_reg:x3; val_offset:135276*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135276*0 + 3*548*FLEN/8, x4, x1, x2)

inst_45093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffffffc00; valaddr_reg:x3; val_offset:135279*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135279*0 + 3*549*FLEN/8, x4, x1, x2)

inst_45094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffffffe00; valaddr_reg:x3; val_offset:135282*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135282*0 + 3*550*FLEN/8, x4, x1, x2)

inst_45095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffffffff00; valaddr_reg:x3; val_offset:135285*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135285*0 + 3*551*FLEN/8, x4, x1, x2)

inst_45096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffffffff80; valaddr_reg:x3; val_offset:135288*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135288*0 + 3*552*FLEN/8, x4, x1, x2)

inst_45097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffffffffc0; valaddr_reg:x3; val_offset:135291*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135291*0 + 3*553*FLEN/8, x4, x1, x2)

inst_45098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffffffffe0; valaddr_reg:x3; val_offset:135294*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135294*0 + 3*554*FLEN/8, x4, x1, x2)

inst_45099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffffffff0; valaddr_reg:x3; val_offset:135297*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135297*0 + 3*555*FLEN/8, x4, x1, x2)

inst_45100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffffffff8; valaddr_reg:x3; val_offset:135300*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135300*0 + 3*556*FLEN/8, x4, x1, x2)

inst_45101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffffffffc; valaddr_reg:x3; val_offset:135303*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135303*0 + 3*557*FLEN/8, x4, x1, x2)

inst_45102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbffffffffffffe; valaddr_reg:x3; val_offset:135306*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135306*0 + 3*558*FLEN/8, x4, x1, x2)

inst_45103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbbbfffffffffffff; valaddr_reg:x3; val_offset:135309*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135309*0 + 3*559*FLEN/8, x4, x1, x2)

inst_45104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:135312*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135312*0 + 3*560*FLEN/8, x4, x1, x2)

inst_45105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:135315*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135315*0 + 3*561*FLEN/8, x4, x1, x2)

inst_45106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:135318*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135318*0 + 3*562*FLEN/8, x4, x1, x2)

inst_45107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:135321*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135321*0 + 3*563*FLEN/8, x4, x1, x2)

inst_45108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:135324*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135324*0 + 3*564*FLEN/8, x4, x1, x2)

inst_45109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:135327*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135327*0 + 3*565*FLEN/8, x4, x1, x2)

inst_45110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:135330*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135330*0 + 3*566*FLEN/8, x4, x1, x2)

inst_45111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:135333*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135333*0 + 3*567*FLEN/8, x4, x1, x2)

inst_45112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:135336*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135336*0 + 3*568*FLEN/8, x4, x1, x2)

inst_45113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:135339*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135339*0 + 3*569*FLEN/8, x4, x1, x2)

inst_45114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:135342*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135342*0 + 3*570*FLEN/8, x4, x1, x2)

inst_45115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:135345*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135345*0 + 3*571*FLEN/8, x4, x1, x2)

inst_45116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:135348*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135348*0 + 3*572*FLEN/8, x4, x1, x2)

inst_45117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:135351*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135351*0 + 3*573*FLEN/8, x4, x1, x2)

inst_45118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:135354*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135354*0 + 3*574*FLEN/8, x4, x1, x2)

inst_45119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:135357*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135357*0 + 3*575*FLEN/8, x4, x1, x2)

inst_45120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:135360*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135360*0 + 3*576*FLEN/8, x4, x1, x2)

inst_45121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:135363*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135363*0 + 3*577*FLEN/8, x4, x1, x2)

inst_45122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:135366*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135366*0 + 3*578*FLEN/8, x4, x1, x2)

inst_45123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:135369*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135369*0 + 3*579*FLEN/8, x4, x1, x2)

inst_45124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:135372*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135372*0 + 3*580*FLEN/8, x4, x1, x2)

inst_45125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbcd2d33db4049 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x26a921825ba47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bcd2d33db4049; op2val:0x9fd26a921825ba47;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:135375*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135375*0 + 3*581*FLEN/8, x4, x1, x2)

inst_45126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:135378*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135378*0 + 3*582*FLEN/8, x4, x1, x2)

inst_45127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:135381*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135381*0 + 3*583*FLEN/8, x4, x1, x2)

inst_45128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:135384*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135384*0 + 3*584*FLEN/8, x4, x1, x2)

inst_45129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:135387*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135387*0 + 3*585*FLEN/8, x4, x1, x2)

inst_45130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:135390*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135390*0 + 3*586*FLEN/8, x4, x1, x2)

inst_45131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:135393*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135393*0 + 3*587*FLEN/8, x4, x1, x2)

inst_45132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:135396*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135396*0 + 3*588*FLEN/8, x4, x1, x2)

inst_45133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:135399*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135399*0 + 3*589*FLEN/8, x4, x1, x2)

inst_45134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:135402*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135402*0 + 3*590*FLEN/8, x4, x1, x2)

inst_45135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:135405*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135405*0 + 3*591*FLEN/8, x4, x1, x2)

inst_45136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:135408*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135408*0 + 3*592*FLEN/8, x4, x1, x2)

inst_45137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:135411*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135411*0 + 3*593*FLEN/8, x4, x1, x2)

inst_45138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:135414*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135414*0 + 3*594*FLEN/8, x4, x1, x2)

inst_45139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:135417*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135417*0 + 3*595*FLEN/8, x4, x1, x2)

inst_45140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:135420*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135420*0 + 3*596*FLEN/8, x4, x1, x2)

inst_45141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:135423*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135423*0 + 3*597*FLEN/8, x4, x1, x2)

inst_45142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:135426*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135426*0 + 3*598*FLEN/8, x4, x1, x2)

inst_45143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:135429*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135429*0 + 3*599*FLEN/8, x4, x1, x2)

inst_45144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:135432*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135432*0 + 3*600*FLEN/8, x4, x1, x2)

inst_45145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:135435*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135435*0 + 3*601*FLEN/8, x4, x1, x2)

inst_45146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:135438*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135438*0 + 3*602*FLEN/8, x4, x1, x2)

inst_45147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:135441*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135441*0 + 3*603*FLEN/8, x4, x1, x2)

inst_45148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000000000000; valaddr_reg:x3; val_offset:135444*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135444*0 + 3*604*FLEN/8, x4, x1, x2)

inst_45149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000000000001; valaddr_reg:x3; val_offset:135447*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135447*0 + 3*605*FLEN/8, x4, x1, x2)

inst_45150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000000000003; valaddr_reg:x3; val_offset:135450*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135450*0 + 3*606*FLEN/8, x4, x1, x2)

inst_45151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000000000007; valaddr_reg:x3; val_offset:135453*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135453*0 + 3*607*FLEN/8, x4, x1, x2)

inst_45152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000000000000f; valaddr_reg:x3; val_offset:135456*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135456*0 + 3*608*FLEN/8, x4, x1, x2)

inst_45153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000000000001f; valaddr_reg:x3; val_offset:135459*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135459*0 + 3*609*FLEN/8, x4, x1, x2)

inst_45154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000000000003f; valaddr_reg:x3; val_offset:135462*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135462*0 + 3*610*FLEN/8, x4, x1, x2)

inst_45155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000000000007f; valaddr_reg:x3; val_offset:135465*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135465*0 + 3*611*FLEN/8, x4, x1, x2)

inst_45156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100000000000ff; valaddr_reg:x3; val_offset:135468*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135468*0 + 3*612*FLEN/8, x4, x1, x2)

inst_45157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100000000001ff; valaddr_reg:x3; val_offset:135471*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135471*0 + 3*613*FLEN/8, x4, x1, x2)

inst_45158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100000000003ff; valaddr_reg:x3; val_offset:135474*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135474*0 + 3*614*FLEN/8, x4, x1, x2)

inst_45159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100000000007ff; valaddr_reg:x3; val_offset:135477*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135477*0 + 3*615*FLEN/8, x4, x1, x2)

inst_45160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000000000fff; valaddr_reg:x3; val_offset:135480*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135480*0 + 3*616*FLEN/8, x4, x1, x2)

inst_45161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000000001fff; valaddr_reg:x3; val_offset:135483*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135483*0 + 3*617*FLEN/8, x4, x1, x2)

inst_45162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000000003fff; valaddr_reg:x3; val_offset:135486*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135486*0 + 3*618*FLEN/8, x4, x1, x2)

inst_45163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000000007fff; valaddr_reg:x3; val_offset:135489*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135489*0 + 3*619*FLEN/8, x4, x1, x2)

inst_45164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000000000ffff; valaddr_reg:x3; val_offset:135492*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135492*0 + 3*620*FLEN/8, x4, x1, x2)

inst_45165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000000001ffff; valaddr_reg:x3; val_offset:135495*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135495*0 + 3*621*FLEN/8, x4, x1, x2)

inst_45166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000000003ffff; valaddr_reg:x3; val_offset:135498*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135498*0 + 3*622*FLEN/8, x4, x1, x2)

inst_45167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000000007ffff; valaddr_reg:x3; val_offset:135501*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135501*0 + 3*623*FLEN/8, x4, x1, x2)

inst_45168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100000000fffff; valaddr_reg:x3; val_offset:135504*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135504*0 + 3*624*FLEN/8, x4, x1, x2)

inst_45169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100000001fffff; valaddr_reg:x3; val_offset:135507*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135507*0 + 3*625*FLEN/8, x4, x1, x2)

inst_45170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100000003fffff; valaddr_reg:x3; val_offset:135510*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135510*0 + 3*626*FLEN/8, x4, x1, x2)

inst_45171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100000007fffff; valaddr_reg:x3; val_offset:135513*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135513*0 + 3*627*FLEN/8, x4, x1, x2)

inst_45172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000000ffffff; valaddr_reg:x3; val_offset:135516*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135516*0 + 3*628*FLEN/8, x4, x1, x2)

inst_45173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000001ffffff; valaddr_reg:x3; val_offset:135519*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135519*0 + 3*629*FLEN/8, x4, x1, x2)

inst_45174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000003ffffff; valaddr_reg:x3; val_offset:135522*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135522*0 + 3*630*FLEN/8, x4, x1, x2)

inst_45175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000007ffffff; valaddr_reg:x3; val_offset:135525*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135525*0 + 3*631*FLEN/8, x4, x1, x2)

inst_45176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000000fffffff; valaddr_reg:x3; val_offset:135528*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135528*0 + 3*632*FLEN/8, x4, x1, x2)

inst_45177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000001fffffff; valaddr_reg:x3; val_offset:135531*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135531*0 + 3*633*FLEN/8, x4, x1, x2)

inst_45178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000003fffffff; valaddr_reg:x3; val_offset:135534*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135534*0 + 3*634*FLEN/8, x4, x1, x2)

inst_45179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000007fffffff; valaddr_reg:x3; val_offset:135537*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135537*0 + 3*635*FLEN/8, x4, x1, x2)

inst_45180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100000ffffffff; valaddr_reg:x3; val_offset:135540*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135540*0 + 3*636*FLEN/8, x4, x1, x2)

inst_45181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100001ffffffff; valaddr_reg:x3; val_offset:135543*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135543*0 + 3*637*FLEN/8, x4, x1, x2)

inst_45182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100003ffffffff; valaddr_reg:x3; val_offset:135546*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135546*0 + 3*638*FLEN/8, x4, x1, x2)

inst_45183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100007ffffffff; valaddr_reg:x3; val_offset:135549*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135549*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_45184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110000fffffffff; valaddr_reg:x3; val_offset:135552*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135552*0 + 3*640*FLEN/8, x4, x1, x2)

inst_45185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110001fffffffff; valaddr_reg:x3; val_offset:135555*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135555*0 + 3*641*FLEN/8, x4, x1, x2)

inst_45186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110003fffffffff; valaddr_reg:x3; val_offset:135558*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135558*0 + 3*642*FLEN/8, x4, x1, x2)

inst_45187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110007fffffffff; valaddr_reg:x3; val_offset:135561*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135561*0 + 3*643*FLEN/8, x4, x1, x2)

inst_45188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811000ffffffffff; valaddr_reg:x3; val_offset:135564*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135564*0 + 3*644*FLEN/8, x4, x1, x2)

inst_45189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811001ffffffffff; valaddr_reg:x3; val_offset:135567*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135567*0 + 3*645*FLEN/8, x4, x1, x2)

inst_45190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811003ffffffffff; valaddr_reg:x3; val_offset:135570*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135570*0 + 3*646*FLEN/8, x4, x1, x2)

inst_45191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811007ffffffffff; valaddr_reg:x3; val_offset:135573*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135573*0 + 3*647*FLEN/8, x4, x1, x2)

inst_45192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81100fffffffffff; valaddr_reg:x3; val_offset:135576*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135576*0 + 3*648*FLEN/8, x4, x1, x2)

inst_45193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81101fffffffffff; valaddr_reg:x3; val_offset:135579*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135579*0 + 3*649*FLEN/8, x4, x1, x2)

inst_45194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81103fffffffffff; valaddr_reg:x3; val_offset:135582*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135582*0 + 3*650*FLEN/8, x4, x1, x2)

inst_45195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x81107fffffffffff; valaddr_reg:x3; val_offset:135585*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135585*0 + 3*651*FLEN/8, x4, x1, x2)

inst_45196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8110ffffffffffff; valaddr_reg:x3; val_offset:135588*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135588*0 + 3*652*FLEN/8, x4, x1, x2)

inst_45197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8111ffffffffffff; valaddr_reg:x3; val_offset:135591*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135591*0 + 3*653*FLEN/8, x4, x1, x2)

inst_45198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8113ffffffffffff; valaddr_reg:x3; val_offset:135594*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135594*0 + 3*654*FLEN/8, x4, x1, x2)

inst_45199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8117ffffffffffff; valaddr_reg:x3; val_offset:135597*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135597*0 + 3*655*FLEN/8, x4, x1, x2)

inst_45200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x8118000000000000; valaddr_reg:x3; val_offset:135600*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135600*0 + 3*656*FLEN/8, x4, x1, x2)

inst_45201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811c000000000000; valaddr_reg:x3; val_offset:135603*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135603*0 + 3*657*FLEN/8, x4, x1, x2)

inst_45202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811e000000000000; valaddr_reg:x3; val_offset:135606*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135606*0 + 3*658*FLEN/8, x4, x1, x2)

inst_45203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811f000000000000; valaddr_reg:x3; val_offset:135609*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135609*0 + 3*659*FLEN/8, x4, x1, x2)

inst_45204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811f800000000000; valaddr_reg:x3; val_offset:135612*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135612*0 + 3*660*FLEN/8, x4, x1, x2)

inst_45205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fc00000000000; valaddr_reg:x3; val_offset:135615*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135615*0 + 3*661*FLEN/8, x4, x1, x2)

inst_45206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fe00000000000; valaddr_reg:x3; val_offset:135618*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135618*0 + 3*662*FLEN/8, x4, x1, x2)

inst_45207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ff00000000000; valaddr_reg:x3; val_offset:135621*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135621*0 + 3*663*FLEN/8, x4, x1, x2)

inst_45208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ff80000000000; valaddr_reg:x3; val_offset:135624*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135624*0 + 3*664*FLEN/8, x4, x1, x2)

inst_45209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffc0000000000; valaddr_reg:x3; val_offset:135627*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135627*0 + 3*665*FLEN/8, x4, x1, x2)

inst_45210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffe0000000000; valaddr_reg:x3; val_offset:135630*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135630*0 + 3*666*FLEN/8, x4, x1, x2)

inst_45211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fff0000000000; valaddr_reg:x3; val_offset:135633*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135633*0 + 3*667*FLEN/8, x4, x1, x2)

inst_45212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fff8000000000; valaddr_reg:x3; val_offset:135636*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135636*0 + 3*668*FLEN/8, x4, x1, x2)

inst_45213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffc000000000; valaddr_reg:x3; val_offset:135639*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135639*0 + 3*669*FLEN/8, x4, x1, x2)

inst_45214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffe000000000; valaddr_reg:x3; val_offset:135642*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135642*0 + 3*670*FLEN/8, x4, x1, x2)

inst_45215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffff000000000; valaddr_reg:x3; val_offset:135645*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135645*0 + 3*671*FLEN/8, x4, x1, x2)

inst_45216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffff800000000; valaddr_reg:x3; val_offset:135648*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135648*0 + 3*672*FLEN/8, x4, x1, x2)

inst_45217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffc00000000; valaddr_reg:x3; val_offset:135651*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135651*0 + 3*673*FLEN/8, x4, x1, x2)

inst_45218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffe00000000; valaddr_reg:x3; val_offset:135654*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135654*0 + 3*674*FLEN/8, x4, x1, x2)

inst_45219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffff00000000; valaddr_reg:x3; val_offset:135657*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135657*0 + 3*675*FLEN/8, x4, x1, x2)

inst_45220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffff80000000; valaddr_reg:x3; val_offset:135660*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135660*0 + 3*676*FLEN/8, x4, x1, x2)

inst_45221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffc0000000; valaddr_reg:x3; val_offset:135663*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135663*0 + 3*677*FLEN/8, x4, x1, x2)

inst_45222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffe0000000; valaddr_reg:x3; val_offset:135666*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135666*0 + 3*678*FLEN/8, x4, x1, x2)

inst_45223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffff0000000; valaddr_reg:x3; val_offset:135669*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135669*0 + 3*679*FLEN/8, x4, x1, x2)

inst_45224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffff8000000; valaddr_reg:x3; val_offset:135672*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135672*0 + 3*680*FLEN/8, x4, x1, x2)

inst_45225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffc000000; valaddr_reg:x3; val_offset:135675*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135675*0 + 3*681*FLEN/8, x4, x1, x2)

inst_45226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffe000000; valaddr_reg:x3; val_offset:135678*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135678*0 + 3*682*FLEN/8, x4, x1, x2)

inst_45227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffff000000; valaddr_reg:x3; val_offset:135681*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135681*0 + 3*683*FLEN/8, x4, x1, x2)

inst_45228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffff800000; valaddr_reg:x3; val_offset:135684*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135684*0 + 3*684*FLEN/8, x4, x1, x2)

inst_45229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffffc00000; valaddr_reg:x3; val_offset:135687*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135687*0 + 3*685*FLEN/8, x4, x1, x2)

inst_45230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffffe00000; valaddr_reg:x3; val_offset:135690*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135690*0 + 3*686*FLEN/8, x4, x1, x2)

inst_45231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffff00000; valaddr_reg:x3; val_offset:135693*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135693*0 + 3*687*FLEN/8, x4, x1, x2)

inst_45232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffff80000; valaddr_reg:x3; val_offset:135696*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135696*0 + 3*688*FLEN/8, x4, x1, x2)

inst_45233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffffc0000; valaddr_reg:x3; val_offset:135699*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135699*0 + 3*689*FLEN/8, x4, x1, x2)

inst_45234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffffe0000; valaddr_reg:x3; val_offset:135702*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135702*0 + 3*690*FLEN/8, x4, x1, x2)

inst_45235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffffff0000; valaddr_reg:x3; val_offset:135705*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135705*0 + 3*691*FLEN/8, x4, x1, x2)

inst_45236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffffff8000; valaddr_reg:x3; val_offset:135708*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135708*0 + 3*692*FLEN/8, x4, x1, x2)

inst_45237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffffffc000; valaddr_reg:x3; val_offset:135711*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135711*0 + 3*693*FLEN/8, x4, x1, x2)

inst_45238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffffffe000; valaddr_reg:x3; val_offset:135714*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135714*0 + 3*694*FLEN/8, x4, x1, x2)

inst_45239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffffff000; valaddr_reg:x3; val_offset:135717*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135717*0 + 3*695*FLEN/8, x4, x1, x2)

inst_45240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffffff800; valaddr_reg:x3; val_offset:135720*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135720*0 + 3*696*FLEN/8, x4, x1, x2)

inst_45241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffffffc00; valaddr_reg:x3; val_offset:135723*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135723*0 + 3*697*FLEN/8, x4, x1, x2)

inst_45242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffffffe00; valaddr_reg:x3; val_offset:135726*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135726*0 + 3*698*FLEN/8, x4, x1, x2)

inst_45243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffffffff00; valaddr_reg:x3; val_offset:135729*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135729*0 + 3*699*FLEN/8, x4, x1, x2)

inst_45244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffffffff80; valaddr_reg:x3; val_offset:135732*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135732*0 + 3*700*FLEN/8, x4, x1, x2)

inst_45245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffffffffc0; valaddr_reg:x3; val_offset:135735*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135735*0 + 3*701*FLEN/8, x4, x1, x2)

inst_45246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffffffffe0; valaddr_reg:x3; val_offset:135738*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135738*0 + 3*702*FLEN/8, x4, x1, x2)

inst_45247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffffffff0; valaddr_reg:x3; val_offset:135741*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135741*0 + 3*703*FLEN/8, x4, x1, x2)

inst_45248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffffffff8; valaddr_reg:x3; val_offset:135744*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135744*0 + 3*704*FLEN/8, x4, x1, x2)

inst_45249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffffffffc; valaddr_reg:x3; val_offset:135747*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135747*0 + 3*705*FLEN/8, x4, x1, x2)

inst_45250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811ffffffffffffe; valaddr_reg:x3; val_offset:135750*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135750*0 + 3*706*FLEN/8, x4, x1, x2)

inst_45251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbdff11b6dccf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bdff11b6dccf5; op2val:0x8000;
op3val:0x811fffffffffffff; valaddr_reg:x3; val_offset:135753*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135753*0 + 3*707*FLEN/8, x4, x1, x2)

inst_45252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:135756*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135756*0 + 3*708*FLEN/8, x4, x1, x2)

inst_45253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:135759*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135759*0 + 3*709*FLEN/8, x4, x1, x2)

inst_45254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:135762*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135762*0 + 3*710*FLEN/8, x4, x1, x2)

inst_45255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:135765*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135765*0 + 3*711*FLEN/8, x4, x1, x2)

inst_45256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:135768*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135768*0 + 3*712*FLEN/8, x4, x1, x2)

inst_45257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:135771*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135771*0 + 3*713*FLEN/8, x4, x1, x2)

inst_45258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:135774*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135774*0 + 3*714*FLEN/8, x4, x1, x2)

inst_45259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:135777*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135777*0 + 3*715*FLEN/8, x4, x1, x2)

inst_45260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:135780*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135780*0 + 3*716*FLEN/8, x4, x1, x2)

inst_45261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:135783*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135783*0 + 3*717*FLEN/8, x4, x1, x2)

inst_45262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:135786*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135786*0 + 3*718*FLEN/8, x4, x1, x2)

inst_45263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:135789*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135789*0 + 3*719*FLEN/8, x4, x1, x2)

inst_45264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:135792*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135792*0 + 3*720*FLEN/8, x4, x1, x2)

inst_45265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:135795*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135795*0 + 3*721*FLEN/8, x4, x1, x2)

inst_45266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:135798*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135798*0 + 3*722*FLEN/8, x4, x1, x2)

inst_45267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:135801*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135801*0 + 3*723*FLEN/8, x4, x1, x2)

inst_45268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:135804*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135804*0 + 3*724*FLEN/8, x4, x1, x2)

inst_45269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:135807*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135807*0 + 3*725*FLEN/8, x4, x1, x2)

inst_45270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:135810*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135810*0 + 3*726*FLEN/8, x4, x1, x2)

inst_45271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:135813*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135813*0 + 3*727*FLEN/8, x4, x1, x2)

inst_45272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:135816*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135816*0 + 3*728*FLEN/8, x4, x1, x2)

inst_45273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:135819*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135819*0 + 3*729*FLEN/8, x4, x1, x2)

inst_45274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000000000000; valaddr_reg:x3; val_offset:135822*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135822*0 + 3*730*FLEN/8, x4, x1, x2)

inst_45275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000000000001; valaddr_reg:x3; val_offset:135825*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135825*0 + 3*731*FLEN/8, x4, x1, x2)

inst_45276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000000000003; valaddr_reg:x3; val_offset:135828*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135828*0 + 3*732*FLEN/8, x4, x1, x2)

inst_45277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000000000007; valaddr_reg:x3; val_offset:135831*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135831*0 + 3*733*FLEN/8, x4, x1, x2)

inst_45278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000000000000f; valaddr_reg:x3; val_offset:135834*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135834*0 + 3*734*FLEN/8, x4, x1, x2)

inst_45279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000000000001f; valaddr_reg:x3; val_offset:135837*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135837*0 + 3*735*FLEN/8, x4, x1, x2)

inst_45280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000000000003f; valaddr_reg:x3; val_offset:135840*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135840*0 + 3*736*FLEN/8, x4, x1, x2)

inst_45281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000000000007f; valaddr_reg:x3; val_offset:135843*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135843*0 + 3*737*FLEN/8, x4, x1, x2)

inst_45282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900000000000ff; valaddr_reg:x3; val_offset:135846*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135846*0 + 3*738*FLEN/8, x4, x1, x2)

inst_45283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900000000001ff; valaddr_reg:x3; val_offset:135849*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135849*0 + 3*739*FLEN/8, x4, x1, x2)

inst_45284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900000000003ff; valaddr_reg:x3; val_offset:135852*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135852*0 + 3*740*FLEN/8, x4, x1, x2)

inst_45285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900000000007ff; valaddr_reg:x3; val_offset:135855*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135855*0 + 3*741*FLEN/8, x4, x1, x2)

inst_45286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000000000fff; valaddr_reg:x3; val_offset:135858*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135858*0 + 3*742*FLEN/8, x4, x1, x2)

inst_45287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000000001fff; valaddr_reg:x3; val_offset:135861*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135861*0 + 3*743*FLEN/8, x4, x1, x2)

inst_45288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000000003fff; valaddr_reg:x3; val_offset:135864*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135864*0 + 3*744*FLEN/8, x4, x1, x2)

inst_45289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000000007fff; valaddr_reg:x3; val_offset:135867*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135867*0 + 3*745*FLEN/8, x4, x1, x2)

inst_45290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000000000ffff; valaddr_reg:x3; val_offset:135870*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135870*0 + 3*746*FLEN/8, x4, x1, x2)

inst_45291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000000001ffff; valaddr_reg:x3; val_offset:135873*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135873*0 + 3*747*FLEN/8, x4, x1, x2)

inst_45292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000000003ffff; valaddr_reg:x3; val_offset:135876*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135876*0 + 3*748*FLEN/8, x4, x1, x2)

inst_45293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000000007ffff; valaddr_reg:x3; val_offset:135879*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135879*0 + 3*749*FLEN/8, x4, x1, x2)

inst_45294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900000000fffff; valaddr_reg:x3; val_offset:135882*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135882*0 + 3*750*FLEN/8, x4, x1, x2)

inst_45295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900000001fffff; valaddr_reg:x3; val_offset:135885*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135885*0 + 3*751*FLEN/8, x4, x1, x2)

inst_45296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900000003fffff; valaddr_reg:x3; val_offset:135888*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135888*0 + 3*752*FLEN/8, x4, x1, x2)

inst_45297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900000007fffff; valaddr_reg:x3; val_offset:135891*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135891*0 + 3*753*FLEN/8, x4, x1, x2)

inst_45298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000000ffffff; valaddr_reg:x3; val_offset:135894*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135894*0 + 3*754*FLEN/8, x4, x1, x2)

inst_45299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000001ffffff; valaddr_reg:x3; val_offset:135897*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135897*0 + 3*755*FLEN/8, x4, x1, x2)

inst_45300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000003ffffff; valaddr_reg:x3; val_offset:135900*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135900*0 + 3*756*FLEN/8, x4, x1, x2)

inst_45301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000007ffffff; valaddr_reg:x3; val_offset:135903*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135903*0 + 3*757*FLEN/8, x4, x1, x2)

inst_45302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000000fffffff; valaddr_reg:x3; val_offset:135906*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135906*0 + 3*758*FLEN/8, x4, x1, x2)

inst_45303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000001fffffff; valaddr_reg:x3; val_offset:135909*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135909*0 + 3*759*FLEN/8, x4, x1, x2)

inst_45304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000003fffffff; valaddr_reg:x3; val_offset:135912*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135912*0 + 3*760*FLEN/8, x4, x1, x2)

inst_45305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x839000007fffffff; valaddr_reg:x3; val_offset:135915*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135915*0 + 3*761*FLEN/8, x4, x1, x2)

inst_45306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900000ffffffff; valaddr_reg:x3; val_offset:135918*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135918*0 + 3*762*FLEN/8, x4, x1, x2)

inst_45307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900001ffffffff; valaddr_reg:x3; val_offset:135921*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135921*0 + 3*763*FLEN/8, x4, x1, x2)

inst_45308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900003ffffffff; valaddr_reg:x3; val_offset:135924*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135924*0 + 3*764*FLEN/8, x4, x1, x2)

inst_45309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x83900007ffffffff; valaddr_reg:x3; val_offset:135927*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135927*0 + 3*765*FLEN/8, x4, x1, x2)

inst_45310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390000fffffffff; valaddr_reg:x3; val_offset:135930*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135930*0 + 3*766*FLEN/8, x4, x1, x2)

inst_45311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbff7984cb403b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bff7984cb403b; op2val:0x8000;
op3val:0x8390001fffffffff; valaddr_reg:x3; val_offset:135933*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135933*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832077701119,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832144809983,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832279027711,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832547463167,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918833084334079,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918834158075903,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918836305559551,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918840600526847,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918849190461439,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918866370330623,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918900730068991,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918969449545727,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919106888499199,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919381766406143,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919931522220031,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281921031033847807,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281923230057103359,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281927628103614463,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281936424196636671,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281954016382681087,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281989200754769919,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282059569498947583,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282200306987302911,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282481781964013567,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9283044731917434879,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277503,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277504,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285296531731120128,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285859481684541440,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286140956661252096,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286281694149607424,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286352062893785088,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286387247265873920,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286404839451918336,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286413635544940544,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286418033591451648,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286420232614707200,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421332126334976,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421881882148864,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422156760055808,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422294199009280,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422362918486016,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422397278224384,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422414458093568,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422423048028160,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422427342995456,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422429490479104,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422430564220928,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431101091840,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431369527296,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431503745024,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431570853888,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431604408320,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431621185536,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431629574144,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431633768448,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431635865600,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431636914176,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637438464,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637700608,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637831680,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637897216,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637929984,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637946368,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637954560,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637958656,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637960704,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637961728,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962240,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962496,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962624,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962688,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962720,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962736,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962744,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962748,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962750,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962751,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855872,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855873,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855875,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855879,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855887,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855903,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855935,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855999,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856127,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856383,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856895,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075857919,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075859967,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075864063,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075872255,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075888639,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075921407,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075986943,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076118015,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076380159,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076904447,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188077953023,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188080050175,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188084244479,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188092633087,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188109410303,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188142964735,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188210073599,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188344291327,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188612726783,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115189149597695,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115190223339519,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115192370823167,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115196665790463,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115205255725055,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115222435594239,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115256795332607,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115325514809343,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115462953762815,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115737831669759,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144116287587483647,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144117387099111423,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144119586122366975,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144123984168878079,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144132780261900287,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144150372447944703,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144185556820033535,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144255925564211199,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144396663052566527,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144678138029277183,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(145241087982698495,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(146366987889541119,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(146366987889541120,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(147492887796383744,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148055837749805056,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148337312726515712,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148478050214871040,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148548418959048704,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148583603331137536,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148601195517181952,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148609991610204160,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148614389656715264,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148616588679970816,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148617688191598592,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618237947412480,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618512825319424,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618650264272896,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618718983749632,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618753343488000,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618770523357184,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618779113291776,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618783408259072,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618785555742720,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618786629484544,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787166355456,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787434790912,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787569008640,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787636117504,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787669671936,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787686449152,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787694837760,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787699032064,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787701129216,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702177792,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702702080,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702964224,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703095296,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703160832,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703193600,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703209984,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703218176,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703222272,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703224320,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225344,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225856,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226112,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226240,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226304,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226336,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226352,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226360,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226364,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226366,64,FLEN)
NAN_BOXED(6889257343594681353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226367,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334464,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334465,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334467,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334471,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334479,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334495,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334527,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334591,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334719,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334975,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646335487,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646336511,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646338559,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646342655,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646350847,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646367231,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646399999,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646465535,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646596607,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646858751,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396647383039,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396648431615,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396650528767,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396654723071,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396663111679,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396679888895,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396713443327,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396780552191,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396914769919,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532397183205375,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532397720076287,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532398793818111,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532400941301759,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532405236269055,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532413826203647,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532431006072831,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532465365811199,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532534085287935,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532671524241407,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532946402148351,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40533496157962239,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40534595669590015,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40536794692845567,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40541192739356671,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40549988832378879,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40567581018423295,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40602765390512127,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40673134134689791,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40813871623045119,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(41095346599755775,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(41658296553177087,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(42784196460019711,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(42784196460019712,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(43910096366862336,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44473046320283648,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44754521296994304,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44895258785349632,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44965627529527296,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45000811901616128,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45018404087660544,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45027200180682752,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45031598227193856,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45033797250449408,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45034896762077184,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035446517891072,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035721395798016,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035858834751488,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035927554228224,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035961913966592,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035979093835776,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035987683770368,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035991978737664,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035994126221312,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035995199963136,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035995736834048,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996005269504,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996139487232,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996206596096,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996240150528,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996256927744,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996265316352,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996269510656,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996271607808,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996272656384,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273180672,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273442816,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273573888,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273639424,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273672192,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273688576,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273696768,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273700864,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273702912,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273703936,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704448,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704704,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704832,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704896,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704928,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704944,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704952,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704956,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704958,64,FLEN)
NAN_BOXED(6889258485148260059,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704959,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237748224,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237748225,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237748227,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237748231,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237748239,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237748255,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237748287,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237748351,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237748479,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237748735,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237749247,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237750271,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237752319,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237756415,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237764607,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237780991,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237813759,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048237879295,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048238010367,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048238272511,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048238796799,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048239845375,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048241942527,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048246136831,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048254525439,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048271302655,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048304857087,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048371965951,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048506183679,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398048774619135,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398049311490047,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398050385231871,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398052532715519,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398056827682815,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398065417617407,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398082597486591,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398116957224959,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398185676701695,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398323115655167,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251398597993562111,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251399147749375999,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251400247261003775,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251402446284259327,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251406844330770431,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251415640423792639,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251433232609837055,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251468416981925887,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251538785726103551,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251679523214458879,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4251960998191169535,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4252523948144590847,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4253649848051433471,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4253649848051433472,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4254775747958276096,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255338697911697408,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255620172888408064,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255760910376763392,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255831279120941056,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255866463493029888,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255884055679074304,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255892851772096512,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255897249818607616,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255899448841863168,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255900548353490944,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901098109304832,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901372987211776,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901510426165248,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901579145641984,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901613505380352,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901630685249536,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901639275184128,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901643570151424,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901645717635072,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901646791376896,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647328247808,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647596683264,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647730900992,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647798009856,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647831564288,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647848341504,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647856730112,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647860924416,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647863021568,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647864070144,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647864594432,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647864856576,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647864987648,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865053184,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865085952,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865102336,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865110528,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865114624,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865116672,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865117696,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865118208,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865118464,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865118592,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865118656,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865118688,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865118704,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865118712,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865118716,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865118718,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4255901647865118719,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889313685381554283,64,FLEN)
NAN_BOXED(2324545470485392167,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993599488,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993599489,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993599491,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993599495,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993599503,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993599519,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993599551,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993599615,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993599743,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993599999,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993600511,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993601535,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993603583,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993607679,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993615871,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993632255,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993665023,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993730559,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680993861631,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680994123775,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680994648063,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680995696639,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309680997793791,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309681001988095,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309681010376703,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309681027153919,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309681060708351,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309681127817215,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309681262034943,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309681530470399,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309682067341311,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309683141083135,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309685288566783,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309689583534079,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309698173468671,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309715353337855,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309749713076223,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309818432552959,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524309955871506431,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524310230749413375,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524310780505227263,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524311880016855039,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524314079040110591,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524318477086621695,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524327273179643903,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524344865365688319,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524380049737777151,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524450418481954815,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524591155970310143,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13524872630947020799,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13525435580900442111,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13526561480807284735,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13526561480807284736,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13527687380714127360,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528250330667548672,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528531805644259328,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528672543132614656,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528742911876792320,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528778096248881152,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528795688434925568,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528804484527947776,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528808882574458880,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528811081597714432,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528812181109342208,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528812730865156096,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813005743063040,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813143182016512,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813211901493248,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813246261231616,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813263441100800,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813272031035392,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813276326002688,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813278473486336,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813279547228160,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280084099072,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280352534528,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280486752256,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280553861120,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280587415552,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280604192768,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280612581376,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280616775680,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280618872832,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280619921408,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620445696,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620707840,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620838912,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620904448,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620937216,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620953600,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620961792,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620965888,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620967936,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620968960,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620969472,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620969728,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620969856,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620969920,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620969952,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620969968,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620969976,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620969980,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620969982,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13528813280620969983,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6889325649020534857,64,FLEN)
NAN_BOXED(11516384372842674759,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074240,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074241,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074243,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074247,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074255,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074271,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074303,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074367,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074495,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074751,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520075263,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520076287,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520078335,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520082431,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520090623,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520107007,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520139775,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520205311,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520336383,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520598527,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230521122815,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230522171391,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230524268543,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230528462847,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230536851455,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230553628671,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230587183103,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230654291967,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230788509695,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231056945151,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231593816063,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933232667557887,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933234815041535,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933239110008831,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933247699943423,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933264879812607,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933299239550975,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933367959027711,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933505397981183,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933780275888127,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299934330031702015,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299935429543329791,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299937628566585343,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299942026613096447,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299950822706118655,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299968414892163071,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300003599264251903,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300073968008429567,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300214705496784895,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300496180473495551,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9301059130426916863,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759487,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759488,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303310930240602112,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303873880194023424,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304155355170734080,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304296092659089408,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304366461403267072,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304401645775355904,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304419237961400320,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304428034054422528,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304432432100933632,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304434631124189184,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304435730635816960,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436280391630848,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436555269537792,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436692708491264,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436761427968000,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436795787706368,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436812967575552,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436821557510144,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436825852477440,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436827999961088,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829073702912,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829610573824,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829879009280,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830013227008,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830080335872,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830113890304,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830130667520,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830139056128,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830143250432,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830145347584,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830146396160,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830146920448,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147182592,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147313664,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147379200,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147411968,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147428352,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147436544,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147440640,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147442688,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147443712,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444224,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444480,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444608,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444672,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444704,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444720,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444728,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444732,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444734,64,FLEN)
NAN_BOXED(6889346281633598709,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444735,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894080,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894081,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894083,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894087,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894095,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894111,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894143,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894207,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894335,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894591,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614895103,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614896127,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614898175,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614902271,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614910463,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614926847,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614959615,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615025151,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615156223,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615418367,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615942655,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215616991231,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215619088383,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215623282687,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215631671295,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215648448511,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215682002943,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215749111807,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215883329535,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077216151764991,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077216688635903,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077217762377727,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077219909861375,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077224204828671,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077232794763263,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077249974632447,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077284334370815,64,FLEN)
NAN_BOXED(6889380952377344059,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077353053847551,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
