
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_99840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835ffffffffff800; valaddr_reg:x3; val_offset:299520*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299520*0 + 3*0*FLEN/8, x4, x1, x2)

inst_99841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835ffffffffffc00; valaddr_reg:x3; val_offset:299523*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299523*0 + 3*1*FLEN/8, x4, x1, x2)

inst_99842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835ffffffffffe00; valaddr_reg:x3; val_offset:299526*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299526*0 + 3*2*FLEN/8, x4, x1, x2)

inst_99843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835fffffffffff00; valaddr_reg:x3; val_offset:299529*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299529*0 + 3*3*FLEN/8, x4, x1, x2)

inst_99844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835fffffffffff80; valaddr_reg:x3; val_offset:299532*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299532*0 + 3*4*FLEN/8, x4, x1, x2)

inst_99845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835fffffffffffc0; valaddr_reg:x3; val_offset:299535*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299535*0 + 3*5*FLEN/8, x4, x1, x2)

inst_99846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835fffffffffffe0; valaddr_reg:x3; val_offset:299538*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299538*0 + 3*6*FLEN/8, x4, x1, x2)

inst_99847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835ffffffffffff0; valaddr_reg:x3; val_offset:299541*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299541*0 + 3*7*FLEN/8, x4, x1, x2)

inst_99848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835ffffffffffff8; valaddr_reg:x3; val_offset:299544*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299544*0 + 3*8*FLEN/8, x4, x1, x2)

inst_99849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835ffffffffffffc; valaddr_reg:x3; val_offset:299547*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299547*0 + 3*9*FLEN/8, x4, x1, x2)

inst_99850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835ffffffffffffe; valaddr_reg:x3; val_offset:299550*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299550*0 + 3*10*FLEN/8, x4, x1, x2)

inst_99851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf287cefd524ca and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf287cefd524ca; op2val:0x8000;
op3val:0x835fffffffffffff; valaddr_reg:x3; val_offset:299553*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299553*0 + 3*11*FLEN/8, x4, x1, x2)

inst_99852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000000000000; valaddr_reg:x3; val_offset:299556*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299556*0 + 3*12*FLEN/8, x4, x1, x2)

inst_99853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000000000001; valaddr_reg:x3; val_offset:299559*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299559*0 + 3*13*FLEN/8, x4, x1, x2)

inst_99854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000000000003; valaddr_reg:x3; val_offset:299562*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299562*0 + 3*14*FLEN/8, x4, x1, x2)

inst_99855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000000000007; valaddr_reg:x3; val_offset:299565*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299565*0 + 3*15*FLEN/8, x4, x1, x2)

inst_99856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000000000000f; valaddr_reg:x3; val_offset:299568*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299568*0 + 3*16*FLEN/8, x4, x1, x2)

inst_99857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000000000001f; valaddr_reg:x3; val_offset:299571*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299571*0 + 3*17*FLEN/8, x4, x1, x2)

inst_99858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000000000003f; valaddr_reg:x3; val_offset:299574*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299574*0 + 3*18*FLEN/8, x4, x1, x2)

inst_99859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000000000007f; valaddr_reg:x3; val_offset:299577*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299577*0 + 3*19*FLEN/8, x4, x1, x2)

inst_99860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300000000000ff; valaddr_reg:x3; val_offset:299580*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299580*0 + 3*20*FLEN/8, x4, x1, x2)

inst_99861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300000000001ff; valaddr_reg:x3; val_offset:299583*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299583*0 + 3*21*FLEN/8, x4, x1, x2)

inst_99862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300000000003ff; valaddr_reg:x3; val_offset:299586*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299586*0 + 3*22*FLEN/8, x4, x1, x2)

inst_99863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300000000007ff; valaddr_reg:x3; val_offset:299589*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299589*0 + 3*23*FLEN/8, x4, x1, x2)

inst_99864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000000000fff; valaddr_reg:x3; val_offset:299592*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299592*0 + 3*24*FLEN/8, x4, x1, x2)

inst_99865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000000001fff; valaddr_reg:x3; val_offset:299595*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299595*0 + 3*25*FLEN/8, x4, x1, x2)

inst_99866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000000003fff; valaddr_reg:x3; val_offset:299598*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299598*0 + 3*26*FLEN/8, x4, x1, x2)

inst_99867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000000007fff; valaddr_reg:x3; val_offset:299601*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299601*0 + 3*27*FLEN/8, x4, x1, x2)

inst_99868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000000000ffff; valaddr_reg:x3; val_offset:299604*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299604*0 + 3*28*FLEN/8, x4, x1, x2)

inst_99869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000000001ffff; valaddr_reg:x3; val_offset:299607*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299607*0 + 3*29*FLEN/8, x4, x1, x2)

inst_99870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000000003ffff; valaddr_reg:x3; val_offset:299610*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299610*0 + 3*30*FLEN/8, x4, x1, x2)

inst_99871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000000007ffff; valaddr_reg:x3; val_offset:299613*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299613*0 + 3*31*FLEN/8, x4, x1, x2)

inst_99872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300000000fffff; valaddr_reg:x3; val_offset:299616*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299616*0 + 3*32*FLEN/8, x4, x1, x2)

inst_99873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300000001fffff; valaddr_reg:x3; val_offset:299619*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299619*0 + 3*33*FLEN/8, x4, x1, x2)

inst_99874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300000003fffff; valaddr_reg:x3; val_offset:299622*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299622*0 + 3*34*FLEN/8, x4, x1, x2)

inst_99875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300000007fffff; valaddr_reg:x3; val_offset:299625*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299625*0 + 3*35*FLEN/8, x4, x1, x2)

inst_99876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000000ffffff; valaddr_reg:x3; val_offset:299628*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299628*0 + 3*36*FLEN/8, x4, x1, x2)

inst_99877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000001ffffff; valaddr_reg:x3; val_offset:299631*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299631*0 + 3*37*FLEN/8, x4, x1, x2)

inst_99878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000003ffffff; valaddr_reg:x3; val_offset:299634*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299634*0 + 3*38*FLEN/8, x4, x1, x2)

inst_99879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000007ffffff; valaddr_reg:x3; val_offset:299637*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299637*0 + 3*39*FLEN/8, x4, x1, x2)

inst_99880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000000fffffff; valaddr_reg:x3; val_offset:299640*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299640*0 + 3*40*FLEN/8, x4, x1, x2)

inst_99881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000001fffffff; valaddr_reg:x3; val_offset:299643*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299643*0 + 3*41*FLEN/8, x4, x1, x2)

inst_99882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000003fffffff; valaddr_reg:x3; val_offset:299646*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299646*0 + 3*42*FLEN/8, x4, x1, x2)

inst_99883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000007fffffff; valaddr_reg:x3; val_offset:299649*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299649*0 + 3*43*FLEN/8, x4, x1, x2)

inst_99884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300000ffffffff; valaddr_reg:x3; val_offset:299652*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299652*0 + 3*44*FLEN/8, x4, x1, x2)

inst_99885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300001ffffffff; valaddr_reg:x3; val_offset:299655*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299655*0 + 3*45*FLEN/8, x4, x1, x2)

inst_99886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300003ffffffff; valaddr_reg:x3; val_offset:299658*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299658*0 + 3*46*FLEN/8, x4, x1, x2)

inst_99887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300007ffffffff; valaddr_reg:x3; val_offset:299661*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299661*0 + 3*47*FLEN/8, x4, x1, x2)

inst_99888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30000fffffffff; valaddr_reg:x3; val_offset:299664*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299664*0 + 3*48*FLEN/8, x4, x1, x2)

inst_99889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30001fffffffff; valaddr_reg:x3; val_offset:299667*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299667*0 + 3*49*FLEN/8, x4, x1, x2)

inst_99890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30003fffffffff; valaddr_reg:x3; val_offset:299670*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299670*0 + 3*50*FLEN/8, x4, x1, x2)

inst_99891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30007fffffffff; valaddr_reg:x3; val_offset:299673*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299673*0 + 3*51*FLEN/8, x4, x1, x2)

inst_99892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3000ffffffffff; valaddr_reg:x3; val_offset:299676*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299676*0 + 3*52*FLEN/8, x4, x1, x2)

inst_99893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3001ffffffffff; valaddr_reg:x3; val_offset:299679*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299679*0 + 3*53*FLEN/8, x4, x1, x2)

inst_99894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3003ffffffffff; valaddr_reg:x3; val_offset:299682*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299682*0 + 3*54*FLEN/8, x4, x1, x2)

inst_99895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3007ffffffffff; valaddr_reg:x3; val_offset:299685*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299685*0 + 3*55*FLEN/8, x4, x1, x2)

inst_99896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba300fffffffffff; valaddr_reg:x3; val_offset:299688*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299688*0 + 3*56*FLEN/8, x4, x1, x2)

inst_99897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba301fffffffffff; valaddr_reg:x3; val_offset:299691*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299691*0 + 3*57*FLEN/8, x4, x1, x2)

inst_99898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba303fffffffffff; valaddr_reg:x3; val_offset:299694*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299694*0 + 3*58*FLEN/8, x4, x1, x2)

inst_99899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba307fffffffffff; valaddr_reg:x3; val_offset:299697*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299697*0 + 3*59*FLEN/8, x4, x1, x2)

inst_99900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba30ffffffffffff; valaddr_reg:x3; val_offset:299700*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299700*0 + 3*60*FLEN/8, x4, x1, x2)

inst_99901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba31ffffffffffff; valaddr_reg:x3; val_offset:299703*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299703*0 + 3*61*FLEN/8, x4, x1, x2)

inst_99902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba33ffffffffffff; valaddr_reg:x3; val_offset:299706*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299706*0 + 3*62*FLEN/8, x4, x1, x2)

inst_99903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba37ffffffffffff; valaddr_reg:x3; val_offset:299709*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299709*0 + 3*63*FLEN/8, x4, x1, x2)

inst_99904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba38000000000000; valaddr_reg:x3; val_offset:299712*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299712*0 + 3*64*FLEN/8, x4, x1, x2)

inst_99905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3c000000000000; valaddr_reg:x3; val_offset:299715*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299715*0 + 3*65*FLEN/8, x4, x1, x2)

inst_99906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3e000000000000; valaddr_reg:x3; val_offset:299718*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299718*0 + 3*66*FLEN/8, x4, x1, x2)

inst_99907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3f000000000000; valaddr_reg:x3; val_offset:299721*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299721*0 + 3*67*FLEN/8, x4, x1, x2)

inst_99908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3f800000000000; valaddr_reg:x3; val_offset:299724*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299724*0 + 3*68*FLEN/8, x4, x1, x2)

inst_99909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fc00000000000; valaddr_reg:x3; val_offset:299727*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299727*0 + 3*69*FLEN/8, x4, x1, x2)

inst_99910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fe00000000000; valaddr_reg:x3; val_offset:299730*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299730*0 + 3*70*FLEN/8, x4, x1, x2)

inst_99911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ff00000000000; valaddr_reg:x3; val_offset:299733*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299733*0 + 3*71*FLEN/8, x4, x1, x2)

inst_99912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ff80000000000; valaddr_reg:x3; val_offset:299736*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299736*0 + 3*72*FLEN/8, x4, x1, x2)

inst_99913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffc0000000000; valaddr_reg:x3; val_offset:299739*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299739*0 + 3*73*FLEN/8, x4, x1, x2)

inst_99914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffe0000000000; valaddr_reg:x3; val_offset:299742*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299742*0 + 3*74*FLEN/8, x4, x1, x2)

inst_99915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fff0000000000; valaddr_reg:x3; val_offset:299745*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299745*0 + 3*75*FLEN/8, x4, x1, x2)

inst_99916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fff8000000000; valaddr_reg:x3; val_offset:299748*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299748*0 + 3*76*FLEN/8, x4, x1, x2)

inst_99917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffc000000000; valaddr_reg:x3; val_offset:299751*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299751*0 + 3*77*FLEN/8, x4, x1, x2)

inst_99918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffe000000000; valaddr_reg:x3; val_offset:299754*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299754*0 + 3*78*FLEN/8, x4, x1, x2)

inst_99919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffff000000000; valaddr_reg:x3; val_offset:299757*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299757*0 + 3*79*FLEN/8, x4, x1, x2)

inst_99920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffff800000000; valaddr_reg:x3; val_offset:299760*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299760*0 + 3*80*FLEN/8, x4, x1, x2)

inst_99921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffc00000000; valaddr_reg:x3; val_offset:299763*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299763*0 + 3*81*FLEN/8, x4, x1, x2)

inst_99922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffe00000000; valaddr_reg:x3; val_offset:299766*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299766*0 + 3*82*FLEN/8, x4, x1, x2)

inst_99923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffff00000000; valaddr_reg:x3; val_offset:299769*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299769*0 + 3*83*FLEN/8, x4, x1, x2)

inst_99924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffff80000000; valaddr_reg:x3; val_offset:299772*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299772*0 + 3*84*FLEN/8, x4, x1, x2)

inst_99925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffc0000000; valaddr_reg:x3; val_offset:299775*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299775*0 + 3*85*FLEN/8, x4, x1, x2)

inst_99926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffe0000000; valaddr_reg:x3; val_offset:299778*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299778*0 + 3*86*FLEN/8, x4, x1, x2)

inst_99927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffff0000000; valaddr_reg:x3; val_offset:299781*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299781*0 + 3*87*FLEN/8, x4, x1, x2)

inst_99928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffff8000000; valaddr_reg:x3; val_offset:299784*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299784*0 + 3*88*FLEN/8, x4, x1, x2)

inst_99929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffc000000; valaddr_reg:x3; val_offset:299787*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299787*0 + 3*89*FLEN/8, x4, x1, x2)

inst_99930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffe000000; valaddr_reg:x3; val_offset:299790*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299790*0 + 3*90*FLEN/8, x4, x1, x2)

inst_99931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffff000000; valaddr_reg:x3; val_offset:299793*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299793*0 + 3*91*FLEN/8, x4, x1, x2)

inst_99932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffff800000; valaddr_reg:x3; val_offset:299796*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299796*0 + 3*92*FLEN/8, x4, x1, x2)

inst_99933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffffc00000; valaddr_reg:x3; val_offset:299799*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299799*0 + 3*93*FLEN/8, x4, x1, x2)

inst_99934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffffe00000; valaddr_reg:x3; val_offset:299802*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299802*0 + 3*94*FLEN/8, x4, x1, x2)

inst_99935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffff00000; valaddr_reg:x3; val_offset:299805*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299805*0 + 3*95*FLEN/8, x4, x1, x2)

inst_99936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffff80000; valaddr_reg:x3; val_offset:299808*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299808*0 + 3*96*FLEN/8, x4, x1, x2)

inst_99937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffffc0000; valaddr_reg:x3; val_offset:299811*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299811*0 + 3*97*FLEN/8, x4, x1, x2)

inst_99938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffffe0000; valaddr_reg:x3; val_offset:299814*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299814*0 + 3*98*FLEN/8, x4, x1, x2)

inst_99939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffffff0000; valaddr_reg:x3; val_offset:299817*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299817*0 + 3*99*FLEN/8, x4, x1, x2)

inst_99940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffffff8000; valaddr_reg:x3; val_offset:299820*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299820*0 + 3*100*FLEN/8, x4, x1, x2)

inst_99941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffffffc000; valaddr_reg:x3; val_offset:299823*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299823*0 + 3*101*FLEN/8, x4, x1, x2)

inst_99942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffffffe000; valaddr_reg:x3; val_offset:299826*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299826*0 + 3*102*FLEN/8, x4, x1, x2)

inst_99943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffffff000; valaddr_reg:x3; val_offset:299829*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299829*0 + 3*103*FLEN/8, x4, x1, x2)

inst_99944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffffff800; valaddr_reg:x3; val_offset:299832*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299832*0 + 3*104*FLEN/8, x4, x1, x2)

inst_99945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffffffc00; valaddr_reg:x3; val_offset:299835*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299835*0 + 3*105*FLEN/8, x4, x1, x2)

inst_99946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffffffe00; valaddr_reg:x3; val_offset:299838*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299838*0 + 3*106*FLEN/8, x4, x1, x2)

inst_99947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffffffff00; valaddr_reg:x3; val_offset:299841*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299841*0 + 3*107*FLEN/8, x4, x1, x2)

inst_99948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffffffff80; valaddr_reg:x3; val_offset:299844*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299844*0 + 3*108*FLEN/8, x4, x1, x2)

inst_99949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffffffffc0; valaddr_reg:x3; val_offset:299847*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299847*0 + 3*109*FLEN/8, x4, x1, x2)

inst_99950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffffffffe0; valaddr_reg:x3; val_offset:299850*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299850*0 + 3*110*FLEN/8, x4, x1, x2)

inst_99951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffffffff0; valaddr_reg:x3; val_offset:299853*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299853*0 + 3*111*FLEN/8, x4, x1, x2)

inst_99952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffffffff8; valaddr_reg:x3; val_offset:299856*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299856*0 + 3*112*FLEN/8, x4, x1, x2)

inst_99953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffffffffc; valaddr_reg:x3; val_offset:299859*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299859*0 + 3*113*FLEN/8, x4, x1, x2)

inst_99954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3ffffffffffffe; valaddr_reg:x3; val_offset:299862*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299862*0 + 3*114*FLEN/8, x4, x1, x2)

inst_99955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xba3fffffffffffff; valaddr_reg:x3; val_offset:299865*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299865*0 + 3*115*FLEN/8, x4, x1, x2)

inst_99956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:299868*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299868*0 + 3*116*FLEN/8, x4, x1, x2)

inst_99957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:299871*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299871*0 + 3*117*FLEN/8, x4, x1, x2)

inst_99958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:299874*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299874*0 + 3*118*FLEN/8, x4, x1, x2)

inst_99959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:299877*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299877*0 + 3*119*FLEN/8, x4, x1, x2)

inst_99960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:299880*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299880*0 + 3*120*FLEN/8, x4, x1, x2)

inst_99961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:299883*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299883*0 + 3*121*FLEN/8, x4, x1, x2)

inst_99962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:299886*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299886*0 + 3*122*FLEN/8, x4, x1, x2)

inst_99963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:299889*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299889*0 + 3*123*FLEN/8, x4, x1, x2)

inst_99964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:299892*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299892*0 + 3*124*FLEN/8, x4, x1, x2)

inst_99965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:299895*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299895*0 + 3*125*FLEN/8, x4, x1, x2)

inst_99966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:299898*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299898*0 + 3*126*FLEN/8, x4, x1, x2)

inst_99967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:299901*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299901*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_99968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:299904*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299904*0 + 3*128*FLEN/8, x4, x1, x2)

inst_99969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:299907*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299907*0 + 3*129*FLEN/8, x4, x1, x2)

inst_99970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:299910*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299910*0 + 3*130*FLEN/8, x4, x1, x2)

inst_99971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:299913*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299913*0 + 3*131*FLEN/8, x4, x1, x2)

inst_99972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:299916*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299916*0 + 3*132*FLEN/8, x4, x1, x2)

inst_99973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:299919*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299919*0 + 3*133*FLEN/8, x4, x1, x2)

inst_99974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:299922*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299922*0 + 3*134*FLEN/8, x4, x1, x2)

inst_99975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:299925*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299925*0 + 3*135*FLEN/8, x4, x1, x2)

inst_99976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:299928*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299928*0 + 3*136*FLEN/8, x4, x1, x2)

inst_99977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf45805f86144b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x05f6bf0340cf4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf45805f86144b; op2val:0x9fc05f6bf0340cf4;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:299931*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299931*0 + 3*137*FLEN/8, x4, x1, x2)

inst_99978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:299934*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299934*0 + 3*138*FLEN/8, x4, x1, x2)

inst_99979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:299937*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299937*0 + 3*139*FLEN/8, x4, x1, x2)

inst_99980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:299940*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299940*0 + 3*140*FLEN/8, x4, x1, x2)

inst_99981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:299943*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299943*0 + 3*141*FLEN/8, x4, x1, x2)

inst_99982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:299946*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299946*0 + 3*142*FLEN/8, x4, x1, x2)

inst_99983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:299949*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299949*0 + 3*143*FLEN/8, x4, x1, x2)

inst_99984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:299952*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299952*0 + 3*144*FLEN/8, x4, x1, x2)

inst_99985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:299955*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299955*0 + 3*145*FLEN/8, x4, x1, x2)

inst_99986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:299958*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299958*0 + 3*146*FLEN/8, x4, x1, x2)

inst_99987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:299961*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299961*0 + 3*147*FLEN/8, x4, x1, x2)

inst_99988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:299964*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299964*0 + 3*148*FLEN/8, x4, x1, x2)

inst_99989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:299967*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299967*0 + 3*149*FLEN/8, x4, x1, x2)

inst_99990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:299970*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299970*0 + 3*150*FLEN/8, x4, x1, x2)

inst_99991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:299973*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299973*0 + 3*151*FLEN/8, x4, x1, x2)

inst_99992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:299976*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299976*0 + 3*152*FLEN/8, x4, x1, x2)

inst_99993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:299979*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299979*0 + 3*153*FLEN/8, x4, x1, x2)

inst_99994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:299982*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299982*0 + 3*154*FLEN/8, x4, x1, x2)

inst_99995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:299985*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299985*0 + 3*155*FLEN/8, x4, x1, x2)

inst_99996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:299988*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299988*0 + 3*156*FLEN/8, x4, x1, x2)

inst_99997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:299991*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299991*0 + 3*157*FLEN/8, x4, x1, x2)

inst_99998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:299994*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299994*0 + 3*158*FLEN/8, x4, x1, x2)

inst_99999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:299997*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299997*0 + 3*159*FLEN/8, x4, x1, x2)

inst_100000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000000000000; valaddr_reg:x3; val_offset:300000*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300000*0 + 3*160*FLEN/8, x4, x1, x2)

inst_100001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000000000001; valaddr_reg:x3; val_offset:300003*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300003*0 + 3*161*FLEN/8, x4, x1, x2)

inst_100002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000000000003; valaddr_reg:x3; val_offset:300006*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300006*0 + 3*162*FLEN/8, x4, x1, x2)

inst_100003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000000000007; valaddr_reg:x3; val_offset:300009*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300009*0 + 3*163*FLEN/8, x4, x1, x2)

inst_100004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000000000000f; valaddr_reg:x3; val_offset:300012*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300012*0 + 3*164*FLEN/8, x4, x1, x2)

inst_100005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000000000001f; valaddr_reg:x3; val_offset:300015*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300015*0 + 3*165*FLEN/8, x4, x1, x2)

inst_100006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000000000003f; valaddr_reg:x3; val_offset:300018*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300018*0 + 3*166*FLEN/8, x4, x1, x2)

inst_100007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000000000007f; valaddr_reg:x3; val_offset:300021*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300021*0 + 3*167*FLEN/8, x4, x1, x2)

inst_100008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800000000000ff; valaddr_reg:x3; val_offset:300024*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300024*0 + 3*168*FLEN/8, x4, x1, x2)

inst_100009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800000000001ff; valaddr_reg:x3; val_offset:300027*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300027*0 + 3*169*FLEN/8, x4, x1, x2)

inst_100010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800000000003ff; valaddr_reg:x3; val_offset:300030*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300030*0 + 3*170*FLEN/8, x4, x1, x2)

inst_100011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800000000007ff; valaddr_reg:x3; val_offset:300033*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300033*0 + 3*171*FLEN/8, x4, x1, x2)

inst_100012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000000000fff; valaddr_reg:x3; val_offset:300036*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300036*0 + 3*172*FLEN/8, x4, x1, x2)

inst_100013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000000001fff; valaddr_reg:x3; val_offset:300039*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300039*0 + 3*173*FLEN/8, x4, x1, x2)

inst_100014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000000003fff; valaddr_reg:x3; val_offset:300042*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300042*0 + 3*174*FLEN/8, x4, x1, x2)

inst_100015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000000007fff; valaddr_reg:x3; val_offset:300045*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300045*0 + 3*175*FLEN/8, x4, x1, x2)

inst_100016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000000000ffff; valaddr_reg:x3; val_offset:300048*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300048*0 + 3*176*FLEN/8, x4, x1, x2)

inst_100017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000000001ffff; valaddr_reg:x3; val_offset:300051*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300051*0 + 3*177*FLEN/8, x4, x1, x2)

inst_100018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000000003ffff; valaddr_reg:x3; val_offset:300054*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300054*0 + 3*178*FLEN/8, x4, x1, x2)

inst_100019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000000007ffff; valaddr_reg:x3; val_offset:300057*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300057*0 + 3*179*FLEN/8, x4, x1, x2)

inst_100020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800000000fffff; valaddr_reg:x3; val_offset:300060*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300060*0 + 3*180*FLEN/8, x4, x1, x2)

inst_100021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800000001fffff; valaddr_reg:x3; val_offset:300063*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300063*0 + 3*181*FLEN/8, x4, x1, x2)

inst_100022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800000003fffff; valaddr_reg:x3; val_offset:300066*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300066*0 + 3*182*FLEN/8, x4, x1, x2)

inst_100023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800000007fffff; valaddr_reg:x3; val_offset:300069*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300069*0 + 3*183*FLEN/8, x4, x1, x2)

inst_100024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000000ffffff; valaddr_reg:x3; val_offset:300072*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300072*0 + 3*184*FLEN/8, x4, x1, x2)

inst_100025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000001ffffff; valaddr_reg:x3; val_offset:300075*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300075*0 + 3*185*FLEN/8, x4, x1, x2)

inst_100026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000003ffffff; valaddr_reg:x3; val_offset:300078*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300078*0 + 3*186*FLEN/8, x4, x1, x2)

inst_100027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000007ffffff; valaddr_reg:x3; val_offset:300081*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300081*0 + 3*187*FLEN/8, x4, x1, x2)

inst_100028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000000fffffff; valaddr_reg:x3; val_offset:300084*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300084*0 + 3*188*FLEN/8, x4, x1, x2)

inst_100029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000001fffffff; valaddr_reg:x3; val_offset:300087*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300087*0 + 3*189*FLEN/8, x4, x1, x2)

inst_100030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000003fffffff; valaddr_reg:x3; val_offset:300090*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300090*0 + 3*190*FLEN/8, x4, x1, x2)

inst_100031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000007fffffff; valaddr_reg:x3; val_offset:300093*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300093*0 + 3*191*FLEN/8, x4, x1, x2)

inst_100032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800000ffffffff; valaddr_reg:x3; val_offset:300096*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300096*0 + 3*192*FLEN/8, x4, x1, x2)

inst_100033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800001ffffffff; valaddr_reg:x3; val_offset:300099*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300099*0 + 3*193*FLEN/8, x4, x1, x2)

inst_100034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800003ffffffff; valaddr_reg:x3; val_offset:300102*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300102*0 + 3*194*FLEN/8, x4, x1, x2)

inst_100035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800007ffffffff; valaddr_reg:x3; val_offset:300105*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300105*0 + 3*195*FLEN/8, x4, x1, x2)

inst_100036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280000fffffffff; valaddr_reg:x3; val_offset:300108*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300108*0 + 3*196*FLEN/8, x4, x1, x2)

inst_100037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280001fffffffff; valaddr_reg:x3; val_offset:300111*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300111*0 + 3*197*FLEN/8, x4, x1, x2)

inst_100038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280003fffffffff; valaddr_reg:x3; val_offset:300114*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300114*0 + 3*198*FLEN/8, x4, x1, x2)

inst_100039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280007fffffffff; valaddr_reg:x3; val_offset:300117*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300117*0 + 3*199*FLEN/8, x4, x1, x2)

inst_100040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28000ffffffffff; valaddr_reg:x3; val_offset:300120*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300120*0 + 3*200*FLEN/8, x4, x1, x2)

inst_100041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28001ffffffffff; valaddr_reg:x3; val_offset:300123*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300123*0 + 3*201*FLEN/8, x4, x1, x2)

inst_100042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28003ffffffffff; valaddr_reg:x3; val_offset:300126*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300126*0 + 3*202*FLEN/8, x4, x1, x2)

inst_100043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28007ffffffffff; valaddr_reg:x3; val_offset:300129*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300129*0 + 3*203*FLEN/8, x4, x1, x2)

inst_100044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2800fffffffffff; valaddr_reg:x3; val_offset:300132*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300132*0 + 3*204*FLEN/8, x4, x1, x2)

inst_100045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2801fffffffffff; valaddr_reg:x3; val_offset:300135*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300135*0 + 3*205*FLEN/8, x4, x1, x2)

inst_100046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2803fffffffffff; valaddr_reg:x3; val_offset:300138*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300138*0 + 3*206*FLEN/8, x4, x1, x2)

inst_100047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x2807fffffffffff; valaddr_reg:x3; val_offset:300141*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300141*0 + 3*207*FLEN/8, x4, x1, x2)

inst_100048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x280ffffffffffff; valaddr_reg:x3; val_offset:300144*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300144*0 + 3*208*FLEN/8, x4, x1, x2)

inst_100049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x281ffffffffffff; valaddr_reg:x3; val_offset:300147*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300147*0 + 3*209*FLEN/8, x4, x1, x2)

inst_100050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x283ffffffffffff; valaddr_reg:x3; val_offset:300150*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300150*0 + 3*210*FLEN/8, x4, x1, x2)

inst_100051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x287ffffffffffff; valaddr_reg:x3; val_offset:300153*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300153*0 + 3*211*FLEN/8, x4, x1, x2)

inst_100052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x288000000000000; valaddr_reg:x3; val_offset:300156*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300156*0 + 3*212*FLEN/8, x4, x1, x2)

inst_100053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28c000000000000; valaddr_reg:x3; val_offset:300159*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300159*0 + 3*213*FLEN/8, x4, x1, x2)

inst_100054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28e000000000000; valaddr_reg:x3; val_offset:300162*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300162*0 + 3*214*FLEN/8, x4, x1, x2)

inst_100055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28f000000000000; valaddr_reg:x3; val_offset:300165*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300165*0 + 3*215*FLEN/8, x4, x1, x2)

inst_100056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28f800000000000; valaddr_reg:x3; val_offset:300168*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300168*0 + 3*216*FLEN/8, x4, x1, x2)

inst_100057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fc00000000000; valaddr_reg:x3; val_offset:300171*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300171*0 + 3*217*FLEN/8, x4, x1, x2)

inst_100058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fe00000000000; valaddr_reg:x3; val_offset:300174*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300174*0 + 3*218*FLEN/8, x4, x1, x2)

inst_100059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ff00000000000; valaddr_reg:x3; val_offset:300177*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300177*0 + 3*219*FLEN/8, x4, x1, x2)

inst_100060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ff80000000000; valaddr_reg:x3; val_offset:300180*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300180*0 + 3*220*FLEN/8, x4, x1, x2)

inst_100061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffc0000000000; valaddr_reg:x3; val_offset:300183*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300183*0 + 3*221*FLEN/8, x4, x1, x2)

inst_100062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffe0000000000; valaddr_reg:x3; val_offset:300186*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300186*0 + 3*222*FLEN/8, x4, x1, x2)

inst_100063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fff0000000000; valaddr_reg:x3; val_offset:300189*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300189*0 + 3*223*FLEN/8, x4, x1, x2)

inst_100064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fff8000000000; valaddr_reg:x3; val_offset:300192*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300192*0 + 3*224*FLEN/8, x4, x1, x2)

inst_100065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffc000000000; valaddr_reg:x3; val_offset:300195*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300195*0 + 3*225*FLEN/8, x4, x1, x2)

inst_100066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffe000000000; valaddr_reg:x3; val_offset:300198*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300198*0 + 3*226*FLEN/8, x4, x1, x2)

inst_100067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffff000000000; valaddr_reg:x3; val_offset:300201*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300201*0 + 3*227*FLEN/8, x4, x1, x2)

inst_100068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffff800000000; valaddr_reg:x3; val_offset:300204*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300204*0 + 3*228*FLEN/8, x4, x1, x2)

inst_100069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffc00000000; valaddr_reg:x3; val_offset:300207*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300207*0 + 3*229*FLEN/8, x4, x1, x2)

inst_100070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffe00000000; valaddr_reg:x3; val_offset:300210*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300210*0 + 3*230*FLEN/8, x4, x1, x2)

inst_100071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffff00000000; valaddr_reg:x3; val_offset:300213*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300213*0 + 3*231*FLEN/8, x4, x1, x2)

inst_100072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffff80000000; valaddr_reg:x3; val_offset:300216*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300216*0 + 3*232*FLEN/8, x4, x1, x2)

inst_100073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffc0000000; valaddr_reg:x3; val_offset:300219*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300219*0 + 3*233*FLEN/8, x4, x1, x2)

inst_100074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffe0000000; valaddr_reg:x3; val_offset:300222*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300222*0 + 3*234*FLEN/8, x4, x1, x2)

inst_100075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffff0000000; valaddr_reg:x3; val_offset:300225*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300225*0 + 3*235*FLEN/8, x4, x1, x2)

inst_100076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffff8000000; valaddr_reg:x3; val_offset:300228*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300228*0 + 3*236*FLEN/8, x4, x1, x2)

inst_100077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffc000000; valaddr_reg:x3; val_offset:300231*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300231*0 + 3*237*FLEN/8, x4, x1, x2)

inst_100078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffe000000; valaddr_reg:x3; val_offset:300234*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300234*0 + 3*238*FLEN/8, x4, x1, x2)

inst_100079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffff000000; valaddr_reg:x3; val_offset:300237*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300237*0 + 3*239*FLEN/8, x4, x1, x2)

inst_100080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffff800000; valaddr_reg:x3; val_offset:300240*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300240*0 + 3*240*FLEN/8, x4, x1, x2)

inst_100081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffffc00000; valaddr_reg:x3; val_offset:300243*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300243*0 + 3*241*FLEN/8, x4, x1, x2)

inst_100082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffffe00000; valaddr_reg:x3; val_offset:300246*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300246*0 + 3*242*FLEN/8, x4, x1, x2)

inst_100083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffff00000; valaddr_reg:x3; val_offset:300249*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300249*0 + 3*243*FLEN/8, x4, x1, x2)

inst_100084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffff80000; valaddr_reg:x3; val_offset:300252*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300252*0 + 3*244*FLEN/8, x4, x1, x2)

inst_100085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffffc0000; valaddr_reg:x3; val_offset:300255*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300255*0 + 3*245*FLEN/8, x4, x1, x2)

inst_100086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffffe0000; valaddr_reg:x3; val_offset:300258*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300258*0 + 3*246*FLEN/8, x4, x1, x2)

inst_100087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffffff0000; valaddr_reg:x3; val_offset:300261*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300261*0 + 3*247*FLEN/8, x4, x1, x2)

inst_100088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffffff8000; valaddr_reg:x3; val_offset:300264*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300264*0 + 3*248*FLEN/8, x4, x1, x2)

inst_100089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffffffc000; valaddr_reg:x3; val_offset:300267*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300267*0 + 3*249*FLEN/8, x4, x1, x2)

inst_100090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffffffe000; valaddr_reg:x3; val_offset:300270*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300270*0 + 3*250*FLEN/8, x4, x1, x2)

inst_100091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffffff000; valaddr_reg:x3; val_offset:300273*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300273*0 + 3*251*FLEN/8, x4, x1, x2)

inst_100092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffffff800; valaddr_reg:x3; val_offset:300276*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300276*0 + 3*252*FLEN/8, x4, x1, x2)

inst_100093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffffffc00; valaddr_reg:x3; val_offset:300279*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300279*0 + 3*253*FLEN/8, x4, x1, x2)

inst_100094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffffffe00; valaddr_reg:x3; val_offset:300282*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300282*0 + 3*254*FLEN/8, x4, x1, x2)

inst_100095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffffffff00; valaddr_reg:x3; val_offset:300285*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300285*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_100096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffffffff80; valaddr_reg:x3; val_offset:300288*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300288*0 + 3*256*FLEN/8, x4, x1, x2)

inst_100097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffffffffc0; valaddr_reg:x3; val_offset:300291*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300291*0 + 3*257*FLEN/8, x4, x1, x2)

inst_100098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffffffffe0; valaddr_reg:x3; val_offset:300294*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300294*0 + 3*258*FLEN/8, x4, x1, x2)

inst_100099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffffffff0; valaddr_reg:x3; val_offset:300297*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300297*0 + 3*259*FLEN/8, x4, x1, x2)

inst_100100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffffffff8; valaddr_reg:x3; val_offset:300300*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300300*0 + 3*260*FLEN/8, x4, x1, x2)

inst_100101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffffffffc; valaddr_reg:x3; val_offset:300303*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300303*0 + 3*261*FLEN/8, x4, x1, x2)

inst_100102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28ffffffffffffe; valaddr_reg:x3; val_offset:300306*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300306*0 + 3*262*FLEN/8, x4, x1, x2)

inst_100103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf6428fb6f94fe; op2val:0x0;
op3val:0x28fffffffffffff; valaddr_reg:x3; val_offset:300309*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300309*0 + 3*263*FLEN/8, x4, x1, x2)

inst_100104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000000000000; valaddr_reg:x3; val_offset:300312*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300312*0 + 3*264*FLEN/8, x4, x1, x2)

inst_100105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000000000001; valaddr_reg:x3; val_offset:300315*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300315*0 + 3*265*FLEN/8, x4, x1, x2)

inst_100106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000000000003; valaddr_reg:x3; val_offset:300318*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300318*0 + 3*266*FLEN/8, x4, x1, x2)

inst_100107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000000000007; valaddr_reg:x3; val_offset:300321*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300321*0 + 3*267*FLEN/8, x4, x1, x2)

inst_100108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000000000000f; valaddr_reg:x3; val_offset:300324*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300324*0 + 3*268*FLEN/8, x4, x1, x2)

inst_100109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000000000001f; valaddr_reg:x3; val_offset:300327*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300327*0 + 3*269*FLEN/8, x4, x1, x2)

inst_100110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000000000003f; valaddr_reg:x3; val_offset:300330*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300330*0 + 3*270*FLEN/8, x4, x1, x2)

inst_100111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000000000007f; valaddr_reg:x3; val_offset:300333*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300333*0 + 3*271*FLEN/8, x4, x1, x2)

inst_100112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100000000000ff; valaddr_reg:x3; val_offset:300336*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300336*0 + 3*272*FLEN/8, x4, x1, x2)

inst_100113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100000000001ff; valaddr_reg:x3; val_offset:300339*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300339*0 + 3*273*FLEN/8, x4, x1, x2)

inst_100114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100000000003ff; valaddr_reg:x3; val_offset:300342*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300342*0 + 3*274*FLEN/8, x4, x1, x2)

inst_100115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100000000007ff; valaddr_reg:x3; val_offset:300345*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300345*0 + 3*275*FLEN/8, x4, x1, x2)

inst_100116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000000000fff; valaddr_reg:x3; val_offset:300348*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300348*0 + 3*276*FLEN/8, x4, x1, x2)

inst_100117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000000001fff; valaddr_reg:x3; val_offset:300351*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300351*0 + 3*277*FLEN/8, x4, x1, x2)

inst_100118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000000003fff; valaddr_reg:x3; val_offset:300354*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300354*0 + 3*278*FLEN/8, x4, x1, x2)

inst_100119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000000007fff; valaddr_reg:x3; val_offset:300357*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300357*0 + 3*279*FLEN/8, x4, x1, x2)

inst_100120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000000000ffff; valaddr_reg:x3; val_offset:300360*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300360*0 + 3*280*FLEN/8, x4, x1, x2)

inst_100121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000000001ffff; valaddr_reg:x3; val_offset:300363*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300363*0 + 3*281*FLEN/8, x4, x1, x2)

inst_100122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000000003ffff; valaddr_reg:x3; val_offset:300366*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300366*0 + 3*282*FLEN/8, x4, x1, x2)

inst_100123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000000007ffff; valaddr_reg:x3; val_offset:300369*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300369*0 + 3*283*FLEN/8, x4, x1, x2)

inst_100124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100000000fffff; valaddr_reg:x3; val_offset:300372*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300372*0 + 3*284*FLEN/8, x4, x1, x2)

inst_100125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100000001fffff; valaddr_reg:x3; val_offset:300375*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300375*0 + 3*285*FLEN/8, x4, x1, x2)

inst_100126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100000003fffff; valaddr_reg:x3; val_offset:300378*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300378*0 + 3*286*FLEN/8, x4, x1, x2)

inst_100127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100000007fffff; valaddr_reg:x3; val_offset:300381*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300381*0 + 3*287*FLEN/8, x4, x1, x2)

inst_100128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000000ffffff; valaddr_reg:x3; val_offset:300384*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300384*0 + 3*288*FLEN/8, x4, x1, x2)

inst_100129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000001ffffff; valaddr_reg:x3; val_offset:300387*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300387*0 + 3*289*FLEN/8, x4, x1, x2)

inst_100130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000003ffffff; valaddr_reg:x3; val_offset:300390*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300390*0 + 3*290*FLEN/8, x4, x1, x2)

inst_100131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000007ffffff; valaddr_reg:x3; val_offset:300393*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300393*0 + 3*291*FLEN/8, x4, x1, x2)

inst_100132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000000fffffff; valaddr_reg:x3; val_offset:300396*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300396*0 + 3*292*FLEN/8, x4, x1, x2)

inst_100133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000001fffffff; valaddr_reg:x3; val_offset:300399*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300399*0 + 3*293*FLEN/8, x4, x1, x2)

inst_100134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000003fffffff; valaddr_reg:x3; val_offset:300402*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300402*0 + 3*294*FLEN/8, x4, x1, x2)

inst_100135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000007fffffff; valaddr_reg:x3; val_offset:300405*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300405*0 + 3*295*FLEN/8, x4, x1, x2)

inst_100136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100000ffffffff; valaddr_reg:x3; val_offset:300408*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300408*0 + 3*296*FLEN/8, x4, x1, x2)

inst_100137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100001ffffffff; valaddr_reg:x3; val_offset:300411*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300411*0 + 3*297*FLEN/8, x4, x1, x2)

inst_100138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100003ffffffff; valaddr_reg:x3; val_offset:300414*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300414*0 + 3*298*FLEN/8, x4, x1, x2)

inst_100139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100007ffffffff; valaddr_reg:x3; val_offset:300417*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300417*0 + 3*299*FLEN/8, x4, x1, x2)

inst_100140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910000fffffffff; valaddr_reg:x3; val_offset:300420*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300420*0 + 3*300*FLEN/8, x4, x1, x2)

inst_100141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910001fffffffff; valaddr_reg:x3; val_offset:300423*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300423*0 + 3*301*FLEN/8, x4, x1, x2)

inst_100142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910003fffffffff; valaddr_reg:x3; val_offset:300426*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300426*0 + 3*302*FLEN/8, x4, x1, x2)

inst_100143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910007fffffffff; valaddr_reg:x3; val_offset:300429*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300429*0 + 3*303*FLEN/8, x4, x1, x2)

inst_100144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391000ffffffffff; valaddr_reg:x3; val_offset:300432*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300432*0 + 3*304*FLEN/8, x4, x1, x2)

inst_100145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391001ffffffffff; valaddr_reg:x3; val_offset:300435*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300435*0 + 3*305*FLEN/8, x4, x1, x2)

inst_100146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391003ffffffffff; valaddr_reg:x3; val_offset:300438*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300438*0 + 3*306*FLEN/8, x4, x1, x2)

inst_100147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391007ffffffffff; valaddr_reg:x3; val_offset:300441*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300441*0 + 3*307*FLEN/8, x4, x1, x2)

inst_100148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39100fffffffffff; valaddr_reg:x3; val_offset:300444*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300444*0 + 3*308*FLEN/8, x4, x1, x2)

inst_100149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39101fffffffffff; valaddr_reg:x3; val_offset:300447*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300447*0 + 3*309*FLEN/8, x4, x1, x2)

inst_100150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39103fffffffffff; valaddr_reg:x3; val_offset:300450*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300450*0 + 3*310*FLEN/8, x4, x1, x2)

inst_100151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x39107fffffffffff; valaddr_reg:x3; val_offset:300453*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300453*0 + 3*311*FLEN/8, x4, x1, x2)

inst_100152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3910ffffffffffff; valaddr_reg:x3; val_offset:300456*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300456*0 + 3*312*FLEN/8, x4, x1, x2)

inst_100153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3911ffffffffffff; valaddr_reg:x3; val_offset:300459*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300459*0 + 3*313*FLEN/8, x4, x1, x2)

inst_100154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3913ffffffffffff; valaddr_reg:x3; val_offset:300462*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300462*0 + 3*314*FLEN/8, x4, x1, x2)

inst_100155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3917ffffffffffff; valaddr_reg:x3; val_offset:300465*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300465*0 + 3*315*FLEN/8, x4, x1, x2)

inst_100156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3918000000000000; valaddr_reg:x3; val_offset:300468*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300468*0 + 3*316*FLEN/8, x4, x1, x2)

inst_100157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391c000000000000; valaddr_reg:x3; val_offset:300471*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300471*0 + 3*317*FLEN/8, x4, x1, x2)

inst_100158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391e000000000000; valaddr_reg:x3; val_offset:300474*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300474*0 + 3*318*FLEN/8, x4, x1, x2)

inst_100159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391f000000000000; valaddr_reg:x3; val_offset:300477*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300477*0 + 3*319*FLEN/8, x4, x1, x2)

inst_100160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391f800000000000; valaddr_reg:x3; val_offset:300480*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300480*0 + 3*320*FLEN/8, x4, x1, x2)

inst_100161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fc00000000000; valaddr_reg:x3; val_offset:300483*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300483*0 + 3*321*FLEN/8, x4, x1, x2)

inst_100162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fe00000000000; valaddr_reg:x3; val_offset:300486*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300486*0 + 3*322*FLEN/8, x4, x1, x2)

inst_100163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ff00000000000; valaddr_reg:x3; val_offset:300489*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300489*0 + 3*323*FLEN/8, x4, x1, x2)

inst_100164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ff80000000000; valaddr_reg:x3; val_offset:300492*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300492*0 + 3*324*FLEN/8, x4, x1, x2)

inst_100165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffc0000000000; valaddr_reg:x3; val_offset:300495*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300495*0 + 3*325*FLEN/8, x4, x1, x2)

inst_100166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffe0000000000; valaddr_reg:x3; val_offset:300498*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300498*0 + 3*326*FLEN/8, x4, x1, x2)

inst_100167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fff0000000000; valaddr_reg:x3; val_offset:300501*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300501*0 + 3*327*FLEN/8, x4, x1, x2)

inst_100168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fff8000000000; valaddr_reg:x3; val_offset:300504*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300504*0 + 3*328*FLEN/8, x4, x1, x2)

inst_100169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffc000000000; valaddr_reg:x3; val_offset:300507*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300507*0 + 3*329*FLEN/8, x4, x1, x2)

inst_100170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffe000000000; valaddr_reg:x3; val_offset:300510*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300510*0 + 3*330*FLEN/8, x4, x1, x2)

inst_100171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffff000000000; valaddr_reg:x3; val_offset:300513*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300513*0 + 3*331*FLEN/8, x4, x1, x2)

inst_100172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffff800000000; valaddr_reg:x3; val_offset:300516*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300516*0 + 3*332*FLEN/8, x4, x1, x2)

inst_100173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffc00000000; valaddr_reg:x3; val_offset:300519*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300519*0 + 3*333*FLEN/8, x4, x1, x2)

inst_100174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffe00000000; valaddr_reg:x3; val_offset:300522*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300522*0 + 3*334*FLEN/8, x4, x1, x2)

inst_100175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffff00000000; valaddr_reg:x3; val_offset:300525*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300525*0 + 3*335*FLEN/8, x4, x1, x2)

inst_100176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffff80000000; valaddr_reg:x3; val_offset:300528*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300528*0 + 3*336*FLEN/8, x4, x1, x2)

inst_100177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffc0000000; valaddr_reg:x3; val_offset:300531*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300531*0 + 3*337*FLEN/8, x4, x1, x2)

inst_100178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffe0000000; valaddr_reg:x3; val_offset:300534*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300534*0 + 3*338*FLEN/8, x4, x1, x2)

inst_100179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffff0000000; valaddr_reg:x3; val_offset:300537*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300537*0 + 3*339*FLEN/8, x4, x1, x2)

inst_100180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffff8000000; valaddr_reg:x3; val_offset:300540*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300540*0 + 3*340*FLEN/8, x4, x1, x2)

inst_100181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffc000000; valaddr_reg:x3; val_offset:300543*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300543*0 + 3*341*FLEN/8, x4, x1, x2)

inst_100182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffe000000; valaddr_reg:x3; val_offset:300546*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300546*0 + 3*342*FLEN/8, x4, x1, x2)

inst_100183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffff000000; valaddr_reg:x3; val_offset:300549*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300549*0 + 3*343*FLEN/8, x4, x1, x2)

inst_100184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffff800000; valaddr_reg:x3; val_offset:300552*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300552*0 + 3*344*FLEN/8, x4, x1, x2)

inst_100185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffffc00000; valaddr_reg:x3; val_offset:300555*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300555*0 + 3*345*FLEN/8, x4, x1, x2)

inst_100186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffffe00000; valaddr_reg:x3; val_offset:300558*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300558*0 + 3*346*FLEN/8, x4, x1, x2)

inst_100187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffff00000; valaddr_reg:x3; val_offset:300561*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300561*0 + 3*347*FLEN/8, x4, x1, x2)

inst_100188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffff80000; valaddr_reg:x3; val_offset:300564*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300564*0 + 3*348*FLEN/8, x4, x1, x2)

inst_100189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffffc0000; valaddr_reg:x3; val_offset:300567*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300567*0 + 3*349*FLEN/8, x4, x1, x2)

inst_100190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffffe0000; valaddr_reg:x3; val_offset:300570*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300570*0 + 3*350*FLEN/8, x4, x1, x2)

inst_100191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffffff0000; valaddr_reg:x3; val_offset:300573*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300573*0 + 3*351*FLEN/8, x4, x1, x2)

inst_100192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffffff8000; valaddr_reg:x3; val_offset:300576*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300576*0 + 3*352*FLEN/8, x4, x1, x2)

inst_100193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffffffc000; valaddr_reg:x3; val_offset:300579*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300579*0 + 3*353*FLEN/8, x4, x1, x2)

inst_100194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffffffe000; valaddr_reg:x3; val_offset:300582*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300582*0 + 3*354*FLEN/8, x4, x1, x2)

inst_100195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffffff000; valaddr_reg:x3; val_offset:300585*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300585*0 + 3*355*FLEN/8, x4, x1, x2)

inst_100196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffffff800; valaddr_reg:x3; val_offset:300588*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300588*0 + 3*356*FLEN/8, x4, x1, x2)

inst_100197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffffffc00; valaddr_reg:x3; val_offset:300591*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300591*0 + 3*357*FLEN/8, x4, x1, x2)

inst_100198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffffffe00; valaddr_reg:x3; val_offset:300594*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300594*0 + 3*358*FLEN/8, x4, x1, x2)

inst_100199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffffffff00; valaddr_reg:x3; val_offset:300597*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300597*0 + 3*359*FLEN/8, x4, x1, x2)

inst_100200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffffffff80; valaddr_reg:x3; val_offset:300600*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300600*0 + 3*360*FLEN/8, x4, x1, x2)

inst_100201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffffffffc0; valaddr_reg:x3; val_offset:300603*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300603*0 + 3*361*FLEN/8, x4, x1, x2)

inst_100202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffffffffe0; valaddr_reg:x3; val_offset:300606*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300606*0 + 3*362*FLEN/8, x4, x1, x2)

inst_100203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffffffff0; valaddr_reg:x3; val_offset:300609*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300609*0 + 3*363*FLEN/8, x4, x1, x2)

inst_100204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffffffff8; valaddr_reg:x3; val_offset:300612*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300612*0 + 3*364*FLEN/8, x4, x1, x2)

inst_100205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffffffffc; valaddr_reg:x3; val_offset:300615*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300615*0 + 3*365*FLEN/8, x4, x1, x2)

inst_100206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391ffffffffffffe; valaddr_reg:x3; val_offset:300618*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300618*0 + 3*366*FLEN/8, x4, x1, x2)

inst_100207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x391 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x391fffffffffffff; valaddr_reg:x3; val_offset:300621*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300621*0 + 3*367*FLEN/8, x4, x1, x2)

inst_100208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:300624*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300624*0 + 3*368*FLEN/8, x4, x1, x2)

inst_100209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:300627*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300627*0 + 3*369*FLEN/8, x4, x1, x2)

inst_100210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:300630*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300630*0 + 3*370*FLEN/8, x4, x1, x2)

inst_100211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:300633*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300633*0 + 3*371*FLEN/8, x4, x1, x2)

inst_100212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:300636*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300636*0 + 3*372*FLEN/8, x4, x1, x2)

inst_100213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:300639*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300639*0 + 3*373*FLEN/8, x4, x1, x2)

inst_100214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:300642*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300642*0 + 3*374*FLEN/8, x4, x1, x2)

inst_100215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:300645*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300645*0 + 3*375*FLEN/8, x4, x1, x2)

inst_100216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:300648*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300648*0 + 3*376*FLEN/8, x4, x1, x2)

inst_100217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:300651*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300651*0 + 3*377*FLEN/8, x4, x1, x2)

inst_100218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:300654*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300654*0 + 3*378*FLEN/8, x4, x1, x2)

inst_100219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:300657*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300657*0 + 3*379*FLEN/8, x4, x1, x2)

inst_100220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:300660*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300660*0 + 3*380*FLEN/8, x4, x1, x2)

inst_100221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:300663*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300663*0 + 3*381*FLEN/8, x4, x1, x2)

inst_100222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:300666*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300666*0 + 3*382*FLEN/8, x4, x1, x2)

inst_100223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:300669*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300669*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_100224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:300672*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300672*0 + 3*384*FLEN/8, x4, x1, x2)

inst_100225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:300675*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300675*0 + 3*385*FLEN/8, x4, x1, x2)

inst_100226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:300678*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300678*0 + 3*386*FLEN/8, x4, x1, x2)

inst_100227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:300681*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300681*0 + 3*387*FLEN/8, x4, x1, x2)

inst_100228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:300684*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300684*0 + 3*388*FLEN/8, x4, x1, x2)

inst_100229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044dc867d385b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf788de2d51675; op2val:0x203044dc867d385b;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:300687*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300687*0 + 3*389*FLEN/8, x4, x1, x2)

inst_100230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000000000000; valaddr_reg:x3; val_offset:300690*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300690*0 + 3*390*FLEN/8, x4, x1, x2)

inst_100231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000000000001; valaddr_reg:x3; val_offset:300693*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300693*0 + 3*391*FLEN/8, x4, x1, x2)

inst_100232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000000000003; valaddr_reg:x3; val_offset:300696*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300696*0 + 3*392*FLEN/8, x4, x1, x2)

inst_100233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000000000007; valaddr_reg:x3; val_offset:300699*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300699*0 + 3*393*FLEN/8, x4, x1, x2)

inst_100234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000000000000f; valaddr_reg:x3; val_offset:300702*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300702*0 + 3*394*FLEN/8, x4, x1, x2)

inst_100235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000000000001f; valaddr_reg:x3; val_offset:300705*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300705*0 + 3*395*FLEN/8, x4, x1, x2)

inst_100236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000000000003f; valaddr_reg:x3; val_offset:300708*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300708*0 + 3*396*FLEN/8, x4, x1, x2)

inst_100237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000000000007f; valaddr_reg:x3; val_offset:300711*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300711*0 + 3*397*FLEN/8, x4, x1, x2)

inst_100238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00000000000ff; valaddr_reg:x3; val_offset:300714*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300714*0 + 3*398*FLEN/8, x4, x1, x2)

inst_100239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00000000001ff; valaddr_reg:x3; val_offset:300717*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300717*0 + 3*399*FLEN/8, x4, x1, x2)

inst_100240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00000000003ff; valaddr_reg:x3; val_offset:300720*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300720*0 + 3*400*FLEN/8, x4, x1, x2)

inst_100241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00000000007ff; valaddr_reg:x3; val_offset:300723*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300723*0 + 3*401*FLEN/8, x4, x1, x2)

inst_100242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000000000fff; valaddr_reg:x3; val_offset:300726*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300726*0 + 3*402*FLEN/8, x4, x1, x2)

inst_100243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000000001fff; valaddr_reg:x3; val_offset:300729*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300729*0 + 3*403*FLEN/8, x4, x1, x2)

inst_100244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000000003fff; valaddr_reg:x3; val_offset:300732*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300732*0 + 3*404*FLEN/8, x4, x1, x2)

inst_100245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000000007fff; valaddr_reg:x3; val_offset:300735*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300735*0 + 3*405*FLEN/8, x4, x1, x2)

inst_100246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000000000ffff; valaddr_reg:x3; val_offset:300738*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300738*0 + 3*406*FLEN/8, x4, x1, x2)

inst_100247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000000001ffff; valaddr_reg:x3; val_offset:300741*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300741*0 + 3*407*FLEN/8, x4, x1, x2)

inst_100248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000000003ffff; valaddr_reg:x3; val_offset:300744*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300744*0 + 3*408*FLEN/8, x4, x1, x2)

inst_100249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000000007ffff; valaddr_reg:x3; val_offset:300747*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300747*0 + 3*409*FLEN/8, x4, x1, x2)

inst_100250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00000000fffff; valaddr_reg:x3; val_offset:300750*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300750*0 + 3*410*FLEN/8, x4, x1, x2)

inst_100251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00000001fffff; valaddr_reg:x3; val_offset:300753*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300753*0 + 3*411*FLEN/8, x4, x1, x2)

inst_100252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00000003fffff; valaddr_reg:x3; val_offset:300756*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300756*0 + 3*412*FLEN/8, x4, x1, x2)

inst_100253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00000007fffff; valaddr_reg:x3; val_offset:300759*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300759*0 + 3*413*FLEN/8, x4, x1, x2)

inst_100254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000000ffffff; valaddr_reg:x3; val_offset:300762*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300762*0 + 3*414*FLEN/8, x4, x1, x2)

inst_100255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000001ffffff; valaddr_reg:x3; val_offset:300765*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300765*0 + 3*415*FLEN/8, x4, x1, x2)

inst_100256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000003ffffff; valaddr_reg:x3; val_offset:300768*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300768*0 + 3*416*FLEN/8, x4, x1, x2)

inst_100257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000007ffffff; valaddr_reg:x3; val_offset:300771*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300771*0 + 3*417*FLEN/8, x4, x1, x2)

inst_100258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000000fffffff; valaddr_reg:x3; val_offset:300774*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300774*0 + 3*418*FLEN/8, x4, x1, x2)

inst_100259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000001fffffff; valaddr_reg:x3; val_offset:300777*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300777*0 + 3*419*FLEN/8, x4, x1, x2)

inst_100260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000003fffffff; valaddr_reg:x3; val_offset:300780*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300780*0 + 3*420*FLEN/8, x4, x1, x2)

inst_100261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000007fffffff; valaddr_reg:x3; val_offset:300783*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300783*0 + 3*421*FLEN/8, x4, x1, x2)

inst_100262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00000ffffffff; valaddr_reg:x3; val_offset:300786*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300786*0 + 3*422*FLEN/8, x4, x1, x2)

inst_100263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00001ffffffff; valaddr_reg:x3; val_offset:300789*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300789*0 + 3*423*FLEN/8, x4, x1, x2)

inst_100264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00003ffffffff; valaddr_reg:x3; val_offset:300792*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300792*0 + 3*424*FLEN/8, x4, x1, x2)

inst_100265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00007ffffffff; valaddr_reg:x3; val_offset:300795*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300795*0 + 3*425*FLEN/8, x4, x1, x2)

inst_100266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0000fffffffff; valaddr_reg:x3; val_offset:300798*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300798*0 + 3*426*FLEN/8, x4, x1, x2)

inst_100267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0001fffffffff; valaddr_reg:x3; val_offset:300801*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300801*0 + 3*427*FLEN/8, x4, x1, x2)

inst_100268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0003fffffffff; valaddr_reg:x3; val_offset:300804*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300804*0 + 3*428*FLEN/8, x4, x1, x2)

inst_100269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0007fffffffff; valaddr_reg:x3; val_offset:300807*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300807*0 + 3*429*FLEN/8, x4, x1, x2)

inst_100270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be000ffffffffff; valaddr_reg:x3; val_offset:300810*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300810*0 + 3*430*FLEN/8, x4, x1, x2)

inst_100271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be001ffffffffff; valaddr_reg:x3; val_offset:300813*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300813*0 + 3*431*FLEN/8, x4, x1, x2)

inst_100272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be003ffffffffff; valaddr_reg:x3; val_offset:300816*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300816*0 + 3*432*FLEN/8, x4, x1, x2)

inst_100273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be007ffffffffff; valaddr_reg:x3; val_offset:300819*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300819*0 + 3*433*FLEN/8, x4, x1, x2)

inst_100274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be00fffffffffff; valaddr_reg:x3; val_offset:300822*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300822*0 + 3*434*FLEN/8, x4, x1, x2)

inst_100275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be01fffffffffff; valaddr_reg:x3; val_offset:300825*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300825*0 + 3*435*FLEN/8, x4, x1, x2)

inst_100276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be03fffffffffff; valaddr_reg:x3; val_offset:300828*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300828*0 + 3*436*FLEN/8, x4, x1, x2)

inst_100277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be07fffffffffff; valaddr_reg:x3; val_offset:300831*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300831*0 + 3*437*FLEN/8, x4, x1, x2)

inst_100278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be0ffffffffffff; valaddr_reg:x3; val_offset:300834*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300834*0 + 3*438*FLEN/8, x4, x1, x2)

inst_100279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be1ffffffffffff; valaddr_reg:x3; val_offset:300837*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300837*0 + 3*439*FLEN/8, x4, x1, x2)

inst_100280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be3ffffffffffff; valaddr_reg:x3; val_offset:300840*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300840*0 + 3*440*FLEN/8, x4, x1, x2)

inst_100281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be7ffffffffffff; valaddr_reg:x3; val_offset:300843*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300843*0 + 3*441*FLEN/8, x4, x1, x2)

inst_100282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3be8000000000000; valaddr_reg:x3; val_offset:300846*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300846*0 + 3*442*FLEN/8, x4, x1, x2)

inst_100283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3bec000000000000; valaddr_reg:x3; val_offset:300849*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300849*0 + 3*443*FLEN/8, x4, x1, x2)

inst_100284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3bee000000000000; valaddr_reg:x3; val_offset:300852*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300852*0 + 3*444*FLEN/8, x4, x1, x2)

inst_100285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3bef000000000000; valaddr_reg:x3; val_offset:300855*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300855*0 + 3*445*FLEN/8, x4, x1, x2)

inst_100286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3bef800000000000; valaddr_reg:x3; val_offset:300858*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300858*0 + 3*446*FLEN/8, x4, x1, x2)

inst_100287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befc00000000000; valaddr_reg:x3; val_offset:300861*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300861*0 + 3*447*FLEN/8, x4, x1, x2)

inst_100288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befe00000000000; valaddr_reg:x3; val_offset:300864*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300864*0 + 3*448*FLEN/8, x4, x1, x2)

inst_100289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beff00000000000; valaddr_reg:x3; val_offset:300867*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300867*0 + 3*449*FLEN/8, x4, x1, x2)

inst_100290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beff80000000000; valaddr_reg:x3; val_offset:300870*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300870*0 + 3*450*FLEN/8, x4, x1, x2)

inst_100291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffc0000000000; valaddr_reg:x3; val_offset:300873*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300873*0 + 3*451*FLEN/8, x4, x1, x2)

inst_100292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffe0000000000; valaddr_reg:x3; val_offset:300876*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300876*0 + 3*452*FLEN/8, x4, x1, x2)

inst_100293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befff0000000000; valaddr_reg:x3; val_offset:300879*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300879*0 + 3*453*FLEN/8, x4, x1, x2)

inst_100294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befff8000000000; valaddr_reg:x3; val_offset:300882*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300882*0 + 3*454*FLEN/8, x4, x1, x2)

inst_100295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffc000000000; valaddr_reg:x3; val_offset:300885*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300885*0 + 3*455*FLEN/8, x4, x1, x2)

inst_100296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffe000000000; valaddr_reg:x3; val_offset:300888*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300888*0 + 3*456*FLEN/8, x4, x1, x2)

inst_100297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffff000000000; valaddr_reg:x3; val_offset:300891*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300891*0 + 3*457*FLEN/8, x4, x1, x2)

inst_100298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffff800000000; valaddr_reg:x3; val_offset:300894*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300894*0 + 3*458*FLEN/8, x4, x1, x2)

inst_100299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffc00000000; valaddr_reg:x3; val_offset:300897*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300897*0 + 3*459*FLEN/8, x4, x1, x2)

inst_100300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffe00000000; valaddr_reg:x3; val_offset:300900*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300900*0 + 3*460*FLEN/8, x4, x1, x2)

inst_100301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffff00000000; valaddr_reg:x3; val_offset:300903*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300903*0 + 3*461*FLEN/8, x4, x1, x2)

inst_100302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffff80000000; valaddr_reg:x3; val_offset:300906*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300906*0 + 3*462*FLEN/8, x4, x1, x2)

inst_100303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffc0000000; valaddr_reg:x3; val_offset:300909*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300909*0 + 3*463*FLEN/8, x4, x1, x2)

inst_100304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffe0000000; valaddr_reg:x3; val_offset:300912*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300912*0 + 3*464*FLEN/8, x4, x1, x2)

inst_100305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffff0000000; valaddr_reg:x3; val_offset:300915*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300915*0 + 3*465*FLEN/8, x4, x1, x2)

inst_100306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffff8000000; valaddr_reg:x3; val_offset:300918*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300918*0 + 3*466*FLEN/8, x4, x1, x2)

inst_100307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffc000000; valaddr_reg:x3; val_offset:300921*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300921*0 + 3*467*FLEN/8, x4, x1, x2)

inst_100308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffe000000; valaddr_reg:x3; val_offset:300924*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300924*0 + 3*468*FLEN/8, x4, x1, x2)

inst_100309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffff000000; valaddr_reg:x3; val_offset:300927*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300927*0 + 3*469*FLEN/8, x4, x1, x2)

inst_100310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffff800000; valaddr_reg:x3; val_offset:300930*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300930*0 + 3*470*FLEN/8, x4, x1, x2)

inst_100311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffffc00000; valaddr_reg:x3; val_offset:300933*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300933*0 + 3*471*FLEN/8, x4, x1, x2)

inst_100312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffffe00000; valaddr_reg:x3; val_offset:300936*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300936*0 + 3*472*FLEN/8, x4, x1, x2)

inst_100313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffff00000; valaddr_reg:x3; val_offset:300939*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300939*0 + 3*473*FLEN/8, x4, x1, x2)

inst_100314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffff80000; valaddr_reg:x3; val_offset:300942*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300942*0 + 3*474*FLEN/8, x4, x1, x2)

inst_100315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffffc0000; valaddr_reg:x3; val_offset:300945*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300945*0 + 3*475*FLEN/8, x4, x1, x2)

inst_100316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffffe0000; valaddr_reg:x3; val_offset:300948*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300948*0 + 3*476*FLEN/8, x4, x1, x2)

inst_100317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffffff0000; valaddr_reg:x3; val_offset:300951*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300951*0 + 3*477*FLEN/8, x4, x1, x2)

inst_100318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffffff8000; valaddr_reg:x3; val_offset:300954*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300954*0 + 3*478*FLEN/8, x4, x1, x2)

inst_100319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffffffc000; valaddr_reg:x3; val_offset:300957*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300957*0 + 3*479*FLEN/8, x4, x1, x2)

inst_100320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffffffe000; valaddr_reg:x3; val_offset:300960*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300960*0 + 3*480*FLEN/8, x4, x1, x2)

inst_100321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffffff000; valaddr_reg:x3; val_offset:300963*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300963*0 + 3*481*FLEN/8, x4, x1, x2)

inst_100322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffffff800; valaddr_reg:x3; val_offset:300966*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300966*0 + 3*482*FLEN/8, x4, x1, x2)

inst_100323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffffffc00; valaddr_reg:x3; val_offset:300969*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300969*0 + 3*483*FLEN/8, x4, x1, x2)

inst_100324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffffffe00; valaddr_reg:x3; val_offset:300972*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300972*0 + 3*484*FLEN/8, x4, x1, x2)

inst_100325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffffffff00; valaddr_reg:x3; val_offset:300975*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300975*0 + 3*485*FLEN/8, x4, x1, x2)

inst_100326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffffffff80; valaddr_reg:x3; val_offset:300978*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300978*0 + 3*486*FLEN/8, x4, x1, x2)

inst_100327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffffffffc0; valaddr_reg:x3; val_offset:300981*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300981*0 + 3*487*FLEN/8, x4, x1, x2)

inst_100328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffffffffe0; valaddr_reg:x3; val_offset:300984*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300984*0 + 3*488*FLEN/8, x4, x1, x2)

inst_100329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffffffff0; valaddr_reg:x3; val_offset:300987*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300987*0 + 3*489*FLEN/8, x4, x1, x2)

inst_100330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffffffff8; valaddr_reg:x3; val_offset:300990*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300990*0 + 3*490*FLEN/8, x4, x1, x2)

inst_100331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffffffffc; valaddr_reg:x3; val_offset:300993*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300993*0 + 3*491*FLEN/8, x4, x1, x2)

inst_100332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3beffffffffffffe; valaddr_reg:x3; val_offset:300996*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300996*0 + 3*492*FLEN/8, x4, x1, x2)

inst_100333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3befffffffffffff; valaddr_reg:x3; val_offset:300999*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300999*0 + 3*493*FLEN/8, x4, x1, x2)

inst_100334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:301002*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301002*0 + 3*494*FLEN/8, x4, x1, x2)

inst_100335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:301005*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301005*0 + 3*495*FLEN/8, x4, x1, x2)

inst_100336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:301008*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301008*0 + 3*496*FLEN/8, x4, x1, x2)

inst_100337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:301011*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301011*0 + 3*497*FLEN/8, x4, x1, x2)

inst_100338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:301014*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301014*0 + 3*498*FLEN/8, x4, x1, x2)

inst_100339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:301017*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301017*0 + 3*499*FLEN/8, x4, x1, x2)

inst_100340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:301020*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301020*0 + 3*500*FLEN/8, x4, x1, x2)

inst_100341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:301023*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301023*0 + 3*501*FLEN/8, x4, x1, x2)

inst_100342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:301026*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301026*0 + 3*502*FLEN/8, x4, x1, x2)

inst_100343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:301029*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301029*0 + 3*503*FLEN/8, x4, x1, x2)

inst_100344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:301032*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301032*0 + 3*504*FLEN/8, x4, x1, x2)

inst_100345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:301035*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301035*0 + 3*505*FLEN/8, x4, x1, x2)

inst_100346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:301038*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301038*0 + 3*506*FLEN/8, x4, x1, x2)

inst_100347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:301041*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301041*0 + 3*507*FLEN/8, x4, x1, x2)

inst_100348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:301044*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301044*0 + 3*508*FLEN/8, x4, x1, x2)

inst_100349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:301047*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301047*0 + 3*509*FLEN/8, x4, x1, x2)

inst_100350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:301050*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301050*0 + 3*510*FLEN/8, x4, x1, x2)

inst_100351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:301053*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301053*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_100352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:301056*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301056*0 + 3*512*FLEN/8, x4, x1, x2)

inst_100353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:301059*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301059*0 + 3*513*FLEN/8, x4, x1, x2)

inst_100354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:301062*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301062*0 + 3*514*FLEN/8, x4, x1, x2)

inst_100355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x044a0ec7ce0ac and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf79012fbad378; op2val:0x203044a0ec7ce0ac;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:301065*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301065*0 + 3*515*FLEN/8, x4, x1, x2)

inst_100356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:301068*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301068*0 + 3*516*FLEN/8, x4, x1, x2)

inst_100357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:301071*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301071*0 + 3*517*FLEN/8, x4, x1, x2)

inst_100358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:301074*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301074*0 + 3*518*FLEN/8, x4, x1, x2)

inst_100359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:301077*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301077*0 + 3*519*FLEN/8, x4, x1, x2)

inst_100360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:301080*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301080*0 + 3*520*FLEN/8, x4, x1, x2)

inst_100361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:301083*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301083*0 + 3*521*FLEN/8, x4, x1, x2)

inst_100362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:301086*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301086*0 + 3*522*FLEN/8, x4, x1, x2)

inst_100363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:301089*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301089*0 + 3*523*FLEN/8, x4, x1, x2)

inst_100364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:301092*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301092*0 + 3*524*FLEN/8, x4, x1, x2)

inst_100365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:301095*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301095*0 + 3*525*FLEN/8, x4, x1, x2)

inst_100366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:301098*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301098*0 + 3*526*FLEN/8, x4, x1, x2)

inst_100367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:301101*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301101*0 + 3*527*FLEN/8, x4, x1, x2)

inst_100368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:301104*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301104*0 + 3*528*FLEN/8, x4, x1, x2)

inst_100369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:301107*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301107*0 + 3*529*FLEN/8, x4, x1, x2)

inst_100370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:301110*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301110*0 + 3*530*FLEN/8, x4, x1, x2)

inst_100371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:301113*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301113*0 + 3*531*FLEN/8, x4, x1, x2)

inst_100372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:301116*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301116*0 + 3*532*FLEN/8, x4, x1, x2)

inst_100373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:301119*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301119*0 + 3*533*FLEN/8, x4, x1, x2)

inst_100374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:301122*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301122*0 + 3*534*FLEN/8, x4, x1, x2)

inst_100375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:301125*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301125*0 + 3*535*FLEN/8, x4, x1, x2)

inst_100376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:301128*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301128*0 + 3*536*FLEN/8, x4, x1, x2)

inst_100377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:301131*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301131*0 + 3*537*FLEN/8, x4, x1, x2)

inst_100378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000000000000; valaddr_reg:x3; val_offset:301134*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301134*0 + 3*538*FLEN/8, x4, x1, x2)

inst_100379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000000000001; valaddr_reg:x3; val_offset:301137*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301137*0 + 3*539*FLEN/8, x4, x1, x2)

inst_100380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000000000003; valaddr_reg:x3; val_offset:301140*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301140*0 + 3*540*FLEN/8, x4, x1, x2)

inst_100381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000000000007; valaddr_reg:x3; val_offset:301143*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301143*0 + 3*541*FLEN/8, x4, x1, x2)

inst_100382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000000000000f; valaddr_reg:x3; val_offset:301146*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301146*0 + 3*542*FLEN/8, x4, x1, x2)

inst_100383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000000000001f; valaddr_reg:x3; val_offset:301149*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301149*0 + 3*543*FLEN/8, x4, x1, x2)

inst_100384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000000000003f; valaddr_reg:x3; val_offset:301152*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301152*0 + 3*544*FLEN/8, x4, x1, x2)

inst_100385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000000000007f; valaddr_reg:x3; val_offset:301155*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301155*0 + 3*545*FLEN/8, x4, x1, x2)

inst_100386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00000000000ff; valaddr_reg:x3; val_offset:301158*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301158*0 + 3*546*FLEN/8, x4, x1, x2)

inst_100387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00000000001ff; valaddr_reg:x3; val_offset:301161*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301161*0 + 3*547*FLEN/8, x4, x1, x2)

inst_100388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00000000003ff; valaddr_reg:x3; val_offset:301164*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301164*0 + 3*548*FLEN/8, x4, x1, x2)

inst_100389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00000000007ff; valaddr_reg:x3; val_offset:301167*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301167*0 + 3*549*FLEN/8, x4, x1, x2)

inst_100390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000000000fff; valaddr_reg:x3; val_offset:301170*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301170*0 + 3*550*FLEN/8, x4, x1, x2)

inst_100391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000000001fff; valaddr_reg:x3; val_offset:301173*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301173*0 + 3*551*FLEN/8, x4, x1, x2)

inst_100392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000000003fff; valaddr_reg:x3; val_offset:301176*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301176*0 + 3*552*FLEN/8, x4, x1, x2)

inst_100393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000000007fff; valaddr_reg:x3; val_offset:301179*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301179*0 + 3*553*FLEN/8, x4, x1, x2)

inst_100394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000000000ffff; valaddr_reg:x3; val_offset:301182*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301182*0 + 3*554*FLEN/8, x4, x1, x2)

inst_100395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000000001ffff; valaddr_reg:x3; val_offset:301185*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301185*0 + 3*555*FLEN/8, x4, x1, x2)

inst_100396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000000003ffff; valaddr_reg:x3; val_offset:301188*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301188*0 + 3*556*FLEN/8, x4, x1, x2)

inst_100397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000000007ffff; valaddr_reg:x3; val_offset:301191*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301191*0 + 3*557*FLEN/8, x4, x1, x2)

inst_100398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00000000fffff; valaddr_reg:x3; val_offset:301194*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301194*0 + 3*558*FLEN/8, x4, x1, x2)

inst_100399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00000001fffff; valaddr_reg:x3; val_offset:301197*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301197*0 + 3*559*FLEN/8, x4, x1, x2)

inst_100400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00000003fffff; valaddr_reg:x3; val_offset:301200*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301200*0 + 3*560*FLEN/8, x4, x1, x2)

inst_100401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00000007fffff; valaddr_reg:x3; val_offset:301203*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301203*0 + 3*561*FLEN/8, x4, x1, x2)

inst_100402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000000ffffff; valaddr_reg:x3; val_offset:301206*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301206*0 + 3*562*FLEN/8, x4, x1, x2)

inst_100403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000001ffffff; valaddr_reg:x3; val_offset:301209*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301209*0 + 3*563*FLEN/8, x4, x1, x2)

inst_100404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000003ffffff; valaddr_reg:x3; val_offset:301212*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301212*0 + 3*564*FLEN/8, x4, x1, x2)

inst_100405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000007ffffff; valaddr_reg:x3; val_offset:301215*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301215*0 + 3*565*FLEN/8, x4, x1, x2)

inst_100406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000000fffffff; valaddr_reg:x3; val_offset:301218*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301218*0 + 3*566*FLEN/8, x4, x1, x2)

inst_100407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000001fffffff; valaddr_reg:x3; val_offset:301221*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301221*0 + 3*567*FLEN/8, x4, x1, x2)

inst_100408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000003fffffff; valaddr_reg:x3; val_offset:301224*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301224*0 + 3*568*FLEN/8, x4, x1, x2)

inst_100409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000007fffffff; valaddr_reg:x3; val_offset:301227*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301227*0 + 3*569*FLEN/8, x4, x1, x2)

inst_100410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00000ffffffff; valaddr_reg:x3; val_offset:301230*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301230*0 + 3*570*FLEN/8, x4, x1, x2)

inst_100411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00001ffffffff; valaddr_reg:x3; val_offset:301233*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301233*0 + 3*571*FLEN/8, x4, x1, x2)

inst_100412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00003ffffffff; valaddr_reg:x3; val_offset:301236*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301236*0 + 3*572*FLEN/8, x4, x1, x2)

inst_100413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00007ffffffff; valaddr_reg:x3; val_offset:301239*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301239*0 + 3*573*FLEN/8, x4, x1, x2)

inst_100414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0000fffffffff; valaddr_reg:x3; val_offset:301242*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301242*0 + 3*574*FLEN/8, x4, x1, x2)

inst_100415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0001fffffffff; valaddr_reg:x3; val_offset:301245*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301245*0 + 3*575*FLEN/8, x4, x1, x2)

inst_100416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0003fffffffff; valaddr_reg:x3; val_offset:301248*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301248*0 + 3*576*FLEN/8, x4, x1, x2)

inst_100417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0007fffffffff; valaddr_reg:x3; val_offset:301251*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301251*0 + 3*577*FLEN/8, x4, x1, x2)

inst_100418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f000ffffffffff; valaddr_reg:x3; val_offset:301254*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301254*0 + 3*578*FLEN/8, x4, x1, x2)

inst_100419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f001ffffffffff; valaddr_reg:x3; val_offset:301257*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301257*0 + 3*579*FLEN/8, x4, x1, x2)

inst_100420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f003ffffffffff; valaddr_reg:x3; val_offset:301260*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301260*0 + 3*580*FLEN/8, x4, x1, x2)

inst_100421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f007ffffffffff; valaddr_reg:x3; val_offset:301263*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301263*0 + 3*581*FLEN/8, x4, x1, x2)

inst_100422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f00fffffffffff; valaddr_reg:x3; val_offset:301266*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301266*0 + 3*582*FLEN/8, x4, x1, x2)

inst_100423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f01fffffffffff; valaddr_reg:x3; val_offset:301269*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301269*0 + 3*583*FLEN/8, x4, x1, x2)

inst_100424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f03fffffffffff; valaddr_reg:x3; val_offset:301272*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301272*0 + 3*584*FLEN/8, x4, x1, x2)

inst_100425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f07fffffffffff; valaddr_reg:x3; val_offset:301275*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301275*0 + 3*585*FLEN/8, x4, x1, x2)

inst_100426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f0ffffffffffff; valaddr_reg:x3; val_offset:301278*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301278*0 + 3*586*FLEN/8, x4, x1, x2)

inst_100427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f1ffffffffffff; valaddr_reg:x3; val_offset:301281*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301281*0 + 3*587*FLEN/8, x4, x1, x2)

inst_100428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f3ffffffffffff; valaddr_reg:x3; val_offset:301284*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301284*0 + 3*588*FLEN/8, x4, x1, x2)

inst_100429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f7ffffffffffff; valaddr_reg:x3; val_offset:301287*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301287*0 + 3*589*FLEN/8, x4, x1, x2)

inst_100430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81f8000000000000; valaddr_reg:x3; val_offset:301290*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301290*0 + 3*590*FLEN/8, x4, x1, x2)

inst_100431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fc000000000000; valaddr_reg:x3; val_offset:301293*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301293*0 + 3*591*FLEN/8, x4, x1, x2)

inst_100432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fe000000000000; valaddr_reg:x3; val_offset:301296*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301296*0 + 3*592*FLEN/8, x4, x1, x2)

inst_100433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ff000000000000; valaddr_reg:x3; val_offset:301299*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301299*0 + 3*593*FLEN/8, x4, x1, x2)

inst_100434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ff800000000000; valaddr_reg:x3; val_offset:301302*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301302*0 + 3*594*FLEN/8, x4, x1, x2)

inst_100435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffc00000000000; valaddr_reg:x3; val_offset:301305*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301305*0 + 3*595*FLEN/8, x4, x1, x2)

inst_100436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffe00000000000; valaddr_reg:x3; val_offset:301308*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301308*0 + 3*596*FLEN/8, x4, x1, x2)

inst_100437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fff00000000000; valaddr_reg:x3; val_offset:301311*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301311*0 + 3*597*FLEN/8, x4, x1, x2)

inst_100438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fff80000000000; valaddr_reg:x3; val_offset:301314*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301314*0 + 3*598*FLEN/8, x4, x1, x2)

inst_100439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffc0000000000; valaddr_reg:x3; val_offset:301317*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301317*0 + 3*599*FLEN/8, x4, x1, x2)

inst_100440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffe0000000000; valaddr_reg:x3; val_offset:301320*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301320*0 + 3*600*FLEN/8, x4, x1, x2)

inst_100441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffff0000000000; valaddr_reg:x3; val_offset:301323*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301323*0 + 3*601*FLEN/8, x4, x1, x2)

inst_100442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffff8000000000; valaddr_reg:x3; val_offset:301326*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301326*0 + 3*602*FLEN/8, x4, x1, x2)

inst_100443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffc000000000; valaddr_reg:x3; val_offset:301329*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301329*0 + 3*603*FLEN/8, x4, x1, x2)

inst_100444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffe000000000; valaddr_reg:x3; val_offset:301332*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301332*0 + 3*604*FLEN/8, x4, x1, x2)

inst_100445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffff000000000; valaddr_reg:x3; val_offset:301335*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301335*0 + 3*605*FLEN/8, x4, x1, x2)

inst_100446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffff800000000; valaddr_reg:x3; val_offset:301338*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301338*0 + 3*606*FLEN/8, x4, x1, x2)

inst_100447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffc00000000; valaddr_reg:x3; val_offset:301341*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301341*0 + 3*607*FLEN/8, x4, x1, x2)

inst_100448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffe00000000; valaddr_reg:x3; val_offset:301344*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301344*0 + 3*608*FLEN/8, x4, x1, x2)

inst_100449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffff00000000; valaddr_reg:x3; val_offset:301347*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301347*0 + 3*609*FLEN/8, x4, x1, x2)

inst_100450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffff80000000; valaddr_reg:x3; val_offset:301350*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301350*0 + 3*610*FLEN/8, x4, x1, x2)

inst_100451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffc0000000; valaddr_reg:x3; val_offset:301353*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301353*0 + 3*611*FLEN/8, x4, x1, x2)

inst_100452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffe0000000; valaddr_reg:x3; val_offset:301356*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301356*0 + 3*612*FLEN/8, x4, x1, x2)

inst_100453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffff0000000; valaddr_reg:x3; val_offset:301359*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301359*0 + 3*613*FLEN/8, x4, x1, x2)

inst_100454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffff8000000; valaddr_reg:x3; val_offset:301362*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301362*0 + 3*614*FLEN/8, x4, x1, x2)

inst_100455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffc000000; valaddr_reg:x3; val_offset:301365*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301365*0 + 3*615*FLEN/8, x4, x1, x2)

inst_100456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffe000000; valaddr_reg:x3; val_offset:301368*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301368*0 + 3*616*FLEN/8, x4, x1, x2)

inst_100457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffff000000; valaddr_reg:x3; val_offset:301371*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301371*0 + 3*617*FLEN/8, x4, x1, x2)

inst_100458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffff800000; valaddr_reg:x3; val_offset:301374*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301374*0 + 3*618*FLEN/8, x4, x1, x2)

inst_100459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffffc00000; valaddr_reg:x3; val_offset:301377*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301377*0 + 3*619*FLEN/8, x4, x1, x2)

inst_100460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffffe00000; valaddr_reg:x3; val_offset:301380*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301380*0 + 3*620*FLEN/8, x4, x1, x2)

inst_100461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffff00000; valaddr_reg:x3; val_offset:301383*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301383*0 + 3*621*FLEN/8, x4, x1, x2)

inst_100462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffff80000; valaddr_reg:x3; val_offset:301386*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301386*0 + 3*622*FLEN/8, x4, x1, x2)

inst_100463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffffc0000; valaddr_reg:x3; val_offset:301389*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301389*0 + 3*623*FLEN/8, x4, x1, x2)

inst_100464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffffe0000; valaddr_reg:x3; val_offset:301392*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301392*0 + 3*624*FLEN/8, x4, x1, x2)

inst_100465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffffff0000; valaddr_reg:x3; val_offset:301395*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301395*0 + 3*625*FLEN/8, x4, x1, x2)

inst_100466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffffff8000; valaddr_reg:x3; val_offset:301398*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301398*0 + 3*626*FLEN/8, x4, x1, x2)

inst_100467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffffffc000; valaddr_reg:x3; val_offset:301401*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301401*0 + 3*627*FLEN/8, x4, x1, x2)

inst_100468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffffffe000; valaddr_reg:x3; val_offset:301404*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301404*0 + 3*628*FLEN/8, x4, x1, x2)

inst_100469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffffff000; valaddr_reg:x3; val_offset:301407*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301407*0 + 3*629*FLEN/8, x4, x1, x2)

inst_100470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffffff800; valaddr_reg:x3; val_offset:301410*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301410*0 + 3*630*FLEN/8, x4, x1, x2)

inst_100471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffffffc00; valaddr_reg:x3; val_offset:301413*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301413*0 + 3*631*FLEN/8, x4, x1, x2)

inst_100472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffffffe00; valaddr_reg:x3; val_offset:301416*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301416*0 + 3*632*FLEN/8, x4, x1, x2)

inst_100473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffffffff00; valaddr_reg:x3; val_offset:301419*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301419*0 + 3*633*FLEN/8, x4, x1, x2)

inst_100474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffffffff80; valaddr_reg:x3; val_offset:301422*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301422*0 + 3*634*FLEN/8, x4, x1, x2)

inst_100475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffffffffc0; valaddr_reg:x3; val_offset:301425*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301425*0 + 3*635*FLEN/8, x4, x1, x2)

inst_100476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffffffffe0; valaddr_reg:x3; val_offset:301428*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301428*0 + 3*636*FLEN/8, x4, x1, x2)

inst_100477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffffffff0; valaddr_reg:x3; val_offset:301431*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301431*0 + 3*637*FLEN/8, x4, x1, x2)

inst_100478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffffffff8; valaddr_reg:x3; val_offset:301434*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301434*0 + 3*638*FLEN/8, x4, x1, x2)

inst_100479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffffffffc; valaddr_reg:x3; val_offset:301437*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301437*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_100480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81fffffffffffffe; valaddr_reg:x3; val_offset:301440*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301440*0 + 3*640*FLEN/8, x4, x1, x2)

inst_100481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf849379fb9b6b; op2val:0x8000;
op3val:0x81ffffffffffffff; valaddr_reg:x3; val_offset:301443*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301443*0 + 3*641*FLEN/8, x4, x1, x2)

inst_100482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:301446*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301446*0 + 3*642*FLEN/8, x4, x1, x2)

inst_100483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:301449*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301449*0 + 3*643*FLEN/8, x4, x1, x2)

inst_100484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:301452*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301452*0 + 3*644*FLEN/8, x4, x1, x2)

inst_100485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:301455*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301455*0 + 3*645*FLEN/8, x4, x1, x2)

inst_100486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:301458*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301458*0 + 3*646*FLEN/8, x4, x1, x2)

inst_100487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:301461*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301461*0 + 3*647*FLEN/8, x4, x1, x2)

inst_100488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:301464*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301464*0 + 3*648*FLEN/8, x4, x1, x2)

inst_100489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:301467*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301467*0 + 3*649*FLEN/8, x4, x1, x2)

inst_100490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:301470*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301470*0 + 3*650*FLEN/8, x4, x1, x2)

inst_100491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:301473*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301473*0 + 3*651*FLEN/8, x4, x1, x2)

inst_100492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:301476*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301476*0 + 3*652*FLEN/8, x4, x1, x2)

inst_100493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:301479*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301479*0 + 3*653*FLEN/8, x4, x1, x2)

inst_100494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:301482*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301482*0 + 3*654*FLEN/8, x4, x1, x2)

inst_100495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:301485*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301485*0 + 3*655*FLEN/8, x4, x1, x2)

inst_100496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:301488*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301488*0 + 3*656*FLEN/8, x4, x1, x2)

inst_100497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:301491*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301491*0 + 3*657*FLEN/8, x4, x1, x2)

inst_100498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:301494*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301494*0 + 3*658*FLEN/8, x4, x1, x2)

inst_100499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:301497*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301497*0 + 3*659*FLEN/8, x4, x1, x2)

inst_100500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:301500*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301500*0 + 3*660*FLEN/8, x4, x1, x2)

inst_100501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:301503*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301503*0 + 3*661*FLEN/8, x4, x1, x2)

inst_100502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:301506*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301506*0 + 3*662*FLEN/8, x4, x1, x2)

inst_100503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:301509*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301509*0 + 3*663*FLEN/8, x4, x1, x2)

inst_100504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000000000000; valaddr_reg:x3; val_offset:301512*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301512*0 + 3*664*FLEN/8, x4, x1, x2)

inst_100505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000000000001; valaddr_reg:x3; val_offset:301515*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301515*0 + 3*665*FLEN/8, x4, x1, x2)

inst_100506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000000000003; valaddr_reg:x3; val_offset:301518*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301518*0 + 3*666*FLEN/8, x4, x1, x2)

inst_100507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000000000007; valaddr_reg:x3; val_offset:301521*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301521*0 + 3*667*FLEN/8, x4, x1, x2)

inst_100508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000000000000f; valaddr_reg:x3; val_offset:301524*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301524*0 + 3*668*FLEN/8, x4, x1, x2)

inst_100509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000000000001f; valaddr_reg:x3; val_offset:301527*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301527*0 + 3*669*FLEN/8, x4, x1, x2)

inst_100510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000000000003f; valaddr_reg:x3; val_offset:301530*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301530*0 + 3*670*FLEN/8, x4, x1, x2)

inst_100511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000000000007f; valaddr_reg:x3; val_offset:301533*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301533*0 + 3*671*FLEN/8, x4, x1, x2)

inst_100512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000000000000ff; valaddr_reg:x3; val_offset:301536*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301536*0 + 3*672*FLEN/8, x4, x1, x2)

inst_100513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000000000001ff; valaddr_reg:x3; val_offset:301539*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301539*0 + 3*673*FLEN/8, x4, x1, x2)

inst_100514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000000000003ff; valaddr_reg:x3; val_offset:301542*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301542*0 + 3*674*FLEN/8, x4, x1, x2)

inst_100515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000000000007ff; valaddr_reg:x3; val_offset:301545*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301545*0 + 3*675*FLEN/8, x4, x1, x2)

inst_100516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000000000fff; valaddr_reg:x3; val_offset:301548*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301548*0 + 3*676*FLEN/8, x4, x1, x2)

inst_100517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000000001fff; valaddr_reg:x3; val_offset:301551*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301551*0 + 3*677*FLEN/8, x4, x1, x2)

inst_100518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000000003fff; valaddr_reg:x3; val_offset:301554*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301554*0 + 3*678*FLEN/8, x4, x1, x2)

inst_100519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000000007fff; valaddr_reg:x3; val_offset:301557*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301557*0 + 3*679*FLEN/8, x4, x1, x2)

inst_100520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000000000ffff; valaddr_reg:x3; val_offset:301560*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301560*0 + 3*680*FLEN/8, x4, x1, x2)

inst_100521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000000001ffff; valaddr_reg:x3; val_offset:301563*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301563*0 + 3*681*FLEN/8, x4, x1, x2)

inst_100522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000000003ffff; valaddr_reg:x3; val_offset:301566*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301566*0 + 3*682*FLEN/8, x4, x1, x2)

inst_100523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000000007ffff; valaddr_reg:x3; val_offset:301569*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301569*0 + 3*683*FLEN/8, x4, x1, x2)

inst_100524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000000000fffff; valaddr_reg:x3; val_offset:301572*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301572*0 + 3*684*FLEN/8, x4, x1, x2)

inst_100525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000000001fffff; valaddr_reg:x3; val_offset:301575*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301575*0 + 3*685*FLEN/8, x4, x1, x2)

inst_100526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000000003fffff; valaddr_reg:x3; val_offset:301578*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301578*0 + 3*686*FLEN/8, x4, x1, x2)

inst_100527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000000007fffff; valaddr_reg:x3; val_offset:301581*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301581*0 + 3*687*FLEN/8, x4, x1, x2)

inst_100528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000000ffffff; valaddr_reg:x3; val_offset:301584*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301584*0 + 3*688*FLEN/8, x4, x1, x2)

inst_100529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000001ffffff; valaddr_reg:x3; val_offset:301587*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301587*0 + 3*689*FLEN/8, x4, x1, x2)

inst_100530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000003ffffff; valaddr_reg:x3; val_offset:301590*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301590*0 + 3*690*FLEN/8, x4, x1, x2)

inst_100531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000007ffffff; valaddr_reg:x3; val_offset:301593*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301593*0 + 3*691*FLEN/8, x4, x1, x2)

inst_100532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000000fffffff; valaddr_reg:x3; val_offset:301596*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301596*0 + 3*692*FLEN/8, x4, x1, x2)

inst_100533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000001fffffff; valaddr_reg:x3; val_offset:301599*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301599*0 + 3*693*FLEN/8, x4, x1, x2)

inst_100534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000003fffffff; valaddr_reg:x3; val_offset:301602*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301602*0 + 3*694*FLEN/8, x4, x1, x2)

inst_100535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000007fffffff; valaddr_reg:x3; val_offset:301605*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301605*0 + 3*695*FLEN/8, x4, x1, x2)

inst_100536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000000ffffffff; valaddr_reg:x3; val_offset:301608*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301608*0 + 3*696*FLEN/8, x4, x1, x2)

inst_100537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000001ffffffff; valaddr_reg:x3; val_offset:301611*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301611*0 + 3*697*FLEN/8, x4, x1, x2)

inst_100538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000003ffffffff; valaddr_reg:x3; val_offset:301614*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301614*0 + 3*698*FLEN/8, x4, x1, x2)

inst_100539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000007ffffffff; valaddr_reg:x3; val_offset:301617*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301617*0 + 3*699*FLEN/8, x4, x1, x2)

inst_100540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200000fffffffff; valaddr_reg:x3; val_offset:301620*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301620*0 + 3*700*FLEN/8, x4, x1, x2)

inst_100541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200001fffffffff; valaddr_reg:x3; val_offset:301623*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301623*0 + 3*701*FLEN/8, x4, x1, x2)

inst_100542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200003fffffffff; valaddr_reg:x3; val_offset:301626*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301626*0 + 3*702*FLEN/8, x4, x1, x2)

inst_100543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200007fffffffff; valaddr_reg:x3; val_offset:301629*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301629*0 + 3*703*FLEN/8, x4, x1, x2)

inst_100544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820000ffffffffff; valaddr_reg:x3; val_offset:301632*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301632*0 + 3*704*FLEN/8, x4, x1, x2)

inst_100545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820001ffffffffff; valaddr_reg:x3; val_offset:301635*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301635*0 + 3*705*FLEN/8, x4, x1, x2)

inst_100546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820003ffffffffff; valaddr_reg:x3; val_offset:301638*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301638*0 + 3*706*FLEN/8, x4, x1, x2)

inst_100547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820007ffffffffff; valaddr_reg:x3; val_offset:301641*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301641*0 + 3*707*FLEN/8, x4, x1, x2)

inst_100548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82000fffffffffff; valaddr_reg:x3; val_offset:301644*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301644*0 + 3*708*FLEN/8, x4, x1, x2)

inst_100549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82001fffffffffff; valaddr_reg:x3; val_offset:301647*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301647*0 + 3*709*FLEN/8, x4, x1, x2)

inst_100550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82003fffffffffff; valaddr_reg:x3; val_offset:301650*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301650*0 + 3*710*FLEN/8, x4, x1, x2)

inst_100551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x82007fffffffffff; valaddr_reg:x3; val_offset:301653*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301653*0 + 3*711*FLEN/8, x4, x1, x2)

inst_100552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8200ffffffffffff; valaddr_reg:x3; val_offset:301656*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301656*0 + 3*712*FLEN/8, x4, x1, x2)

inst_100553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8201ffffffffffff; valaddr_reg:x3; val_offset:301659*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301659*0 + 3*713*FLEN/8, x4, x1, x2)

inst_100554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8203ffffffffffff; valaddr_reg:x3; val_offset:301662*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301662*0 + 3*714*FLEN/8, x4, x1, x2)

inst_100555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8207ffffffffffff; valaddr_reg:x3; val_offset:301665*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301665*0 + 3*715*FLEN/8, x4, x1, x2)

inst_100556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x8208000000000000; valaddr_reg:x3; val_offset:301668*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301668*0 + 3*716*FLEN/8, x4, x1, x2)

inst_100557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820c000000000000; valaddr_reg:x3; val_offset:301671*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301671*0 + 3*717*FLEN/8, x4, x1, x2)

inst_100558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820e000000000000; valaddr_reg:x3; val_offset:301674*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301674*0 + 3*718*FLEN/8, x4, x1, x2)

inst_100559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820f000000000000; valaddr_reg:x3; val_offset:301677*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301677*0 + 3*719*FLEN/8, x4, x1, x2)

inst_100560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820f800000000000; valaddr_reg:x3; val_offset:301680*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301680*0 + 3*720*FLEN/8, x4, x1, x2)

inst_100561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fc00000000000; valaddr_reg:x3; val_offset:301683*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301683*0 + 3*721*FLEN/8, x4, x1, x2)

inst_100562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fe00000000000; valaddr_reg:x3; val_offset:301686*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301686*0 + 3*722*FLEN/8, x4, x1, x2)

inst_100563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ff00000000000; valaddr_reg:x3; val_offset:301689*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301689*0 + 3*723*FLEN/8, x4, x1, x2)

inst_100564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ff80000000000; valaddr_reg:x3; val_offset:301692*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301692*0 + 3*724*FLEN/8, x4, x1, x2)

inst_100565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffc0000000000; valaddr_reg:x3; val_offset:301695*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301695*0 + 3*725*FLEN/8, x4, x1, x2)

inst_100566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffe0000000000; valaddr_reg:x3; val_offset:301698*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301698*0 + 3*726*FLEN/8, x4, x1, x2)

inst_100567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fff0000000000; valaddr_reg:x3; val_offset:301701*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301701*0 + 3*727*FLEN/8, x4, x1, x2)

inst_100568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fff8000000000; valaddr_reg:x3; val_offset:301704*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301704*0 + 3*728*FLEN/8, x4, x1, x2)

inst_100569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffc000000000; valaddr_reg:x3; val_offset:301707*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301707*0 + 3*729*FLEN/8, x4, x1, x2)

inst_100570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffe000000000; valaddr_reg:x3; val_offset:301710*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301710*0 + 3*730*FLEN/8, x4, x1, x2)

inst_100571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffff000000000; valaddr_reg:x3; val_offset:301713*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301713*0 + 3*731*FLEN/8, x4, x1, x2)

inst_100572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffff800000000; valaddr_reg:x3; val_offset:301716*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301716*0 + 3*732*FLEN/8, x4, x1, x2)

inst_100573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffc00000000; valaddr_reg:x3; val_offset:301719*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301719*0 + 3*733*FLEN/8, x4, x1, x2)

inst_100574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffe00000000; valaddr_reg:x3; val_offset:301722*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301722*0 + 3*734*FLEN/8, x4, x1, x2)

inst_100575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffff00000000; valaddr_reg:x3; val_offset:301725*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301725*0 + 3*735*FLEN/8, x4, x1, x2)

inst_100576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffff80000000; valaddr_reg:x3; val_offset:301728*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301728*0 + 3*736*FLEN/8, x4, x1, x2)

inst_100577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffc0000000; valaddr_reg:x3; val_offset:301731*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301731*0 + 3*737*FLEN/8, x4, x1, x2)

inst_100578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffe0000000; valaddr_reg:x3; val_offset:301734*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301734*0 + 3*738*FLEN/8, x4, x1, x2)

inst_100579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffff0000000; valaddr_reg:x3; val_offset:301737*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301737*0 + 3*739*FLEN/8, x4, x1, x2)

inst_100580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffff8000000; valaddr_reg:x3; val_offset:301740*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301740*0 + 3*740*FLEN/8, x4, x1, x2)

inst_100581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffc000000; valaddr_reg:x3; val_offset:301743*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301743*0 + 3*741*FLEN/8, x4, x1, x2)

inst_100582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffe000000; valaddr_reg:x3; val_offset:301746*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301746*0 + 3*742*FLEN/8, x4, x1, x2)

inst_100583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffff000000; valaddr_reg:x3; val_offset:301749*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301749*0 + 3*743*FLEN/8, x4, x1, x2)

inst_100584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffff800000; valaddr_reg:x3; val_offset:301752*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301752*0 + 3*744*FLEN/8, x4, x1, x2)

inst_100585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffffc00000; valaddr_reg:x3; val_offset:301755*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301755*0 + 3*745*FLEN/8, x4, x1, x2)

inst_100586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffffe00000; valaddr_reg:x3; val_offset:301758*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301758*0 + 3*746*FLEN/8, x4, x1, x2)

inst_100587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffff00000; valaddr_reg:x3; val_offset:301761*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301761*0 + 3*747*FLEN/8, x4, x1, x2)

inst_100588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffff80000; valaddr_reg:x3; val_offset:301764*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301764*0 + 3*748*FLEN/8, x4, x1, x2)

inst_100589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffffc0000; valaddr_reg:x3; val_offset:301767*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301767*0 + 3*749*FLEN/8, x4, x1, x2)

inst_100590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffffe0000; valaddr_reg:x3; val_offset:301770*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301770*0 + 3*750*FLEN/8, x4, x1, x2)

inst_100591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffffff0000; valaddr_reg:x3; val_offset:301773*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301773*0 + 3*751*FLEN/8, x4, x1, x2)

inst_100592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffffff8000; valaddr_reg:x3; val_offset:301776*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301776*0 + 3*752*FLEN/8, x4, x1, x2)

inst_100593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffffffc000; valaddr_reg:x3; val_offset:301779*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301779*0 + 3*753*FLEN/8, x4, x1, x2)

inst_100594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffffffe000; valaddr_reg:x3; val_offset:301782*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301782*0 + 3*754*FLEN/8, x4, x1, x2)

inst_100595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffffff000; valaddr_reg:x3; val_offset:301785*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301785*0 + 3*755*FLEN/8, x4, x1, x2)

inst_100596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffffff800; valaddr_reg:x3; val_offset:301788*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301788*0 + 3*756*FLEN/8, x4, x1, x2)

inst_100597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffffffc00; valaddr_reg:x3; val_offset:301791*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301791*0 + 3*757*FLEN/8, x4, x1, x2)

inst_100598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffffffe00; valaddr_reg:x3; val_offset:301794*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301794*0 + 3*758*FLEN/8, x4, x1, x2)

inst_100599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffffffff00; valaddr_reg:x3; val_offset:301797*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301797*0 + 3*759*FLEN/8, x4, x1, x2)

inst_100600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffffffff80; valaddr_reg:x3; val_offset:301800*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301800*0 + 3*760*FLEN/8, x4, x1, x2)

inst_100601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffffffffc0; valaddr_reg:x3; val_offset:301803*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301803*0 + 3*761*FLEN/8, x4, x1, x2)

inst_100602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffffffffe0; valaddr_reg:x3; val_offset:301806*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301806*0 + 3*762*FLEN/8, x4, x1, x2)

inst_100603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffffffff0; valaddr_reg:x3; val_offset:301809*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301809*0 + 3*763*FLEN/8, x4, x1, x2)

inst_100604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffffffff8; valaddr_reg:x3; val_offset:301812*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301812*0 + 3*764*FLEN/8, x4, x1, x2)

inst_100605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffffffffc; valaddr_reg:x3; val_offset:301815*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301815*0 + 3*765*FLEN/8, x4, x1, x2)

inst_100606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820ffffffffffffe; valaddr_reg:x3; val_offset:301818*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301818*0 + 3*766*FLEN/8, x4, x1, x2)

inst_100607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa550bd9aed1a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafa550bd9aed1a; op2val:0x8000;
op3val:0x820fffffffffffff; valaddr_reg:x3; val_offset:301821*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 301821*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732780544,64,FLEN)
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732781568,64,FLEN)
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782080,64,FLEN)
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782336,64,FLEN)
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782464,64,FLEN)
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782528,64,FLEN)
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782560,64,FLEN)
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782576,64,FLEN)
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782584,64,FLEN)
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782588,64,FLEN)
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782590,64,FLEN)
NAN_BOXED(6894774071592297674,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782591,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936707584,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936707585,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936707587,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936707591,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936707599,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936707615,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936707647,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936707711,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936707839,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936708095,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936708607,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936709631,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936711679,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936715775,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936723967,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936740351,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936773119,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936838655,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289936969727,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289937231871,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289937756159,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289938804735,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289940901887,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289945096191,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289953484799,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223289970262015,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223290003816447,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223290070925311,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223290205143039,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223290473578495,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223291010449407,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223292084191231,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223294231674879,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223298526642175,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223307116576767,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223324296445951,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223358656184319,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223427375661055,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223564814614527,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416223839692521471,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416224389448335359,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416225488959963135,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416227687983218687,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416232086029729791,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416240882122751999,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416258474308796415,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416293658680885247,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416364027425062911,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416504764913418239,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13416786239890128895,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13417349189843550207,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13418475089750392831,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13418475089750392832,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13419600989657235456,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420163939610656768,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420445414587367424,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420586152075722752,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420656520819900416,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420691705191989248,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420709297378033664,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420718093471055872,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420722491517566976,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420724690540822528,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420725790052450304,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726339808264192,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726614686171136,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726752125124608,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726820844601344,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726855204339712,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726872384208896,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726880974143488,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726885269110784,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726887416594432,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726888490336256,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889027207168,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889295642624,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889429860352,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889496969216,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889530523648,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889547300864,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889555689472,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889559883776,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889561980928,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889563029504,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889563553792,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889563815936,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889563947008,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564012544,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564045312,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564061696,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564069888,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564073984,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564076032,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564077056,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564077568,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564077824,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564077952,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564078016,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564078048,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564078064,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564078072,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564078076,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564078078,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13420726889564078079,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894805972188271691,64,FLEN)
NAN_BOXED(11511305564755070196,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819840,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819841,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819843,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819847,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819855,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819871,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819903,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819967,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820095,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820351,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820863,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094821887,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094823935,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094828031,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094836223,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094852607,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094885375,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094950911,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095081983,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095344127,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095868415,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985096916991,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985099014143,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985103208447,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985111597055,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985128374271,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985161928703,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985229037567,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985363255295,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985631690751,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143986168561663,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143987242303487,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143989389787135,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143993684754431,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144002274689023,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144019454558207,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144053814296575,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144122533773311,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144259972726783,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144534850633727,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180145084606447615,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180146184118075391,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180148383141330943,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180152781187842047,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180161577280864255,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180179169466908671,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180214353838997503,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180284722583175167,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180425460071530495,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180706935048241151,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(181269885001662463,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(182395784908505087,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(182395784908505088,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(183521684815347712,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184084634768769024,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184366109745479680,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184506847233835008,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184577215978012672,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184612400350101504,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184629992536145920,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184638788629168128,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184643186675679232,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184645385698934784,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184646485210562560,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647034966376448,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647309844283392,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647447283236864,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647516002713600,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647550362451968,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647567542321152,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647576132255744,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647580427223040,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647582574706688,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647583648448512,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584185319424,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584453754880,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584587972608,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584655081472,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584688635904,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584705413120,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584713801728,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584717996032,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584720093184,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721141760,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721666048,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721928192,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722059264,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722124800,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722157568,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722173952,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722182144,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722186240,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722188288,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722189312,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722189824,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190080,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190208,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190272,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190304,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190320,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190328,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190332,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190334,64,FLEN)
NAN_BOXED(6894839681707382014,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190335,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789262848,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789262849,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789262851,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789262855,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789262863,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789262879,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789262911,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789262975,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789263103,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789263359,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789263871,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789264895,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789266943,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789271039,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789279231,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789295615,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789328383,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789393919,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789524991,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459789787135,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459790311423,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459791359999,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459793457151,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459797651455,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459806040063,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459822817279,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459856371711,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786459923480575,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786460057698303,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786460326133759,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786460863004671,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786461936746495,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786464084230143,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786468379197439,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786476969132031,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786494149001215,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786528508739583,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786597228216319,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111786734667169791,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111787009545076735,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111787559300890623,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111788658812518399,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111790857835773951,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111795255882285055,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111804051975307263,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111821644161351679,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111856828533440511,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4111927197277618175,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4112067934765973503,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4112349409742684159,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4112912359696105471,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4114038259602948095,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4114038259602948096,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4115164159509790720,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4115727109463212032,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116008584439922688,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116149321928278016,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116219690672455680,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116254875044544512,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116272467230588928,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116281263323611136,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116285661370122240,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116287860393377792,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116288959905005568,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116289509660819456,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116289784538726400,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116289921977679872,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116289990697156608,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290025056894976,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290042236764160,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290050826698752,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290055121666048,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290057269149696,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290058342891520,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290058879762432,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059148197888,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059282415616,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059349524480,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059383078912,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059399856128,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059408244736,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059412439040,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059414536192,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059415584768,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416109056,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416371200,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416502272,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416567808,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416600576,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416616960,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416625152,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416629248,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416631296,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416632320,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416632832,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416633088,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416633216,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416633280,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416633312,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416633328,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416633336,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416633340,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416633342,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4116290059416633343,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894862105318856309,64,FLEN)
NAN_BOXED(2319429522035652699,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020935168,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020935169,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020935171,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020935175,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020935183,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020935199,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020935231,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020935295,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020935423,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020935679,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020936191,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020937215,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020939263,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020943359,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020951551,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443020967935,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443021000703,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443021066239,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443021197311,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443021459455,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443021983743,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443023032319,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443025129471,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443029323775,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443037712383,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443054489599,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443088044031,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443155152895,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443289370623,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448443557806079,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448444094676991,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448445168418815,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448447315902463,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448451610869759,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448460200804351,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448477380673535,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448511740411903,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448580459888639,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448717898842111,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314448992776749055,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314449542532562943,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314450642044190719,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314452841067446271,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314457239113957375,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314466035206979583,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314483627393023999,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314518811765112831,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314589180509290495,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4314729917997645823,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4315011392974356479,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4315574342927777791,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4316700242834620415,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4316700242834620416,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4317826142741463040,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318389092694884352,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318670567671595008,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318811305159950336,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318881673904128000,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318916858276216832,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318934450462261248,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318943246555283456,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318947644601794560,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318949843625050112,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318950943136677888,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318951492892491776,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318951767770398720,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318951905209352192,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318951973928828928,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952008288567296,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952025468436480,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952034058371072,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952038353338368,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952040500822016,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952041574563840,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042111434752,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042379870208,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042514087936,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042581196800,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042614751232,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042631528448,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042639917056,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042644111360,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042646208512,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042647257088,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042647781376,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648043520,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648174592,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648240128,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648272896,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648289280,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648297472,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648301568,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648303616,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648304640,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648305152,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648305408,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648305536,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648305600,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648305632,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648305648,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648305656,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648305660,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648305662,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4318952042648305663,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894862600530219896,64,FLEN)
NAN_BOXED(2319429266048868524,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261184,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261185,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261187,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261191,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261199,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261215,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261247,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261311,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261439,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261695,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303262207,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303263231,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303265279,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303269375,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303277567,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303293951,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303326719,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303392255,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303523327,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303785471,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625304309759,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625305358335,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625307455487,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625311649791,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625320038399,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625336815615,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625370370047,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625437478911,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625571696639,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625840132095,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983626377003007,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983627450744831,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983629598228479,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983633893195775,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983642483130367,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983659662999551,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983694022737919,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983762742214655,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983900181168127,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362984175059075071,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362984724814888959,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362985824326516735,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362988023349772287,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362992421396283391,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363001217489305599,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363018809675350015,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363053994047438847,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363124362791616511,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363265100279971839,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363546575256682495,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9364109525210103807,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9365235425116946431,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9365235425116946432,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9366361325023789056,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9366924274977210368,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367205749953921024,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367346487442276352,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367416856186454016,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367452040558542848,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367469632744587264,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367478428837609472,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367482826884120576,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367485025907376128,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486125419003904,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486675174817792,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486950052724736,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487087491678208,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487156211154944,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487190570893312,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487207750762496,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487216340697088,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487220635664384,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487222783148032,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487223856889856,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224393760768,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224662196224,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224796413952,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224863522816,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224897077248,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224913854464,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224922243072,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224926437376,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224928534528,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224929583104,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930107392,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930369536,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930500608,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930566144,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930598912,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930615296,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930623488,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930627584,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930629632,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930630656,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631168,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631424,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631552,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631616,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631648,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631664,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631672,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631676,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631678,64,FLEN)
NAN_BOXED(6894875323469110123,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631679,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631680,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631681,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631683,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631687,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631695,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631711,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631743,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631807,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631935,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930632191,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930632703,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930633727,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930635775,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930639871,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930648063,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930664447,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930697215,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930762751,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930893823,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224931155967,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224931680255,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224932728831,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224934825983,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224939020287,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224947408895,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224964186111,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224997740543,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225064849407,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225199067135,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225467502591,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487226004373503,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487227078115327,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487229225598975,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487233520566271,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487242110500863,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487259290370047,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487293650108415,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487362369585151,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487499808538623,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487774686445567,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367488324442259455,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367489423953887231,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367491622977142783,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367496021023653887,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367504817116676095,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367522409302720511,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367557593674809343,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367627962418987007,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367768699907342335,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9368050174884052991,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9368613124837474303,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9369739024744316927,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9369739024744316928,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9370864924651159552,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371427874604580864,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371709349581291520,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371850087069646848,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371920455813824512,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371955640185913344,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371973232371957760,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371982028464979968,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371986426511491072,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371988625534746624,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371989725046374400,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990274802188288,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990549680095232,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990687119048704,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990755838525440,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990790198263808,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990807378132992,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990815968067584,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990820263034880,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990822410518528,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990823484260352,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824021131264,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824289566720,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824423784448,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824490893312,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824524447744,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824541224960,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824549613568,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824553807872,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824555905024,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824556953600,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557477888,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557740032,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557871104,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557936640,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557969408,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557985792,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557993984,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557998080,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558000128,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001152,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001664,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001920,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002048,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002112,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002144,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002160,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002168,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002172,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002174,64,FLEN)
NAN_BOXED(6894911320724532506,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002175,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
