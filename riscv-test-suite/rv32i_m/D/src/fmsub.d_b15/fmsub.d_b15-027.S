
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_19968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffff80000; valaddr_reg:x3; val_offset:59904*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59904*0 + 3*0*FLEN/8, x4, x1, x2)

inst_19969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffffc0000; valaddr_reg:x3; val_offset:59907*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59907*0 + 3*1*FLEN/8, x4, x1, x2)

inst_19970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffffe0000; valaddr_reg:x3; val_offset:59910*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59910*0 + 3*2*FLEN/8, x4, x1, x2)

inst_19971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffffff0000; valaddr_reg:x3; val_offset:59913*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59913*0 + 3*3*FLEN/8, x4, x1, x2)

inst_19972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffffff8000; valaddr_reg:x3; val_offset:59916*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59916*0 + 3*4*FLEN/8, x4, x1, x2)

inst_19973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffffffc000; valaddr_reg:x3; val_offset:59919*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59919*0 + 3*5*FLEN/8, x4, x1, x2)

inst_19974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffffffe000; valaddr_reg:x3; val_offset:59922*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59922*0 + 3*6*FLEN/8, x4, x1, x2)

inst_19975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffffff000; valaddr_reg:x3; val_offset:59925*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59925*0 + 3*7*FLEN/8, x4, x1, x2)

inst_19976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffffff800; valaddr_reg:x3; val_offset:59928*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59928*0 + 3*8*FLEN/8, x4, x1, x2)

inst_19977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffffffc00; valaddr_reg:x3; val_offset:59931*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59931*0 + 3*9*FLEN/8, x4, x1, x2)

inst_19978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffffffe00; valaddr_reg:x3; val_offset:59934*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59934*0 + 3*10*FLEN/8, x4, x1, x2)

inst_19979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffffffff00; valaddr_reg:x3; val_offset:59937*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59937*0 + 3*11*FLEN/8, x4, x1, x2)

inst_19980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffffffff80; valaddr_reg:x3; val_offset:59940*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59940*0 + 3*12*FLEN/8, x4, x1, x2)

inst_19981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffffffffc0; valaddr_reg:x3; val_offset:59943*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59943*0 + 3*13*FLEN/8, x4, x1, x2)

inst_19982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffffffffe0; valaddr_reg:x3; val_offset:59946*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59946*0 + 3*14*FLEN/8, x4, x1, x2)

inst_19983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffffffff0; valaddr_reg:x3; val_offset:59949*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59949*0 + 3*15*FLEN/8, x4, x1, x2)

inst_19984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffffffff8; valaddr_reg:x3; val_offset:59952*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59952*0 + 3*16*FLEN/8, x4, x1, x2)

inst_19985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffffffffc; valaddr_reg:x3; val_offset:59955*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59955*0 + 3*17*FLEN/8, x4, x1, x2)

inst_19986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffffffffe; valaddr_reg:x3; val_offset:59958*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59958*0 + 3*18*FLEN/8, x4, x1, x2)

inst_19987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffffffffff; valaddr_reg:x3; val_offset:59961*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59961*0 + 3*19*FLEN/8, x4, x1, x2)

inst_19988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:59964*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59964*0 + 3*20*FLEN/8, x4, x1, x2)

inst_19989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:59967*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59967*0 + 3*21*FLEN/8, x4, x1, x2)

inst_19990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:59970*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59970*0 + 3*22*FLEN/8, x4, x1, x2)

inst_19991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:59973*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59973*0 + 3*23*FLEN/8, x4, x1, x2)

inst_19992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:59976*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59976*0 + 3*24*FLEN/8, x4, x1, x2)

inst_19993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:59979*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59979*0 + 3*25*FLEN/8, x4, x1, x2)

inst_19994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:59982*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59982*0 + 3*26*FLEN/8, x4, x1, x2)

inst_19995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:59985*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59985*0 + 3*27*FLEN/8, x4, x1, x2)

inst_19996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:59988*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59988*0 + 3*28*FLEN/8, x4, x1, x2)

inst_19997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:59991*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59991*0 + 3*29*FLEN/8, x4, x1, x2)

inst_19998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:59994*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59994*0 + 3*30*FLEN/8, x4, x1, x2)

inst_19999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:59997*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59997*0 + 3*31*FLEN/8, x4, x1, x2)

inst_20000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:60000*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60000*0 + 3*32*FLEN/8, x4, x1, x2)

inst_20001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:60003*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60003*0 + 3*33*FLEN/8, x4, x1, x2)

inst_20002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:60006*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60006*0 + 3*34*FLEN/8, x4, x1, x2)

inst_20003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:60009*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60009*0 + 3*35*FLEN/8, x4, x1, x2)

inst_20004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:60012*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60012*0 + 3*36*FLEN/8, x4, x1, x2)

inst_20005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:60015*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60015*0 + 3*37*FLEN/8, x4, x1, x2)

inst_20006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:60018*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60018*0 + 3*38*FLEN/8, x4, x1, x2)

inst_20007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:60021*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60021*0 + 3*39*FLEN/8, x4, x1, x2)

inst_20008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:60024*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60024*0 + 3*40*FLEN/8, x4, x1, x2)

inst_20009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:60027*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60027*0 + 3*41*FLEN/8, x4, x1, x2)

inst_20010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:60030*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60030*0 + 3*42*FLEN/8, x4, x1, x2)

inst_20011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:60033*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60033*0 + 3*43*FLEN/8, x4, x1, x2)

inst_20012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:60036*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60036*0 + 3*44*FLEN/8, x4, x1, x2)

inst_20013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:60039*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60039*0 + 3*45*FLEN/8, x4, x1, x2)

inst_20014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:60042*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60042*0 + 3*46*FLEN/8, x4, x1, x2)

inst_20015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:60045*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60045*0 + 3*47*FLEN/8, x4, x1, x2)

inst_20016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:60048*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60048*0 + 3*48*FLEN/8, x4, x1, x2)

inst_20017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:60051*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60051*0 + 3*49*FLEN/8, x4, x1, x2)

inst_20018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:60054*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60054*0 + 3*50*FLEN/8, x4, x1, x2)

inst_20019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:60057*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60057*0 + 3*51*FLEN/8, x4, x1, x2)

inst_20020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:60060*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60060*0 + 3*52*FLEN/8, x4, x1, x2)

inst_20021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:60063*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60063*0 + 3*53*FLEN/8, x4, x1, x2)

inst_20022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:60066*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60066*0 + 3*54*FLEN/8, x4, x1, x2)

inst_20023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:60069*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60069*0 + 3*55*FLEN/8, x4, x1, x2)

inst_20024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:60072*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60072*0 + 3*56*FLEN/8, x4, x1, x2)

inst_20025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:60075*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60075*0 + 3*57*FLEN/8, x4, x1, x2)

inst_20026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:60078*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60078*0 + 3*58*FLEN/8, x4, x1, x2)

inst_20027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:60081*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60081*0 + 3*59*FLEN/8, x4, x1, x2)

inst_20028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:60084*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60084*0 + 3*60*FLEN/8, x4, x1, x2)

inst_20029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:60087*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60087*0 + 3*61*FLEN/8, x4, x1, x2)

inst_20030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:60090*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60090*0 + 3*62*FLEN/8, x4, x1, x2)

inst_20031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:60093*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60093*0 + 3*63*FLEN/8, x4, x1, x2)

inst_20032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000000000000; valaddr_reg:x3; val_offset:60096*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60096*0 + 3*64*FLEN/8, x4, x1, x2)

inst_20033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000000000001; valaddr_reg:x3; val_offset:60099*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60099*0 + 3*65*FLEN/8, x4, x1, x2)

inst_20034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000000000003; valaddr_reg:x3; val_offset:60102*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60102*0 + 3*66*FLEN/8, x4, x1, x2)

inst_20035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000000000007; valaddr_reg:x3; val_offset:60105*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60105*0 + 3*67*FLEN/8, x4, x1, x2)

inst_20036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000000000000f; valaddr_reg:x3; val_offset:60108*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60108*0 + 3*68*FLEN/8, x4, x1, x2)

inst_20037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000000000001f; valaddr_reg:x3; val_offset:60111*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60111*0 + 3*69*FLEN/8, x4, x1, x2)

inst_20038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000000000003f; valaddr_reg:x3; val_offset:60114*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60114*0 + 3*70*FLEN/8, x4, x1, x2)

inst_20039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000000000007f; valaddr_reg:x3; val_offset:60117*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60117*0 + 3*71*FLEN/8, x4, x1, x2)

inst_20040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00000000000ff; valaddr_reg:x3; val_offset:60120*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60120*0 + 3*72*FLEN/8, x4, x1, x2)

inst_20041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00000000001ff; valaddr_reg:x3; val_offset:60123*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60123*0 + 3*73*FLEN/8, x4, x1, x2)

inst_20042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00000000003ff; valaddr_reg:x3; val_offset:60126*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60126*0 + 3*74*FLEN/8, x4, x1, x2)

inst_20043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00000000007ff; valaddr_reg:x3; val_offset:60129*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60129*0 + 3*75*FLEN/8, x4, x1, x2)

inst_20044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000000000fff; valaddr_reg:x3; val_offset:60132*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60132*0 + 3*76*FLEN/8, x4, x1, x2)

inst_20045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000000001fff; valaddr_reg:x3; val_offset:60135*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60135*0 + 3*77*FLEN/8, x4, x1, x2)

inst_20046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000000003fff; valaddr_reg:x3; val_offset:60138*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60138*0 + 3*78*FLEN/8, x4, x1, x2)

inst_20047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000000007fff; valaddr_reg:x3; val_offset:60141*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60141*0 + 3*79*FLEN/8, x4, x1, x2)

inst_20048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000000000ffff; valaddr_reg:x3; val_offset:60144*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60144*0 + 3*80*FLEN/8, x4, x1, x2)

inst_20049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000000001ffff; valaddr_reg:x3; val_offset:60147*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60147*0 + 3*81*FLEN/8, x4, x1, x2)

inst_20050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000000003ffff; valaddr_reg:x3; val_offset:60150*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60150*0 + 3*82*FLEN/8, x4, x1, x2)

inst_20051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000000007ffff; valaddr_reg:x3; val_offset:60153*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60153*0 + 3*83*FLEN/8, x4, x1, x2)

inst_20052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00000000fffff; valaddr_reg:x3; val_offset:60156*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60156*0 + 3*84*FLEN/8, x4, x1, x2)

inst_20053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00000001fffff; valaddr_reg:x3; val_offset:60159*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60159*0 + 3*85*FLEN/8, x4, x1, x2)

inst_20054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00000003fffff; valaddr_reg:x3; val_offset:60162*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60162*0 + 3*86*FLEN/8, x4, x1, x2)

inst_20055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00000007fffff; valaddr_reg:x3; val_offset:60165*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60165*0 + 3*87*FLEN/8, x4, x1, x2)

inst_20056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000000ffffff; valaddr_reg:x3; val_offset:60168*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60168*0 + 3*88*FLEN/8, x4, x1, x2)

inst_20057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000001ffffff; valaddr_reg:x3; val_offset:60171*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60171*0 + 3*89*FLEN/8, x4, x1, x2)

inst_20058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000003ffffff; valaddr_reg:x3; val_offset:60174*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60174*0 + 3*90*FLEN/8, x4, x1, x2)

inst_20059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000007ffffff; valaddr_reg:x3; val_offset:60177*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60177*0 + 3*91*FLEN/8, x4, x1, x2)

inst_20060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000000fffffff; valaddr_reg:x3; val_offset:60180*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60180*0 + 3*92*FLEN/8, x4, x1, x2)

inst_20061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000001fffffff; valaddr_reg:x3; val_offset:60183*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60183*0 + 3*93*FLEN/8, x4, x1, x2)

inst_20062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000003fffffff; valaddr_reg:x3; val_offset:60186*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60186*0 + 3*94*FLEN/8, x4, x1, x2)

inst_20063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000007fffffff; valaddr_reg:x3; val_offset:60189*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60189*0 + 3*95*FLEN/8, x4, x1, x2)

inst_20064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00000ffffffff; valaddr_reg:x3; val_offset:60192*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60192*0 + 3*96*FLEN/8, x4, x1, x2)

inst_20065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00001ffffffff; valaddr_reg:x3; val_offset:60195*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60195*0 + 3*97*FLEN/8, x4, x1, x2)

inst_20066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00003ffffffff; valaddr_reg:x3; val_offset:60198*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60198*0 + 3*98*FLEN/8, x4, x1, x2)

inst_20067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00007ffffffff; valaddr_reg:x3; val_offset:60201*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60201*0 + 3*99*FLEN/8, x4, x1, x2)

inst_20068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0000fffffffff; valaddr_reg:x3; val_offset:60204*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60204*0 + 3*100*FLEN/8, x4, x1, x2)

inst_20069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0001fffffffff; valaddr_reg:x3; val_offset:60207*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60207*0 + 3*101*FLEN/8, x4, x1, x2)

inst_20070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0003fffffffff; valaddr_reg:x3; val_offset:60210*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60210*0 + 3*102*FLEN/8, x4, x1, x2)

inst_20071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0007fffffffff; valaddr_reg:x3; val_offset:60213*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60213*0 + 3*103*FLEN/8, x4, x1, x2)

inst_20072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f000ffffffffff; valaddr_reg:x3; val_offset:60216*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60216*0 + 3*104*FLEN/8, x4, x1, x2)

inst_20073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f001ffffffffff; valaddr_reg:x3; val_offset:60219*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60219*0 + 3*105*FLEN/8, x4, x1, x2)

inst_20074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f003ffffffffff; valaddr_reg:x3; val_offset:60222*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60222*0 + 3*106*FLEN/8, x4, x1, x2)

inst_20075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f007ffffffffff; valaddr_reg:x3; val_offset:60225*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60225*0 + 3*107*FLEN/8, x4, x1, x2)

inst_20076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f00fffffffffff; valaddr_reg:x3; val_offset:60228*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60228*0 + 3*108*FLEN/8, x4, x1, x2)

inst_20077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f01fffffffffff; valaddr_reg:x3; val_offset:60231*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60231*0 + 3*109*FLEN/8, x4, x1, x2)

inst_20078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f03fffffffffff; valaddr_reg:x3; val_offset:60234*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60234*0 + 3*110*FLEN/8, x4, x1, x2)

inst_20079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f07fffffffffff; valaddr_reg:x3; val_offset:60237*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60237*0 + 3*111*FLEN/8, x4, x1, x2)

inst_20080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f0ffffffffffff; valaddr_reg:x3; val_offset:60240*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60240*0 + 3*112*FLEN/8, x4, x1, x2)

inst_20081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f1ffffffffffff; valaddr_reg:x3; val_offset:60243*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60243*0 + 3*113*FLEN/8, x4, x1, x2)

inst_20082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f3ffffffffffff; valaddr_reg:x3; val_offset:60246*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60246*0 + 3*114*FLEN/8, x4, x1, x2)

inst_20083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f7ffffffffffff; valaddr_reg:x3; val_offset:60249*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60249*0 + 3*115*FLEN/8, x4, x1, x2)

inst_20084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82f8000000000000; valaddr_reg:x3; val_offset:60252*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60252*0 + 3*116*FLEN/8, x4, x1, x2)

inst_20085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fc000000000000; valaddr_reg:x3; val_offset:60255*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60255*0 + 3*117*FLEN/8, x4, x1, x2)

inst_20086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fe000000000000; valaddr_reg:x3; val_offset:60258*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60258*0 + 3*118*FLEN/8, x4, x1, x2)

inst_20087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ff000000000000; valaddr_reg:x3; val_offset:60261*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60261*0 + 3*119*FLEN/8, x4, x1, x2)

inst_20088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ff800000000000; valaddr_reg:x3; val_offset:60264*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60264*0 + 3*120*FLEN/8, x4, x1, x2)

inst_20089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffc00000000000; valaddr_reg:x3; val_offset:60267*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60267*0 + 3*121*FLEN/8, x4, x1, x2)

inst_20090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffe00000000000; valaddr_reg:x3; val_offset:60270*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60270*0 + 3*122*FLEN/8, x4, x1, x2)

inst_20091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fff00000000000; valaddr_reg:x3; val_offset:60273*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60273*0 + 3*123*FLEN/8, x4, x1, x2)

inst_20092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fff80000000000; valaddr_reg:x3; val_offset:60276*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60276*0 + 3*124*FLEN/8, x4, x1, x2)

inst_20093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffc0000000000; valaddr_reg:x3; val_offset:60279*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60279*0 + 3*125*FLEN/8, x4, x1, x2)

inst_20094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffe0000000000; valaddr_reg:x3; val_offset:60282*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60282*0 + 3*126*FLEN/8, x4, x1, x2)

inst_20095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffff0000000000; valaddr_reg:x3; val_offset:60285*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60285*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_20096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffff8000000000; valaddr_reg:x3; val_offset:60288*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60288*0 + 3*128*FLEN/8, x4, x1, x2)

inst_20097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffc000000000; valaddr_reg:x3; val_offset:60291*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60291*0 + 3*129*FLEN/8, x4, x1, x2)

inst_20098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffe000000000; valaddr_reg:x3; val_offset:60294*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60294*0 + 3*130*FLEN/8, x4, x1, x2)

inst_20099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffff000000000; valaddr_reg:x3; val_offset:60297*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60297*0 + 3*131*FLEN/8, x4, x1, x2)

inst_20100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffff800000000; valaddr_reg:x3; val_offset:60300*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60300*0 + 3*132*FLEN/8, x4, x1, x2)

inst_20101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffc00000000; valaddr_reg:x3; val_offset:60303*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60303*0 + 3*133*FLEN/8, x4, x1, x2)

inst_20102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffe00000000; valaddr_reg:x3; val_offset:60306*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60306*0 + 3*134*FLEN/8, x4, x1, x2)

inst_20103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffff00000000; valaddr_reg:x3; val_offset:60309*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60309*0 + 3*135*FLEN/8, x4, x1, x2)

inst_20104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffff80000000; valaddr_reg:x3; val_offset:60312*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60312*0 + 3*136*FLEN/8, x4, x1, x2)

inst_20105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffc0000000; valaddr_reg:x3; val_offset:60315*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60315*0 + 3*137*FLEN/8, x4, x1, x2)

inst_20106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffe0000000; valaddr_reg:x3; val_offset:60318*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60318*0 + 3*138*FLEN/8, x4, x1, x2)

inst_20107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffff0000000; valaddr_reg:x3; val_offset:60321*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60321*0 + 3*139*FLEN/8, x4, x1, x2)

inst_20108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffff8000000; valaddr_reg:x3; val_offset:60324*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60324*0 + 3*140*FLEN/8, x4, x1, x2)

inst_20109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffc000000; valaddr_reg:x3; val_offset:60327*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60327*0 + 3*141*FLEN/8, x4, x1, x2)

inst_20110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffe000000; valaddr_reg:x3; val_offset:60330*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60330*0 + 3*142*FLEN/8, x4, x1, x2)

inst_20111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffff000000; valaddr_reg:x3; val_offset:60333*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60333*0 + 3*143*FLEN/8, x4, x1, x2)

inst_20112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffff800000; valaddr_reg:x3; val_offset:60336*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60336*0 + 3*144*FLEN/8, x4, x1, x2)

inst_20113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffffc00000; valaddr_reg:x3; val_offset:60339*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60339*0 + 3*145*FLEN/8, x4, x1, x2)

inst_20114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffffe00000; valaddr_reg:x3; val_offset:60342*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60342*0 + 3*146*FLEN/8, x4, x1, x2)

inst_20115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffff00000; valaddr_reg:x3; val_offset:60345*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60345*0 + 3*147*FLEN/8, x4, x1, x2)

inst_20116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffff80000; valaddr_reg:x3; val_offset:60348*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60348*0 + 3*148*FLEN/8, x4, x1, x2)

inst_20117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffffc0000; valaddr_reg:x3; val_offset:60351*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60351*0 + 3*149*FLEN/8, x4, x1, x2)

inst_20118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffffe0000; valaddr_reg:x3; val_offset:60354*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60354*0 + 3*150*FLEN/8, x4, x1, x2)

inst_20119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffffff0000; valaddr_reg:x3; val_offset:60357*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60357*0 + 3*151*FLEN/8, x4, x1, x2)

inst_20120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffffff8000; valaddr_reg:x3; val_offset:60360*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60360*0 + 3*152*FLEN/8, x4, x1, x2)

inst_20121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffffffc000; valaddr_reg:x3; val_offset:60363*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60363*0 + 3*153*FLEN/8, x4, x1, x2)

inst_20122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffffffe000; valaddr_reg:x3; val_offset:60366*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60366*0 + 3*154*FLEN/8, x4, x1, x2)

inst_20123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffffff000; valaddr_reg:x3; val_offset:60369*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60369*0 + 3*155*FLEN/8, x4, x1, x2)

inst_20124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffffff800; valaddr_reg:x3; val_offset:60372*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60372*0 + 3*156*FLEN/8, x4, x1, x2)

inst_20125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffffffc00; valaddr_reg:x3; val_offset:60375*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60375*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffffffe00; valaddr_reg:x3; val_offset:60378*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60378*0 + 3*158*FLEN/8, x4, x1, x2)

inst_20127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffffffff00; valaddr_reg:x3; val_offset:60381*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60381*0 + 3*159*FLEN/8, x4, x1, x2)

inst_20128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffffffff80; valaddr_reg:x3; val_offset:60384*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60384*0 + 3*160*FLEN/8, x4, x1, x2)

inst_20129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffffffffc0; valaddr_reg:x3; val_offset:60387*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60387*0 + 3*161*FLEN/8, x4, x1, x2)

inst_20130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffffffffe0; valaddr_reg:x3; val_offset:60390*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60390*0 + 3*162*FLEN/8, x4, x1, x2)

inst_20131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffffffff0; valaddr_reg:x3; val_offset:60393*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60393*0 + 3*163*FLEN/8, x4, x1, x2)

inst_20132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffffffff8; valaddr_reg:x3; val_offset:60396*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60396*0 + 3*164*FLEN/8, x4, x1, x2)

inst_20133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffffffffc; valaddr_reg:x3; val_offset:60399*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60399*0 + 3*165*FLEN/8, x4, x1, x2)

inst_20134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82fffffffffffffe; valaddr_reg:x3; val_offset:60402*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60402*0 + 3*166*FLEN/8, x4, x1, x2)

inst_20135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x955004fdc3b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8955004fdc3b2f; op2val:0x8000;
op3val:0x82ffffffffffffff; valaddr_reg:x3; val_offset:60405*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60405*0 + 3*167*FLEN/8, x4, x1, x2)

inst_20136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000000000000; valaddr_reg:x3; val_offset:60408*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60408*0 + 3*168*FLEN/8, x4, x1, x2)

inst_20137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000000000001; valaddr_reg:x3; val_offset:60411*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60411*0 + 3*169*FLEN/8, x4, x1, x2)

inst_20138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000000000003; valaddr_reg:x3; val_offset:60414*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60414*0 + 3*170*FLEN/8, x4, x1, x2)

inst_20139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000000000007; valaddr_reg:x3; val_offset:60417*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60417*0 + 3*171*FLEN/8, x4, x1, x2)

inst_20140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000000000000f; valaddr_reg:x3; val_offset:60420*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60420*0 + 3*172*FLEN/8, x4, x1, x2)

inst_20141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000000000001f; valaddr_reg:x3; val_offset:60423*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60423*0 + 3*173*FLEN/8, x4, x1, x2)

inst_20142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000000000003f; valaddr_reg:x3; val_offset:60426*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60426*0 + 3*174*FLEN/8, x4, x1, x2)

inst_20143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000000000007f; valaddr_reg:x3; val_offset:60429*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60429*0 + 3*175*FLEN/8, x4, x1, x2)

inst_20144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400000000000ff; valaddr_reg:x3; val_offset:60432*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60432*0 + 3*176*FLEN/8, x4, x1, x2)

inst_20145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400000000001ff; valaddr_reg:x3; val_offset:60435*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60435*0 + 3*177*FLEN/8, x4, x1, x2)

inst_20146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400000000003ff; valaddr_reg:x3; val_offset:60438*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60438*0 + 3*178*FLEN/8, x4, x1, x2)

inst_20147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400000000007ff; valaddr_reg:x3; val_offset:60441*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60441*0 + 3*179*FLEN/8, x4, x1, x2)

inst_20148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000000000fff; valaddr_reg:x3; val_offset:60444*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60444*0 + 3*180*FLEN/8, x4, x1, x2)

inst_20149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000000001fff; valaddr_reg:x3; val_offset:60447*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60447*0 + 3*181*FLEN/8, x4, x1, x2)

inst_20150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000000003fff; valaddr_reg:x3; val_offset:60450*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60450*0 + 3*182*FLEN/8, x4, x1, x2)

inst_20151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000000007fff; valaddr_reg:x3; val_offset:60453*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60453*0 + 3*183*FLEN/8, x4, x1, x2)

inst_20152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000000000ffff; valaddr_reg:x3; val_offset:60456*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60456*0 + 3*184*FLEN/8, x4, x1, x2)

inst_20153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000000001ffff; valaddr_reg:x3; val_offset:60459*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60459*0 + 3*185*FLEN/8, x4, x1, x2)

inst_20154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000000003ffff; valaddr_reg:x3; val_offset:60462*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60462*0 + 3*186*FLEN/8, x4, x1, x2)

inst_20155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000000007ffff; valaddr_reg:x3; val_offset:60465*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60465*0 + 3*187*FLEN/8, x4, x1, x2)

inst_20156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400000000fffff; valaddr_reg:x3; val_offset:60468*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60468*0 + 3*188*FLEN/8, x4, x1, x2)

inst_20157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400000001fffff; valaddr_reg:x3; val_offset:60471*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60471*0 + 3*189*FLEN/8, x4, x1, x2)

inst_20158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400000003fffff; valaddr_reg:x3; val_offset:60474*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60474*0 + 3*190*FLEN/8, x4, x1, x2)

inst_20159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400000007fffff; valaddr_reg:x3; val_offset:60477*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60477*0 + 3*191*FLEN/8, x4, x1, x2)

inst_20160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000000ffffff; valaddr_reg:x3; val_offset:60480*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60480*0 + 3*192*FLEN/8, x4, x1, x2)

inst_20161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000001ffffff; valaddr_reg:x3; val_offset:60483*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60483*0 + 3*193*FLEN/8, x4, x1, x2)

inst_20162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000003ffffff; valaddr_reg:x3; val_offset:60486*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60486*0 + 3*194*FLEN/8, x4, x1, x2)

inst_20163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000007ffffff; valaddr_reg:x3; val_offset:60489*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60489*0 + 3*195*FLEN/8, x4, x1, x2)

inst_20164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000000fffffff; valaddr_reg:x3; val_offset:60492*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60492*0 + 3*196*FLEN/8, x4, x1, x2)

inst_20165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000001fffffff; valaddr_reg:x3; val_offset:60495*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60495*0 + 3*197*FLEN/8, x4, x1, x2)

inst_20166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000003fffffff; valaddr_reg:x3; val_offset:60498*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60498*0 + 3*198*FLEN/8, x4, x1, x2)

inst_20167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000007fffffff; valaddr_reg:x3; val_offset:60501*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60501*0 + 3*199*FLEN/8, x4, x1, x2)

inst_20168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400000ffffffff; valaddr_reg:x3; val_offset:60504*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60504*0 + 3*200*FLEN/8, x4, x1, x2)

inst_20169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400001ffffffff; valaddr_reg:x3; val_offset:60507*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60507*0 + 3*201*FLEN/8, x4, x1, x2)

inst_20170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400003ffffffff; valaddr_reg:x3; val_offset:60510*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60510*0 + 3*202*FLEN/8, x4, x1, x2)

inst_20171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400007ffffffff; valaddr_reg:x3; val_offset:60513*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60513*0 + 3*203*FLEN/8, x4, x1, x2)

inst_20172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40000fffffffff; valaddr_reg:x3; val_offset:60516*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60516*0 + 3*204*FLEN/8, x4, x1, x2)

inst_20173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40001fffffffff; valaddr_reg:x3; val_offset:60519*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60519*0 + 3*205*FLEN/8, x4, x1, x2)

inst_20174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40003fffffffff; valaddr_reg:x3; val_offset:60522*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60522*0 + 3*206*FLEN/8, x4, x1, x2)

inst_20175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40007fffffffff; valaddr_reg:x3; val_offset:60525*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60525*0 + 3*207*FLEN/8, x4, x1, x2)

inst_20176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4000ffffffffff; valaddr_reg:x3; val_offset:60528*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60528*0 + 3*208*FLEN/8, x4, x1, x2)

inst_20177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4001ffffffffff; valaddr_reg:x3; val_offset:60531*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60531*0 + 3*209*FLEN/8, x4, x1, x2)

inst_20178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4003ffffffffff; valaddr_reg:x3; val_offset:60534*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60534*0 + 3*210*FLEN/8, x4, x1, x2)

inst_20179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4007ffffffffff; valaddr_reg:x3; val_offset:60537*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60537*0 + 3*211*FLEN/8, x4, x1, x2)

inst_20180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb400fffffffffff; valaddr_reg:x3; val_offset:60540*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60540*0 + 3*212*FLEN/8, x4, x1, x2)

inst_20181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb401fffffffffff; valaddr_reg:x3; val_offset:60543*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60543*0 + 3*213*FLEN/8, x4, x1, x2)

inst_20182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb403fffffffffff; valaddr_reg:x3; val_offset:60546*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60546*0 + 3*214*FLEN/8, x4, x1, x2)

inst_20183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb407fffffffffff; valaddr_reg:x3; val_offset:60549*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60549*0 + 3*215*FLEN/8, x4, x1, x2)

inst_20184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb40ffffffffffff; valaddr_reg:x3; val_offset:60552*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60552*0 + 3*216*FLEN/8, x4, x1, x2)

inst_20185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb41ffffffffffff; valaddr_reg:x3; val_offset:60555*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60555*0 + 3*217*FLEN/8, x4, x1, x2)

inst_20186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb43ffffffffffff; valaddr_reg:x3; val_offset:60558*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60558*0 + 3*218*FLEN/8, x4, x1, x2)

inst_20187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb47ffffffffffff; valaddr_reg:x3; val_offset:60561*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60561*0 + 3*219*FLEN/8, x4, x1, x2)

inst_20188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb48000000000000; valaddr_reg:x3; val_offset:60564*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60564*0 + 3*220*FLEN/8, x4, x1, x2)

inst_20189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4c000000000000; valaddr_reg:x3; val_offset:60567*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60567*0 + 3*221*FLEN/8, x4, x1, x2)

inst_20190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4e000000000000; valaddr_reg:x3; val_offset:60570*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60570*0 + 3*222*FLEN/8, x4, x1, x2)

inst_20191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4f000000000000; valaddr_reg:x3; val_offset:60573*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60573*0 + 3*223*FLEN/8, x4, x1, x2)

inst_20192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4f800000000000; valaddr_reg:x3; val_offset:60576*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60576*0 + 3*224*FLEN/8, x4, x1, x2)

inst_20193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fc00000000000; valaddr_reg:x3; val_offset:60579*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60579*0 + 3*225*FLEN/8, x4, x1, x2)

inst_20194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fe00000000000; valaddr_reg:x3; val_offset:60582*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60582*0 + 3*226*FLEN/8, x4, x1, x2)

inst_20195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ff00000000000; valaddr_reg:x3; val_offset:60585*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60585*0 + 3*227*FLEN/8, x4, x1, x2)

inst_20196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ff80000000000; valaddr_reg:x3; val_offset:60588*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60588*0 + 3*228*FLEN/8, x4, x1, x2)

inst_20197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffc0000000000; valaddr_reg:x3; val_offset:60591*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60591*0 + 3*229*FLEN/8, x4, x1, x2)

inst_20198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffe0000000000; valaddr_reg:x3; val_offset:60594*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60594*0 + 3*230*FLEN/8, x4, x1, x2)

inst_20199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fff0000000000; valaddr_reg:x3; val_offset:60597*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60597*0 + 3*231*FLEN/8, x4, x1, x2)

inst_20200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fff8000000000; valaddr_reg:x3; val_offset:60600*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60600*0 + 3*232*FLEN/8, x4, x1, x2)

inst_20201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffc000000000; valaddr_reg:x3; val_offset:60603*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60603*0 + 3*233*FLEN/8, x4, x1, x2)

inst_20202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffe000000000; valaddr_reg:x3; val_offset:60606*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60606*0 + 3*234*FLEN/8, x4, x1, x2)

inst_20203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffff000000000; valaddr_reg:x3; val_offset:60609*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60609*0 + 3*235*FLEN/8, x4, x1, x2)

inst_20204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffff800000000; valaddr_reg:x3; val_offset:60612*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60612*0 + 3*236*FLEN/8, x4, x1, x2)

inst_20205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffc00000000; valaddr_reg:x3; val_offset:60615*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60615*0 + 3*237*FLEN/8, x4, x1, x2)

inst_20206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffe00000000; valaddr_reg:x3; val_offset:60618*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60618*0 + 3*238*FLEN/8, x4, x1, x2)

inst_20207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffff00000000; valaddr_reg:x3; val_offset:60621*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60621*0 + 3*239*FLEN/8, x4, x1, x2)

inst_20208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffff80000000; valaddr_reg:x3; val_offset:60624*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60624*0 + 3*240*FLEN/8, x4, x1, x2)

inst_20209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffc0000000; valaddr_reg:x3; val_offset:60627*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60627*0 + 3*241*FLEN/8, x4, x1, x2)

inst_20210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffe0000000; valaddr_reg:x3; val_offset:60630*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60630*0 + 3*242*FLEN/8, x4, x1, x2)

inst_20211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffff0000000; valaddr_reg:x3; val_offset:60633*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60633*0 + 3*243*FLEN/8, x4, x1, x2)

inst_20212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffff8000000; valaddr_reg:x3; val_offset:60636*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60636*0 + 3*244*FLEN/8, x4, x1, x2)

inst_20213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffc000000; valaddr_reg:x3; val_offset:60639*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60639*0 + 3*245*FLEN/8, x4, x1, x2)

inst_20214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffe000000; valaddr_reg:x3; val_offset:60642*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60642*0 + 3*246*FLEN/8, x4, x1, x2)

inst_20215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffff000000; valaddr_reg:x3; val_offset:60645*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60645*0 + 3*247*FLEN/8, x4, x1, x2)

inst_20216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffff800000; valaddr_reg:x3; val_offset:60648*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60648*0 + 3*248*FLEN/8, x4, x1, x2)

inst_20217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffffc00000; valaddr_reg:x3; val_offset:60651*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60651*0 + 3*249*FLEN/8, x4, x1, x2)

inst_20218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffffe00000; valaddr_reg:x3; val_offset:60654*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60654*0 + 3*250*FLEN/8, x4, x1, x2)

inst_20219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffff00000; valaddr_reg:x3; val_offset:60657*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60657*0 + 3*251*FLEN/8, x4, x1, x2)

inst_20220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffff80000; valaddr_reg:x3; val_offset:60660*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60660*0 + 3*252*FLEN/8, x4, x1, x2)

inst_20221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffffc0000; valaddr_reg:x3; val_offset:60663*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60663*0 + 3*253*FLEN/8, x4, x1, x2)

inst_20222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffffe0000; valaddr_reg:x3; val_offset:60666*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60666*0 + 3*254*FLEN/8, x4, x1, x2)

inst_20223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffffff0000; valaddr_reg:x3; val_offset:60669*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60669*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_20224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffffff8000; valaddr_reg:x3; val_offset:60672*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60672*0 + 3*256*FLEN/8, x4, x1, x2)

inst_20225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffffffc000; valaddr_reg:x3; val_offset:60675*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60675*0 + 3*257*FLEN/8, x4, x1, x2)

inst_20226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffffffe000; valaddr_reg:x3; val_offset:60678*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60678*0 + 3*258*FLEN/8, x4, x1, x2)

inst_20227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffffff000; valaddr_reg:x3; val_offset:60681*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60681*0 + 3*259*FLEN/8, x4, x1, x2)

inst_20228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffffff800; valaddr_reg:x3; val_offset:60684*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60684*0 + 3*260*FLEN/8, x4, x1, x2)

inst_20229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffffffc00; valaddr_reg:x3; val_offset:60687*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60687*0 + 3*261*FLEN/8, x4, x1, x2)

inst_20230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffffffe00; valaddr_reg:x3; val_offset:60690*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60690*0 + 3*262*FLEN/8, x4, x1, x2)

inst_20231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffffffff00; valaddr_reg:x3; val_offset:60693*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60693*0 + 3*263*FLEN/8, x4, x1, x2)

inst_20232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffffffff80; valaddr_reg:x3; val_offset:60696*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60696*0 + 3*264*FLEN/8, x4, x1, x2)

inst_20233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffffffffc0; valaddr_reg:x3; val_offset:60699*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60699*0 + 3*265*FLEN/8, x4, x1, x2)

inst_20234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffffffffe0; valaddr_reg:x3; val_offset:60702*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60702*0 + 3*266*FLEN/8, x4, x1, x2)

inst_20235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffffffff0; valaddr_reg:x3; val_offset:60705*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60705*0 + 3*267*FLEN/8, x4, x1, x2)

inst_20236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffffffff8; valaddr_reg:x3; val_offset:60708*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60708*0 + 3*268*FLEN/8, x4, x1, x2)

inst_20237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffffffffc; valaddr_reg:x3; val_offset:60711*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60711*0 + 3*269*FLEN/8, x4, x1, x2)

inst_20238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4ffffffffffffe; valaddr_reg:x3; val_offset:60714*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60714*0 + 3*270*FLEN/8, x4, x1, x2)

inst_20239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbb4fffffffffffff; valaddr_reg:x3; val_offset:60717*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60717*0 + 3*271*FLEN/8, x4, x1, x2)

inst_20240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:60720*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60720*0 + 3*272*FLEN/8, x4, x1, x2)

inst_20241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:60723*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60723*0 + 3*273*FLEN/8, x4, x1, x2)

inst_20242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:60726*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60726*0 + 3*274*FLEN/8, x4, x1, x2)

inst_20243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:60729*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60729*0 + 3*275*FLEN/8, x4, x1, x2)

inst_20244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:60732*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60732*0 + 3*276*FLEN/8, x4, x1, x2)

inst_20245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:60735*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60735*0 + 3*277*FLEN/8, x4, x1, x2)

inst_20246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:60738*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60738*0 + 3*278*FLEN/8, x4, x1, x2)

inst_20247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:60741*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60741*0 + 3*279*FLEN/8, x4, x1, x2)

inst_20248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:60744*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60744*0 + 3*280*FLEN/8, x4, x1, x2)

inst_20249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:60747*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60747*0 + 3*281*FLEN/8, x4, x1, x2)

inst_20250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:60750*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60750*0 + 3*282*FLEN/8, x4, x1, x2)

inst_20251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:60753*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60753*0 + 3*283*FLEN/8, x4, x1, x2)

inst_20252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:60756*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60756*0 + 3*284*FLEN/8, x4, x1, x2)

inst_20253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:60759*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60759*0 + 3*285*FLEN/8, x4, x1, x2)

inst_20254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:60762*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60762*0 + 3*286*FLEN/8, x4, x1, x2)

inst_20255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:60765*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60765*0 + 3*287*FLEN/8, x4, x1, x2)

inst_20256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:60768*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60768*0 + 3*288*FLEN/8, x4, x1, x2)

inst_20257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:60771*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60771*0 + 3*289*FLEN/8, x4, x1, x2)

inst_20258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:60774*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60774*0 + 3*290*FLEN/8, x4, x1, x2)

inst_20259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:60777*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60777*0 + 3*291*FLEN/8, x4, x1, x2)

inst_20260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:60780*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60780*0 + 3*292*FLEN/8, x4, x1, x2)

inst_20261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98a767463fb7b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x40bda7759bbdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898a767463fb7b; op2val:0x9fe40bda7759bbdd;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:60783*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60783*0 + 3*293*FLEN/8, x4, x1, x2)

inst_20262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:60786*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60786*0 + 3*294*FLEN/8, x4, x1, x2)

inst_20263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:60789*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60789*0 + 3*295*FLEN/8, x4, x1, x2)

inst_20264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:60792*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60792*0 + 3*296*FLEN/8, x4, x1, x2)

inst_20265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:60795*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60795*0 + 3*297*FLEN/8, x4, x1, x2)

inst_20266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:60798*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60798*0 + 3*298*FLEN/8, x4, x1, x2)

inst_20267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:60801*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60801*0 + 3*299*FLEN/8, x4, x1, x2)

inst_20268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:60804*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60804*0 + 3*300*FLEN/8, x4, x1, x2)

inst_20269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:60807*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60807*0 + 3*301*FLEN/8, x4, x1, x2)

inst_20270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:60810*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60810*0 + 3*302*FLEN/8, x4, x1, x2)

inst_20271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:60813*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60813*0 + 3*303*FLEN/8, x4, x1, x2)

inst_20272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:60816*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60816*0 + 3*304*FLEN/8, x4, x1, x2)

inst_20273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:60819*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60819*0 + 3*305*FLEN/8, x4, x1, x2)

inst_20274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:60822*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60822*0 + 3*306*FLEN/8, x4, x1, x2)

inst_20275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:60825*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60825*0 + 3*307*FLEN/8, x4, x1, x2)

inst_20276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:60828*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60828*0 + 3*308*FLEN/8, x4, x1, x2)

inst_20277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:60831*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60831*0 + 3*309*FLEN/8, x4, x1, x2)

inst_20278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:60834*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60834*0 + 3*310*FLEN/8, x4, x1, x2)

inst_20279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:60837*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60837*0 + 3*311*FLEN/8, x4, x1, x2)

inst_20280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:60840*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60840*0 + 3*312*FLEN/8, x4, x1, x2)

inst_20281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:60843*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60843*0 + 3*313*FLEN/8, x4, x1, x2)

inst_20282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:60846*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60846*0 + 3*314*FLEN/8, x4, x1, x2)

inst_20283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:60849*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60849*0 + 3*315*FLEN/8, x4, x1, x2)

inst_20284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000000000000; valaddr_reg:x3; val_offset:60852*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60852*0 + 3*316*FLEN/8, x4, x1, x2)

inst_20285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000000000001; valaddr_reg:x3; val_offset:60855*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60855*0 + 3*317*FLEN/8, x4, x1, x2)

inst_20286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000000000003; valaddr_reg:x3; val_offset:60858*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60858*0 + 3*318*FLEN/8, x4, x1, x2)

inst_20287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000000000007; valaddr_reg:x3; val_offset:60861*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60861*0 + 3*319*FLEN/8, x4, x1, x2)

inst_20288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000000000000f; valaddr_reg:x3; val_offset:60864*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60864*0 + 3*320*FLEN/8, x4, x1, x2)

inst_20289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000000000001f; valaddr_reg:x3; val_offset:60867*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60867*0 + 3*321*FLEN/8, x4, x1, x2)

inst_20290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000000000003f; valaddr_reg:x3; val_offset:60870*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60870*0 + 3*322*FLEN/8, x4, x1, x2)

inst_20291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000000000007f; valaddr_reg:x3; val_offset:60873*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60873*0 + 3*323*FLEN/8, x4, x1, x2)

inst_20292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000000000000ff; valaddr_reg:x3; val_offset:60876*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60876*0 + 3*324*FLEN/8, x4, x1, x2)

inst_20293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000000000001ff; valaddr_reg:x3; val_offset:60879*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60879*0 + 3*325*FLEN/8, x4, x1, x2)

inst_20294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000000000003ff; valaddr_reg:x3; val_offset:60882*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60882*0 + 3*326*FLEN/8, x4, x1, x2)

inst_20295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000000000007ff; valaddr_reg:x3; val_offset:60885*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60885*0 + 3*327*FLEN/8, x4, x1, x2)

inst_20296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000000000fff; valaddr_reg:x3; val_offset:60888*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60888*0 + 3*328*FLEN/8, x4, x1, x2)

inst_20297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000000001fff; valaddr_reg:x3; val_offset:60891*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60891*0 + 3*329*FLEN/8, x4, x1, x2)

inst_20298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000000003fff; valaddr_reg:x3; val_offset:60894*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60894*0 + 3*330*FLEN/8, x4, x1, x2)

inst_20299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000000007fff; valaddr_reg:x3; val_offset:60897*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60897*0 + 3*331*FLEN/8, x4, x1, x2)

inst_20300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000000000ffff; valaddr_reg:x3; val_offset:60900*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60900*0 + 3*332*FLEN/8, x4, x1, x2)

inst_20301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000000001ffff; valaddr_reg:x3; val_offset:60903*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60903*0 + 3*333*FLEN/8, x4, x1, x2)

inst_20302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000000003ffff; valaddr_reg:x3; val_offset:60906*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60906*0 + 3*334*FLEN/8, x4, x1, x2)

inst_20303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000000007ffff; valaddr_reg:x3; val_offset:60909*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60909*0 + 3*335*FLEN/8, x4, x1, x2)

inst_20304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000000000fffff; valaddr_reg:x3; val_offset:60912*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60912*0 + 3*336*FLEN/8, x4, x1, x2)

inst_20305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000000001fffff; valaddr_reg:x3; val_offset:60915*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60915*0 + 3*337*FLEN/8, x4, x1, x2)

inst_20306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000000003fffff; valaddr_reg:x3; val_offset:60918*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60918*0 + 3*338*FLEN/8, x4, x1, x2)

inst_20307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000000007fffff; valaddr_reg:x3; val_offset:60921*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60921*0 + 3*339*FLEN/8, x4, x1, x2)

inst_20308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000000ffffff; valaddr_reg:x3; val_offset:60924*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60924*0 + 3*340*FLEN/8, x4, x1, x2)

inst_20309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000001ffffff; valaddr_reg:x3; val_offset:60927*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60927*0 + 3*341*FLEN/8, x4, x1, x2)

inst_20310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000003ffffff; valaddr_reg:x3; val_offset:60930*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60930*0 + 3*342*FLEN/8, x4, x1, x2)

inst_20311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000007ffffff; valaddr_reg:x3; val_offset:60933*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60933*0 + 3*343*FLEN/8, x4, x1, x2)

inst_20312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000000fffffff; valaddr_reg:x3; val_offset:60936*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60936*0 + 3*344*FLEN/8, x4, x1, x2)

inst_20313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000001fffffff; valaddr_reg:x3; val_offset:60939*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60939*0 + 3*345*FLEN/8, x4, x1, x2)

inst_20314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000003fffffff; valaddr_reg:x3; val_offset:60942*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60942*0 + 3*346*FLEN/8, x4, x1, x2)

inst_20315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000007fffffff; valaddr_reg:x3; val_offset:60945*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60945*0 + 3*347*FLEN/8, x4, x1, x2)

inst_20316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000000ffffffff; valaddr_reg:x3; val_offset:60948*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60948*0 + 3*348*FLEN/8, x4, x1, x2)

inst_20317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000001ffffffff; valaddr_reg:x3; val_offset:60951*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60951*0 + 3*349*FLEN/8, x4, x1, x2)

inst_20318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000003ffffffff; valaddr_reg:x3; val_offset:60954*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60954*0 + 3*350*FLEN/8, x4, x1, x2)

inst_20319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000007ffffffff; valaddr_reg:x3; val_offset:60957*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60957*0 + 3*351*FLEN/8, x4, x1, x2)

inst_20320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400000fffffffff; valaddr_reg:x3; val_offset:60960*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60960*0 + 3*352*FLEN/8, x4, x1, x2)

inst_20321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400001fffffffff; valaddr_reg:x3; val_offset:60963*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60963*0 + 3*353*FLEN/8, x4, x1, x2)

inst_20322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400003fffffffff; valaddr_reg:x3; val_offset:60966*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60966*0 + 3*354*FLEN/8, x4, x1, x2)

inst_20323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400007fffffffff; valaddr_reg:x3; val_offset:60969*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60969*0 + 3*355*FLEN/8, x4, x1, x2)

inst_20324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840000ffffffffff; valaddr_reg:x3; val_offset:60972*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60972*0 + 3*356*FLEN/8, x4, x1, x2)

inst_20325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840001ffffffffff; valaddr_reg:x3; val_offset:60975*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60975*0 + 3*357*FLEN/8, x4, x1, x2)

inst_20326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840003ffffffffff; valaddr_reg:x3; val_offset:60978*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60978*0 + 3*358*FLEN/8, x4, x1, x2)

inst_20327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840007ffffffffff; valaddr_reg:x3; val_offset:60981*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60981*0 + 3*359*FLEN/8, x4, x1, x2)

inst_20328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84000fffffffffff; valaddr_reg:x3; val_offset:60984*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60984*0 + 3*360*FLEN/8, x4, x1, x2)

inst_20329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84001fffffffffff; valaddr_reg:x3; val_offset:60987*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60987*0 + 3*361*FLEN/8, x4, x1, x2)

inst_20330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84003fffffffffff; valaddr_reg:x3; val_offset:60990*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60990*0 + 3*362*FLEN/8, x4, x1, x2)

inst_20331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x84007fffffffffff; valaddr_reg:x3; val_offset:60993*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60993*0 + 3*363*FLEN/8, x4, x1, x2)

inst_20332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8400ffffffffffff; valaddr_reg:x3; val_offset:60996*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60996*0 + 3*364*FLEN/8, x4, x1, x2)

inst_20333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8401ffffffffffff; valaddr_reg:x3; val_offset:60999*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60999*0 + 3*365*FLEN/8, x4, x1, x2)

inst_20334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8403ffffffffffff; valaddr_reg:x3; val_offset:61002*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61002*0 + 3*366*FLEN/8, x4, x1, x2)

inst_20335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8407ffffffffffff; valaddr_reg:x3; val_offset:61005*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61005*0 + 3*367*FLEN/8, x4, x1, x2)

inst_20336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x8408000000000000; valaddr_reg:x3; val_offset:61008*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61008*0 + 3*368*FLEN/8, x4, x1, x2)

inst_20337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840c000000000000; valaddr_reg:x3; val_offset:61011*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61011*0 + 3*369*FLEN/8, x4, x1, x2)

inst_20338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840e000000000000; valaddr_reg:x3; val_offset:61014*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61014*0 + 3*370*FLEN/8, x4, x1, x2)

inst_20339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840f000000000000; valaddr_reg:x3; val_offset:61017*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61017*0 + 3*371*FLEN/8, x4, x1, x2)

inst_20340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840f800000000000; valaddr_reg:x3; val_offset:61020*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61020*0 + 3*372*FLEN/8, x4, x1, x2)

inst_20341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fc00000000000; valaddr_reg:x3; val_offset:61023*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61023*0 + 3*373*FLEN/8, x4, x1, x2)

inst_20342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fe00000000000; valaddr_reg:x3; val_offset:61026*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61026*0 + 3*374*FLEN/8, x4, x1, x2)

inst_20343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ff00000000000; valaddr_reg:x3; val_offset:61029*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61029*0 + 3*375*FLEN/8, x4, x1, x2)

inst_20344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ff80000000000; valaddr_reg:x3; val_offset:61032*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61032*0 + 3*376*FLEN/8, x4, x1, x2)

inst_20345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffc0000000000; valaddr_reg:x3; val_offset:61035*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61035*0 + 3*377*FLEN/8, x4, x1, x2)

inst_20346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffe0000000000; valaddr_reg:x3; val_offset:61038*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61038*0 + 3*378*FLEN/8, x4, x1, x2)

inst_20347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fff0000000000; valaddr_reg:x3; val_offset:61041*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61041*0 + 3*379*FLEN/8, x4, x1, x2)

inst_20348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fff8000000000; valaddr_reg:x3; val_offset:61044*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61044*0 + 3*380*FLEN/8, x4, x1, x2)

inst_20349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffc000000000; valaddr_reg:x3; val_offset:61047*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61047*0 + 3*381*FLEN/8, x4, x1, x2)

inst_20350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffe000000000; valaddr_reg:x3; val_offset:61050*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61050*0 + 3*382*FLEN/8, x4, x1, x2)

inst_20351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffff000000000; valaddr_reg:x3; val_offset:61053*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61053*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_20352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffff800000000; valaddr_reg:x3; val_offset:61056*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61056*0 + 3*384*FLEN/8, x4, x1, x2)

inst_20353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffc00000000; valaddr_reg:x3; val_offset:61059*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61059*0 + 3*385*FLEN/8, x4, x1, x2)

inst_20354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffe00000000; valaddr_reg:x3; val_offset:61062*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61062*0 + 3*386*FLEN/8, x4, x1, x2)

inst_20355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffff00000000; valaddr_reg:x3; val_offset:61065*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61065*0 + 3*387*FLEN/8, x4, x1, x2)

inst_20356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffff80000000; valaddr_reg:x3; val_offset:61068*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61068*0 + 3*388*FLEN/8, x4, x1, x2)

inst_20357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffc0000000; valaddr_reg:x3; val_offset:61071*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61071*0 + 3*389*FLEN/8, x4, x1, x2)

inst_20358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffe0000000; valaddr_reg:x3; val_offset:61074*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61074*0 + 3*390*FLEN/8, x4, x1, x2)

inst_20359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffff0000000; valaddr_reg:x3; val_offset:61077*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61077*0 + 3*391*FLEN/8, x4, x1, x2)

inst_20360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffff8000000; valaddr_reg:x3; val_offset:61080*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61080*0 + 3*392*FLEN/8, x4, x1, x2)

inst_20361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffc000000; valaddr_reg:x3; val_offset:61083*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61083*0 + 3*393*FLEN/8, x4, x1, x2)

inst_20362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffe000000; valaddr_reg:x3; val_offset:61086*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61086*0 + 3*394*FLEN/8, x4, x1, x2)

inst_20363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffff000000; valaddr_reg:x3; val_offset:61089*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61089*0 + 3*395*FLEN/8, x4, x1, x2)

inst_20364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffff800000; valaddr_reg:x3; val_offset:61092*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61092*0 + 3*396*FLEN/8, x4, x1, x2)

inst_20365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffffc00000; valaddr_reg:x3; val_offset:61095*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61095*0 + 3*397*FLEN/8, x4, x1, x2)

inst_20366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffffe00000; valaddr_reg:x3; val_offset:61098*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61098*0 + 3*398*FLEN/8, x4, x1, x2)

inst_20367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffff00000; valaddr_reg:x3; val_offset:61101*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61101*0 + 3*399*FLEN/8, x4, x1, x2)

inst_20368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffff80000; valaddr_reg:x3; val_offset:61104*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61104*0 + 3*400*FLEN/8, x4, x1, x2)

inst_20369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffffc0000; valaddr_reg:x3; val_offset:61107*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61107*0 + 3*401*FLEN/8, x4, x1, x2)

inst_20370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffffe0000; valaddr_reg:x3; val_offset:61110*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61110*0 + 3*402*FLEN/8, x4, x1, x2)

inst_20371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffffff0000; valaddr_reg:x3; val_offset:61113*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61113*0 + 3*403*FLEN/8, x4, x1, x2)

inst_20372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffffff8000; valaddr_reg:x3; val_offset:61116*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61116*0 + 3*404*FLEN/8, x4, x1, x2)

inst_20373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffffffc000; valaddr_reg:x3; val_offset:61119*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61119*0 + 3*405*FLEN/8, x4, x1, x2)

inst_20374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffffffe000; valaddr_reg:x3; val_offset:61122*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61122*0 + 3*406*FLEN/8, x4, x1, x2)

inst_20375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffffff000; valaddr_reg:x3; val_offset:61125*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61125*0 + 3*407*FLEN/8, x4, x1, x2)

inst_20376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffffff800; valaddr_reg:x3; val_offset:61128*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61128*0 + 3*408*FLEN/8, x4, x1, x2)

inst_20377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffffffc00; valaddr_reg:x3; val_offset:61131*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61131*0 + 3*409*FLEN/8, x4, x1, x2)

inst_20378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffffffe00; valaddr_reg:x3; val_offset:61134*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61134*0 + 3*410*FLEN/8, x4, x1, x2)

inst_20379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffffffff00; valaddr_reg:x3; val_offset:61137*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61137*0 + 3*411*FLEN/8, x4, x1, x2)

inst_20380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffffffff80; valaddr_reg:x3; val_offset:61140*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61140*0 + 3*412*FLEN/8, x4, x1, x2)

inst_20381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffffffffc0; valaddr_reg:x3; val_offset:61143*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61143*0 + 3*413*FLEN/8, x4, x1, x2)

inst_20382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffffffffe0; valaddr_reg:x3; val_offset:61146*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61146*0 + 3*414*FLEN/8, x4, x1, x2)

inst_20383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffffffff0; valaddr_reg:x3; val_offset:61149*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61149*0 + 3*415*FLEN/8, x4, x1, x2)

inst_20384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffffffff8; valaddr_reg:x3; val_offset:61152*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61152*0 + 3*416*FLEN/8, x4, x1, x2)

inst_20385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffffffffc; valaddr_reg:x3; val_offset:61155*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61155*0 + 3*417*FLEN/8, x4, x1, x2)

inst_20386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840ffffffffffffe; valaddr_reg:x3; val_offset:61158*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61158*0 + 3*418*FLEN/8, x4, x1, x2)

inst_20387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f898cb938bd0d9b; op2val:0x8000;
op3val:0x840fffffffffffff; valaddr_reg:x3; val_offset:61161*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61161*0 + 3*419*FLEN/8, x4, x1, x2)

inst_20388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:61164*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61164*0 + 3*420*FLEN/8, x4, x1, x2)

inst_20389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:61167*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61167*0 + 3*421*FLEN/8, x4, x1, x2)

inst_20390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:61170*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61170*0 + 3*422*FLEN/8, x4, x1, x2)

inst_20391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:61173*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61173*0 + 3*423*FLEN/8, x4, x1, x2)

inst_20392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:61176*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61176*0 + 3*424*FLEN/8, x4, x1, x2)

inst_20393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:61179*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61179*0 + 3*425*FLEN/8, x4, x1, x2)

inst_20394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:61182*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61182*0 + 3*426*FLEN/8, x4, x1, x2)

inst_20395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:61185*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61185*0 + 3*427*FLEN/8, x4, x1, x2)

inst_20396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:61188*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61188*0 + 3*428*FLEN/8, x4, x1, x2)

inst_20397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:61191*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61191*0 + 3*429*FLEN/8, x4, x1, x2)

inst_20398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:61194*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61194*0 + 3*430*FLEN/8, x4, x1, x2)

inst_20399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:61197*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61197*0 + 3*431*FLEN/8, x4, x1, x2)

inst_20400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:61200*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61200*0 + 3*432*FLEN/8, x4, x1, x2)

inst_20401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:61203*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61203*0 + 3*433*FLEN/8, x4, x1, x2)

inst_20402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:61206*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61206*0 + 3*434*FLEN/8, x4, x1, x2)

inst_20403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:61209*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61209*0 + 3*435*FLEN/8, x4, x1, x2)

inst_20404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:61212*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61212*0 + 3*436*FLEN/8, x4, x1, x2)

inst_20405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:61215*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61215*0 + 3*437*FLEN/8, x4, x1, x2)

inst_20406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:61218*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61218*0 + 3*438*FLEN/8, x4, x1, x2)

inst_20407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:61221*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61221*0 + 3*439*FLEN/8, x4, x1, x2)

inst_20408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:61224*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61224*0 + 3*440*FLEN/8, x4, x1, x2)

inst_20409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:61227*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61227*0 + 3*441*FLEN/8, x4, x1, x2)

inst_20410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000000000000; valaddr_reg:x3; val_offset:61230*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61230*0 + 3*442*FLEN/8, x4, x1, x2)

inst_20411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000000000001; valaddr_reg:x3; val_offset:61233*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61233*0 + 3*443*FLEN/8, x4, x1, x2)

inst_20412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000000000003; valaddr_reg:x3; val_offset:61236*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61236*0 + 3*444*FLEN/8, x4, x1, x2)

inst_20413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000000000007; valaddr_reg:x3; val_offset:61239*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61239*0 + 3*445*FLEN/8, x4, x1, x2)

inst_20414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000000000000f; valaddr_reg:x3; val_offset:61242*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61242*0 + 3*446*FLEN/8, x4, x1, x2)

inst_20415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000000000001f; valaddr_reg:x3; val_offset:61245*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61245*0 + 3*447*FLEN/8, x4, x1, x2)

inst_20416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000000000003f; valaddr_reg:x3; val_offset:61248*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61248*0 + 3*448*FLEN/8, x4, x1, x2)

inst_20417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000000000007f; valaddr_reg:x3; val_offset:61251*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61251*0 + 3*449*FLEN/8, x4, x1, x2)

inst_20418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200000000000ff; valaddr_reg:x3; val_offset:61254*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61254*0 + 3*450*FLEN/8, x4, x1, x2)

inst_20419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200000000001ff; valaddr_reg:x3; val_offset:61257*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61257*0 + 3*451*FLEN/8, x4, x1, x2)

inst_20420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200000000003ff; valaddr_reg:x3; val_offset:61260*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61260*0 + 3*452*FLEN/8, x4, x1, x2)

inst_20421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200000000007ff; valaddr_reg:x3; val_offset:61263*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61263*0 + 3*453*FLEN/8, x4, x1, x2)

inst_20422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000000000fff; valaddr_reg:x3; val_offset:61266*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61266*0 + 3*454*FLEN/8, x4, x1, x2)

inst_20423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000000001fff; valaddr_reg:x3; val_offset:61269*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61269*0 + 3*455*FLEN/8, x4, x1, x2)

inst_20424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000000003fff; valaddr_reg:x3; val_offset:61272*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61272*0 + 3*456*FLEN/8, x4, x1, x2)

inst_20425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000000007fff; valaddr_reg:x3; val_offset:61275*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61275*0 + 3*457*FLEN/8, x4, x1, x2)

inst_20426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000000000ffff; valaddr_reg:x3; val_offset:61278*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61278*0 + 3*458*FLEN/8, x4, x1, x2)

inst_20427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000000001ffff; valaddr_reg:x3; val_offset:61281*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61281*0 + 3*459*FLEN/8, x4, x1, x2)

inst_20428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000000003ffff; valaddr_reg:x3; val_offset:61284*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61284*0 + 3*460*FLEN/8, x4, x1, x2)

inst_20429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000000007ffff; valaddr_reg:x3; val_offset:61287*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61287*0 + 3*461*FLEN/8, x4, x1, x2)

inst_20430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200000000fffff; valaddr_reg:x3; val_offset:61290*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61290*0 + 3*462*FLEN/8, x4, x1, x2)

inst_20431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200000001fffff; valaddr_reg:x3; val_offset:61293*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61293*0 + 3*463*FLEN/8, x4, x1, x2)

inst_20432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200000003fffff; valaddr_reg:x3; val_offset:61296*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61296*0 + 3*464*FLEN/8, x4, x1, x2)

inst_20433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200000007fffff; valaddr_reg:x3; val_offset:61299*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61299*0 + 3*465*FLEN/8, x4, x1, x2)

inst_20434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000000ffffff; valaddr_reg:x3; val_offset:61302*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61302*0 + 3*466*FLEN/8, x4, x1, x2)

inst_20435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000001ffffff; valaddr_reg:x3; val_offset:61305*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61305*0 + 3*467*FLEN/8, x4, x1, x2)

inst_20436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000003ffffff; valaddr_reg:x3; val_offset:61308*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61308*0 + 3*468*FLEN/8, x4, x1, x2)

inst_20437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000007ffffff; valaddr_reg:x3; val_offset:61311*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61311*0 + 3*469*FLEN/8, x4, x1, x2)

inst_20438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000000fffffff; valaddr_reg:x3; val_offset:61314*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61314*0 + 3*470*FLEN/8, x4, x1, x2)

inst_20439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000001fffffff; valaddr_reg:x3; val_offset:61317*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61317*0 + 3*471*FLEN/8, x4, x1, x2)

inst_20440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000003fffffff; valaddr_reg:x3; val_offset:61320*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61320*0 + 3*472*FLEN/8, x4, x1, x2)

inst_20441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000007fffffff; valaddr_reg:x3; val_offset:61323*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61323*0 + 3*473*FLEN/8, x4, x1, x2)

inst_20442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200000ffffffff; valaddr_reg:x3; val_offset:61326*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61326*0 + 3*474*FLEN/8, x4, x1, x2)

inst_20443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200001ffffffff; valaddr_reg:x3; val_offset:61329*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61329*0 + 3*475*FLEN/8, x4, x1, x2)

inst_20444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200003ffffffff; valaddr_reg:x3; val_offset:61332*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61332*0 + 3*476*FLEN/8, x4, x1, x2)

inst_20445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200007ffffffff; valaddr_reg:x3; val_offset:61335*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61335*0 + 3*477*FLEN/8, x4, x1, x2)

inst_20446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120000fffffffff; valaddr_reg:x3; val_offset:61338*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61338*0 + 3*478*FLEN/8, x4, x1, x2)

inst_20447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120001fffffffff; valaddr_reg:x3; val_offset:61341*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61341*0 + 3*479*FLEN/8, x4, x1, x2)

inst_20448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120003fffffffff; valaddr_reg:x3; val_offset:61344*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61344*0 + 3*480*FLEN/8, x4, x1, x2)

inst_20449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120007fffffffff; valaddr_reg:x3; val_offset:61347*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61347*0 + 3*481*FLEN/8, x4, x1, x2)

inst_20450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812000ffffffffff; valaddr_reg:x3; val_offset:61350*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61350*0 + 3*482*FLEN/8, x4, x1, x2)

inst_20451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812001ffffffffff; valaddr_reg:x3; val_offset:61353*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61353*0 + 3*483*FLEN/8, x4, x1, x2)

inst_20452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812003ffffffffff; valaddr_reg:x3; val_offset:61356*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61356*0 + 3*484*FLEN/8, x4, x1, x2)

inst_20453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812007ffffffffff; valaddr_reg:x3; val_offset:61359*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61359*0 + 3*485*FLEN/8, x4, x1, x2)

inst_20454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81200fffffffffff; valaddr_reg:x3; val_offset:61362*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61362*0 + 3*486*FLEN/8, x4, x1, x2)

inst_20455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81201fffffffffff; valaddr_reg:x3; val_offset:61365*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61365*0 + 3*487*FLEN/8, x4, x1, x2)

inst_20456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81203fffffffffff; valaddr_reg:x3; val_offset:61368*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61368*0 + 3*488*FLEN/8, x4, x1, x2)

inst_20457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x81207fffffffffff; valaddr_reg:x3; val_offset:61371*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61371*0 + 3*489*FLEN/8, x4, x1, x2)

inst_20458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8120ffffffffffff; valaddr_reg:x3; val_offset:61374*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61374*0 + 3*490*FLEN/8, x4, x1, x2)

inst_20459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8121ffffffffffff; valaddr_reg:x3; val_offset:61377*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61377*0 + 3*491*FLEN/8, x4, x1, x2)

inst_20460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8123ffffffffffff; valaddr_reg:x3; val_offset:61380*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61380*0 + 3*492*FLEN/8, x4, x1, x2)

inst_20461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8127ffffffffffff; valaddr_reg:x3; val_offset:61383*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61383*0 + 3*493*FLEN/8, x4, x1, x2)

inst_20462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x8128000000000000; valaddr_reg:x3; val_offset:61386*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61386*0 + 3*494*FLEN/8, x4, x1, x2)

inst_20463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812c000000000000; valaddr_reg:x3; val_offset:61389*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61389*0 + 3*495*FLEN/8, x4, x1, x2)

inst_20464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812e000000000000; valaddr_reg:x3; val_offset:61392*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61392*0 + 3*496*FLEN/8, x4, x1, x2)

inst_20465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812f000000000000; valaddr_reg:x3; val_offset:61395*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61395*0 + 3*497*FLEN/8, x4, x1, x2)

inst_20466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812f800000000000; valaddr_reg:x3; val_offset:61398*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61398*0 + 3*498*FLEN/8, x4, x1, x2)

inst_20467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fc00000000000; valaddr_reg:x3; val_offset:61401*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61401*0 + 3*499*FLEN/8, x4, x1, x2)

inst_20468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fe00000000000; valaddr_reg:x3; val_offset:61404*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61404*0 + 3*500*FLEN/8, x4, x1, x2)

inst_20469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ff00000000000; valaddr_reg:x3; val_offset:61407*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61407*0 + 3*501*FLEN/8, x4, x1, x2)

inst_20470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ff80000000000; valaddr_reg:x3; val_offset:61410*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61410*0 + 3*502*FLEN/8, x4, x1, x2)

inst_20471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffc0000000000; valaddr_reg:x3; val_offset:61413*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61413*0 + 3*503*FLEN/8, x4, x1, x2)

inst_20472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffe0000000000; valaddr_reg:x3; val_offset:61416*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61416*0 + 3*504*FLEN/8, x4, x1, x2)

inst_20473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fff0000000000; valaddr_reg:x3; val_offset:61419*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61419*0 + 3*505*FLEN/8, x4, x1, x2)

inst_20474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fff8000000000; valaddr_reg:x3; val_offset:61422*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61422*0 + 3*506*FLEN/8, x4, x1, x2)

inst_20475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffc000000000; valaddr_reg:x3; val_offset:61425*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61425*0 + 3*507*FLEN/8, x4, x1, x2)

inst_20476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffe000000000; valaddr_reg:x3; val_offset:61428*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61428*0 + 3*508*FLEN/8, x4, x1, x2)

inst_20477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffff000000000; valaddr_reg:x3; val_offset:61431*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61431*0 + 3*509*FLEN/8, x4, x1, x2)

inst_20478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffff800000000; valaddr_reg:x3; val_offset:61434*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61434*0 + 3*510*FLEN/8, x4, x1, x2)

inst_20479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffc00000000; valaddr_reg:x3; val_offset:61437*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61437*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_20480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffe00000000; valaddr_reg:x3; val_offset:61440*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61440*0 + 3*512*FLEN/8, x4, x1, x2)

inst_20481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffff00000000; valaddr_reg:x3; val_offset:61443*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61443*0 + 3*513*FLEN/8, x4, x1, x2)

inst_20482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffff80000000; valaddr_reg:x3; val_offset:61446*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61446*0 + 3*514*FLEN/8, x4, x1, x2)

inst_20483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffc0000000; valaddr_reg:x3; val_offset:61449*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61449*0 + 3*515*FLEN/8, x4, x1, x2)

inst_20484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffe0000000; valaddr_reg:x3; val_offset:61452*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61452*0 + 3*516*FLEN/8, x4, x1, x2)

inst_20485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffff0000000; valaddr_reg:x3; val_offset:61455*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61455*0 + 3*517*FLEN/8, x4, x1, x2)

inst_20486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffff8000000; valaddr_reg:x3; val_offset:61458*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61458*0 + 3*518*FLEN/8, x4, x1, x2)

inst_20487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffc000000; valaddr_reg:x3; val_offset:61461*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61461*0 + 3*519*FLEN/8, x4, x1, x2)

inst_20488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffe000000; valaddr_reg:x3; val_offset:61464*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61464*0 + 3*520*FLEN/8, x4, x1, x2)

inst_20489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffff000000; valaddr_reg:x3; val_offset:61467*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61467*0 + 3*521*FLEN/8, x4, x1, x2)

inst_20490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffff800000; valaddr_reg:x3; val_offset:61470*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61470*0 + 3*522*FLEN/8, x4, x1, x2)

inst_20491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffffc00000; valaddr_reg:x3; val_offset:61473*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61473*0 + 3*523*FLEN/8, x4, x1, x2)

inst_20492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffffe00000; valaddr_reg:x3; val_offset:61476*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61476*0 + 3*524*FLEN/8, x4, x1, x2)

inst_20493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffff00000; valaddr_reg:x3; val_offset:61479*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61479*0 + 3*525*FLEN/8, x4, x1, x2)

inst_20494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffff80000; valaddr_reg:x3; val_offset:61482*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61482*0 + 3*526*FLEN/8, x4, x1, x2)

inst_20495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffffc0000; valaddr_reg:x3; val_offset:61485*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61485*0 + 3*527*FLEN/8, x4, x1, x2)

inst_20496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffffe0000; valaddr_reg:x3; val_offset:61488*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61488*0 + 3*528*FLEN/8, x4, x1, x2)

inst_20497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffffff0000; valaddr_reg:x3; val_offset:61491*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61491*0 + 3*529*FLEN/8, x4, x1, x2)

inst_20498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffffff8000; valaddr_reg:x3; val_offset:61494*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61494*0 + 3*530*FLEN/8, x4, x1, x2)

inst_20499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffffffc000; valaddr_reg:x3; val_offset:61497*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61497*0 + 3*531*FLEN/8, x4, x1, x2)

inst_20500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffffffe000; valaddr_reg:x3; val_offset:61500*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61500*0 + 3*532*FLEN/8, x4, x1, x2)

inst_20501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffffff000; valaddr_reg:x3; val_offset:61503*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61503*0 + 3*533*FLEN/8, x4, x1, x2)

inst_20502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffffff800; valaddr_reg:x3; val_offset:61506*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61506*0 + 3*534*FLEN/8, x4, x1, x2)

inst_20503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffffffc00; valaddr_reg:x3; val_offset:61509*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61509*0 + 3*535*FLEN/8, x4, x1, x2)

inst_20504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffffffe00; valaddr_reg:x3; val_offset:61512*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61512*0 + 3*536*FLEN/8, x4, x1, x2)

inst_20505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffffffff00; valaddr_reg:x3; val_offset:61515*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61515*0 + 3*537*FLEN/8, x4, x1, x2)

inst_20506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffffffff80; valaddr_reg:x3; val_offset:61518*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61518*0 + 3*538*FLEN/8, x4, x1, x2)

inst_20507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffffffffc0; valaddr_reg:x3; val_offset:61521*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61521*0 + 3*539*FLEN/8, x4, x1, x2)

inst_20508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffffffffe0; valaddr_reg:x3; val_offset:61524*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61524*0 + 3*540*FLEN/8, x4, x1, x2)

inst_20509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffffffff0; valaddr_reg:x3; val_offset:61527*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61527*0 + 3*541*FLEN/8, x4, x1, x2)

inst_20510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffffffff8; valaddr_reg:x3; val_offset:61530*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61530*0 + 3*542*FLEN/8, x4, x1, x2)

inst_20511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffffffffc; valaddr_reg:x3; val_offset:61533*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61533*0 + 3*543*FLEN/8, x4, x1, x2)

inst_20512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812ffffffffffffe; valaddr_reg:x3; val_offset:61536*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61536*0 + 3*544*FLEN/8, x4, x1, x2)

inst_20513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9bf8406e02163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89bf8406e02163; op2val:0x8000;
op3val:0x812fffffffffffff; valaddr_reg:x3; val_offset:61539*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61539*0 + 3*545*FLEN/8, x4, x1, x2)

inst_20514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:61542*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61542*0 + 3*546*FLEN/8, x4, x1, x2)

inst_20515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:61545*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61545*0 + 3*547*FLEN/8, x4, x1, x2)

inst_20516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:61548*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61548*0 + 3*548*FLEN/8, x4, x1, x2)

inst_20517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:61551*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61551*0 + 3*549*FLEN/8, x4, x1, x2)

inst_20518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:61554*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61554*0 + 3*550*FLEN/8, x4, x1, x2)

inst_20519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:61557*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61557*0 + 3*551*FLEN/8, x4, x1, x2)

inst_20520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:61560*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61560*0 + 3*552*FLEN/8, x4, x1, x2)

inst_20521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:61563*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61563*0 + 3*553*FLEN/8, x4, x1, x2)

inst_20522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:61566*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61566*0 + 3*554*FLEN/8, x4, x1, x2)

inst_20523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:61569*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61569*0 + 3*555*FLEN/8, x4, x1, x2)

inst_20524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:61572*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61572*0 + 3*556*FLEN/8, x4, x1, x2)

inst_20525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:61575*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61575*0 + 3*557*FLEN/8, x4, x1, x2)

inst_20526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:61578*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61578*0 + 3*558*FLEN/8, x4, x1, x2)

inst_20527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:61581*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61581*0 + 3*559*FLEN/8, x4, x1, x2)

inst_20528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:61584*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61584*0 + 3*560*FLEN/8, x4, x1, x2)

inst_20529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:61587*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61587*0 + 3*561*FLEN/8, x4, x1, x2)

inst_20530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:61590*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61590*0 + 3*562*FLEN/8, x4, x1, x2)

inst_20531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:61593*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61593*0 + 3*563*FLEN/8, x4, x1, x2)

inst_20532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:61596*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61596*0 + 3*564*FLEN/8, x4, x1, x2)

inst_20533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:61599*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61599*0 + 3*565*FLEN/8, x4, x1, x2)

inst_20534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:61602*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61602*0 + 3*566*FLEN/8, x4, x1, x2)

inst_20535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:61605*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61605*0 + 3*567*FLEN/8, x4, x1, x2)

inst_20536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000000000000; valaddr_reg:x3; val_offset:61608*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61608*0 + 3*568*FLEN/8, x4, x1, x2)

inst_20537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000000000001; valaddr_reg:x3; val_offset:61611*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61611*0 + 3*569*FLEN/8, x4, x1, x2)

inst_20538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000000000003; valaddr_reg:x3; val_offset:61614*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61614*0 + 3*570*FLEN/8, x4, x1, x2)

inst_20539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000000000007; valaddr_reg:x3; val_offset:61617*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61617*0 + 3*571*FLEN/8, x4, x1, x2)

inst_20540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000000000000f; valaddr_reg:x3; val_offset:61620*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61620*0 + 3*572*FLEN/8, x4, x1, x2)

inst_20541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000000000001f; valaddr_reg:x3; val_offset:61623*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61623*0 + 3*573*FLEN/8, x4, x1, x2)

inst_20542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000000000003f; valaddr_reg:x3; val_offset:61626*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61626*0 + 3*574*FLEN/8, x4, x1, x2)

inst_20543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000000000007f; valaddr_reg:x3; val_offset:61629*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61629*0 + 3*575*FLEN/8, x4, x1, x2)

inst_20544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700000000000ff; valaddr_reg:x3; val_offset:61632*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61632*0 + 3*576*FLEN/8, x4, x1, x2)

inst_20545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700000000001ff; valaddr_reg:x3; val_offset:61635*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61635*0 + 3*577*FLEN/8, x4, x1, x2)

inst_20546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700000000003ff; valaddr_reg:x3; val_offset:61638*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61638*0 + 3*578*FLEN/8, x4, x1, x2)

inst_20547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700000000007ff; valaddr_reg:x3; val_offset:61641*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61641*0 + 3*579*FLEN/8, x4, x1, x2)

inst_20548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000000000fff; valaddr_reg:x3; val_offset:61644*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61644*0 + 3*580*FLEN/8, x4, x1, x2)

inst_20549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000000001fff; valaddr_reg:x3; val_offset:61647*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61647*0 + 3*581*FLEN/8, x4, x1, x2)

inst_20550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000000003fff; valaddr_reg:x3; val_offset:61650*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61650*0 + 3*582*FLEN/8, x4, x1, x2)

inst_20551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000000007fff; valaddr_reg:x3; val_offset:61653*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61653*0 + 3*583*FLEN/8, x4, x1, x2)

inst_20552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000000000ffff; valaddr_reg:x3; val_offset:61656*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61656*0 + 3*584*FLEN/8, x4, x1, x2)

inst_20553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000000001ffff; valaddr_reg:x3; val_offset:61659*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61659*0 + 3*585*FLEN/8, x4, x1, x2)

inst_20554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000000003ffff; valaddr_reg:x3; val_offset:61662*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61662*0 + 3*586*FLEN/8, x4, x1, x2)

inst_20555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000000007ffff; valaddr_reg:x3; val_offset:61665*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61665*0 + 3*587*FLEN/8, x4, x1, x2)

inst_20556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700000000fffff; valaddr_reg:x3; val_offset:61668*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61668*0 + 3*588*FLEN/8, x4, x1, x2)

inst_20557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700000001fffff; valaddr_reg:x3; val_offset:61671*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61671*0 + 3*589*FLEN/8, x4, x1, x2)

inst_20558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700000003fffff; valaddr_reg:x3; val_offset:61674*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61674*0 + 3*590*FLEN/8, x4, x1, x2)

inst_20559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700000007fffff; valaddr_reg:x3; val_offset:61677*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61677*0 + 3*591*FLEN/8, x4, x1, x2)

inst_20560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000000ffffff; valaddr_reg:x3; val_offset:61680*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61680*0 + 3*592*FLEN/8, x4, x1, x2)

inst_20561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000001ffffff; valaddr_reg:x3; val_offset:61683*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61683*0 + 3*593*FLEN/8, x4, x1, x2)

inst_20562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000003ffffff; valaddr_reg:x3; val_offset:61686*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61686*0 + 3*594*FLEN/8, x4, x1, x2)

inst_20563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000007ffffff; valaddr_reg:x3; val_offset:61689*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61689*0 + 3*595*FLEN/8, x4, x1, x2)

inst_20564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000000fffffff; valaddr_reg:x3; val_offset:61692*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61692*0 + 3*596*FLEN/8, x4, x1, x2)

inst_20565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000001fffffff; valaddr_reg:x3; val_offset:61695*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61695*0 + 3*597*FLEN/8, x4, x1, x2)

inst_20566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000003fffffff; valaddr_reg:x3; val_offset:61698*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61698*0 + 3*598*FLEN/8, x4, x1, x2)

inst_20567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000007fffffff; valaddr_reg:x3; val_offset:61701*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61701*0 + 3*599*FLEN/8, x4, x1, x2)

inst_20568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700000ffffffff; valaddr_reg:x3; val_offset:61704*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61704*0 + 3*600*FLEN/8, x4, x1, x2)

inst_20569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700001ffffffff; valaddr_reg:x3; val_offset:61707*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61707*0 + 3*601*FLEN/8, x4, x1, x2)

inst_20570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700003ffffffff; valaddr_reg:x3; val_offset:61710*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61710*0 + 3*602*FLEN/8, x4, x1, x2)

inst_20571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700007ffffffff; valaddr_reg:x3; val_offset:61713*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61713*0 + 3*603*FLEN/8, x4, x1, x2)

inst_20572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170000fffffffff; valaddr_reg:x3; val_offset:61716*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61716*0 + 3*604*FLEN/8, x4, x1, x2)

inst_20573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170001fffffffff; valaddr_reg:x3; val_offset:61719*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61719*0 + 3*605*FLEN/8, x4, x1, x2)

inst_20574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170003fffffffff; valaddr_reg:x3; val_offset:61722*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61722*0 + 3*606*FLEN/8, x4, x1, x2)

inst_20575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170007fffffffff; valaddr_reg:x3; val_offset:61725*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61725*0 + 3*607*FLEN/8, x4, x1, x2)

inst_20576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17000ffffffffff; valaddr_reg:x3; val_offset:61728*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61728*0 + 3*608*FLEN/8, x4, x1, x2)

inst_20577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17001ffffffffff; valaddr_reg:x3; val_offset:61731*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61731*0 + 3*609*FLEN/8, x4, x1, x2)

inst_20578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17003ffffffffff; valaddr_reg:x3; val_offset:61734*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61734*0 + 3*610*FLEN/8, x4, x1, x2)

inst_20579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17007ffffffffff; valaddr_reg:x3; val_offset:61737*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61737*0 + 3*611*FLEN/8, x4, x1, x2)

inst_20580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1700fffffffffff; valaddr_reg:x3; val_offset:61740*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61740*0 + 3*612*FLEN/8, x4, x1, x2)

inst_20581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1701fffffffffff; valaddr_reg:x3; val_offset:61743*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61743*0 + 3*613*FLEN/8, x4, x1, x2)

inst_20582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1703fffffffffff; valaddr_reg:x3; val_offset:61746*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61746*0 + 3*614*FLEN/8, x4, x1, x2)

inst_20583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x1707fffffffffff; valaddr_reg:x3; val_offset:61749*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61749*0 + 3*615*FLEN/8, x4, x1, x2)

inst_20584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x170ffffffffffff; valaddr_reg:x3; val_offset:61752*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61752*0 + 3*616*FLEN/8, x4, x1, x2)

inst_20585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x171ffffffffffff; valaddr_reg:x3; val_offset:61755*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61755*0 + 3*617*FLEN/8, x4, x1, x2)

inst_20586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x173ffffffffffff; valaddr_reg:x3; val_offset:61758*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61758*0 + 3*618*FLEN/8, x4, x1, x2)

inst_20587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x177ffffffffffff; valaddr_reg:x3; val_offset:61761*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61761*0 + 3*619*FLEN/8, x4, x1, x2)

inst_20588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x178000000000000; valaddr_reg:x3; val_offset:61764*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61764*0 + 3*620*FLEN/8, x4, x1, x2)

inst_20589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17c000000000000; valaddr_reg:x3; val_offset:61767*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61767*0 + 3*621*FLEN/8, x4, x1, x2)

inst_20590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17e000000000000; valaddr_reg:x3; val_offset:61770*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61770*0 + 3*622*FLEN/8, x4, x1, x2)

inst_20591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17f000000000000; valaddr_reg:x3; val_offset:61773*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61773*0 + 3*623*FLEN/8, x4, x1, x2)

inst_20592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17f800000000000; valaddr_reg:x3; val_offset:61776*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61776*0 + 3*624*FLEN/8, x4, x1, x2)

inst_20593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fc00000000000; valaddr_reg:x3; val_offset:61779*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61779*0 + 3*625*FLEN/8, x4, x1, x2)

inst_20594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fe00000000000; valaddr_reg:x3; val_offset:61782*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61782*0 + 3*626*FLEN/8, x4, x1, x2)

inst_20595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ff00000000000; valaddr_reg:x3; val_offset:61785*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61785*0 + 3*627*FLEN/8, x4, x1, x2)

inst_20596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ff80000000000; valaddr_reg:x3; val_offset:61788*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61788*0 + 3*628*FLEN/8, x4, x1, x2)

inst_20597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffc0000000000; valaddr_reg:x3; val_offset:61791*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61791*0 + 3*629*FLEN/8, x4, x1, x2)

inst_20598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffe0000000000; valaddr_reg:x3; val_offset:61794*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61794*0 + 3*630*FLEN/8, x4, x1, x2)

inst_20599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fff0000000000; valaddr_reg:x3; val_offset:61797*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61797*0 + 3*631*FLEN/8, x4, x1, x2)

inst_20600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fff8000000000; valaddr_reg:x3; val_offset:61800*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61800*0 + 3*632*FLEN/8, x4, x1, x2)

inst_20601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffc000000000; valaddr_reg:x3; val_offset:61803*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61803*0 + 3*633*FLEN/8, x4, x1, x2)

inst_20602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffe000000000; valaddr_reg:x3; val_offset:61806*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61806*0 + 3*634*FLEN/8, x4, x1, x2)

inst_20603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffff000000000; valaddr_reg:x3; val_offset:61809*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61809*0 + 3*635*FLEN/8, x4, x1, x2)

inst_20604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffff800000000; valaddr_reg:x3; val_offset:61812*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61812*0 + 3*636*FLEN/8, x4, x1, x2)

inst_20605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffc00000000; valaddr_reg:x3; val_offset:61815*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61815*0 + 3*637*FLEN/8, x4, x1, x2)

inst_20606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffe00000000; valaddr_reg:x3; val_offset:61818*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61818*0 + 3*638*FLEN/8, x4, x1, x2)

inst_20607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffff00000000; valaddr_reg:x3; val_offset:61821*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61821*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_20608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffff80000000; valaddr_reg:x3; val_offset:61824*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61824*0 + 3*640*FLEN/8, x4, x1, x2)

inst_20609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffc0000000; valaddr_reg:x3; val_offset:61827*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61827*0 + 3*641*FLEN/8, x4, x1, x2)

inst_20610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffe0000000; valaddr_reg:x3; val_offset:61830*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61830*0 + 3*642*FLEN/8, x4, x1, x2)

inst_20611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffff0000000; valaddr_reg:x3; val_offset:61833*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61833*0 + 3*643*FLEN/8, x4, x1, x2)

inst_20612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffff8000000; valaddr_reg:x3; val_offset:61836*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61836*0 + 3*644*FLEN/8, x4, x1, x2)

inst_20613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffc000000; valaddr_reg:x3; val_offset:61839*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61839*0 + 3*645*FLEN/8, x4, x1, x2)

inst_20614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffe000000; valaddr_reg:x3; val_offset:61842*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61842*0 + 3*646*FLEN/8, x4, x1, x2)

inst_20615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffff000000; valaddr_reg:x3; val_offset:61845*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61845*0 + 3*647*FLEN/8, x4, x1, x2)

inst_20616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffff800000; valaddr_reg:x3; val_offset:61848*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61848*0 + 3*648*FLEN/8, x4, x1, x2)

inst_20617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffffc00000; valaddr_reg:x3; val_offset:61851*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61851*0 + 3*649*FLEN/8, x4, x1, x2)

inst_20618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffffe00000; valaddr_reg:x3; val_offset:61854*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61854*0 + 3*650*FLEN/8, x4, x1, x2)

inst_20619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffff00000; valaddr_reg:x3; val_offset:61857*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61857*0 + 3*651*FLEN/8, x4, x1, x2)

inst_20620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffff80000; valaddr_reg:x3; val_offset:61860*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61860*0 + 3*652*FLEN/8, x4, x1, x2)

inst_20621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffffc0000; valaddr_reg:x3; val_offset:61863*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61863*0 + 3*653*FLEN/8, x4, x1, x2)

inst_20622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffffe0000; valaddr_reg:x3; val_offset:61866*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61866*0 + 3*654*FLEN/8, x4, x1, x2)

inst_20623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffffff0000; valaddr_reg:x3; val_offset:61869*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61869*0 + 3*655*FLEN/8, x4, x1, x2)

inst_20624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffffff8000; valaddr_reg:x3; val_offset:61872*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61872*0 + 3*656*FLEN/8, x4, x1, x2)

inst_20625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffffffc000; valaddr_reg:x3; val_offset:61875*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61875*0 + 3*657*FLEN/8, x4, x1, x2)

inst_20626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffffffe000; valaddr_reg:x3; val_offset:61878*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61878*0 + 3*658*FLEN/8, x4, x1, x2)

inst_20627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffffff000; valaddr_reg:x3; val_offset:61881*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61881*0 + 3*659*FLEN/8, x4, x1, x2)

inst_20628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffffff800; valaddr_reg:x3; val_offset:61884*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61884*0 + 3*660*FLEN/8, x4, x1, x2)

inst_20629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffffffc00; valaddr_reg:x3; val_offset:61887*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61887*0 + 3*661*FLEN/8, x4, x1, x2)

inst_20630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffffffe00; valaddr_reg:x3; val_offset:61890*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61890*0 + 3*662*FLEN/8, x4, x1, x2)

inst_20631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffffffff00; valaddr_reg:x3; val_offset:61893*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61893*0 + 3*663*FLEN/8, x4, x1, x2)

inst_20632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffffffff80; valaddr_reg:x3; val_offset:61896*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61896*0 + 3*664*FLEN/8, x4, x1, x2)

inst_20633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffffffffc0; valaddr_reg:x3; val_offset:61899*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61899*0 + 3*665*FLEN/8, x4, x1, x2)

inst_20634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffffffffe0; valaddr_reg:x3; val_offset:61902*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61902*0 + 3*666*FLEN/8, x4, x1, x2)

inst_20635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffffffff0; valaddr_reg:x3; val_offset:61905*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61905*0 + 3*667*FLEN/8, x4, x1, x2)

inst_20636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffffffff8; valaddr_reg:x3; val_offset:61908*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61908*0 + 3*668*FLEN/8, x4, x1, x2)

inst_20637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffffffffc; valaddr_reg:x3; val_offset:61911*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61911*0 + 3*669*FLEN/8, x4, x1, x2)

inst_20638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17ffffffffffffe; valaddr_reg:x3; val_offset:61914*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61914*0 + 3*670*FLEN/8, x4, x1, x2)

inst_20639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9d79b34c21fff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89d79b34c21fff; op2val:0x0;
op3val:0x17fffffffffffff; valaddr_reg:x3; val_offset:61917*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61917*0 + 3*671*FLEN/8, x4, x1, x2)

inst_20640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:61920*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61920*0 + 3*672*FLEN/8, x4, x1, x2)

inst_20641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:61923*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61923*0 + 3*673*FLEN/8, x4, x1, x2)

inst_20642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:61926*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61926*0 + 3*674*FLEN/8, x4, x1, x2)

inst_20643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:61929*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61929*0 + 3*675*FLEN/8, x4, x1, x2)

inst_20644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:61932*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61932*0 + 3*676*FLEN/8, x4, x1, x2)

inst_20645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:61935*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61935*0 + 3*677*FLEN/8, x4, x1, x2)

inst_20646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:61938*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61938*0 + 3*678*FLEN/8, x4, x1, x2)

inst_20647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:61941*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61941*0 + 3*679*FLEN/8, x4, x1, x2)

inst_20648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:61944*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61944*0 + 3*680*FLEN/8, x4, x1, x2)

inst_20649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:61947*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61947*0 + 3*681*FLEN/8, x4, x1, x2)

inst_20650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:61950*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61950*0 + 3*682*FLEN/8, x4, x1, x2)

inst_20651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:61953*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61953*0 + 3*683*FLEN/8, x4, x1, x2)

inst_20652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:61956*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61956*0 + 3*684*FLEN/8, x4, x1, x2)

inst_20653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:61959*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61959*0 + 3*685*FLEN/8, x4, x1, x2)

inst_20654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:61962*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61962*0 + 3*686*FLEN/8, x4, x1, x2)

inst_20655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:61965*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61965*0 + 3*687*FLEN/8, x4, x1, x2)

inst_20656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:61968*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61968*0 + 3*688*FLEN/8, x4, x1, x2)

inst_20657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:61971*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61971*0 + 3*689*FLEN/8, x4, x1, x2)

inst_20658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:61974*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61974*0 + 3*690*FLEN/8, x4, x1, x2)

inst_20659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:61977*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61977*0 + 3*691*FLEN/8, x4, x1, x2)

inst_20660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:61980*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61980*0 + 3*692*FLEN/8, x4, x1, x2)

inst_20661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:61983*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61983*0 + 3*693*FLEN/8, x4, x1, x2)

inst_20662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000000000000; valaddr_reg:x3; val_offset:61986*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61986*0 + 3*694*FLEN/8, x4, x1, x2)

inst_20663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000000000001; valaddr_reg:x3; val_offset:61989*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61989*0 + 3*695*FLEN/8, x4, x1, x2)

inst_20664:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000000000003; valaddr_reg:x3; val_offset:61992*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61992*0 + 3*696*FLEN/8, x4, x1, x2)

inst_20665:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000000000007; valaddr_reg:x3; val_offset:61995*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61995*0 + 3*697*FLEN/8, x4, x1, x2)

inst_20666:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000000000000f; valaddr_reg:x3; val_offset:61998*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61998*0 + 3*698*FLEN/8, x4, x1, x2)

inst_20667:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000000000001f; valaddr_reg:x3; val_offset:62001*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62001*0 + 3*699*FLEN/8, x4, x1, x2)

inst_20668:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000000000003f; valaddr_reg:x3; val_offset:62004*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62004*0 + 3*700*FLEN/8, x4, x1, x2)

inst_20669:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000000000007f; valaddr_reg:x3; val_offset:62007*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62007*0 + 3*701*FLEN/8, x4, x1, x2)

inst_20670:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00000000000ff; valaddr_reg:x3; val_offset:62010*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62010*0 + 3*702*FLEN/8, x4, x1, x2)

inst_20671:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00000000001ff; valaddr_reg:x3; val_offset:62013*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62013*0 + 3*703*FLEN/8, x4, x1, x2)

inst_20672:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00000000003ff; valaddr_reg:x3; val_offset:62016*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62016*0 + 3*704*FLEN/8, x4, x1, x2)

inst_20673:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00000000007ff; valaddr_reg:x3; val_offset:62019*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62019*0 + 3*705*FLEN/8, x4, x1, x2)

inst_20674:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000000000fff; valaddr_reg:x3; val_offset:62022*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62022*0 + 3*706*FLEN/8, x4, x1, x2)

inst_20675:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000000001fff; valaddr_reg:x3; val_offset:62025*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62025*0 + 3*707*FLEN/8, x4, x1, x2)

inst_20676:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000000003fff; valaddr_reg:x3; val_offset:62028*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62028*0 + 3*708*FLEN/8, x4, x1, x2)

inst_20677:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000000007fff; valaddr_reg:x3; val_offset:62031*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62031*0 + 3*709*FLEN/8, x4, x1, x2)

inst_20678:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000000000ffff; valaddr_reg:x3; val_offset:62034*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62034*0 + 3*710*FLEN/8, x4, x1, x2)

inst_20679:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000000001ffff; valaddr_reg:x3; val_offset:62037*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62037*0 + 3*711*FLEN/8, x4, x1, x2)

inst_20680:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000000003ffff; valaddr_reg:x3; val_offset:62040*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62040*0 + 3*712*FLEN/8, x4, x1, x2)

inst_20681:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000000007ffff; valaddr_reg:x3; val_offset:62043*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62043*0 + 3*713*FLEN/8, x4, x1, x2)

inst_20682:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00000000fffff; valaddr_reg:x3; val_offset:62046*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62046*0 + 3*714*FLEN/8, x4, x1, x2)

inst_20683:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00000001fffff; valaddr_reg:x3; val_offset:62049*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62049*0 + 3*715*FLEN/8, x4, x1, x2)

inst_20684:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00000003fffff; valaddr_reg:x3; val_offset:62052*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62052*0 + 3*716*FLEN/8, x4, x1, x2)

inst_20685:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00000007fffff; valaddr_reg:x3; val_offset:62055*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62055*0 + 3*717*FLEN/8, x4, x1, x2)

inst_20686:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000000ffffff; valaddr_reg:x3; val_offset:62058*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62058*0 + 3*718*FLEN/8, x4, x1, x2)

inst_20687:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000001ffffff; valaddr_reg:x3; val_offset:62061*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62061*0 + 3*719*FLEN/8, x4, x1, x2)

inst_20688:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000003ffffff; valaddr_reg:x3; val_offset:62064*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62064*0 + 3*720*FLEN/8, x4, x1, x2)

inst_20689:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000007ffffff; valaddr_reg:x3; val_offset:62067*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62067*0 + 3*721*FLEN/8, x4, x1, x2)

inst_20690:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000000fffffff; valaddr_reg:x3; val_offset:62070*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62070*0 + 3*722*FLEN/8, x4, x1, x2)

inst_20691:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000001fffffff; valaddr_reg:x3; val_offset:62073*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62073*0 + 3*723*FLEN/8, x4, x1, x2)

inst_20692:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000003fffffff; valaddr_reg:x3; val_offset:62076*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62076*0 + 3*724*FLEN/8, x4, x1, x2)

inst_20693:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000007fffffff; valaddr_reg:x3; val_offset:62079*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62079*0 + 3*725*FLEN/8, x4, x1, x2)

inst_20694:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00000ffffffff; valaddr_reg:x3; val_offset:62082*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62082*0 + 3*726*FLEN/8, x4, x1, x2)

inst_20695:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00001ffffffff; valaddr_reg:x3; val_offset:62085*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62085*0 + 3*727*FLEN/8, x4, x1, x2)

inst_20696:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00003ffffffff; valaddr_reg:x3; val_offset:62088*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62088*0 + 3*728*FLEN/8, x4, x1, x2)

inst_20697:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00007ffffffff; valaddr_reg:x3; val_offset:62091*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62091*0 + 3*729*FLEN/8, x4, x1, x2)

inst_20698:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0000fffffffff; valaddr_reg:x3; val_offset:62094*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62094*0 + 3*730*FLEN/8, x4, x1, x2)

inst_20699:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0001fffffffff; valaddr_reg:x3; val_offset:62097*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62097*0 + 3*731*FLEN/8, x4, x1, x2)

inst_20700:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0003fffffffff; valaddr_reg:x3; val_offset:62100*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62100*0 + 3*732*FLEN/8, x4, x1, x2)

inst_20701:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0007fffffffff; valaddr_reg:x3; val_offset:62103*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62103*0 + 3*733*FLEN/8, x4, x1, x2)

inst_20702:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f000ffffffffff; valaddr_reg:x3; val_offset:62106*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62106*0 + 3*734*FLEN/8, x4, x1, x2)

inst_20703:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f001ffffffffff; valaddr_reg:x3; val_offset:62109*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62109*0 + 3*735*FLEN/8, x4, x1, x2)

inst_20704:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f003ffffffffff; valaddr_reg:x3; val_offset:62112*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62112*0 + 3*736*FLEN/8, x4, x1, x2)

inst_20705:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f007ffffffffff; valaddr_reg:x3; val_offset:62115*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62115*0 + 3*737*FLEN/8, x4, x1, x2)

inst_20706:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f00fffffffffff; valaddr_reg:x3; val_offset:62118*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62118*0 + 3*738*FLEN/8, x4, x1, x2)

inst_20707:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f01fffffffffff; valaddr_reg:x3; val_offset:62121*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62121*0 + 3*739*FLEN/8, x4, x1, x2)

inst_20708:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f03fffffffffff; valaddr_reg:x3; val_offset:62124*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62124*0 + 3*740*FLEN/8, x4, x1, x2)

inst_20709:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f07fffffffffff; valaddr_reg:x3; val_offset:62127*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62127*0 + 3*741*FLEN/8, x4, x1, x2)

inst_20710:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f0ffffffffffff; valaddr_reg:x3; val_offset:62130*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62130*0 + 3*742*FLEN/8, x4, x1, x2)

inst_20711:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f1ffffffffffff; valaddr_reg:x3; val_offset:62133*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62133*0 + 3*743*FLEN/8, x4, x1, x2)

inst_20712:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f3ffffffffffff; valaddr_reg:x3; val_offset:62136*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62136*0 + 3*744*FLEN/8, x4, x1, x2)

inst_20713:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f7ffffffffffff; valaddr_reg:x3; val_offset:62139*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62139*0 + 3*745*FLEN/8, x4, x1, x2)

inst_20714:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3f8000000000000; valaddr_reg:x3; val_offset:62142*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62142*0 + 3*746*FLEN/8, x4, x1, x2)

inst_20715:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3fc000000000000; valaddr_reg:x3; val_offset:62145*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62145*0 + 3*747*FLEN/8, x4, x1, x2)

inst_20716:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3fe000000000000; valaddr_reg:x3; val_offset:62148*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62148*0 + 3*748*FLEN/8, x4, x1, x2)

inst_20717:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3ff000000000000; valaddr_reg:x3; val_offset:62151*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62151*0 + 3*749*FLEN/8, x4, x1, x2)

inst_20718:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3ff800000000000; valaddr_reg:x3; val_offset:62154*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62154*0 + 3*750*FLEN/8, x4, x1, x2)

inst_20719:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3ffc00000000000; valaddr_reg:x3; val_offset:62157*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62157*0 + 3*751*FLEN/8, x4, x1, x2)

inst_20720:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3ffe00000000000; valaddr_reg:x3; val_offset:62160*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62160*0 + 3*752*FLEN/8, x4, x1, x2)

inst_20721:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3fff00000000000; valaddr_reg:x3; val_offset:62163*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62163*0 + 3*753*FLEN/8, x4, x1, x2)

inst_20722:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3fff80000000000; valaddr_reg:x3; val_offset:62166*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62166*0 + 3*754*FLEN/8, x4, x1, x2)

inst_20723:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3fffc0000000000; valaddr_reg:x3; val_offset:62169*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62169*0 + 3*755*FLEN/8, x4, x1, x2)

inst_20724:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3fffe0000000000; valaddr_reg:x3; val_offset:62172*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62172*0 + 3*756*FLEN/8, x4, x1, x2)

inst_20725:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3ffff0000000000; valaddr_reg:x3; val_offset:62175*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62175*0 + 3*757*FLEN/8, x4, x1, x2)

inst_20726:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3ffff8000000000; valaddr_reg:x3; val_offset:62178*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62178*0 + 3*758*FLEN/8, x4, x1, x2)

inst_20727:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3ffffc000000000; valaddr_reg:x3; val_offset:62181*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62181*0 + 3*759*FLEN/8, x4, x1, x2)

inst_20728:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3ffffe000000000; valaddr_reg:x3; val_offset:62184*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62184*0 + 3*760*FLEN/8, x4, x1, x2)

inst_20729:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3fffff000000000; valaddr_reg:x3; val_offset:62187*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62187*0 + 3*761*FLEN/8, x4, x1, x2)

inst_20730:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3fffff800000000; valaddr_reg:x3; val_offset:62190*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62190*0 + 3*762*FLEN/8, x4, x1, x2)

inst_20731:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3fffffc00000000; valaddr_reg:x3; val_offset:62193*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62193*0 + 3*763*FLEN/8, x4, x1, x2)

inst_20732:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3fffffe00000000; valaddr_reg:x3; val_offset:62196*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62196*0 + 3*764*FLEN/8, x4, x1, x2)

inst_20733:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3ffffff00000000; valaddr_reg:x3; val_offset:62199*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62199*0 + 3*765*FLEN/8, x4, x1, x2)

inst_20734:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3ffffff80000000; valaddr_reg:x3; val_offset:62202*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62202*0 + 3*766*FLEN/8, x4, x1, x2)

inst_20735:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9df5fbed19f87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89df5fbed19f87; op2val:0x0;
op3val:0x3ffffffc0000000; valaddr_reg:x3; val_offset:62205*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62205*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195191296,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195453440,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195584512,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195650048,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195682816,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195699200,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195707392,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195711488,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195713536,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195714560,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195715072,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195715328,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195715456,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195715520,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195715552,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195715568,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195715576,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195715580,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195715582,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035195715583,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189120,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189121,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189123,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189127,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189135,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189151,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189183,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189247,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189375,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189631,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341190143,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341191167,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341193215,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341197311,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341205503,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341221887,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341254655,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341320191,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341451263,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341713407,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219342237695,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219343286271,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219345383423,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219349577727,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219357966335,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219374743551,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219408297983,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219475406847,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219609624575,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219878060031,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041220414930943,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041221488672767,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041223636156415,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041227931123711,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041236521058303,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041253700927487,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041288060665855,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041356780142591,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041494219096063,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041769097003007,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435042318852816895,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435043418364444671,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435045617387700223,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435050015434211327,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435058811527233535,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435076403713277951,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435111588085366783,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435181956829544447,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435322694317899775,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435604169294610431,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9436167119248031743,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9437293019154874367,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9437293019154874368,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9438418919061716992,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9438981869015138304,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439263343991848960,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439404081480204288,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439474450224381952,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439509634596470784,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439527226782515200,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439536022875537408,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439540420922048512,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439542619945304064,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439543719456931840,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544269212745728,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544544090652672,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544681529606144,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544750249082880,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544784608821248,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544801788690432,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544810378625024,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544814673592320,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544816821075968,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544817894817792,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818431688704,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818700124160,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818834341888,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818901450752,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818935005184,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818951782400,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818960171008,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818964365312,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818966462464,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818967511040,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968035328,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968297472,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968428544,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968494080,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968526848,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968543232,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968551424,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968555520,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968557568,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968558592,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559104,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559360,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559488,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559552,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559584,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559600,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559608,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559612,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559614,64,FLEN)
NAN_BOXED(6884126965240707887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559615,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602006016,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602006017,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602006019,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602006023,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602006031,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602006047,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602006079,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602006143,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602006271,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602006527,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602007039,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602008063,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602010111,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602014207,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602022399,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602038783,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602071551,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602137087,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602268159,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483602530303,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483603054591,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483604103167,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483606200319,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483610394623,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483618783231,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483635560447,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483669114879,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483736223743,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784483870441471,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784484138876927,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784484675747839,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784485749489663,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784487896973311,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784492191940607,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784500781875199,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784517961744383,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784552321482751,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784621040959487,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492784758479912959,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492785033357819903,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492785583113633791,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492786682625261567,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492788881648517119,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492793279695028223,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492802075788050431,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492819667974094847,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492854852346183679,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13492925221090361343,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13493065958578716671,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13493347433555427327,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13493910383508848639,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13495036283415691263,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13495036283415691264,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13496162183322533888,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13496725133275955200,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497006608252665856,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497147345741021184,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497217714485198848,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497252898857287680,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497270491043332096,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497279287136354304,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497283685182865408,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497285884206120960,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497286983717748736,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497287533473562624,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497287808351469568,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497287945790423040,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288014509899776,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288048869638144,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288066049507328,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288074639441920,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288078934409216,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288081081892864,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288082155634688,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288082692505600,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288082960941056,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083095158784,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083162267648,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083195822080,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083212599296,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083220987904,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083225182208,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083227279360,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083228327936,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083228852224,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229114368,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229245440,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229310976,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229343744,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229360128,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229368320,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229372416,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229374464,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229375488,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229376000,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229376256,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229376384,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229376448,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229376480,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229376496,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229376504,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229376508,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229376510,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13497288083229376511,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6884185746775997307,64,FLEN)
NAN_BOXED(11521346779653716957,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487552,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487553,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487555,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487559,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487567,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487583,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487615,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487679,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487807,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006488063,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006488575,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006489599,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006491647,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006495743,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006503935,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006520319,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006553087,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006618623,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006749695,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413007011839,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413007536127,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413008584703,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413010681855,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413014876159,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413023264767,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413040041983,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413073596415,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413140705279,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413274923007,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413543358463,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602414080229375,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602415153971199,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602417301454847,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602421596422143,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602430186356735,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602447366225919,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602481725964287,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602550445441023,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602687884394495,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602962762301439,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511603512518115327,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511604612029743103,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511606811052998655,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511611209099509759,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511620005192531967,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511637597378576383,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511672781750665215,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511743150494842879,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511883887983198207,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9512165362959908863,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9512728312913330175,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9513854212820172799,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9513854212820172800,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9514980112727015424,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515543062680436736,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515824537657147392,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9515965275145502720,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516035643889680384,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516070828261769216,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516088420447813632,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516097216540835840,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516101614587346944,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516103813610602496,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516104913122230272,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105462878044160,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105737755951104,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105875194904576,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105943914381312,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105978274119680,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516105995453988864,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106004043923456,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106008338890752,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106010486374400,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106011560116224,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012096987136,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012365422592,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012499640320,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012566749184,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012600303616,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012617080832,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012625469440,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012629663744,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012631760896,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012632809472,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633333760,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633595904,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633726976,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633792512,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633825280,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633841664,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633849856,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633853952,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633856000,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857024,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857536,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857792,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857920,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633857984,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858016,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858032,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858040,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858044,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858046,64,FLEN)
NAN_BOXED(6884188232561266075,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858047,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444736,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444737,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444739,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444743,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444751,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444767,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444799,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444863,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444991,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445247,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445759,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147446783,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147448831,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147452927,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147461119,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147477503,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147510271,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147575807,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147706879,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147969023,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830148493311,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830149541887,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830151639039,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830155833343,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830164221951,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830180999167,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830214553599,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830281662463,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830415880191,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830684315647,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436831221186559,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436832294928383,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436834442412031,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436838737379327,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436847327313919,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436864507183103,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436898866921471,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436967586398207,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437105025351679,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437379903258623,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437929659072511,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304439029170700287,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304441228193955839,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304445626240466943,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304454422333489151,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304472014519533567,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304507198891622399,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304577567635800063,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304718305124155391,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304999780100866047,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9305562730054287359,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129983,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129984,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9307814529867972608,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308377479821393920,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308658954798104576,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308799692286459904,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308870061030637568,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308905245402726400,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308922837588770816,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308931633681793024,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308936031728304128,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308938230751559680,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939330263187456,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939880019001344,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940154896908288,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940292335861760,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940361055338496,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940395415076864,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940412594946048,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940421184880640,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940425479847936,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940427627331584,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940428701073408,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429237944320,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429506379776,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429640597504,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429707706368,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429741260800,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429758038016,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429766426624,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429770620928,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429772718080,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429773766656,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774290944,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774553088,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774684160,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774749696,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774782464,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774798848,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774807040,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774811136,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774813184,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814208,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814720,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814976,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815104,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815168,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815200,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815216,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815224,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815228,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815230,64,FLEN)
NAN_BOXED(6884244079184453987,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815231,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521408,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521409,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521411,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521415,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521423,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521439,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521471,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521535,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521663,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521919,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429522431,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429523455,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429525503,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429529599,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429537791,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429554175,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429586943,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429652479,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429783551,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791430045695,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791430569983,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791431618559,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791433715711,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791437910015,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791446298623,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791463075839,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791496630271,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791563739135,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791697956863,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791966392319,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582792503263231,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582793577005055,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582795724488703,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582800019455999,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582808609390591,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582825789259775,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582860148998143,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582928868474879,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583066307428351,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583341185335295,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583890941149183,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103584990452776959,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103587189476032511,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103591587522543615,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103600383615565823,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103617975801610239,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103653160173699071,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103723528917876735,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103864266406232063,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(104145741382942719,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(104708691336364031,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(105834591243206655,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(105834591243206656,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(106960491150049280,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107523441103470592,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107804916080181248,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107945653568536576,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108016022312714240,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108051206684803072,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108068798870847488,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108077594963869696,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108081993010380800,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108084192033636352,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108085291545264128,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108085841301078016,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086116178984960,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086253617938432,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086322337415168,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086356697153536,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086373877022720,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086382466957312,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086386761924608,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086388909408256,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086389983150080,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390520020992,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390788456448,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390922674176,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390989783040,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391023337472,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391040114688,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391048503296,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391052697600,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391054794752,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391055843328,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056367616,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056629760,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056760832,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056826368,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056859136,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056875520,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056883712,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056887808,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056889856,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056890880,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891392,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891648,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891776,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891840,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891872,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891888,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891896,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891900,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891902,64,FLEN)
NAN_BOXED(6884270567017553919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891903,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341248,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341249,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341251,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341255,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341263,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341279,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341311,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341375,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341503,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341759,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524342271,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524343295,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524345343,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524349439,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524357631,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524374015,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524406783,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524472319,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524603391,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524865535,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776525389823,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776526438399,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776528535551,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776532729855,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776541118463,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776557895679,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776591450111,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776658558975,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776792776703,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777061212159,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777598083071,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726778671824895,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726780819308543,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726785114275839,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726793704210431,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726810884079615,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726845243817983,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726913963294719,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727051402248191,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727326280155135,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727876035969023,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283728975547596799,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283731174570852351,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283735572617363455,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283744368710385663,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283761960896430079,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283797145268518911,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283867514012696575,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284008251501051903,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284289726477762559,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284852676431183871,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026495,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026496,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287104476244869120,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287667426198290432,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287948901175001088,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288089638663356416,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288160007407534080,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288195191779622912,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288212783965667328,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288221580058689536,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288225978105200640,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288228177128456192,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229276640083968,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229826395897856,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230101273804800,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230238712758272,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230307432235008,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230341791973376,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230358971842560,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230367561777152,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230371856744448,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230374004228096,64,FLEN)
NAN_BOXED(6884279107728809863,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375077969920,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
