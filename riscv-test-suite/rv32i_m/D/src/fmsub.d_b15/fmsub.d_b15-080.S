
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_60672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bff80000000000; valaddr_reg:x3; val_offset:182016*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182016*0 + 3*0*FLEN/8, x4, x1, x2)

inst_60673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffc0000000000; valaddr_reg:x3; val_offset:182019*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182019*0 + 3*1*FLEN/8, x4, x1, x2)

inst_60674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffe0000000000; valaddr_reg:x3; val_offset:182022*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182022*0 + 3*2*FLEN/8, x4, x1, x2)

inst_60675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfff0000000000; valaddr_reg:x3; val_offset:182025*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182025*0 + 3*3*FLEN/8, x4, x1, x2)

inst_60676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfff8000000000; valaddr_reg:x3; val_offset:182028*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182028*0 + 3*4*FLEN/8, x4, x1, x2)

inst_60677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffc000000000; valaddr_reg:x3; val_offset:182031*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182031*0 + 3*5*FLEN/8, x4, x1, x2)

inst_60678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffe000000000; valaddr_reg:x3; val_offset:182034*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182034*0 + 3*6*FLEN/8, x4, x1, x2)

inst_60679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffff000000000; valaddr_reg:x3; val_offset:182037*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182037*0 + 3*7*FLEN/8, x4, x1, x2)

inst_60680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffff800000000; valaddr_reg:x3; val_offset:182040*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182040*0 + 3*8*FLEN/8, x4, x1, x2)

inst_60681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffc00000000; valaddr_reg:x3; val_offset:182043*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182043*0 + 3*9*FLEN/8, x4, x1, x2)

inst_60682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffe00000000; valaddr_reg:x3; val_offset:182046*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182046*0 + 3*10*FLEN/8, x4, x1, x2)

inst_60683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffff00000000; valaddr_reg:x3; val_offset:182049*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182049*0 + 3*11*FLEN/8, x4, x1, x2)

inst_60684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffff80000000; valaddr_reg:x3; val_offset:182052*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182052*0 + 3*12*FLEN/8, x4, x1, x2)

inst_60685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffc0000000; valaddr_reg:x3; val_offset:182055*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182055*0 + 3*13*FLEN/8, x4, x1, x2)

inst_60686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffe0000000; valaddr_reg:x3; val_offset:182058*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182058*0 + 3*14*FLEN/8, x4, x1, x2)

inst_60687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffff0000000; valaddr_reg:x3; val_offset:182061*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182061*0 + 3*15*FLEN/8, x4, x1, x2)

inst_60688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffff8000000; valaddr_reg:x3; val_offset:182064*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182064*0 + 3*16*FLEN/8, x4, x1, x2)

inst_60689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffc000000; valaddr_reg:x3; val_offset:182067*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182067*0 + 3*17*FLEN/8, x4, x1, x2)

inst_60690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffe000000; valaddr_reg:x3; val_offset:182070*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182070*0 + 3*18*FLEN/8, x4, x1, x2)

inst_60691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffff000000; valaddr_reg:x3; val_offset:182073*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182073*0 + 3*19*FLEN/8, x4, x1, x2)

inst_60692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffff800000; valaddr_reg:x3; val_offset:182076*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182076*0 + 3*20*FLEN/8, x4, x1, x2)

inst_60693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffffc00000; valaddr_reg:x3; val_offset:182079*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182079*0 + 3*21*FLEN/8, x4, x1, x2)

inst_60694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffffe00000; valaddr_reg:x3; val_offset:182082*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182082*0 + 3*22*FLEN/8, x4, x1, x2)

inst_60695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffff00000; valaddr_reg:x3; val_offset:182085*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182085*0 + 3*23*FLEN/8, x4, x1, x2)

inst_60696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffff80000; valaddr_reg:x3; val_offset:182088*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182088*0 + 3*24*FLEN/8, x4, x1, x2)

inst_60697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffffc0000; valaddr_reg:x3; val_offset:182091*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182091*0 + 3*25*FLEN/8, x4, x1, x2)

inst_60698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffffe0000; valaddr_reg:x3; val_offset:182094*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182094*0 + 3*26*FLEN/8, x4, x1, x2)

inst_60699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffffff0000; valaddr_reg:x3; val_offset:182097*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182097*0 + 3*27*FLEN/8, x4, x1, x2)

inst_60700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffffff8000; valaddr_reg:x3; val_offset:182100*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182100*0 + 3*28*FLEN/8, x4, x1, x2)

inst_60701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffffffc000; valaddr_reg:x3; val_offset:182103*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182103*0 + 3*29*FLEN/8, x4, x1, x2)

inst_60702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffffffe000; valaddr_reg:x3; val_offset:182106*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182106*0 + 3*30*FLEN/8, x4, x1, x2)

inst_60703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffffff000; valaddr_reg:x3; val_offset:182109*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182109*0 + 3*31*FLEN/8, x4, x1, x2)

inst_60704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffffff800; valaddr_reg:x3; val_offset:182112*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182112*0 + 3*32*FLEN/8, x4, x1, x2)

inst_60705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffffffc00; valaddr_reg:x3; val_offset:182115*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182115*0 + 3*33*FLEN/8, x4, x1, x2)

inst_60706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffffffe00; valaddr_reg:x3; val_offset:182118*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182118*0 + 3*34*FLEN/8, x4, x1, x2)

inst_60707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffffffff00; valaddr_reg:x3; val_offset:182121*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182121*0 + 3*35*FLEN/8, x4, x1, x2)

inst_60708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffffffff80; valaddr_reg:x3; val_offset:182124*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182124*0 + 3*36*FLEN/8, x4, x1, x2)

inst_60709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffffffffc0; valaddr_reg:x3; val_offset:182127*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182127*0 + 3*37*FLEN/8, x4, x1, x2)

inst_60710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffffffffe0; valaddr_reg:x3; val_offset:182130*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182130*0 + 3*38*FLEN/8, x4, x1, x2)

inst_60711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffffffff0; valaddr_reg:x3; val_offset:182133*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182133*0 + 3*39*FLEN/8, x4, x1, x2)

inst_60712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffffffff8; valaddr_reg:x3; val_offset:182136*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182136*0 + 3*40*FLEN/8, x4, x1, x2)

inst_60713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffffffffc; valaddr_reg:x3; val_offset:182139*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182139*0 + 3*41*FLEN/8, x4, x1, x2)

inst_60714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bffffffffffffe; valaddr_reg:x3; val_offset:182142*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182142*0 + 3*42*FLEN/8, x4, x1, x2)

inst_60715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x38b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xb8bfffffffffffff; valaddr_reg:x3; val_offset:182145*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182145*0 + 3*43*FLEN/8, x4, x1, x2)

inst_60716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:182148*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182148*0 + 3*44*FLEN/8, x4, x1, x2)

inst_60717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:182151*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182151*0 + 3*45*FLEN/8, x4, x1, x2)

inst_60718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:182154*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182154*0 + 3*46*FLEN/8, x4, x1, x2)

inst_60719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:182157*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182157*0 + 3*47*FLEN/8, x4, x1, x2)

inst_60720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:182160*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182160*0 + 3*48*FLEN/8, x4, x1, x2)

inst_60721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:182163*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182163*0 + 3*49*FLEN/8, x4, x1, x2)

inst_60722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:182166*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182166*0 + 3*50*FLEN/8, x4, x1, x2)

inst_60723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:182169*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182169*0 + 3*51*FLEN/8, x4, x1, x2)

inst_60724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:182172*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182172*0 + 3*52*FLEN/8, x4, x1, x2)

inst_60725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:182175*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182175*0 + 3*53*FLEN/8, x4, x1, x2)

inst_60726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:182178*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182178*0 + 3*54*FLEN/8, x4, x1, x2)

inst_60727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:182181*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182181*0 + 3*55*FLEN/8, x4, x1, x2)

inst_60728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:182184*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182184*0 + 3*56*FLEN/8, x4, x1, x2)

inst_60729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:182187*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182187*0 + 3*57*FLEN/8, x4, x1, x2)

inst_60730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:182190*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182190*0 + 3*58*FLEN/8, x4, x1, x2)

inst_60731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:182193*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182193*0 + 3*59*FLEN/8, x4, x1, x2)

inst_60732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:182196*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182196*0 + 3*60*FLEN/8, x4, x1, x2)

inst_60733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:182199*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182199*0 + 3*61*FLEN/8, x4, x1, x2)

inst_60734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:182202*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182202*0 + 3*62*FLEN/8, x4, x1, x2)

inst_60735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:182205*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182205*0 + 3*63*FLEN/8, x4, x1, x2)

inst_60736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:182208*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182208*0 + 3*64*FLEN/8, x4, x1, x2)

inst_60737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2599faeea6b2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xbe6da26973fb9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2599faeea6b2c; op2val:0x9fcbe6da26973fb9;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:182211*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182211*0 + 3*65*FLEN/8, x4, x1, x2)

inst_60738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:182214*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182214*0 + 3*66*FLEN/8, x4, x1, x2)

inst_60739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:182217*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182217*0 + 3*67*FLEN/8, x4, x1, x2)

inst_60740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:182220*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182220*0 + 3*68*FLEN/8, x4, x1, x2)

inst_60741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:182223*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182223*0 + 3*69*FLEN/8, x4, x1, x2)

inst_60742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:182226*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182226*0 + 3*70*FLEN/8, x4, x1, x2)

inst_60743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:182229*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182229*0 + 3*71*FLEN/8, x4, x1, x2)

inst_60744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:182232*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182232*0 + 3*72*FLEN/8, x4, x1, x2)

inst_60745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:182235*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182235*0 + 3*73*FLEN/8, x4, x1, x2)

inst_60746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:182238*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182238*0 + 3*74*FLEN/8, x4, x1, x2)

inst_60747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:182241*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182241*0 + 3*75*FLEN/8, x4, x1, x2)

inst_60748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:182244*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182244*0 + 3*76*FLEN/8, x4, x1, x2)

inst_60749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:182247*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182247*0 + 3*77*FLEN/8, x4, x1, x2)

inst_60750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:182250*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182250*0 + 3*78*FLEN/8, x4, x1, x2)

inst_60751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:182253*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182253*0 + 3*79*FLEN/8, x4, x1, x2)

inst_60752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:182256*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182256*0 + 3*80*FLEN/8, x4, x1, x2)

inst_60753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:182259*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182259*0 + 3*81*FLEN/8, x4, x1, x2)

inst_60754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:182262*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182262*0 + 3*82*FLEN/8, x4, x1, x2)

inst_60755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:182265*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182265*0 + 3*83*FLEN/8, x4, x1, x2)

inst_60756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:182268*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182268*0 + 3*84*FLEN/8, x4, x1, x2)

inst_60757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:182271*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182271*0 + 3*85*FLEN/8, x4, x1, x2)

inst_60758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:182274*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182274*0 + 3*86*FLEN/8, x4, x1, x2)

inst_60759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:182277*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182277*0 + 3*87*FLEN/8, x4, x1, x2)

inst_60760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000000000000; valaddr_reg:x3; val_offset:182280*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182280*0 + 3*88*FLEN/8, x4, x1, x2)

inst_60761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000000000001; valaddr_reg:x3; val_offset:182283*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182283*0 + 3*89*FLEN/8, x4, x1, x2)

inst_60762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000000000003; valaddr_reg:x3; val_offset:182286*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182286*0 + 3*90*FLEN/8, x4, x1, x2)

inst_60763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000000000007; valaddr_reg:x3; val_offset:182289*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182289*0 + 3*91*FLEN/8, x4, x1, x2)

inst_60764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000000000000f; valaddr_reg:x3; val_offset:182292*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182292*0 + 3*92*FLEN/8, x4, x1, x2)

inst_60765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000000000001f; valaddr_reg:x3; val_offset:182295*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182295*0 + 3*93*FLEN/8, x4, x1, x2)

inst_60766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000000000003f; valaddr_reg:x3; val_offset:182298*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182298*0 + 3*94*FLEN/8, x4, x1, x2)

inst_60767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000000000007f; valaddr_reg:x3; val_offset:182301*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182301*0 + 3*95*FLEN/8, x4, x1, x2)

inst_60768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100000000000ff; valaddr_reg:x3; val_offset:182304*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182304*0 + 3*96*FLEN/8, x4, x1, x2)

inst_60769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100000000001ff; valaddr_reg:x3; val_offset:182307*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182307*0 + 3*97*FLEN/8, x4, x1, x2)

inst_60770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100000000003ff; valaddr_reg:x3; val_offset:182310*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182310*0 + 3*98*FLEN/8, x4, x1, x2)

inst_60771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100000000007ff; valaddr_reg:x3; val_offset:182313*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182313*0 + 3*99*FLEN/8, x4, x1, x2)

inst_60772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000000000fff; valaddr_reg:x3; val_offset:182316*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182316*0 + 3*100*FLEN/8, x4, x1, x2)

inst_60773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000000001fff; valaddr_reg:x3; val_offset:182319*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182319*0 + 3*101*FLEN/8, x4, x1, x2)

inst_60774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000000003fff; valaddr_reg:x3; val_offset:182322*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182322*0 + 3*102*FLEN/8, x4, x1, x2)

inst_60775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000000007fff; valaddr_reg:x3; val_offset:182325*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182325*0 + 3*103*FLEN/8, x4, x1, x2)

inst_60776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000000000ffff; valaddr_reg:x3; val_offset:182328*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182328*0 + 3*104*FLEN/8, x4, x1, x2)

inst_60777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000000001ffff; valaddr_reg:x3; val_offset:182331*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182331*0 + 3*105*FLEN/8, x4, x1, x2)

inst_60778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000000003ffff; valaddr_reg:x3; val_offset:182334*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182334*0 + 3*106*FLEN/8, x4, x1, x2)

inst_60779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000000007ffff; valaddr_reg:x3; val_offset:182337*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182337*0 + 3*107*FLEN/8, x4, x1, x2)

inst_60780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100000000fffff; valaddr_reg:x3; val_offset:182340*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182340*0 + 3*108*FLEN/8, x4, x1, x2)

inst_60781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100000001fffff; valaddr_reg:x3; val_offset:182343*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182343*0 + 3*109*FLEN/8, x4, x1, x2)

inst_60782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100000003fffff; valaddr_reg:x3; val_offset:182346*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182346*0 + 3*110*FLEN/8, x4, x1, x2)

inst_60783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100000007fffff; valaddr_reg:x3; val_offset:182349*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182349*0 + 3*111*FLEN/8, x4, x1, x2)

inst_60784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000000ffffff; valaddr_reg:x3; val_offset:182352*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182352*0 + 3*112*FLEN/8, x4, x1, x2)

inst_60785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000001ffffff; valaddr_reg:x3; val_offset:182355*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182355*0 + 3*113*FLEN/8, x4, x1, x2)

inst_60786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000003ffffff; valaddr_reg:x3; val_offset:182358*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182358*0 + 3*114*FLEN/8, x4, x1, x2)

inst_60787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000007ffffff; valaddr_reg:x3; val_offset:182361*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182361*0 + 3*115*FLEN/8, x4, x1, x2)

inst_60788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000000fffffff; valaddr_reg:x3; val_offset:182364*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182364*0 + 3*116*FLEN/8, x4, x1, x2)

inst_60789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000001fffffff; valaddr_reg:x3; val_offset:182367*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182367*0 + 3*117*FLEN/8, x4, x1, x2)

inst_60790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000003fffffff; valaddr_reg:x3; val_offset:182370*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182370*0 + 3*118*FLEN/8, x4, x1, x2)

inst_60791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000007fffffff; valaddr_reg:x3; val_offset:182373*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182373*0 + 3*119*FLEN/8, x4, x1, x2)

inst_60792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100000ffffffff; valaddr_reg:x3; val_offset:182376*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182376*0 + 3*120*FLEN/8, x4, x1, x2)

inst_60793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100001ffffffff; valaddr_reg:x3; val_offset:182379*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182379*0 + 3*121*FLEN/8, x4, x1, x2)

inst_60794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100003ffffffff; valaddr_reg:x3; val_offset:182382*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182382*0 + 3*122*FLEN/8, x4, x1, x2)

inst_60795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100007ffffffff; valaddr_reg:x3; val_offset:182385*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182385*0 + 3*123*FLEN/8, x4, x1, x2)

inst_60796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110000fffffffff; valaddr_reg:x3; val_offset:182388*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182388*0 + 3*124*FLEN/8, x4, x1, x2)

inst_60797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110001fffffffff; valaddr_reg:x3; val_offset:182391*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182391*0 + 3*125*FLEN/8, x4, x1, x2)

inst_60798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110003fffffffff; valaddr_reg:x3; val_offset:182394*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182394*0 + 3*126*FLEN/8, x4, x1, x2)

inst_60799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110007fffffffff; valaddr_reg:x3; val_offset:182397*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182397*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_60800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811000ffffffffff; valaddr_reg:x3; val_offset:182400*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182400*0 + 3*128*FLEN/8, x4, x1, x2)

inst_60801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811001ffffffffff; valaddr_reg:x3; val_offset:182403*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182403*0 + 3*129*FLEN/8, x4, x1, x2)

inst_60802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811003ffffffffff; valaddr_reg:x3; val_offset:182406*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182406*0 + 3*130*FLEN/8, x4, x1, x2)

inst_60803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811007ffffffffff; valaddr_reg:x3; val_offset:182409*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182409*0 + 3*131*FLEN/8, x4, x1, x2)

inst_60804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81100fffffffffff; valaddr_reg:x3; val_offset:182412*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182412*0 + 3*132*FLEN/8, x4, x1, x2)

inst_60805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81101fffffffffff; valaddr_reg:x3; val_offset:182415*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182415*0 + 3*133*FLEN/8, x4, x1, x2)

inst_60806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81103fffffffffff; valaddr_reg:x3; val_offset:182418*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182418*0 + 3*134*FLEN/8, x4, x1, x2)

inst_60807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x81107fffffffffff; valaddr_reg:x3; val_offset:182421*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182421*0 + 3*135*FLEN/8, x4, x1, x2)

inst_60808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8110ffffffffffff; valaddr_reg:x3; val_offset:182424*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182424*0 + 3*136*FLEN/8, x4, x1, x2)

inst_60809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8111ffffffffffff; valaddr_reg:x3; val_offset:182427*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182427*0 + 3*137*FLEN/8, x4, x1, x2)

inst_60810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8113ffffffffffff; valaddr_reg:x3; val_offset:182430*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182430*0 + 3*138*FLEN/8, x4, x1, x2)

inst_60811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8117ffffffffffff; valaddr_reg:x3; val_offset:182433*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182433*0 + 3*139*FLEN/8, x4, x1, x2)

inst_60812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x8118000000000000; valaddr_reg:x3; val_offset:182436*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182436*0 + 3*140*FLEN/8, x4, x1, x2)

inst_60813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811c000000000000; valaddr_reg:x3; val_offset:182439*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182439*0 + 3*141*FLEN/8, x4, x1, x2)

inst_60814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811e000000000000; valaddr_reg:x3; val_offset:182442*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182442*0 + 3*142*FLEN/8, x4, x1, x2)

inst_60815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811f000000000000; valaddr_reg:x3; val_offset:182445*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182445*0 + 3*143*FLEN/8, x4, x1, x2)

inst_60816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811f800000000000; valaddr_reg:x3; val_offset:182448*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182448*0 + 3*144*FLEN/8, x4, x1, x2)

inst_60817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fc00000000000; valaddr_reg:x3; val_offset:182451*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182451*0 + 3*145*FLEN/8, x4, x1, x2)

inst_60818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fe00000000000; valaddr_reg:x3; val_offset:182454*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182454*0 + 3*146*FLEN/8, x4, x1, x2)

inst_60819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ff00000000000; valaddr_reg:x3; val_offset:182457*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182457*0 + 3*147*FLEN/8, x4, x1, x2)

inst_60820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ff80000000000; valaddr_reg:x3; val_offset:182460*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182460*0 + 3*148*FLEN/8, x4, x1, x2)

inst_60821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffc0000000000; valaddr_reg:x3; val_offset:182463*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182463*0 + 3*149*FLEN/8, x4, x1, x2)

inst_60822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffe0000000000; valaddr_reg:x3; val_offset:182466*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182466*0 + 3*150*FLEN/8, x4, x1, x2)

inst_60823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fff0000000000; valaddr_reg:x3; val_offset:182469*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182469*0 + 3*151*FLEN/8, x4, x1, x2)

inst_60824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fff8000000000; valaddr_reg:x3; val_offset:182472*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182472*0 + 3*152*FLEN/8, x4, x1, x2)

inst_60825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffc000000000; valaddr_reg:x3; val_offset:182475*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182475*0 + 3*153*FLEN/8, x4, x1, x2)

inst_60826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffe000000000; valaddr_reg:x3; val_offset:182478*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182478*0 + 3*154*FLEN/8, x4, x1, x2)

inst_60827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffff000000000; valaddr_reg:x3; val_offset:182481*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182481*0 + 3*155*FLEN/8, x4, x1, x2)

inst_60828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffff800000000; valaddr_reg:x3; val_offset:182484*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182484*0 + 3*156*FLEN/8, x4, x1, x2)

inst_60829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffc00000000; valaddr_reg:x3; val_offset:182487*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182487*0 + 3*157*FLEN/8, x4, x1, x2)

inst_60830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffe00000000; valaddr_reg:x3; val_offset:182490*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182490*0 + 3*158*FLEN/8, x4, x1, x2)

inst_60831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffff00000000; valaddr_reg:x3; val_offset:182493*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182493*0 + 3*159*FLEN/8, x4, x1, x2)

inst_60832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffff80000000; valaddr_reg:x3; val_offset:182496*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182496*0 + 3*160*FLEN/8, x4, x1, x2)

inst_60833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffc0000000; valaddr_reg:x3; val_offset:182499*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182499*0 + 3*161*FLEN/8, x4, x1, x2)

inst_60834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffe0000000; valaddr_reg:x3; val_offset:182502*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182502*0 + 3*162*FLEN/8, x4, x1, x2)

inst_60835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffff0000000; valaddr_reg:x3; val_offset:182505*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182505*0 + 3*163*FLEN/8, x4, x1, x2)

inst_60836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffff8000000; valaddr_reg:x3; val_offset:182508*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182508*0 + 3*164*FLEN/8, x4, x1, x2)

inst_60837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffc000000; valaddr_reg:x3; val_offset:182511*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182511*0 + 3*165*FLEN/8, x4, x1, x2)

inst_60838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffe000000; valaddr_reg:x3; val_offset:182514*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182514*0 + 3*166*FLEN/8, x4, x1, x2)

inst_60839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffff000000; valaddr_reg:x3; val_offset:182517*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182517*0 + 3*167*FLEN/8, x4, x1, x2)

inst_60840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffff800000; valaddr_reg:x3; val_offset:182520*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182520*0 + 3*168*FLEN/8, x4, x1, x2)

inst_60841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffffc00000; valaddr_reg:x3; val_offset:182523*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182523*0 + 3*169*FLEN/8, x4, x1, x2)

inst_60842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffffe00000; valaddr_reg:x3; val_offset:182526*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182526*0 + 3*170*FLEN/8, x4, x1, x2)

inst_60843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffff00000; valaddr_reg:x3; val_offset:182529*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182529*0 + 3*171*FLEN/8, x4, x1, x2)

inst_60844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffff80000; valaddr_reg:x3; val_offset:182532*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182532*0 + 3*172*FLEN/8, x4, x1, x2)

inst_60845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffffc0000; valaddr_reg:x3; val_offset:182535*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182535*0 + 3*173*FLEN/8, x4, x1, x2)

inst_60846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffffe0000; valaddr_reg:x3; val_offset:182538*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182538*0 + 3*174*FLEN/8, x4, x1, x2)

inst_60847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffffff0000; valaddr_reg:x3; val_offset:182541*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182541*0 + 3*175*FLEN/8, x4, x1, x2)

inst_60848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffffff8000; valaddr_reg:x3; val_offset:182544*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182544*0 + 3*176*FLEN/8, x4, x1, x2)

inst_60849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffffffc000; valaddr_reg:x3; val_offset:182547*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182547*0 + 3*177*FLEN/8, x4, x1, x2)

inst_60850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffffffe000; valaddr_reg:x3; val_offset:182550*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182550*0 + 3*178*FLEN/8, x4, x1, x2)

inst_60851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffffff000; valaddr_reg:x3; val_offset:182553*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182553*0 + 3*179*FLEN/8, x4, x1, x2)

inst_60852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffffff800; valaddr_reg:x3; val_offset:182556*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182556*0 + 3*180*FLEN/8, x4, x1, x2)

inst_60853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffffffc00; valaddr_reg:x3; val_offset:182559*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182559*0 + 3*181*FLEN/8, x4, x1, x2)

inst_60854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffffffe00; valaddr_reg:x3; val_offset:182562*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182562*0 + 3*182*FLEN/8, x4, x1, x2)

inst_60855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffffffff00; valaddr_reg:x3; val_offset:182565*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182565*0 + 3*183*FLEN/8, x4, x1, x2)

inst_60856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffffffff80; valaddr_reg:x3; val_offset:182568*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182568*0 + 3*184*FLEN/8, x4, x1, x2)

inst_60857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffffffffc0; valaddr_reg:x3; val_offset:182571*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182571*0 + 3*185*FLEN/8, x4, x1, x2)

inst_60858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffffffffe0; valaddr_reg:x3; val_offset:182574*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182574*0 + 3*186*FLEN/8, x4, x1, x2)

inst_60859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffffffff0; valaddr_reg:x3; val_offset:182577*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182577*0 + 3*187*FLEN/8, x4, x1, x2)

inst_60860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffffffff8; valaddr_reg:x3; val_offset:182580*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182580*0 + 3*188*FLEN/8, x4, x1, x2)

inst_60861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffffffffc; valaddr_reg:x3; val_offset:182583*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182583*0 + 3*189*FLEN/8, x4, x1, x2)

inst_60862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811ffffffffffffe; valaddr_reg:x3; val_offset:182586*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182586*0 + 3*190*FLEN/8, x4, x1, x2)

inst_60863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2619b7a9c946a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2619b7a9c946a; op2val:0x8000;
op3val:0x811fffffffffffff; valaddr_reg:x3; val_offset:182589*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182589*0 + 3*191*FLEN/8, x4, x1, x2)

inst_60864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:182592*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182592*0 + 3*192*FLEN/8, x4, x1, x2)

inst_60865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:182595*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182595*0 + 3*193*FLEN/8, x4, x1, x2)

inst_60866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:182598*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182598*0 + 3*194*FLEN/8, x4, x1, x2)

inst_60867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:182601*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182601*0 + 3*195*FLEN/8, x4, x1, x2)

inst_60868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:182604*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182604*0 + 3*196*FLEN/8, x4, x1, x2)

inst_60869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:182607*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182607*0 + 3*197*FLEN/8, x4, x1, x2)

inst_60870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:182610*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182610*0 + 3*198*FLEN/8, x4, x1, x2)

inst_60871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:182613*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182613*0 + 3*199*FLEN/8, x4, x1, x2)

inst_60872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:182616*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182616*0 + 3*200*FLEN/8, x4, x1, x2)

inst_60873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:182619*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182619*0 + 3*201*FLEN/8, x4, x1, x2)

inst_60874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:182622*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182622*0 + 3*202*FLEN/8, x4, x1, x2)

inst_60875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:182625*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182625*0 + 3*203*FLEN/8, x4, x1, x2)

inst_60876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:182628*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182628*0 + 3*204*FLEN/8, x4, x1, x2)

inst_60877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:182631*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182631*0 + 3*205*FLEN/8, x4, x1, x2)

inst_60878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:182634*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182634*0 + 3*206*FLEN/8, x4, x1, x2)

inst_60879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:182637*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182637*0 + 3*207*FLEN/8, x4, x1, x2)

inst_60880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:182640*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182640*0 + 3*208*FLEN/8, x4, x1, x2)

inst_60881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:182643*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182643*0 + 3*209*FLEN/8, x4, x1, x2)

inst_60882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:182646*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182646*0 + 3*210*FLEN/8, x4, x1, x2)

inst_60883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:182649*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182649*0 + 3*211*FLEN/8, x4, x1, x2)

inst_60884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:182652*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182652*0 + 3*212*FLEN/8, x4, x1, x2)

inst_60885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:182655*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182655*0 + 3*213*FLEN/8, x4, x1, x2)

inst_60886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000000000000; valaddr_reg:x3; val_offset:182658*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182658*0 + 3*214*FLEN/8, x4, x1, x2)

inst_60887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000000000001; valaddr_reg:x3; val_offset:182661*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182661*0 + 3*215*FLEN/8, x4, x1, x2)

inst_60888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000000000003; valaddr_reg:x3; val_offset:182664*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182664*0 + 3*216*FLEN/8, x4, x1, x2)

inst_60889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000000000007; valaddr_reg:x3; val_offset:182667*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182667*0 + 3*217*FLEN/8, x4, x1, x2)

inst_60890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000000000000f; valaddr_reg:x3; val_offset:182670*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182670*0 + 3*218*FLEN/8, x4, x1, x2)

inst_60891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000000000001f; valaddr_reg:x3; val_offset:182673*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182673*0 + 3*219*FLEN/8, x4, x1, x2)

inst_60892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000000000003f; valaddr_reg:x3; val_offset:182676*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182676*0 + 3*220*FLEN/8, x4, x1, x2)

inst_60893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000000000007f; valaddr_reg:x3; val_offset:182679*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182679*0 + 3*221*FLEN/8, x4, x1, x2)

inst_60894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900000000000ff; valaddr_reg:x3; val_offset:182682*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182682*0 + 3*222*FLEN/8, x4, x1, x2)

inst_60895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900000000001ff; valaddr_reg:x3; val_offset:182685*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182685*0 + 3*223*FLEN/8, x4, x1, x2)

inst_60896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900000000003ff; valaddr_reg:x3; val_offset:182688*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182688*0 + 3*224*FLEN/8, x4, x1, x2)

inst_60897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900000000007ff; valaddr_reg:x3; val_offset:182691*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182691*0 + 3*225*FLEN/8, x4, x1, x2)

inst_60898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000000000fff; valaddr_reg:x3; val_offset:182694*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182694*0 + 3*226*FLEN/8, x4, x1, x2)

inst_60899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000000001fff; valaddr_reg:x3; val_offset:182697*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182697*0 + 3*227*FLEN/8, x4, x1, x2)

inst_60900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000000003fff; valaddr_reg:x3; val_offset:182700*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182700*0 + 3*228*FLEN/8, x4, x1, x2)

inst_60901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000000007fff; valaddr_reg:x3; val_offset:182703*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182703*0 + 3*229*FLEN/8, x4, x1, x2)

inst_60902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000000000ffff; valaddr_reg:x3; val_offset:182706*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182706*0 + 3*230*FLEN/8, x4, x1, x2)

inst_60903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000000001ffff; valaddr_reg:x3; val_offset:182709*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182709*0 + 3*231*FLEN/8, x4, x1, x2)

inst_60904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000000003ffff; valaddr_reg:x3; val_offset:182712*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182712*0 + 3*232*FLEN/8, x4, x1, x2)

inst_60905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000000007ffff; valaddr_reg:x3; val_offset:182715*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182715*0 + 3*233*FLEN/8, x4, x1, x2)

inst_60906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900000000fffff; valaddr_reg:x3; val_offset:182718*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182718*0 + 3*234*FLEN/8, x4, x1, x2)

inst_60907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900000001fffff; valaddr_reg:x3; val_offset:182721*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182721*0 + 3*235*FLEN/8, x4, x1, x2)

inst_60908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900000003fffff; valaddr_reg:x3; val_offset:182724*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182724*0 + 3*236*FLEN/8, x4, x1, x2)

inst_60909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900000007fffff; valaddr_reg:x3; val_offset:182727*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182727*0 + 3*237*FLEN/8, x4, x1, x2)

inst_60910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000000ffffff; valaddr_reg:x3; val_offset:182730*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182730*0 + 3*238*FLEN/8, x4, x1, x2)

inst_60911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000001ffffff; valaddr_reg:x3; val_offset:182733*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182733*0 + 3*239*FLEN/8, x4, x1, x2)

inst_60912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000003ffffff; valaddr_reg:x3; val_offset:182736*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182736*0 + 3*240*FLEN/8, x4, x1, x2)

inst_60913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000007ffffff; valaddr_reg:x3; val_offset:182739*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182739*0 + 3*241*FLEN/8, x4, x1, x2)

inst_60914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000000fffffff; valaddr_reg:x3; val_offset:182742*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182742*0 + 3*242*FLEN/8, x4, x1, x2)

inst_60915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000001fffffff; valaddr_reg:x3; val_offset:182745*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182745*0 + 3*243*FLEN/8, x4, x1, x2)

inst_60916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000003fffffff; valaddr_reg:x3; val_offset:182748*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182748*0 + 3*244*FLEN/8, x4, x1, x2)

inst_60917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000007fffffff; valaddr_reg:x3; val_offset:182751*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182751*0 + 3*245*FLEN/8, x4, x1, x2)

inst_60918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900000ffffffff; valaddr_reg:x3; val_offset:182754*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182754*0 + 3*246*FLEN/8, x4, x1, x2)

inst_60919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900001ffffffff; valaddr_reg:x3; val_offset:182757*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182757*0 + 3*247*FLEN/8, x4, x1, x2)

inst_60920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900003ffffffff; valaddr_reg:x3; val_offset:182760*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182760*0 + 3*248*FLEN/8, x4, x1, x2)

inst_60921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900007ffffffff; valaddr_reg:x3; val_offset:182763*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182763*0 + 3*249*FLEN/8, x4, x1, x2)

inst_60922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390000fffffffff; valaddr_reg:x3; val_offset:182766*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182766*0 + 3*250*FLEN/8, x4, x1, x2)

inst_60923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390001fffffffff; valaddr_reg:x3; val_offset:182769*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182769*0 + 3*251*FLEN/8, x4, x1, x2)

inst_60924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390003fffffffff; valaddr_reg:x3; val_offset:182772*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182772*0 + 3*252*FLEN/8, x4, x1, x2)

inst_60925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390007fffffffff; valaddr_reg:x3; val_offset:182775*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182775*0 + 3*253*FLEN/8, x4, x1, x2)

inst_60926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839000ffffffffff; valaddr_reg:x3; val_offset:182778*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182778*0 + 3*254*FLEN/8, x4, x1, x2)

inst_60927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839001ffffffffff; valaddr_reg:x3; val_offset:182781*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182781*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_60928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839003ffffffffff; valaddr_reg:x3; val_offset:182784*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182784*0 + 3*256*FLEN/8, x4, x1, x2)

inst_60929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839007ffffffffff; valaddr_reg:x3; val_offset:182787*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182787*0 + 3*257*FLEN/8, x4, x1, x2)

inst_60930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83900fffffffffff; valaddr_reg:x3; val_offset:182790*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182790*0 + 3*258*FLEN/8, x4, x1, x2)

inst_60931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83901fffffffffff; valaddr_reg:x3; val_offset:182793*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182793*0 + 3*259*FLEN/8, x4, x1, x2)

inst_60932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83903fffffffffff; valaddr_reg:x3; val_offset:182796*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182796*0 + 3*260*FLEN/8, x4, x1, x2)

inst_60933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x83907fffffffffff; valaddr_reg:x3; val_offset:182799*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182799*0 + 3*261*FLEN/8, x4, x1, x2)

inst_60934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8390ffffffffffff; valaddr_reg:x3; val_offset:182802*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182802*0 + 3*262*FLEN/8, x4, x1, x2)

inst_60935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8391ffffffffffff; valaddr_reg:x3; val_offset:182805*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182805*0 + 3*263*FLEN/8, x4, x1, x2)

inst_60936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8393ffffffffffff; valaddr_reg:x3; val_offset:182808*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182808*0 + 3*264*FLEN/8, x4, x1, x2)

inst_60937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8397ffffffffffff; valaddr_reg:x3; val_offset:182811*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182811*0 + 3*265*FLEN/8, x4, x1, x2)

inst_60938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x8398000000000000; valaddr_reg:x3; val_offset:182814*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182814*0 + 3*266*FLEN/8, x4, x1, x2)

inst_60939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839c000000000000; valaddr_reg:x3; val_offset:182817*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182817*0 + 3*267*FLEN/8, x4, x1, x2)

inst_60940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839e000000000000; valaddr_reg:x3; val_offset:182820*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182820*0 + 3*268*FLEN/8, x4, x1, x2)

inst_60941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839f000000000000; valaddr_reg:x3; val_offset:182823*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182823*0 + 3*269*FLEN/8, x4, x1, x2)

inst_60942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839f800000000000; valaddr_reg:x3; val_offset:182826*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182826*0 + 3*270*FLEN/8, x4, x1, x2)

inst_60943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fc00000000000; valaddr_reg:x3; val_offset:182829*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182829*0 + 3*271*FLEN/8, x4, x1, x2)

inst_60944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fe00000000000; valaddr_reg:x3; val_offset:182832*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182832*0 + 3*272*FLEN/8, x4, x1, x2)

inst_60945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ff00000000000; valaddr_reg:x3; val_offset:182835*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182835*0 + 3*273*FLEN/8, x4, x1, x2)

inst_60946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ff80000000000; valaddr_reg:x3; val_offset:182838*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182838*0 + 3*274*FLEN/8, x4, x1, x2)

inst_60947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffc0000000000; valaddr_reg:x3; val_offset:182841*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182841*0 + 3*275*FLEN/8, x4, x1, x2)

inst_60948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffe0000000000; valaddr_reg:x3; val_offset:182844*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182844*0 + 3*276*FLEN/8, x4, x1, x2)

inst_60949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fff0000000000; valaddr_reg:x3; val_offset:182847*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182847*0 + 3*277*FLEN/8, x4, x1, x2)

inst_60950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fff8000000000; valaddr_reg:x3; val_offset:182850*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182850*0 + 3*278*FLEN/8, x4, x1, x2)

inst_60951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffc000000000; valaddr_reg:x3; val_offset:182853*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182853*0 + 3*279*FLEN/8, x4, x1, x2)

inst_60952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffe000000000; valaddr_reg:x3; val_offset:182856*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182856*0 + 3*280*FLEN/8, x4, x1, x2)

inst_60953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffff000000000; valaddr_reg:x3; val_offset:182859*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182859*0 + 3*281*FLEN/8, x4, x1, x2)

inst_60954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffff800000000; valaddr_reg:x3; val_offset:182862*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182862*0 + 3*282*FLEN/8, x4, x1, x2)

inst_60955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffc00000000; valaddr_reg:x3; val_offset:182865*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182865*0 + 3*283*FLEN/8, x4, x1, x2)

inst_60956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffe00000000; valaddr_reg:x3; val_offset:182868*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182868*0 + 3*284*FLEN/8, x4, x1, x2)

inst_60957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffff00000000; valaddr_reg:x3; val_offset:182871*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182871*0 + 3*285*FLEN/8, x4, x1, x2)

inst_60958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffff80000000; valaddr_reg:x3; val_offset:182874*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182874*0 + 3*286*FLEN/8, x4, x1, x2)

inst_60959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffc0000000; valaddr_reg:x3; val_offset:182877*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182877*0 + 3*287*FLEN/8, x4, x1, x2)

inst_60960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffe0000000; valaddr_reg:x3; val_offset:182880*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182880*0 + 3*288*FLEN/8, x4, x1, x2)

inst_60961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffff0000000; valaddr_reg:x3; val_offset:182883*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182883*0 + 3*289*FLEN/8, x4, x1, x2)

inst_60962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffff8000000; valaddr_reg:x3; val_offset:182886*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182886*0 + 3*290*FLEN/8, x4, x1, x2)

inst_60963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffc000000; valaddr_reg:x3; val_offset:182889*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182889*0 + 3*291*FLEN/8, x4, x1, x2)

inst_60964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffe000000; valaddr_reg:x3; val_offset:182892*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182892*0 + 3*292*FLEN/8, x4, x1, x2)

inst_60965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffff000000; valaddr_reg:x3; val_offset:182895*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182895*0 + 3*293*FLEN/8, x4, x1, x2)

inst_60966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffff800000; valaddr_reg:x3; val_offset:182898*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182898*0 + 3*294*FLEN/8, x4, x1, x2)

inst_60967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffffc00000; valaddr_reg:x3; val_offset:182901*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182901*0 + 3*295*FLEN/8, x4, x1, x2)

inst_60968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffffe00000; valaddr_reg:x3; val_offset:182904*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182904*0 + 3*296*FLEN/8, x4, x1, x2)

inst_60969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffff00000; valaddr_reg:x3; val_offset:182907*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182907*0 + 3*297*FLEN/8, x4, x1, x2)

inst_60970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffff80000; valaddr_reg:x3; val_offset:182910*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182910*0 + 3*298*FLEN/8, x4, x1, x2)

inst_60971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffffc0000; valaddr_reg:x3; val_offset:182913*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182913*0 + 3*299*FLEN/8, x4, x1, x2)

inst_60972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffffe0000; valaddr_reg:x3; val_offset:182916*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182916*0 + 3*300*FLEN/8, x4, x1, x2)

inst_60973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffffff0000; valaddr_reg:x3; val_offset:182919*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182919*0 + 3*301*FLEN/8, x4, x1, x2)

inst_60974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffffff8000; valaddr_reg:x3; val_offset:182922*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182922*0 + 3*302*FLEN/8, x4, x1, x2)

inst_60975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffffffc000; valaddr_reg:x3; val_offset:182925*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182925*0 + 3*303*FLEN/8, x4, x1, x2)

inst_60976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffffffe000; valaddr_reg:x3; val_offset:182928*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182928*0 + 3*304*FLEN/8, x4, x1, x2)

inst_60977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffffff000; valaddr_reg:x3; val_offset:182931*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182931*0 + 3*305*FLEN/8, x4, x1, x2)

inst_60978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffffff800; valaddr_reg:x3; val_offset:182934*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182934*0 + 3*306*FLEN/8, x4, x1, x2)

inst_60979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffffffc00; valaddr_reg:x3; val_offset:182937*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182937*0 + 3*307*FLEN/8, x4, x1, x2)

inst_60980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffffffe00; valaddr_reg:x3; val_offset:182940*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182940*0 + 3*308*FLEN/8, x4, x1, x2)

inst_60981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffffffff00; valaddr_reg:x3; val_offset:182943*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182943*0 + 3*309*FLEN/8, x4, x1, x2)

inst_60982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffffffff80; valaddr_reg:x3; val_offset:182946*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182946*0 + 3*310*FLEN/8, x4, x1, x2)

inst_60983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffffffffc0; valaddr_reg:x3; val_offset:182949*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182949*0 + 3*311*FLEN/8, x4, x1, x2)

inst_60984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffffffffe0; valaddr_reg:x3; val_offset:182952*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182952*0 + 3*312*FLEN/8, x4, x1, x2)

inst_60985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffffffff0; valaddr_reg:x3; val_offset:182955*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182955*0 + 3*313*FLEN/8, x4, x1, x2)

inst_60986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffffffff8; valaddr_reg:x3; val_offset:182958*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182958*0 + 3*314*FLEN/8, x4, x1, x2)

inst_60987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffffffffc; valaddr_reg:x3; val_offset:182961*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182961*0 + 3*315*FLEN/8, x4, x1, x2)

inst_60988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839ffffffffffffe; valaddr_reg:x3; val_offset:182964*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182964*0 + 3*316*FLEN/8, x4, x1, x2)

inst_60989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28db1a24c03ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28db1a24c03ab; op2val:0x8000;
op3val:0x839fffffffffffff; valaddr_reg:x3; val_offset:182967*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182967*0 + 3*317*FLEN/8, x4, x1, x2)

inst_60990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:182970*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182970*0 + 3*318*FLEN/8, x4, x1, x2)

inst_60991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:182973*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182973*0 + 3*319*FLEN/8, x4, x1, x2)

inst_60992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:182976*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182976*0 + 3*320*FLEN/8, x4, x1, x2)

inst_60993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:182979*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182979*0 + 3*321*FLEN/8, x4, x1, x2)

inst_60994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:182982*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182982*0 + 3*322*FLEN/8, x4, x1, x2)

inst_60995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:182985*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182985*0 + 3*323*FLEN/8, x4, x1, x2)

inst_60996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:182988*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182988*0 + 3*324*FLEN/8, x4, x1, x2)

inst_60997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:182991*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182991*0 + 3*325*FLEN/8, x4, x1, x2)

inst_60998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:182994*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182994*0 + 3*326*FLEN/8, x4, x1, x2)

inst_60999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:182997*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182997*0 + 3*327*FLEN/8, x4, x1, x2)

inst_61000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:183000*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183000*0 + 3*328*FLEN/8, x4, x1, x2)

inst_61001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:183003*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183003*0 + 3*329*FLEN/8, x4, x1, x2)

inst_61002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:183006*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183006*0 + 3*330*FLEN/8, x4, x1, x2)

inst_61003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:183009*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183009*0 + 3*331*FLEN/8, x4, x1, x2)

inst_61004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:183012*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183012*0 + 3*332*FLEN/8, x4, x1, x2)

inst_61005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:183015*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183015*0 + 3*333*FLEN/8, x4, x1, x2)

inst_61006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:183018*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183018*0 + 3*334*FLEN/8, x4, x1, x2)

inst_61007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:183021*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183021*0 + 3*335*FLEN/8, x4, x1, x2)

inst_61008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:183024*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183024*0 + 3*336*FLEN/8, x4, x1, x2)

inst_61009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:183027*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183027*0 + 3*337*FLEN/8, x4, x1, x2)

inst_61010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:183030*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183030*0 + 3*338*FLEN/8, x4, x1, x2)

inst_61011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:183033*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183033*0 + 3*339*FLEN/8, x4, x1, x2)

inst_61012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000000000000; valaddr_reg:x3; val_offset:183036*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183036*0 + 3*340*FLEN/8, x4, x1, x2)

inst_61013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000000000001; valaddr_reg:x3; val_offset:183039*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183039*0 + 3*341*FLEN/8, x4, x1, x2)

inst_61014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000000000003; valaddr_reg:x3; val_offset:183042*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183042*0 + 3*342*FLEN/8, x4, x1, x2)

inst_61015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000000000007; valaddr_reg:x3; val_offset:183045*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183045*0 + 3*343*FLEN/8, x4, x1, x2)

inst_61016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000000000000f; valaddr_reg:x3; val_offset:183048*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183048*0 + 3*344*FLEN/8, x4, x1, x2)

inst_61017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000000000001f; valaddr_reg:x3; val_offset:183051*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183051*0 + 3*345*FLEN/8, x4, x1, x2)

inst_61018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000000000003f; valaddr_reg:x3; val_offset:183054*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183054*0 + 3*346*FLEN/8, x4, x1, x2)

inst_61019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000000000007f; valaddr_reg:x3; val_offset:183057*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183057*0 + 3*347*FLEN/8, x4, x1, x2)

inst_61020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00000000000ff; valaddr_reg:x3; val_offset:183060*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183060*0 + 3*348*FLEN/8, x4, x1, x2)

inst_61021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00000000001ff; valaddr_reg:x3; val_offset:183063*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183063*0 + 3*349*FLEN/8, x4, x1, x2)

inst_61022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00000000003ff; valaddr_reg:x3; val_offset:183066*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183066*0 + 3*350*FLEN/8, x4, x1, x2)

inst_61023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00000000007ff; valaddr_reg:x3; val_offset:183069*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183069*0 + 3*351*FLEN/8, x4, x1, x2)

inst_61024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000000000fff; valaddr_reg:x3; val_offset:183072*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183072*0 + 3*352*FLEN/8, x4, x1, x2)

inst_61025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000000001fff; valaddr_reg:x3; val_offset:183075*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183075*0 + 3*353*FLEN/8, x4, x1, x2)

inst_61026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000000003fff; valaddr_reg:x3; val_offset:183078*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183078*0 + 3*354*FLEN/8, x4, x1, x2)

inst_61027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000000007fff; valaddr_reg:x3; val_offset:183081*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183081*0 + 3*355*FLEN/8, x4, x1, x2)

inst_61028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000000000ffff; valaddr_reg:x3; val_offset:183084*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183084*0 + 3*356*FLEN/8, x4, x1, x2)

inst_61029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000000001ffff; valaddr_reg:x3; val_offset:183087*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183087*0 + 3*357*FLEN/8, x4, x1, x2)

inst_61030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000000003ffff; valaddr_reg:x3; val_offset:183090*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183090*0 + 3*358*FLEN/8, x4, x1, x2)

inst_61031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000000007ffff; valaddr_reg:x3; val_offset:183093*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183093*0 + 3*359*FLEN/8, x4, x1, x2)

inst_61032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00000000fffff; valaddr_reg:x3; val_offset:183096*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183096*0 + 3*360*FLEN/8, x4, x1, x2)

inst_61033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00000001fffff; valaddr_reg:x3; val_offset:183099*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183099*0 + 3*361*FLEN/8, x4, x1, x2)

inst_61034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00000003fffff; valaddr_reg:x3; val_offset:183102*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183102*0 + 3*362*FLEN/8, x4, x1, x2)

inst_61035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00000007fffff; valaddr_reg:x3; val_offset:183105*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183105*0 + 3*363*FLEN/8, x4, x1, x2)

inst_61036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000000ffffff; valaddr_reg:x3; val_offset:183108*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183108*0 + 3*364*FLEN/8, x4, x1, x2)

inst_61037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000001ffffff; valaddr_reg:x3; val_offset:183111*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183111*0 + 3*365*FLEN/8, x4, x1, x2)

inst_61038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000003ffffff; valaddr_reg:x3; val_offset:183114*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183114*0 + 3*366*FLEN/8, x4, x1, x2)

inst_61039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000007ffffff; valaddr_reg:x3; val_offset:183117*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183117*0 + 3*367*FLEN/8, x4, x1, x2)

inst_61040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000000fffffff; valaddr_reg:x3; val_offset:183120*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183120*0 + 3*368*FLEN/8, x4, x1, x2)

inst_61041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000001fffffff; valaddr_reg:x3; val_offset:183123*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183123*0 + 3*369*FLEN/8, x4, x1, x2)

inst_61042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000003fffffff; valaddr_reg:x3; val_offset:183126*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183126*0 + 3*370*FLEN/8, x4, x1, x2)

inst_61043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000007fffffff; valaddr_reg:x3; val_offset:183129*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183129*0 + 3*371*FLEN/8, x4, x1, x2)

inst_61044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00000ffffffff; valaddr_reg:x3; val_offset:183132*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183132*0 + 3*372*FLEN/8, x4, x1, x2)

inst_61045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00001ffffffff; valaddr_reg:x3; val_offset:183135*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183135*0 + 3*373*FLEN/8, x4, x1, x2)

inst_61046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00003ffffffff; valaddr_reg:x3; val_offset:183138*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183138*0 + 3*374*FLEN/8, x4, x1, x2)

inst_61047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00007ffffffff; valaddr_reg:x3; val_offset:183141*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183141*0 + 3*375*FLEN/8, x4, x1, x2)

inst_61048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0000fffffffff; valaddr_reg:x3; val_offset:183144*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183144*0 + 3*376*FLEN/8, x4, x1, x2)

inst_61049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0001fffffffff; valaddr_reg:x3; val_offset:183147*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183147*0 + 3*377*FLEN/8, x4, x1, x2)

inst_61050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0003fffffffff; valaddr_reg:x3; val_offset:183150*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183150*0 + 3*378*FLEN/8, x4, x1, x2)

inst_61051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0007fffffffff; valaddr_reg:x3; val_offset:183153*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183153*0 + 3*379*FLEN/8, x4, x1, x2)

inst_61052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b000ffffffffff; valaddr_reg:x3; val_offset:183156*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183156*0 + 3*380*FLEN/8, x4, x1, x2)

inst_61053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b001ffffffffff; valaddr_reg:x3; val_offset:183159*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183159*0 + 3*381*FLEN/8, x4, x1, x2)

inst_61054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b003ffffffffff; valaddr_reg:x3; val_offset:183162*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183162*0 + 3*382*FLEN/8, x4, x1, x2)

inst_61055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b007ffffffffff; valaddr_reg:x3; val_offset:183165*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183165*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_61056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b00fffffffffff; valaddr_reg:x3; val_offset:183168*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183168*0 + 3*384*FLEN/8, x4, x1, x2)

inst_61057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b01fffffffffff; valaddr_reg:x3; val_offset:183171*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183171*0 + 3*385*FLEN/8, x4, x1, x2)

inst_61058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b03fffffffffff; valaddr_reg:x3; val_offset:183174*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183174*0 + 3*386*FLEN/8, x4, x1, x2)

inst_61059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b07fffffffffff; valaddr_reg:x3; val_offset:183177*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183177*0 + 3*387*FLEN/8, x4, x1, x2)

inst_61060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b0ffffffffffff; valaddr_reg:x3; val_offset:183180*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183180*0 + 3*388*FLEN/8, x4, x1, x2)

inst_61061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b1ffffffffffff; valaddr_reg:x3; val_offset:183183*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183183*0 + 3*389*FLEN/8, x4, x1, x2)

inst_61062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b3ffffffffffff; valaddr_reg:x3; val_offset:183186*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183186*0 + 3*390*FLEN/8, x4, x1, x2)

inst_61063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b7ffffffffffff; valaddr_reg:x3; val_offset:183189*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183189*0 + 3*391*FLEN/8, x4, x1, x2)

inst_61064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1b8000000000000; valaddr_reg:x3; val_offset:183192*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183192*0 + 3*392*FLEN/8, x4, x1, x2)

inst_61065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bc000000000000; valaddr_reg:x3; val_offset:183195*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183195*0 + 3*393*FLEN/8, x4, x1, x2)

inst_61066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1be000000000000; valaddr_reg:x3; val_offset:183198*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183198*0 + 3*394*FLEN/8, x4, x1, x2)

inst_61067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bf000000000000; valaddr_reg:x3; val_offset:183201*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183201*0 + 3*395*FLEN/8, x4, x1, x2)

inst_61068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bf800000000000; valaddr_reg:x3; val_offset:183204*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183204*0 + 3*396*FLEN/8, x4, x1, x2)

inst_61069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfc00000000000; valaddr_reg:x3; val_offset:183207*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183207*0 + 3*397*FLEN/8, x4, x1, x2)

inst_61070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfe00000000000; valaddr_reg:x3; val_offset:183210*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183210*0 + 3*398*FLEN/8, x4, x1, x2)

inst_61071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bff00000000000; valaddr_reg:x3; val_offset:183213*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183213*0 + 3*399*FLEN/8, x4, x1, x2)

inst_61072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bff80000000000; valaddr_reg:x3; val_offset:183216*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183216*0 + 3*400*FLEN/8, x4, x1, x2)

inst_61073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffc0000000000; valaddr_reg:x3; val_offset:183219*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183219*0 + 3*401*FLEN/8, x4, x1, x2)

inst_61074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffe0000000000; valaddr_reg:x3; val_offset:183222*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183222*0 + 3*402*FLEN/8, x4, x1, x2)

inst_61075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfff0000000000; valaddr_reg:x3; val_offset:183225*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183225*0 + 3*403*FLEN/8, x4, x1, x2)

inst_61076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfff8000000000; valaddr_reg:x3; val_offset:183228*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183228*0 + 3*404*FLEN/8, x4, x1, x2)

inst_61077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffc000000000; valaddr_reg:x3; val_offset:183231*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183231*0 + 3*405*FLEN/8, x4, x1, x2)

inst_61078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffe000000000; valaddr_reg:x3; val_offset:183234*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183234*0 + 3*406*FLEN/8, x4, x1, x2)

inst_61079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffff000000000; valaddr_reg:x3; val_offset:183237*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183237*0 + 3*407*FLEN/8, x4, x1, x2)

inst_61080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffff800000000; valaddr_reg:x3; val_offset:183240*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183240*0 + 3*408*FLEN/8, x4, x1, x2)

inst_61081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffc00000000; valaddr_reg:x3; val_offset:183243*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183243*0 + 3*409*FLEN/8, x4, x1, x2)

inst_61082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffe00000000; valaddr_reg:x3; val_offset:183246*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183246*0 + 3*410*FLEN/8, x4, x1, x2)

inst_61083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffff00000000; valaddr_reg:x3; val_offset:183249*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183249*0 + 3*411*FLEN/8, x4, x1, x2)

inst_61084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffff80000000; valaddr_reg:x3; val_offset:183252*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183252*0 + 3*412*FLEN/8, x4, x1, x2)

inst_61085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffc0000000; valaddr_reg:x3; val_offset:183255*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183255*0 + 3*413*FLEN/8, x4, x1, x2)

inst_61086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffe0000000; valaddr_reg:x3; val_offset:183258*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183258*0 + 3*414*FLEN/8, x4, x1, x2)

inst_61087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffff0000000; valaddr_reg:x3; val_offset:183261*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183261*0 + 3*415*FLEN/8, x4, x1, x2)

inst_61088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffff8000000; valaddr_reg:x3; val_offset:183264*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183264*0 + 3*416*FLEN/8, x4, x1, x2)

inst_61089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffc000000; valaddr_reg:x3; val_offset:183267*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183267*0 + 3*417*FLEN/8, x4, x1, x2)

inst_61090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffe000000; valaddr_reg:x3; val_offset:183270*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183270*0 + 3*418*FLEN/8, x4, x1, x2)

inst_61091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffff000000; valaddr_reg:x3; val_offset:183273*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183273*0 + 3*419*FLEN/8, x4, x1, x2)

inst_61092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffff800000; valaddr_reg:x3; val_offset:183276*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183276*0 + 3*420*FLEN/8, x4, x1, x2)

inst_61093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffffc00000; valaddr_reg:x3; val_offset:183279*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183279*0 + 3*421*FLEN/8, x4, x1, x2)

inst_61094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffffe00000; valaddr_reg:x3; val_offset:183282*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183282*0 + 3*422*FLEN/8, x4, x1, x2)

inst_61095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffff00000; valaddr_reg:x3; val_offset:183285*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183285*0 + 3*423*FLEN/8, x4, x1, x2)

inst_61096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffff80000; valaddr_reg:x3; val_offset:183288*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183288*0 + 3*424*FLEN/8, x4, x1, x2)

inst_61097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffffc0000; valaddr_reg:x3; val_offset:183291*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183291*0 + 3*425*FLEN/8, x4, x1, x2)

inst_61098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffffe0000; valaddr_reg:x3; val_offset:183294*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183294*0 + 3*426*FLEN/8, x4, x1, x2)

inst_61099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffffff0000; valaddr_reg:x3; val_offset:183297*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183297*0 + 3*427*FLEN/8, x4, x1, x2)

inst_61100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffffff8000; valaddr_reg:x3; val_offset:183300*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183300*0 + 3*428*FLEN/8, x4, x1, x2)

inst_61101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffffffc000; valaddr_reg:x3; val_offset:183303*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183303*0 + 3*429*FLEN/8, x4, x1, x2)

inst_61102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffffffe000; valaddr_reg:x3; val_offset:183306*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183306*0 + 3*430*FLEN/8, x4, x1, x2)

inst_61103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffffff000; valaddr_reg:x3; val_offset:183309*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183309*0 + 3*431*FLEN/8, x4, x1, x2)

inst_61104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffffff800; valaddr_reg:x3; val_offset:183312*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183312*0 + 3*432*FLEN/8, x4, x1, x2)

inst_61105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffffffc00; valaddr_reg:x3; val_offset:183315*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183315*0 + 3*433*FLEN/8, x4, x1, x2)

inst_61106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffffffe00; valaddr_reg:x3; val_offset:183318*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183318*0 + 3*434*FLEN/8, x4, x1, x2)

inst_61107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffffffff00; valaddr_reg:x3; val_offset:183321*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183321*0 + 3*435*FLEN/8, x4, x1, x2)

inst_61108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffffffff80; valaddr_reg:x3; val_offset:183324*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183324*0 + 3*436*FLEN/8, x4, x1, x2)

inst_61109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffffffffc0; valaddr_reg:x3; val_offset:183327*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183327*0 + 3*437*FLEN/8, x4, x1, x2)

inst_61110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffffffffe0; valaddr_reg:x3; val_offset:183330*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183330*0 + 3*438*FLEN/8, x4, x1, x2)

inst_61111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffffffff0; valaddr_reg:x3; val_offset:183333*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183333*0 + 3*439*FLEN/8, x4, x1, x2)

inst_61112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffffffff8; valaddr_reg:x3; val_offset:183336*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183336*0 + 3*440*FLEN/8, x4, x1, x2)

inst_61113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffffffffc; valaddr_reg:x3; val_offset:183339*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183339*0 + 3*441*FLEN/8, x4, x1, x2)

inst_61114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bffffffffffffe; valaddr_reg:x3; val_offset:183342*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183342*0 + 3*442*FLEN/8, x4, x1, x2)

inst_61115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x296628ec28afa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa296628ec28afa; op2val:0x0;
op3val:0x1bfffffffffffff; valaddr_reg:x3; val_offset:183345*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183345*0 + 3*443*FLEN/8, x4, x1, x2)

inst_61116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000000000000; valaddr_reg:x3; val_offset:183348*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183348*0 + 3*444*FLEN/8, x4, x1, x2)

inst_61117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000000000001; valaddr_reg:x3; val_offset:183351*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183351*0 + 3*445*FLEN/8, x4, x1, x2)

inst_61118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000000000003; valaddr_reg:x3; val_offset:183354*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183354*0 + 3*446*FLEN/8, x4, x1, x2)

inst_61119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000000000007; valaddr_reg:x3; val_offset:183357*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183357*0 + 3*447*FLEN/8, x4, x1, x2)

inst_61120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000000000000f; valaddr_reg:x3; val_offset:183360*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183360*0 + 3*448*FLEN/8, x4, x1, x2)

inst_61121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000000000001f; valaddr_reg:x3; val_offset:183363*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183363*0 + 3*449*FLEN/8, x4, x1, x2)

inst_61122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000000000003f; valaddr_reg:x3; val_offset:183366*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183366*0 + 3*450*FLEN/8, x4, x1, x2)

inst_61123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000000000007f; valaddr_reg:x3; val_offset:183369*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183369*0 + 3*451*FLEN/8, x4, x1, x2)

inst_61124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200000000000ff; valaddr_reg:x3; val_offset:183372*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183372*0 + 3*452*FLEN/8, x4, x1, x2)

inst_61125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200000000001ff; valaddr_reg:x3; val_offset:183375*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183375*0 + 3*453*FLEN/8, x4, x1, x2)

inst_61126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200000000003ff; valaddr_reg:x3; val_offset:183378*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183378*0 + 3*454*FLEN/8, x4, x1, x2)

inst_61127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200000000007ff; valaddr_reg:x3; val_offset:183381*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183381*0 + 3*455*FLEN/8, x4, x1, x2)

inst_61128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000000000fff; valaddr_reg:x3; val_offset:183384*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183384*0 + 3*456*FLEN/8, x4, x1, x2)

inst_61129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000000001fff; valaddr_reg:x3; val_offset:183387*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183387*0 + 3*457*FLEN/8, x4, x1, x2)

inst_61130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000000003fff; valaddr_reg:x3; val_offset:183390*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183390*0 + 3*458*FLEN/8, x4, x1, x2)

inst_61131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000000007fff; valaddr_reg:x3; val_offset:183393*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183393*0 + 3*459*FLEN/8, x4, x1, x2)

inst_61132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000000000ffff; valaddr_reg:x3; val_offset:183396*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183396*0 + 3*460*FLEN/8, x4, x1, x2)

inst_61133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000000001ffff; valaddr_reg:x3; val_offset:183399*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183399*0 + 3*461*FLEN/8, x4, x1, x2)

inst_61134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000000003ffff; valaddr_reg:x3; val_offset:183402*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183402*0 + 3*462*FLEN/8, x4, x1, x2)

inst_61135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000000007ffff; valaddr_reg:x3; val_offset:183405*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183405*0 + 3*463*FLEN/8, x4, x1, x2)

inst_61136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200000000fffff; valaddr_reg:x3; val_offset:183408*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183408*0 + 3*464*FLEN/8, x4, x1, x2)

inst_61137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200000001fffff; valaddr_reg:x3; val_offset:183411*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183411*0 + 3*465*FLEN/8, x4, x1, x2)

inst_61138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200000003fffff; valaddr_reg:x3; val_offset:183414*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183414*0 + 3*466*FLEN/8, x4, x1, x2)

inst_61139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200000007fffff; valaddr_reg:x3; val_offset:183417*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183417*0 + 3*467*FLEN/8, x4, x1, x2)

inst_61140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000000ffffff; valaddr_reg:x3; val_offset:183420*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183420*0 + 3*468*FLEN/8, x4, x1, x2)

inst_61141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000001ffffff; valaddr_reg:x3; val_offset:183423*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183423*0 + 3*469*FLEN/8, x4, x1, x2)

inst_61142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000003ffffff; valaddr_reg:x3; val_offset:183426*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183426*0 + 3*470*FLEN/8, x4, x1, x2)

inst_61143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000007ffffff; valaddr_reg:x3; val_offset:183429*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183429*0 + 3*471*FLEN/8, x4, x1, x2)

inst_61144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000000fffffff; valaddr_reg:x3; val_offset:183432*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183432*0 + 3*472*FLEN/8, x4, x1, x2)

inst_61145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000001fffffff; valaddr_reg:x3; val_offset:183435*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183435*0 + 3*473*FLEN/8, x4, x1, x2)

inst_61146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000003fffffff; valaddr_reg:x3; val_offset:183438*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183438*0 + 3*474*FLEN/8, x4, x1, x2)

inst_61147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000007fffffff; valaddr_reg:x3; val_offset:183441*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183441*0 + 3*475*FLEN/8, x4, x1, x2)

inst_61148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200000ffffffff; valaddr_reg:x3; val_offset:183444*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183444*0 + 3*476*FLEN/8, x4, x1, x2)

inst_61149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200001ffffffff; valaddr_reg:x3; val_offset:183447*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183447*0 + 3*477*FLEN/8, x4, x1, x2)

inst_61150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200003ffffffff; valaddr_reg:x3; val_offset:183450*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183450*0 + 3*478*FLEN/8, x4, x1, x2)

inst_61151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200007ffffffff; valaddr_reg:x3; val_offset:183453*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183453*0 + 3*479*FLEN/8, x4, x1, x2)

inst_61152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20000fffffffff; valaddr_reg:x3; val_offset:183456*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183456*0 + 3*480*FLEN/8, x4, x1, x2)

inst_61153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20001fffffffff; valaddr_reg:x3; val_offset:183459*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183459*0 + 3*481*FLEN/8, x4, x1, x2)

inst_61154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20003fffffffff; valaddr_reg:x3; val_offset:183462*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183462*0 + 3*482*FLEN/8, x4, x1, x2)

inst_61155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20007fffffffff; valaddr_reg:x3; val_offset:183465*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183465*0 + 3*483*FLEN/8, x4, x1, x2)

inst_61156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2000ffffffffff; valaddr_reg:x3; val_offset:183468*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183468*0 + 3*484*FLEN/8, x4, x1, x2)

inst_61157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2001ffffffffff; valaddr_reg:x3; val_offset:183471*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183471*0 + 3*485*FLEN/8, x4, x1, x2)

inst_61158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2003ffffffffff; valaddr_reg:x3; val_offset:183474*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183474*0 + 3*486*FLEN/8, x4, x1, x2)

inst_61159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2007ffffffffff; valaddr_reg:x3; val_offset:183477*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183477*0 + 3*487*FLEN/8, x4, x1, x2)

inst_61160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b200fffffffffff; valaddr_reg:x3; val_offset:183480*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183480*0 + 3*488*FLEN/8, x4, x1, x2)

inst_61161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b201fffffffffff; valaddr_reg:x3; val_offset:183483*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183483*0 + 3*489*FLEN/8, x4, x1, x2)

inst_61162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b203fffffffffff; valaddr_reg:x3; val_offset:183486*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183486*0 + 3*490*FLEN/8, x4, x1, x2)

inst_61163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b207fffffffffff; valaddr_reg:x3; val_offset:183489*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183489*0 + 3*491*FLEN/8, x4, x1, x2)

inst_61164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b20ffffffffffff; valaddr_reg:x3; val_offset:183492*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183492*0 + 3*492*FLEN/8, x4, x1, x2)

inst_61165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b21ffffffffffff; valaddr_reg:x3; val_offset:183495*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183495*0 + 3*493*FLEN/8, x4, x1, x2)

inst_61166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b23ffffffffffff; valaddr_reg:x3; val_offset:183498*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183498*0 + 3*494*FLEN/8, x4, x1, x2)

inst_61167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b27ffffffffffff; valaddr_reg:x3; val_offset:183501*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183501*0 + 3*495*FLEN/8, x4, x1, x2)

inst_61168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b28000000000000; valaddr_reg:x3; val_offset:183504*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183504*0 + 3*496*FLEN/8, x4, x1, x2)

inst_61169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2c000000000000; valaddr_reg:x3; val_offset:183507*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183507*0 + 3*497*FLEN/8, x4, x1, x2)

inst_61170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2e000000000000; valaddr_reg:x3; val_offset:183510*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183510*0 + 3*498*FLEN/8, x4, x1, x2)

inst_61171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2f000000000000; valaddr_reg:x3; val_offset:183513*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183513*0 + 3*499*FLEN/8, x4, x1, x2)

inst_61172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2f800000000000; valaddr_reg:x3; val_offset:183516*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183516*0 + 3*500*FLEN/8, x4, x1, x2)

inst_61173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fc00000000000; valaddr_reg:x3; val_offset:183519*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183519*0 + 3*501*FLEN/8, x4, x1, x2)

inst_61174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fe00000000000; valaddr_reg:x3; val_offset:183522*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183522*0 + 3*502*FLEN/8, x4, x1, x2)

inst_61175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ff00000000000; valaddr_reg:x3; val_offset:183525*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183525*0 + 3*503*FLEN/8, x4, x1, x2)

inst_61176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ff80000000000; valaddr_reg:x3; val_offset:183528*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183528*0 + 3*504*FLEN/8, x4, x1, x2)

inst_61177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffc0000000000; valaddr_reg:x3; val_offset:183531*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183531*0 + 3*505*FLEN/8, x4, x1, x2)

inst_61178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffe0000000000; valaddr_reg:x3; val_offset:183534*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183534*0 + 3*506*FLEN/8, x4, x1, x2)

inst_61179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fff0000000000; valaddr_reg:x3; val_offset:183537*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183537*0 + 3*507*FLEN/8, x4, x1, x2)

inst_61180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fff8000000000; valaddr_reg:x3; val_offset:183540*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183540*0 + 3*508*FLEN/8, x4, x1, x2)

inst_61181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffc000000000; valaddr_reg:x3; val_offset:183543*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183543*0 + 3*509*FLEN/8, x4, x1, x2)

inst_61182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffe000000000; valaddr_reg:x3; val_offset:183546*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183546*0 + 3*510*FLEN/8, x4, x1, x2)

inst_61183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffff000000000; valaddr_reg:x3; val_offset:183549*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183549*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_61184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffff800000000; valaddr_reg:x3; val_offset:183552*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183552*0 + 3*512*FLEN/8, x4, x1, x2)

inst_61185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffc00000000; valaddr_reg:x3; val_offset:183555*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183555*0 + 3*513*FLEN/8, x4, x1, x2)

inst_61186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffe00000000; valaddr_reg:x3; val_offset:183558*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183558*0 + 3*514*FLEN/8, x4, x1, x2)

inst_61187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffff00000000; valaddr_reg:x3; val_offset:183561*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183561*0 + 3*515*FLEN/8, x4, x1, x2)

inst_61188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffff80000000; valaddr_reg:x3; val_offset:183564*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183564*0 + 3*516*FLEN/8, x4, x1, x2)

inst_61189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffc0000000; valaddr_reg:x3; val_offset:183567*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183567*0 + 3*517*FLEN/8, x4, x1, x2)

inst_61190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffe0000000; valaddr_reg:x3; val_offset:183570*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183570*0 + 3*518*FLEN/8, x4, x1, x2)

inst_61191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffff0000000; valaddr_reg:x3; val_offset:183573*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183573*0 + 3*519*FLEN/8, x4, x1, x2)

inst_61192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffff8000000; valaddr_reg:x3; val_offset:183576*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183576*0 + 3*520*FLEN/8, x4, x1, x2)

inst_61193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffc000000; valaddr_reg:x3; val_offset:183579*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183579*0 + 3*521*FLEN/8, x4, x1, x2)

inst_61194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffe000000; valaddr_reg:x3; val_offset:183582*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183582*0 + 3*522*FLEN/8, x4, x1, x2)

inst_61195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffff000000; valaddr_reg:x3; val_offset:183585*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183585*0 + 3*523*FLEN/8, x4, x1, x2)

inst_61196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffff800000; valaddr_reg:x3; val_offset:183588*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183588*0 + 3*524*FLEN/8, x4, x1, x2)

inst_61197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffffc00000; valaddr_reg:x3; val_offset:183591*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183591*0 + 3*525*FLEN/8, x4, x1, x2)

inst_61198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffffe00000; valaddr_reg:x3; val_offset:183594*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183594*0 + 3*526*FLEN/8, x4, x1, x2)

inst_61199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffff00000; valaddr_reg:x3; val_offset:183597*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183597*0 + 3*527*FLEN/8, x4, x1, x2)

inst_61200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffff80000; valaddr_reg:x3; val_offset:183600*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183600*0 + 3*528*FLEN/8, x4, x1, x2)

inst_61201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffffc0000; valaddr_reg:x3; val_offset:183603*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183603*0 + 3*529*FLEN/8, x4, x1, x2)

inst_61202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffffe0000; valaddr_reg:x3; val_offset:183606*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183606*0 + 3*530*FLEN/8, x4, x1, x2)

inst_61203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffffff0000; valaddr_reg:x3; val_offset:183609*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183609*0 + 3*531*FLEN/8, x4, x1, x2)

inst_61204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffffff8000; valaddr_reg:x3; val_offset:183612*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183612*0 + 3*532*FLEN/8, x4, x1, x2)

inst_61205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffffffc000; valaddr_reg:x3; val_offset:183615*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183615*0 + 3*533*FLEN/8, x4, x1, x2)

inst_61206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffffffe000; valaddr_reg:x3; val_offset:183618*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183618*0 + 3*534*FLEN/8, x4, x1, x2)

inst_61207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffffff000; valaddr_reg:x3; val_offset:183621*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183621*0 + 3*535*FLEN/8, x4, x1, x2)

inst_61208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffffff800; valaddr_reg:x3; val_offset:183624*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183624*0 + 3*536*FLEN/8, x4, x1, x2)

inst_61209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffffffc00; valaddr_reg:x3; val_offset:183627*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183627*0 + 3*537*FLEN/8, x4, x1, x2)

inst_61210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffffffe00; valaddr_reg:x3; val_offset:183630*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183630*0 + 3*538*FLEN/8, x4, x1, x2)

inst_61211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffffffff00; valaddr_reg:x3; val_offset:183633*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183633*0 + 3*539*FLEN/8, x4, x1, x2)

inst_61212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffffffff80; valaddr_reg:x3; val_offset:183636*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183636*0 + 3*540*FLEN/8, x4, x1, x2)

inst_61213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffffffffc0; valaddr_reg:x3; val_offset:183639*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183639*0 + 3*541*FLEN/8, x4, x1, x2)

inst_61214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffffffffe0; valaddr_reg:x3; val_offset:183642*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183642*0 + 3*542*FLEN/8, x4, x1, x2)

inst_61215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffffffff0; valaddr_reg:x3; val_offset:183645*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183645*0 + 3*543*FLEN/8, x4, x1, x2)

inst_61216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffffffff8; valaddr_reg:x3; val_offset:183648*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183648*0 + 3*544*FLEN/8, x4, x1, x2)

inst_61217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffffffffc; valaddr_reg:x3; val_offset:183651*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183651*0 + 3*545*FLEN/8, x4, x1, x2)

inst_61218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2ffffffffffffe; valaddr_reg:x3; val_offset:183654*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183654*0 + 3*546*FLEN/8, x4, x1, x2)

inst_61219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3b2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3b2fffffffffffff; valaddr_reg:x3; val_offset:183657*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183657*0 + 3*547*FLEN/8, x4, x1, x2)

inst_61220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:183660*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183660*0 + 3*548*FLEN/8, x4, x1, x2)

inst_61221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:183663*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183663*0 + 3*549*FLEN/8, x4, x1, x2)

inst_61222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:183666*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183666*0 + 3*550*FLEN/8, x4, x1, x2)

inst_61223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:183669*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183669*0 + 3*551*FLEN/8, x4, x1, x2)

inst_61224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:183672*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183672*0 + 3*552*FLEN/8, x4, x1, x2)

inst_61225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:183675*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183675*0 + 3*553*FLEN/8, x4, x1, x2)

inst_61226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:183678*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183678*0 + 3*554*FLEN/8, x4, x1, x2)

inst_61227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:183681*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183681*0 + 3*555*FLEN/8, x4, x1, x2)

inst_61228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:183684*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183684*0 + 3*556*FLEN/8, x4, x1, x2)

inst_61229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:183687*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183687*0 + 3*557*FLEN/8, x4, x1, x2)

inst_61230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:183690*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183690*0 + 3*558*FLEN/8, x4, x1, x2)

inst_61231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:183693*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183693*0 + 3*559*FLEN/8, x4, x1, x2)

inst_61232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:183696*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183696*0 + 3*560*FLEN/8, x4, x1, x2)

inst_61233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:183699*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183699*0 + 3*561*FLEN/8, x4, x1, x2)

inst_61234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:183702*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183702*0 + 3*562*FLEN/8, x4, x1, x2)

inst_61235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:183705*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183705*0 + 3*563*FLEN/8, x4, x1, x2)

inst_61236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:183708*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183708*0 + 3*564*FLEN/8, x4, x1, x2)

inst_61237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:183711*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183711*0 + 3*565*FLEN/8, x4, x1, x2)

inst_61238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:183714*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183714*0 + 3*566*FLEN/8, x4, x1, x2)

inst_61239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:183717*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183717*0 + 3*567*FLEN/8, x4, x1, x2)

inst_61240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:183720*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183720*0 + 3*568*FLEN/8, x4, x1, x2)

inst_61241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb88fcf7e741e6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2982d565d88fc; op2val:0x203b88fcf7e741e6;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:183723*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183723*0 + 3*569*FLEN/8, x4, x1, x2)

inst_61242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:183726*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183726*0 + 3*570*FLEN/8, x4, x1, x2)

inst_61243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:183729*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183729*0 + 3*571*FLEN/8, x4, x1, x2)

inst_61244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:183732*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183732*0 + 3*572*FLEN/8, x4, x1, x2)

inst_61245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:183735*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183735*0 + 3*573*FLEN/8, x4, x1, x2)

inst_61246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:183738*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183738*0 + 3*574*FLEN/8, x4, x1, x2)

inst_61247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:183741*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183741*0 + 3*575*FLEN/8, x4, x1, x2)

inst_61248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:183744*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183744*0 + 3*576*FLEN/8, x4, x1, x2)

inst_61249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:183747*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183747*0 + 3*577*FLEN/8, x4, x1, x2)

inst_61250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:183750*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183750*0 + 3*578*FLEN/8, x4, x1, x2)

inst_61251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:183753*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183753*0 + 3*579*FLEN/8, x4, x1, x2)

inst_61252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:183756*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183756*0 + 3*580*FLEN/8, x4, x1, x2)

inst_61253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:183759*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183759*0 + 3*581*FLEN/8, x4, x1, x2)

inst_61254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:183762*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183762*0 + 3*582*FLEN/8, x4, x1, x2)

inst_61255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:183765*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183765*0 + 3*583*FLEN/8, x4, x1, x2)

inst_61256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:183768*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183768*0 + 3*584*FLEN/8, x4, x1, x2)

inst_61257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:183771*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183771*0 + 3*585*FLEN/8, x4, x1, x2)

inst_61258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:183774*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183774*0 + 3*586*FLEN/8, x4, x1, x2)

inst_61259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:183777*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183777*0 + 3*587*FLEN/8, x4, x1, x2)

inst_61260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:183780*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183780*0 + 3*588*FLEN/8, x4, x1, x2)

inst_61261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:183783*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183783*0 + 3*589*FLEN/8, x4, x1, x2)

inst_61262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:183786*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183786*0 + 3*590*FLEN/8, x4, x1, x2)

inst_61263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:183789*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183789*0 + 3*591*FLEN/8, x4, x1, x2)

inst_61264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000000000000; valaddr_reg:x3; val_offset:183792*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183792*0 + 3*592*FLEN/8, x4, x1, x2)

inst_61265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000000000001; valaddr_reg:x3; val_offset:183795*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183795*0 + 3*593*FLEN/8, x4, x1, x2)

inst_61266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000000000003; valaddr_reg:x3; val_offset:183798*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183798*0 + 3*594*FLEN/8, x4, x1, x2)

inst_61267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000000000007; valaddr_reg:x3; val_offset:183801*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183801*0 + 3*595*FLEN/8, x4, x1, x2)

inst_61268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000000000000f; valaddr_reg:x3; val_offset:183804*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183804*0 + 3*596*FLEN/8, x4, x1, x2)

inst_61269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000000000001f; valaddr_reg:x3; val_offset:183807*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183807*0 + 3*597*FLEN/8, x4, x1, x2)

inst_61270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000000000003f; valaddr_reg:x3; val_offset:183810*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183810*0 + 3*598*FLEN/8, x4, x1, x2)

inst_61271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000000000007f; valaddr_reg:x3; val_offset:183813*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183813*0 + 3*599*FLEN/8, x4, x1, x2)

inst_61272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700000000000ff; valaddr_reg:x3; val_offset:183816*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183816*0 + 3*600*FLEN/8, x4, x1, x2)

inst_61273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700000000001ff; valaddr_reg:x3; val_offset:183819*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183819*0 + 3*601*FLEN/8, x4, x1, x2)

inst_61274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700000000003ff; valaddr_reg:x3; val_offset:183822*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183822*0 + 3*602*FLEN/8, x4, x1, x2)

inst_61275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700000000007ff; valaddr_reg:x3; val_offset:183825*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183825*0 + 3*603*FLEN/8, x4, x1, x2)

inst_61276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000000000fff; valaddr_reg:x3; val_offset:183828*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183828*0 + 3*604*FLEN/8, x4, x1, x2)

inst_61277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000000001fff; valaddr_reg:x3; val_offset:183831*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183831*0 + 3*605*FLEN/8, x4, x1, x2)

inst_61278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000000003fff; valaddr_reg:x3; val_offset:183834*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183834*0 + 3*606*FLEN/8, x4, x1, x2)

inst_61279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000000007fff; valaddr_reg:x3; val_offset:183837*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183837*0 + 3*607*FLEN/8, x4, x1, x2)

inst_61280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000000000ffff; valaddr_reg:x3; val_offset:183840*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183840*0 + 3*608*FLEN/8, x4, x1, x2)

inst_61281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000000001ffff; valaddr_reg:x3; val_offset:183843*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183843*0 + 3*609*FLEN/8, x4, x1, x2)

inst_61282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000000003ffff; valaddr_reg:x3; val_offset:183846*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183846*0 + 3*610*FLEN/8, x4, x1, x2)

inst_61283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000000007ffff; valaddr_reg:x3; val_offset:183849*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183849*0 + 3*611*FLEN/8, x4, x1, x2)

inst_61284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700000000fffff; valaddr_reg:x3; val_offset:183852*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183852*0 + 3*612*FLEN/8, x4, x1, x2)

inst_61285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700000001fffff; valaddr_reg:x3; val_offset:183855*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183855*0 + 3*613*FLEN/8, x4, x1, x2)

inst_61286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700000003fffff; valaddr_reg:x3; val_offset:183858*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183858*0 + 3*614*FLEN/8, x4, x1, x2)

inst_61287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700000007fffff; valaddr_reg:x3; val_offset:183861*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183861*0 + 3*615*FLEN/8, x4, x1, x2)

inst_61288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000000ffffff; valaddr_reg:x3; val_offset:183864*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183864*0 + 3*616*FLEN/8, x4, x1, x2)

inst_61289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000001ffffff; valaddr_reg:x3; val_offset:183867*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183867*0 + 3*617*FLEN/8, x4, x1, x2)

inst_61290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000003ffffff; valaddr_reg:x3; val_offset:183870*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183870*0 + 3*618*FLEN/8, x4, x1, x2)

inst_61291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000007ffffff; valaddr_reg:x3; val_offset:183873*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183873*0 + 3*619*FLEN/8, x4, x1, x2)

inst_61292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000000fffffff; valaddr_reg:x3; val_offset:183876*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183876*0 + 3*620*FLEN/8, x4, x1, x2)

inst_61293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000001fffffff; valaddr_reg:x3; val_offset:183879*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183879*0 + 3*621*FLEN/8, x4, x1, x2)

inst_61294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000003fffffff; valaddr_reg:x3; val_offset:183882*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183882*0 + 3*622*FLEN/8, x4, x1, x2)

inst_61295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000007fffffff; valaddr_reg:x3; val_offset:183885*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183885*0 + 3*623*FLEN/8, x4, x1, x2)

inst_61296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700000ffffffff; valaddr_reg:x3; val_offset:183888*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183888*0 + 3*624*FLEN/8, x4, x1, x2)

inst_61297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700001ffffffff; valaddr_reg:x3; val_offset:183891*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183891*0 + 3*625*FLEN/8, x4, x1, x2)

inst_61298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700003ffffffff; valaddr_reg:x3; val_offset:183894*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183894*0 + 3*626*FLEN/8, x4, x1, x2)

inst_61299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700007ffffffff; valaddr_reg:x3; val_offset:183897*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183897*0 + 3*627*FLEN/8, x4, x1, x2)

inst_61300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70000fffffffff; valaddr_reg:x3; val_offset:183900*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183900*0 + 3*628*FLEN/8, x4, x1, x2)

inst_61301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70001fffffffff; valaddr_reg:x3; val_offset:183903*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183903*0 + 3*629*FLEN/8, x4, x1, x2)

inst_61302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70003fffffffff; valaddr_reg:x3; val_offset:183906*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183906*0 + 3*630*FLEN/8, x4, x1, x2)

inst_61303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70007fffffffff; valaddr_reg:x3; val_offset:183909*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183909*0 + 3*631*FLEN/8, x4, x1, x2)

inst_61304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7000ffffffffff; valaddr_reg:x3; val_offset:183912*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183912*0 + 3*632*FLEN/8, x4, x1, x2)

inst_61305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7001ffffffffff; valaddr_reg:x3; val_offset:183915*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183915*0 + 3*633*FLEN/8, x4, x1, x2)

inst_61306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7003ffffffffff; valaddr_reg:x3; val_offset:183918*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183918*0 + 3*634*FLEN/8, x4, x1, x2)

inst_61307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7007ffffffffff; valaddr_reg:x3; val_offset:183921*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183921*0 + 3*635*FLEN/8, x4, x1, x2)

inst_61308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x700fffffffffff; valaddr_reg:x3; val_offset:183924*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183924*0 + 3*636*FLEN/8, x4, x1, x2)

inst_61309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x701fffffffffff; valaddr_reg:x3; val_offset:183927*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183927*0 + 3*637*FLEN/8, x4, x1, x2)

inst_61310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x703fffffffffff; valaddr_reg:x3; val_offset:183930*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183930*0 + 3*638*FLEN/8, x4, x1, x2)

inst_61311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x707fffffffffff; valaddr_reg:x3; val_offset:183933*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183933*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_61312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x70ffffffffffff; valaddr_reg:x3; val_offset:183936*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183936*0 + 3*640*FLEN/8, x4, x1, x2)

inst_61313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x71ffffffffffff; valaddr_reg:x3; val_offset:183939*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183939*0 + 3*641*FLEN/8, x4, x1, x2)

inst_61314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x73ffffffffffff; valaddr_reg:x3; val_offset:183942*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183942*0 + 3*642*FLEN/8, x4, x1, x2)

inst_61315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x77ffffffffffff; valaddr_reg:x3; val_offset:183945*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183945*0 + 3*643*FLEN/8, x4, x1, x2)

inst_61316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x78000000000000; valaddr_reg:x3; val_offset:183948*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183948*0 + 3*644*FLEN/8, x4, x1, x2)

inst_61317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7c000000000000; valaddr_reg:x3; val_offset:183951*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183951*0 + 3*645*FLEN/8, x4, x1, x2)

inst_61318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7e000000000000; valaddr_reg:x3; val_offset:183954*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183954*0 + 3*646*FLEN/8, x4, x1, x2)

inst_61319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7f000000000000; valaddr_reg:x3; val_offset:183957*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183957*0 + 3*647*FLEN/8, x4, x1, x2)

inst_61320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7f800000000000; valaddr_reg:x3; val_offset:183960*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183960*0 + 3*648*FLEN/8, x4, x1, x2)

inst_61321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fc00000000000; valaddr_reg:x3; val_offset:183963*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183963*0 + 3*649*FLEN/8, x4, x1, x2)

inst_61322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fe00000000000; valaddr_reg:x3; val_offset:183966*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183966*0 + 3*650*FLEN/8, x4, x1, x2)

inst_61323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ff00000000000; valaddr_reg:x3; val_offset:183969*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183969*0 + 3*651*FLEN/8, x4, x1, x2)

inst_61324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ff80000000000; valaddr_reg:x3; val_offset:183972*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183972*0 + 3*652*FLEN/8, x4, x1, x2)

inst_61325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffc0000000000; valaddr_reg:x3; val_offset:183975*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183975*0 + 3*653*FLEN/8, x4, x1, x2)

inst_61326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffe0000000000; valaddr_reg:x3; val_offset:183978*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183978*0 + 3*654*FLEN/8, x4, x1, x2)

inst_61327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fff0000000000; valaddr_reg:x3; val_offset:183981*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183981*0 + 3*655*FLEN/8, x4, x1, x2)

inst_61328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fff8000000000; valaddr_reg:x3; val_offset:183984*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183984*0 + 3*656*FLEN/8, x4, x1, x2)

inst_61329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffc000000000; valaddr_reg:x3; val_offset:183987*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183987*0 + 3*657*FLEN/8, x4, x1, x2)

inst_61330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffe000000000; valaddr_reg:x3; val_offset:183990*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183990*0 + 3*658*FLEN/8, x4, x1, x2)

inst_61331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffff000000000; valaddr_reg:x3; val_offset:183993*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183993*0 + 3*659*FLEN/8, x4, x1, x2)

inst_61332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffff800000000; valaddr_reg:x3; val_offset:183996*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183996*0 + 3*660*FLEN/8, x4, x1, x2)

inst_61333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffc00000000; valaddr_reg:x3; val_offset:183999*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183999*0 + 3*661*FLEN/8, x4, x1, x2)

inst_61334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffe00000000; valaddr_reg:x3; val_offset:184002*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184002*0 + 3*662*FLEN/8, x4, x1, x2)

inst_61335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffff00000000; valaddr_reg:x3; val_offset:184005*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184005*0 + 3*663*FLEN/8, x4, x1, x2)

inst_61336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffff80000000; valaddr_reg:x3; val_offset:184008*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184008*0 + 3*664*FLEN/8, x4, x1, x2)

inst_61337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffc0000000; valaddr_reg:x3; val_offset:184011*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184011*0 + 3*665*FLEN/8, x4, x1, x2)

inst_61338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffe0000000; valaddr_reg:x3; val_offset:184014*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184014*0 + 3*666*FLEN/8, x4, x1, x2)

inst_61339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffff0000000; valaddr_reg:x3; val_offset:184017*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184017*0 + 3*667*FLEN/8, x4, x1, x2)

inst_61340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffff8000000; valaddr_reg:x3; val_offset:184020*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184020*0 + 3*668*FLEN/8, x4, x1, x2)

inst_61341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffc000000; valaddr_reg:x3; val_offset:184023*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184023*0 + 3*669*FLEN/8, x4, x1, x2)

inst_61342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffe000000; valaddr_reg:x3; val_offset:184026*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184026*0 + 3*670*FLEN/8, x4, x1, x2)

inst_61343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffff000000; valaddr_reg:x3; val_offset:184029*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184029*0 + 3*671*FLEN/8, x4, x1, x2)

inst_61344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffff800000; valaddr_reg:x3; val_offset:184032*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184032*0 + 3*672*FLEN/8, x4, x1, x2)

inst_61345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffffc00000; valaddr_reg:x3; val_offset:184035*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184035*0 + 3*673*FLEN/8, x4, x1, x2)

inst_61346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffffe00000; valaddr_reg:x3; val_offset:184038*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184038*0 + 3*674*FLEN/8, x4, x1, x2)

inst_61347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffff00000; valaddr_reg:x3; val_offset:184041*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184041*0 + 3*675*FLEN/8, x4, x1, x2)

inst_61348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffff80000; valaddr_reg:x3; val_offset:184044*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184044*0 + 3*676*FLEN/8, x4, x1, x2)

inst_61349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffffc0000; valaddr_reg:x3; val_offset:184047*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184047*0 + 3*677*FLEN/8, x4, x1, x2)

inst_61350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffffe0000; valaddr_reg:x3; val_offset:184050*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184050*0 + 3*678*FLEN/8, x4, x1, x2)

inst_61351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffffff0000; valaddr_reg:x3; val_offset:184053*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184053*0 + 3*679*FLEN/8, x4, x1, x2)

inst_61352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffffff8000; valaddr_reg:x3; val_offset:184056*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184056*0 + 3*680*FLEN/8, x4, x1, x2)

inst_61353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffffffc000; valaddr_reg:x3; val_offset:184059*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184059*0 + 3*681*FLEN/8, x4, x1, x2)

inst_61354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffffffe000; valaddr_reg:x3; val_offset:184062*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184062*0 + 3*682*FLEN/8, x4, x1, x2)

inst_61355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffffff000; valaddr_reg:x3; val_offset:184065*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184065*0 + 3*683*FLEN/8, x4, x1, x2)

inst_61356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffffff800; valaddr_reg:x3; val_offset:184068*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184068*0 + 3*684*FLEN/8, x4, x1, x2)

inst_61357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffffffc00; valaddr_reg:x3; val_offset:184071*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184071*0 + 3*685*FLEN/8, x4, x1, x2)

inst_61358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffffffe00; valaddr_reg:x3; val_offset:184074*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184074*0 + 3*686*FLEN/8, x4, x1, x2)

inst_61359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffffffff00; valaddr_reg:x3; val_offset:184077*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184077*0 + 3*687*FLEN/8, x4, x1, x2)

inst_61360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffffffff80; valaddr_reg:x3; val_offset:184080*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184080*0 + 3*688*FLEN/8, x4, x1, x2)

inst_61361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffffffffc0; valaddr_reg:x3; val_offset:184083*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184083*0 + 3*689*FLEN/8, x4, x1, x2)

inst_61362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffffffffe0; valaddr_reg:x3; val_offset:184086*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184086*0 + 3*690*FLEN/8, x4, x1, x2)

inst_61363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffffffff0; valaddr_reg:x3; val_offset:184089*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184089*0 + 3*691*FLEN/8, x4, x1, x2)

inst_61364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffffffff8; valaddr_reg:x3; val_offset:184092*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184092*0 + 3*692*FLEN/8, x4, x1, x2)

inst_61365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffffffffc; valaddr_reg:x3; val_offset:184095*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184095*0 + 3*693*FLEN/8, x4, x1, x2)

inst_61366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7ffffffffffffe; valaddr_reg:x3; val_offset:184098*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184098*0 + 3*694*FLEN/8, x4, x1, x2)

inst_61367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa299392ab99898; op2val:0x0;
op3val:0x7fffffffffffff; valaddr_reg:x3; val_offset:184101*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184101*0 + 3*695*FLEN/8, x4, x1, x2)

inst_61368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000000000000; valaddr_reg:x3; val_offset:184104*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184104*0 + 3*696*FLEN/8, x4, x1, x2)

inst_61369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000000000001; valaddr_reg:x3; val_offset:184107*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184107*0 + 3*697*FLEN/8, x4, x1, x2)

inst_61370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000000000003; valaddr_reg:x3; val_offset:184110*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184110*0 + 3*698*FLEN/8, x4, x1, x2)

inst_61371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000000000007; valaddr_reg:x3; val_offset:184113*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184113*0 + 3*699*FLEN/8, x4, x1, x2)

inst_61372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000000000000f; valaddr_reg:x3; val_offset:184116*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184116*0 + 3*700*FLEN/8, x4, x1, x2)

inst_61373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000000000001f; valaddr_reg:x3; val_offset:184119*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184119*0 + 3*701*FLEN/8, x4, x1, x2)

inst_61374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000000000003f; valaddr_reg:x3; val_offset:184122*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184122*0 + 3*702*FLEN/8, x4, x1, x2)

inst_61375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000000000007f; valaddr_reg:x3; val_offset:184125*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184125*0 + 3*703*FLEN/8, x4, x1, x2)

inst_61376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000000000000ff; valaddr_reg:x3; val_offset:184128*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184128*0 + 3*704*FLEN/8, x4, x1, x2)

inst_61377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000000000001ff; valaddr_reg:x3; val_offset:184131*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184131*0 + 3*705*FLEN/8, x4, x1, x2)

inst_61378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000000000003ff; valaddr_reg:x3; val_offset:184134*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184134*0 + 3*706*FLEN/8, x4, x1, x2)

inst_61379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000000000007ff; valaddr_reg:x3; val_offset:184137*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184137*0 + 3*707*FLEN/8, x4, x1, x2)

inst_61380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000000000fff; valaddr_reg:x3; val_offset:184140*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184140*0 + 3*708*FLEN/8, x4, x1, x2)

inst_61381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000000001fff; valaddr_reg:x3; val_offset:184143*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184143*0 + 3*709*FLEN/8, x4, x1, x2)

inst_61382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000000003fff; valaddr_reg:x3; val_offset:184146*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184146*0 + 3*710*FLEN/8, x4, x1, x2)

inst_61383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000000007fff; valaddr_reg:x3; val_offset:184149*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184149*0 + 3*711*FLEN/8, x4, x1, x2)

inst_61384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000000000ffff; valaddr_reg:x3; val_offset:184152*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184152*0 + 3*712*FLEN/8, x4, x1, x2)

inst_61385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000000001ffff; valaddr_reg:x3; val_offset:184155*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184155*0 + 3*713*FLEN/8, x4, x1, x2)

inst_61386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000000003ffff; valaddr_reg:x3; val_offset:184158*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184158*0 + 3*714*FLEN/8, x4, x1, x2)

inst_61387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000000007ffff; valaddr_reg:x3; val_offset:184161*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184161*0 + 3*715*FLEN/8, x4, x1, x2)

inst_61388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000000000fffff; valaddr_reg:x3; val_offset:184164*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184164*0 + 3*716*FLEN/8, x4, x1, x2)

inst_61389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000000001fffff; valaddr_reg:x3; val_offset:184167*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184167*0 + 3*717*FLEN/8, x4, x1, x2)

inst_61390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000000003fffff; valaddr_reg:x3; val_offset:184170*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184170*0 + 3*718*FLEN/8, x4, x1, x2)

inst_61391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000000007fffff; valaddr_reg:x3; val_offset:184173*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184173*0 + 3*719*FLEN/8, x4, x1, x2)

inst_61392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000000ffffff; valaddr_reg:x3; val_offset:184176*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184176*0 + 3*720*FLEN/8, x4, x1, x2)

inst_61393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000001ffffff; valaddr_reg:x3; val_offset:184179*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184179*0 + 3*721*FLEN/8, x4, x1, x2)

inst_61394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000003ffffff; valaddr_reg:x3; val_offset:184182*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184182*0 + 3*722*FLEN/8, x4, x1, x2)

inst_61395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000007ffffff; valaddr_reg:x3; val_offset:184185*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184185*0 + 3*723*FLEN/8, x4, x1, x2)

inst_61396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000000fffffff; valaddr_reg:x3; val_offset:184188*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184188*0 + 3*724*FLEN/8, x4, x1, x2)

inst_61397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000001fffffff; valaddr_reg:x3; val_offset:184191*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184191*0 + 3*725*FLEN/8, x4, x1, x2)

inst_61398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000003fffffff; valaddr_reg:x3; val_offset:184194*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184194*0 + 3*726*FLEN/8, x4, x1, x2)

inst_61399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000007fffffff; valaddr_reg:x3; val_offset:184197*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184197*0 + 3*727*FLEN/8, x4, x1, x2)

inst_61400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000000ffffffff; valaddr_reg:x3; val_offset:184200*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184200*0 + 3*728*FLEN/8, x4, x1, x2)

inst_61401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000001ffffffff; valaddr_reg:x3; val_offset:184203*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184203*0 + 3*729*FLEN/8, x4, x1, x2)

inst_61402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000003ffffffff; valaddr_reg:x3; val_offset:184206*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184206*0 + 3*730*FLEN/8, x4, x1, x2)

inst_61403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000007ffffffff; valaddr_reg:x3; val_offset:184209*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184209*0 + 3*731*FLEN/8, x4, x1, x2)

inst_61404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800000fffffffff; valaddr_reg:x3; val_offset:184212*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184212*0 + 3*732*FLEN/8, x4, x1, x2)

inst_61405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800001fffffffff; valaddr_reg:x3; val_offset:184215*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184215*0 + 3*733*FLEN/8, x4, x1, x2)

inst_61406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800003fffffffff; valaddr_reg:x3; val_offset:184218*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184218*0 + 3*734*FLEN/8, x4, x1, x2)

inst_61407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800007fffffffff; valaddr_reg:x3; val_offset:184221*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184221*0 + 3*735*FLEN/8, x4, x1, x2)

inst_61408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380000ffffffffff; valaddr_reg:x3; val_offset:184224*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184224*0 + 3*736*FLEN/8, x4, x1, x2)

inst_61409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380001ffffffffff; valaddr_reg:x3; val_offset:184227*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184227*0 + 3*737*FLEN/8, x4, x1, x2)

inst_61410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380003ffffffffff; valaddr_reg:x3; val_offset:184230*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184230*0 + 3*738*FLEN/8, x4, x1, x2)

inst_61411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380007ffffffffff; valaddr_reg:x3; val_offset:184233*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184233*0 + 3*739*FLEN/8, x4, x1, x2)

inst_61412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38000fffffffffff; valaddr_reg:x3; val_offset:184236*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184236*0 + 3*740*FLEN/8, x4, x1, x2)

inst_61413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38001fffffffffff; valaddr_reg:x3; val_offset:184239*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184239*0 + 3*741*FLEN/8, x4, x1, x2)

inst_61414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38003fffffffffff; valaddr_reg:x3; val_offset:184242*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184242*0 + 3*742*FLEN/8, x4, x1, x2)

inst_61415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x38007fffffffffff; valaddr_reg:x3; val_offset:184245*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184245*0 + 3*743*FLEN/8, x4, x1, x2)

inst_61416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3800ffffffffffff; valaddr_reg:x3; val_offset:184248*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184248*0 + 3*744*FLEN/8, x4, x1, x2)

inst_61417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3801ffffffffffff; valaddr_reg:x3; val_offset:184251*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184251*0 + 3*745*FLEN/8, x4, x1, x2)

inst_61418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3803ffffffffffff; valaddr_reg:x3; val_offset:184254*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184254*0 + 3*746*FLEN/8, x4, x1, x2)

inst_61419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3807ffffffffffff; valaddr_reg:x3; val_offset:184257*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184257*0 + 3*747*FLEN/8, x4, x1, x2)

inst_61420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x3808000000000000; valaddr_reg:x3; val_offset:184260*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184260*0 + 3*748*FLEN/8, x4, x1, x2)

inst_61421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380c000000000000; valaddr_reg:x3; val_offset:184263*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184263*0 + 3*749*FLEN/8, x4, x1, x2)

inst_61422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380e000000000000; valaddr_reg:x3; val_offset:184266*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184266*0 + 3*750*FLEN/8, x4, x1, x2)

inst_61423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380f000000000000; valaddr_reg:x3; val_offset:184269*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184269*0 + 3*751*FLEN/8, x4, x1, x2)

inst_61424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380f800000000000; valaddr_reg:x3; val_offset:184272*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184272*0 + 3*752*FLEN/8, x4, x1, x2)

inst_61425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fc00000000000; valaddr_reg:x3; val_offset:184275*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184275*0 + 3*753*FLEN/8, x4, x1, x2)

inst_61426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fe00000000000; valaddr_reg:x3; val_offset:184278*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184278*0 + 3*754*FLEN/8, x4, x1, x2)

inst_61427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ff00000000000; valaddr_reg:x3; val_offset:184281*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184281*0 + 3*755*FLEN/8, x4, x1, x2)

inst_61428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ff80000000000; valaddr_reg:x3; val_offset:184284*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184284*0 + 3*756*FLEN/8, x4, x1, x2)

inst_61429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffc0000000000; valaddr_reg:x3; val_offset:184287*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184287*0 + 3*757*FLEN/8, x4, x1, x2)

inst_61430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffe0000000000; valaddr_reg:x3; val_offset:184290*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184290*0 + 3*758*FLEN/8, x4, x1, x2)

inst_61431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fff0000000000; valaddr_reg:x3; val_offset:184293*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184293*0 + 3*759*FLEN/8, x4, x1, x2)

inst_61432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fff8000000000; valaddr_reg:x3; val_offset:184296*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184296*0 + 3*760*FLEN/8, x4, x1, x2)

inst_61433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffc000000000; valaddr_reg:x3; val_offset:184299*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184299*0 + 3*761*FLEN/8, x4, x1, x2)

inst_61434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffe000000000; valaddr_reg:x3; val_offset:184302*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184302*0 + 3*762*FLEN/8, x4, x1, x2)

inst_61435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffff000000000; valaddr_reg:x3; val_offset:184305*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184305*0 + 3*763*FLEN/8, x4, x1, x2)

inst_61436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffff800000000; valaddr_reg:x3; val_offset:184308*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184308*0 + 3*764*FLEN/8, x4, x1, x2)

inst_61437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffc00000000; valaddr_reg:x3; val_offset:184311*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184311*0 + 3*765*FLEN/8, x4, x1, x2)

inst_61438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380ffffe00000000; valaddr_reg:x3; val_offset:184314*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184314*0 + 3*766*FLEN/8, x4, x1, x2)

inst_61439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xb5a3d5ba1078d and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2b7f5031fce17; op2val:0x203b5a3d5ba1078d;
op3val:0x380fffff00000000; valaddr_reg:x3; val_offset:184317*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 184317*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312631702414163968,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312636100460675072,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312638299483930624,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312639398995558400,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312639948751372288,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640223629279232,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640361068232704,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640429787709440,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640464147447808,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640481327316992,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640489917251584,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640494212218880,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640496359702528,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640497433444352,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640497970315264,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498238750720,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498372968448,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498440077312,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498473631744,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498490408960,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498498797568,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498502991872,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498505089024,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498506137600,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498506661888,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498506924032,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507055104,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507120640,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507153408,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507169792,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507177984,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507182080,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507184128,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507185152,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507185664,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507185920,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507186048,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507186112,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507186144,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507186160,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507186168,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507186172,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507186174,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13312640498507186175,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891168922199550764,64,FLEN)
NAN_BOXED(11514550696927510457,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074240,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074241,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074243,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074247,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074255,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074271,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074303,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074367,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074495,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074751,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520075263,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520076287,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520078335,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520082431,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520090623,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520107007,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520139775,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520205311,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520336383,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520598527,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230521122815,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230522171391,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230524268543,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230528462847,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230536851455,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230553628671,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230587183103,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230654291967,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230788509695,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231056945151,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231593816063,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933232667557887,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933234815041535,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933239110008831,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933247699943423,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933264879812607,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933299239550975,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933367959027711,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933505397981183,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933780275888127,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299934330031702015,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299935429543329791,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299937628566585343,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299942026613096447,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299950822706118655,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299968414892163071,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300003599264251903,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300073968008429567,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300214705496784895,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300496180473495551,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9301059130426916863,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759487,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759488,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303310930240602112,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303873880194023424,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304155355170734080,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304296092659089408,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304366461403267072,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304401645775355904,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304419237961400320,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304428034054422528,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304432432100933632,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304434631124189184,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304435730635816960,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436280391630848,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436555269537792,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436692708491264,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436761427968000,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436795787706368,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436812967575552,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436821557510144,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436825852477440,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436827999961088,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829073702912,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829610573824,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829879009280,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830013227008,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830080335872,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830113890304,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830130667520,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830139056128,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830143250432,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830145347584,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830146396160,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830146920448,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147182592,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147313664,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147379200,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147411968,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147428352,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147436544,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147440640,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147442688,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147443712,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444224,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444480,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444608,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444672,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444704,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444720,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444728,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444732,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444734,64,FLEN)
NAN_BOXED(6891177700235187306,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444735,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894080,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894081,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894083,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894087,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894095,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894111,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894143,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894207,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894335,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894591,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614895103,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614896127,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614898175,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614902271,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614910463,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614926847,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614959615,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615025151,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615156223,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615418367,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615942655,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215616991231,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215619088383,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215623282687,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215631671295,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215648448511,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215682002943,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215749111807,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215883329535,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077216151764991,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077216688635903,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077217762377727,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077219909861375,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077224204828671,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077232794763263,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077249974632447,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077284334370815,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077353053847551,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077490492801023,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077765370707967,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480078315126521855,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480079414638149631,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480081613661405183,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480086011707916287,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480094807800938495,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480112399986982911,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480147584359071743,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480217953103249407,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480358690591604735,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480640165568315391,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9481203115521736703,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9482329015428579327,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9482329015428579328,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9483454915335421952,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484017865288843264,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484299340265553920,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484440077753909248,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484510446498086912,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484545630870175744,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484563223056220160,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484572019149242368,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484576417195753472,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484578616219009024,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484579715730636800,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580265486450688,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580540364357632,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580677803311104,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580746522787840,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580780882526208,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580798062395392,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580806652329984,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580810947297280,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580813094780928,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814168522752,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814705393664,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814973829120,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815108046848,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815175155712,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815208710144,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815225487360,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815233875968,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815238070272,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815240167424,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815241216000,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815241740288,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242002432,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242133504,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242199040,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242231808,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242248192,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242256384,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242260480,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242262528,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242263552,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264064,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264320,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264448,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264512,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264544,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264560,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264568,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264572,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264574,64,FLEN)
NAN_BOXED(6891226173901898667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264575,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003392,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003393,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003395,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003399,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003407,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003423,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003455,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003519,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003647,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003903,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939004415,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939005439,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939007487,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939011583,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939019775,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939036159,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939068927,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939134463,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939265535,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939527679,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189940051967,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189941100543,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189943197695,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189947391999,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189955780607,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189972557823,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190006112255,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190073221119,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190207438847,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190475874303,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597191012745215,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597192086487039,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597194233970687,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597198528937983,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597207118872575,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597224298741759,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597258658480127,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597327377956863,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597464816910335,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597739694817279,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121598289450631167,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121599388962258943,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121601587985514495,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121605986032025599,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121614782125047807,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121632374311092223,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121667558683181055,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121737927427358719,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121878664915714047,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(122160139892424703,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(122723089845846015,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(123848989752688639,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(123848989752688640,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(124974889659531264,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125537839612952576,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125819314589663232,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125960052078018560,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126030420822196224,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126065605194285056,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126083197380329472,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126091993473351680,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126096391519862784,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126098590543118336,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126099690054746112,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100239810560000,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100514688466944,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100652127420416,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100720846897152,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100755206635520,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100772386504704,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100780976439296,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100785271406592,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100787418890240,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100788492632064,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789029502976,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789297938432,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789432156160,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789499265024,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789532819456,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789549596672,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789557985280,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789562179584,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789564276736,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789565325312,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789565849600,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566111744,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566242816,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566308352,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566341120,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566357504,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566365696,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566369792,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566371840,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566372864,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373376,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373632,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373760,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373824,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373856,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373872,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373880,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373884,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373886,64,FLEN)
NAN_BOXED(6891235729876355834,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373887,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492489216,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492489217,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492489219,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492489223,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492489231,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492489247,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492489279,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492489343,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492489471,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492489727,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492490239,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492491263,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492493311,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492497407,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492505599,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492521983,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492554751,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492620287,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247492751359,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247493013503,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247493537791,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247494586367,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247496683519,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247500877823,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247509266431,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247526043647,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247559598079,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247626706943,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405247760924671,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405248029360127,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405248566231039,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405249639972863,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405251787456511,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405256082423807,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405264672358399,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405281852227583,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405316211965951,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405384931442687,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405522370396159,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260405797248303103,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260406347004116991,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260407446515744767,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260409645539000319,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260414043585511423,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260422839678533631,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260440431864578047,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260475616236666879,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260545984980844543,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260686722469199871,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4260968197445910527,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4261531147399331839,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4262657047306174463,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4262657047306174464,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4263782947213017088,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264345897166438400,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264627372143149056,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264768109631504384,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264838478375682048,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264873662747770880,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264891254933815296,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264900051026837504,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264904449073348608,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264906648096604160,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264907747608231936,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908297364045824,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908572241952768,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908709680906240,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908778400382976,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908812760121344,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908829939990528,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908838529925120,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908842824892416,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908844972376064,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908846046117888,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908846582988800,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908846851424256,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908846985641984,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847052750848,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847086305280,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847103082496,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847111471104,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847115665408,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847117762560,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847118811136,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119335424,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119597568,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119728640,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119794176,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119826944,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119843328,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119851520,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119855616,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119857664,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119858688,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119859200,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119859456,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119859584,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119859648,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119859680,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119859696,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119859704,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119859708,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119859710,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4264908847119859711,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891237700320200956,64,FLEN)
NAN_BOXED(2322600652911886822,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593472,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593473,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593475,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593479,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593487,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593503,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593535,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593599,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593727,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593983,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391594495,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391595519,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391597567,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391601663,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391609855,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391626239,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391659007,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391724543,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391855615,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197392117759,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197392642047,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197393690623,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197395787775,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197399982079,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197408370687,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197425147903,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197458702335,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197525811199,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197660028927,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197928464383,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525198465335295,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525199539077119,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525201686560767,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525205981528063,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525214571462655,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525231751331839,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525266111070207,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525334830546943,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525472269500415,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525747147407359,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31526296903221247,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31527396414849023,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31529595438104575,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31533993484615679,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31542789577637887,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31560381763682303,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31595566135771135,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31665934879948799,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31806672368304127,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32088147345014783,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32651097298436095,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33776997205278719,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33776997205278720,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34902897112121344,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35465847065542656,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35747322042253312,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35888059530608640,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35958428274786304,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35993612646875136,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36011204832919552,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36020000925941760,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36024398972452864,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36026597995708416,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36027697507336192,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028247263150080,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028522141057024,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028659580010496,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028728299487232,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028762659225600,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028779839094784,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028788429029376,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028792723996672,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028794871480320,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028795945222144,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796482093056,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796750528512,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796884746240,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796951855104,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796985409536,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797002186752,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797010575360,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797014769664,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797016866816,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797017915392,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018439680,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018701824,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018832896,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018898432,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018931200,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018947584,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018955776,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018959872,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018961920,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018962944,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963456,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963712,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963840,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963904,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963936,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963952,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963960,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963964,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963966,64,FLEN)
NAN_BOXED(6891238850639272088,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963967,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123964416,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123964417,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123964419,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123964423,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123964431,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123964447,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123964479,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123964543,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123964671,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123964927,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123965439,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123966463,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123968511,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123972607,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123980799,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266123997183,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266124029951,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266124095487,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266124226559,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266124488703,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266125012991,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266126061567,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266128158719,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266132353023,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266140741631,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266157518847,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266191073279,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266258182143,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266392399871,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225266660835327,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225267197706239,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225268271448063,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225270418931711,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225274713899007,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225283303833599,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225300483702783,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225334843441151,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225403562917887,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225541001871359,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035225815879778303,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035226365635592191,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035227465147219967,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035229664170475519,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035234062216986623,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035242858310008831,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035260450496053247,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035295634868142079,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035366003612319743,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035506741100675071,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4035788216077385727,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4036351166030807039,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4037477065937649663,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4037477065937649664,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4038602965844492288,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039165915797913600,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039447390774624256,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039588128262979584,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039658497007157248,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039693681379246080,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039711273565290496,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039720069658312704,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039724467704823808,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039726666728079360,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039727766239707136,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728315995521024,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728590873427968,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728728312381440,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728797031858176,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728831391596544,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728848571465728,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728857161400320,64,FLEN)
NAN_BOXED(6891272642777566743,64,FLEN)
NAN_BOXED(2322549252416407437,64,FLEN)
NAN_BOXED(4039728861456367616,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
