
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_43776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3870000fffffffff; valaddr_reg:x3; val_offset:131328*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131328*0 + 3*0*FLEN/8, x4, x1, x2)

inst_43777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3870001fffffffff; valaddr_reg:x3; val_offset:131331*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131331*0 + 3*1*FLEN/8, x4, x1, x2)

inst_43778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3870003fffffffff; valaddr_reg:x3; val_offset:131334*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131334*0 + 3*2*FLEN/8, x4, x1, x2)

inst_43779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3870007fffffffff; valaddr_reg:x3; val_offset:131337*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131337*0 + 3*3*FLEN/8, x4, x1, x2)

inst_43780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387000ffffffffff; valaddr_reg:x3; val_offset:131340*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131340*0 + 3*4*FLEN/8, x4, x1, x2)

inst_43781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387001ffffffffff; valaddr_reg:x3; val_offset:131343*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131343*0 + 3*5*FLEN/8, x4, x1, x2)

inst_43782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387003ffffffffff; valaddr_reg:x3; val_offset:131346*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131346*0 + 3*6*FLEN/8, x4, x1, x2)

inst_43783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387007ffffffffff; valaddr_reg:x3; val_offset:131349*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131349*0 + 3*7*FLEN/8, x4, x1, x2)

inst_43784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x38700fffffffffff; valaddr_reg:x3; val_offset:131352*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131352*0 + 3*8*FLEN/8, x4, x1, x2)

inst_43785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x38701fffffffffff; valaddr_reg:x3; val_offset:131355*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131355*0 + 3*9*FLEN/8, x4, x1, x2)

inst_43786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x38703fffffffffff; valaddr_reg:x3; val_offset:131358*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131358*0 + 3*10*FLEN/8, x4, x1, x2)

inst_43787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x38707fffffffffff; valaddr_reg:x3; val_offset:131361*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131361*0 + 3*11*FLEN/8, x4, x1, x2)

inst_43788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3870ffffffffffff; valaddr_reg:x3; val_offset:131364*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131364*0 + 3*12*FLEN/8, x4, x1, x2)

inst_43789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3871ffffffffffff; valaddr_reg:x3; val_offset:131367*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131367*0 + 3*13*FLEN/8, x4, x1, x2)

inst_43790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3873ffffffffffff; valaddr_reg:x3; val_offset:131370*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131370*0 + 3*14*FLEN/8, x4, x1, x2)

inst_43791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3877ffffffffffff; valaddr_reg:x3; val_offset:131373*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131373*0 + 3*15*FLEN/8, x4, x1, x2)

inst_43792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3878000000000000; valaddr_reg:x3; val_offset:131376*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131376*0 + 3*16*FLEN/8, x4, x1, x2)

inst_43793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387c000000000000; valaddr_reg:x3; val_offset:131379*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131379*0 + 3*17*FLEN/8, x4, x1, x2)

inst_43794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387e000000000000; valaddr_reg:x3; val_offset:131382*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131382*0 + 3*18*FLEN/8, x4, x1, x2)

inst_43795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387f000000000000; valaddr_reg:x3; val_offset:131385*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131385*0 + 3*19*FLEN/8, x4, x1, x2)

inst_43796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387f800000000000; valaddr_reg:x3; val_offset:131388*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131388*0 + 3*20*FLEN/8, x4, x1, x2)

inst_43797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fc00000000000; valaddr_reg:x3; val_offset:131391*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131391*0 + 3*21*FLEN/8, x4, x1, x2)

inst_43798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fe00000000000; valaddr_reg:x3; val_offset:131394*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131394*0 + 3*22*FLEN/8, x4, x1, x2)

inst_43799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ff00000000000; valaddr_reg:x3; val_offset:131397*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131397*0 + 3*23*FLEN/8, x4, x1, x2)

inst_43800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ff80000000000; valaddr_reg:x3; val_offset:131400*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131400*0 + 3*24*FLEN/8, x4, x1, x2)

inst_43801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffc0000000000; valaddr_reg:x3; val_offset:131403*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131403*0 + 3*25*FLEN/8, x4, x1, x2)

inst_43802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffe0000000000; valaddr_reg:x3; val_offset:131406*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131406*0 + 3*26*FLEN/8, x4, x1, x2)

inst_43803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fff0000000000; valaddr_reg:x3; val_offset:131409*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131409*0 + 3*27*FLEN/8, x4, x1, x2)

inst_43804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fff8000000000; valaddr_reg:x3; val_offset:131412*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131412*0 + 3*28*FLEN/8, x4, x1, x2)

inst_43805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffc000000000; valaddr_reg:x3; val_offset:131415*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131415*0 + 3*29*FLEN/8, x4, x1, x2)

inst_43806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffe000000000; valaddr_reg:x3; val_offset:131418*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131418*0 + 3*30*FLEN/8, x4, x1, x2)

inst_43807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffff000000000; valaddr_reg:x3; val_offset:131421*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131421*0 + 3*31*FLEN/8, x4, x1, x2)

inst_43808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffff800000000; valaddr_reg:x3; val_offset:131424*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131424*0 + 3*32*FLEN/8, x4, x1, x2)

inst_43809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffc00000000; valaddr_reg:x3; val_offset:131427*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131427*0 + 3*33*FLEN/8, x4, x1, x2)

inst_43810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffe00000000; valaddr_reg:x3; val_offset:131430*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131430*0 + 3*34*FLEN/8, x4, x1, x2)

inst_43811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffff00000000; valaddr_reg:x3; val_offset:131433*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131433*0 + 3*35*FLEN/8, x4, x1, x2)

inst_43812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffff80000000; valaddr_reg:x3; val_offset:131436*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131436*0 + 3*36*FLEN/8, x4, x1, x2)

inst_43813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffc0000000; valaddr_reg:x3; val_offset:131439*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131439*0 + 3*37*FLEN/8, x4, x1, x2)

inst_43814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffe0000000; valaddr_reg:x3; val_offset:131442*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131442*0 + 3*38*FLEN/8, x4, x1, x2)

inst_43815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffff0000000; valaddr_reg:x3; val_offset:131445*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131445*0 + 3*39*FLEN/8, x4, x1, x2)

inst_43816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffff8000000; valaddr_reg:x3; val_offset:131448*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131448*0 + 3*40*FLEN/8, x4, x1, x2)

inst_43817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffc000000; valaddr_reg:x3; val_offset:131451*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131451*0 + 3*41*FLEN/8, x4, x1, x2)

inst_43818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffe000000; valaddr_reg:x3; val_offset:131454*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131454*0 + 3*42*FLEN/8, x4, x1, x2)

inst_43819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffff000000; valaddr_reg:x3; val_offset:131457*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131457*0 + 3*43*FLEN/8, x4, x1, x2)

inst_43820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffff800000; valaddr_reg:x3; val_offset:131460*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131460*0 + 3*44*FLEN/8, x4, x1, x2)

inst_43821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffffc00000; valaddr_reg:x3; val_offset:131463*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131463*0 + 3*45*FLEN/8, x4, x1, x2)

inst_43822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffffe00000; valaddr_reg:x3; val_offset:131466*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131466*0 + 3*46*FLEN/8, x4, x1, x2)

inst_43823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffff00000; valaddr_reg:x3; val_offset:131469*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131469*0 + 3*47*FLEN/8, x4, x1, x2)

inst_43824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffff80000; valaddr_reg:x3; val_offset:131472*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131472*0 + 3*48*FLEN/8, x4, x1, x2)

inst_43825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffffc0000; valaddr_reg:x3; val_offset:131475*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131475*0 + 3*49*FLEN/8, x4, x1, x2)

inst_43826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffffe0000; valaddr_reg:x3; val_offset:131478*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131478*0 + 3*50*FLEN/8, x4, x1, x2)

inst_43827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffffff0000; valaddr_reg:x3; val_offset:131481*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131481*0 + 3*51*FLEN/8, x4, x1, x2)

inst_43828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffffff8000; valaddr_reg:x3; val_offset:131484*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131484*0 + 3*52*FLEN/8, x4, x1, x2)

inst_43829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffffffc000; valaddr_reg:x3; val_offset:131487*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131487*0 + 3*53*FLEN/8, x4, x1, x2)

inst_43830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffffffe000; valaddr_reg:x3; val_offset:131490*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131490*0 + 3*54*FLEN/8, x4, x1, x2)

inst_43831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffffff000; valaddr_reg:x3; val_offset:131493*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131493*0 + 3*55*FLEN/8, x4, x1, x2)

inst_43832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffffff800; valaddr_reg:x3; val_offset:131496*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131496*0 + 3*56*FLEN/8, x4, x1, x2)

inst_43833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffffffc00; valaddr_reg:x3; val_offset:131499*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131499*0 + 3*57*FLEN/8, x4, x1, x2)

inst_43834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffffffe00; valaddr_reg:x3; val_offset:131502*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131502*0 + 3*58*FLEN/8, x4, x1, x2)

inst_43835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffffffff00; valaddr_reg:x3; val_offset:131505*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131505*0 + 3*59*FLEN/8, x4, x1, x2)

inst_43836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffffffff80; valaddr_reg:x3; val_offset:131508*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131508*0 + 3*60*FLEN/8, x4, x1, x2)

inst_43837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffffffffc0; valaddr_reg:x3; val_offset:131511*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131511*0 + 3*61*FLEN/8, x4, x1, x2)

inst_43838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffffffffe0; valaddr_reg:x3; val_offset:131514*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131514*0 + 3*62*FLEN/8, x4, x1, x2)

inst_43839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffffffff0; valaddr_reg:x3; val_offset:131517*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131517*0 + 3*63*FLEN/8, x4, x1, x2)

inst_43840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffffffff8; valaddr_reg:x3; val_offset:131520*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131520*0 + 3*64*FLEN/8, x4, x1, x2)

inst_43841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffffffffc; valaddr_reg:x3; val_offset:131523*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131523*0 + 3*65*FLEN/8, x4, x1, x2)

inst_43842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387ffffffffffffe; valaddr_reg:x3; val_offset:131526*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131526*0 + 3*66*FLEN/8, x4, x1, x2)

inst_43843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x387fffffffffffff; valaddr_reg:x3; val_offset:131529*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131529*0 + 3*67*FLEN/8, x4, x1, x2)

inst_43844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:131532*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131532*0 + 3*68*FLEN/8, x4, x1, x2)

inst_43845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:131535*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131535*0 + 3*69*FLEN/8, x4, x1, x2)

inst_43846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:131538*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131538*0 + 3*70*FLEN/8, x4, x1, x2)

inst_43847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:131541*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131541*0 + 3*71*FLEN/8, x4, x1, x2)

inst_43848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:131544*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131544*0 + 3*72*FLEN/8, x4, x1, x2)

inst_43849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:131547*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131547*0 + 3*73*FLEN/8, x4, x1, x2)

inst_43850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:131550*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131550*0 + 3*74*FLEN/8, x4, x1, x2)

inst_43851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:131553*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131553*0 + 3*75*FLEN/8, x4, x1, x2)

inst_43852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:131556*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131556*0 + 3*76*FLEN/8, x4, x1, x2)

inst_43853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:131559*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131559*0 + 3*77*FLEN/8, x4, x1, x2)

inst_43854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:131562*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131562*0 + 3*78*FLEN/8, x4, x1, x2)

inst_43855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:131565*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131565*0 + 3*79*FLEN/8, x4, x1, x2)

inst_43856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:131568*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131568*0 + 3*80*FLEN/8, x4, x1, x2)

inst_43857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:131571*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131571*0 + 3*81*FLEN/8, x4, x1, x2)

inst_43858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:131574*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131574*0 + 3*82*FLEN/8, x4, x1, x2)

inst_43859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:131577*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131577*0 + 3*83*FLEN/8, x4, x1, x2)

inst_43860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:131580*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131580*0 + 3*84*FLEN/8, x4, x1, x2)

inst_43861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:131583*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131583*0 + 3*85*FLEN/8, x4, x1, x2)

inst_43862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:131586*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131586*0 + 3*86*FLEN/8, x4, x1, x2)

inst_43863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:131589*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131589*0 + 3*87*FLEN/8, x4, x1, x2)

inst_43864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:131592*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131592*0 + 3*88*FLEN/8, x4, x1, x2)

inst_43865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x30f07bdb48c7c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9add465d39fd03; op2val:0x20430f07bdb48c7c;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:131595*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131595*0 + 3*89*FLEN/8, x4, x1, x2)

inst_43866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:131598*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131598*0 + 3*90*FLEN/8, x4, x1, x2)

inst_43867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:131601*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131601*0 + 3*91*FLEN/8, x4, x1, x2)

inst_43868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:131604*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131604*0 + 3*92*FLEN/8, x4, x1, x2)

inst_43869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:131607*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131607*0 + 3*93*FLEN/8, x4, x1, x2)

inst_43870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:131610*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131610*0 + 3*94*FLEN/8, x4, x1, x2)

inst_43871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:131613*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131613*0 + 3*95*FLEN/8, x4, x1, x2)

inst_43872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:131616*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131616*0 + 3*96*FLEN/8, x4, x1, x2)

inst_43873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:131619*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131619*0 + 3*97*FLEN/8, x4, x1, x2)

inst_43874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:131622*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131622*0 + 3*98*FLEN/8, x4, x1, x2)

inst_43875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:131625*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131625*0 + 3*99*FLEN/8, x4, x1, x2)

inst_43876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:131628*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131628*0 + 3*100*FLEN/8, x4, x1, x2)

inst_43877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:131631*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131631*0 + 3*101*FLEN/8, x4, x1, x2)

inst_43878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:131634*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131634*0 + 3*102*FLEN/8, x4, x1, x2)

inst_43879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:131637*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131637*0 + 3*103*FLEN/8, x4, x1, x2)

inst_43880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:131640*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131640*0 + 3*104*FLEN/8, x4, x1, x2)

inst_43881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:131643*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131643*0 + 3*105*FLEN/8, x4, x1, x2)

inst_43882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:131646*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131646*0 + 3*106*FLEN/8, x4, x1, x2)

inst_43883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:131649*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131649*0 + 3*107*FLEN/8, x4, x1, x2)

inst_43884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:131652*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131652*0 + 3*108*FLEN/8, x4, x1, x2)

inst_43885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:131655*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131655*0 + 3*109*FLEN/8, x4, x1, x2)

inst_43886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:131658*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131658*0 + 3*110*FLEN/8, x4, x1, x2)

inst_43887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:131661*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131661*0 + 3*111*FLEN/8, x4, x1, x2)

inst_43888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000000000000; valaddr_reg:x3; val_offset:131664*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131664*0 + 3*112*FLEN/8, x4, x1, x2)

inst_43889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:131667*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131667*0 + 3*113*FLEN/8, x4, x1, x2)

inst_43890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:131670*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131670*0 + 3*114*FLEN/8, x4, x1, x2)

inst_43891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:131673*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131673*0 + 3*115*FLEN/8, x4, x1, x2)

inst_43892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:131676*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131676*0 + 3*116*FLEN/8, x4, x1, x2)

inst_43893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:131679*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131679*0 + 3*117*FLEN/8, x4, x1, x2)

inst_43894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:131682*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131682*0 + 3*118*FLEN/8, x4, x1, x2)

inst_43895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000000000007f; valaddr_reg:x3; val_offset:131685*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131685*0 + 3*119*FLEN/8, x4, x1, x2)

inst_43896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100000000000ff; valaddr_reg:x3; val_offset:131688*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131688*0 + 3*120*FLEN/8, x4, x1, x2)

inst_43897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100000000001ff; valaddr_reg:x3; val_offset:131691*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131691*0 + 3*121*FLEN/8, x4, x1, x2)

inst_43898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100000000003ff; valaddr_reg:x3; val_offset:131694*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131694*0 + 3*122*FLEN/8, x4, x1, x2)

inst_43899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100000000007ff; valaddr_reg:x3; val_offset:131697*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131697*0 + 3*123*FLEN/8, x4, x1, x2)

inst_43900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000000000fff; valaddr_reg:x3; val_offset:131700*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131700*0 + 3*124*FLEN/8, x4, x1, x2)

inst_43901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000000001fff; valaddr_reg:x3; val_offset:131703*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131703*0 + 3*125*FLEN/8, x4, x1, x2)

inst_43902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000000003fff; valaddr_reg:x3; val_offset:131706*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131706*0 + 3*126*FLEN/8, x4, x1, x2)

inst_43903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000000007fff; valaddr_reg:x3; val_offset:131709*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131709*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_43904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000000000ffff; valaddr_reg:x3; val_offset:131712*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131712*0 + 3*128*FLEN/8, x4, x1, x2)

inst_43905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000000001ffff; valaddr_reg:x3; val_offset:131715*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131715*0 + 3*129*FLEN/8, x4, x1, x2)

inst_43906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000000003ffff; valaddr_reg:x3; val_offset:131718*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131718*0 + 3*130*FLEN/8, x4, x1, x2)

inst_43907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000000007ffff; valaddr_reg:x3; val_offset:131721*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131721*0 + 3*131*FLEN/8, x4, x1, x2)

inst_43908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100000000fffff; valaddr_reg:x3; val_offset:131724*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131724*0 + 3*132*FLEN/8, x4, x1, x2)

inst_43909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100000001fffff; valaddr_reg:x3; val_offset:131727*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131727*0 + 3*133*FLEN/8, x4, x1, x2)

inst_43910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100000003fffff; valaddr_reg:x3; val_offset:131730*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131730*0 + 3*134*FLEN/8, x4, x1, x2)

inst_43911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100000007fffff; valaddr_reg:x3; val_offset:131733*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131733*0 + 3*135*FLEN/8, x4, x1, x2)

inst_43912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000000ffffff; valaddr_reg:x3; val_offset:131736*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131736*0 + 3*136*FLEN/8, x4, x1, x2)

inst_43913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000001ffffff; valaddr_reg:x3; val_offset:131739*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131739*0 + 3*137*FLEN/8, x4, x1, x2)

inst_43914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000003ffffff; valaddr_reg:x3; val_offset:131742*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131742*0 + 3*138*FLEN/8, x4, x1, x2)

inst_43915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000007ffffff; valaddr_reg:x3; val_offset:131745*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131745*0 + 3*139*FLEN/8, x4, x1, x2)

inst_43916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000000fffffff; valaddr_reg:x3; val_offset:131748*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131748*0 + 3*140*FLEN/8, x4, x1, x2)

inst_43917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000001fffffff; valaddr_reg:x3; val_offset:131751*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131751*0 + 3*141*FLEN/8, x4, x1, x2)

inst_43918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000003fffffff; valaddr_reg:x3; val_offset:131754*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131754*0 + 3*142*FLEN/8, x4, x1, x2)

inst_43919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000007fffffff; valaddr_reg:x3; val_offset:131757*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131757*0 + 3*143*FLEN/8, x4, x1, x2)

inst_43920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100000ffffffff; valaddr_reg:x3; val_offset:131760*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131760*0 + 3*144*FLEN/8, x4, x1, x2)

inst_43921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100001ffffffff; valaddr_reg:x3; val_offset:131763*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131763*0 + 3*145*FLEN/8, x4, x1, x2)

inst_43922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100003ffffffff; valaddr_reg:x3; val_offset:131766*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131766*0 + 3*146*FLEN/8, x4, x1, x2)

inst_43923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100007ffffffff; valaddr_reg:x3; val_offset:131769*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131769*0 + 3*147*FLEN/8, x4, x1, x2)

inst_43924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010000fffffffff; valaddr_reg:x3; val_offset:131772*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131772*0 + 3*148*FLEN/8, x4, x1, x2)

inst_43925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010001fffffffff; valaddr_reg:x3; val_offset:131775*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131775*0 + 3*149*FLEN/8, x4, x1, x2)

inst_43926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010003fffffffff; valaddr_reg:x3; val_offset:131778*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131778*0 + 3*150*FLEN/8, x4, x1, x2)

inst_43927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010007fffffffff; valaddr_reg:x3; val_offset:131781*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131781*0 + 3*151*FLEN/8, x4, x1, x2)

inst_43928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801000ffffffffff; valaddr_reg:x3; val_offset:131784*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131784*0 + 3*152*FLEN/8, x4, x1, x2)

inst_43929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801001ffffffffff; valaddr_reg:x3; val_offset:131787*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131787*0 + 3*153*FLEN/8, x4, x1, x2)

inst_43930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801003ffffffffff; valaddr_reg:x3; val_offset:131790*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131790*0 + 3*154*FLEN/8, x4, x1, x2)

inst_43931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801007ffffffffff; valaddr_reg:x3; val_offset:131793*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131793*0 + 3*155*FLEN/8, x4, x1, x2)

inst_43932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80100fffffffffff; valaddr_reg:x3; val_offset:131796*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131796*0 + 3*156*FLEN/8, x4, x1, x2)

inst_43933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80101fffffffffff; valaddr_reg:x3; val_offset:131799*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131799*0 + 3*157*FLEN/8, x4, x1, x2)

inst_43934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80103fffffffffff; valaddr_reg:x3; val_offset:131802*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131802*0 + 3*158*FLEN/8, x4, x1, x2)

inst_43935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x80107fffffffffff; valaddr_reg:x3; val_offset:131805*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131805*0 + 3*159*FLEN/8, x4, x1, x2)

inst_43936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8010ffffffffffff; valaddr_reg:x3; val_offset:131808*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131808*0 + 3*160*FLEN/8, x4, x1, x2)

inst_43937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8011ffffffffffff; valaddr_reg:x3; val_offset:131811*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131811*0 + 3*161*FLEN/8, x4, x1, x2)

inst_43938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8013ffffffffffff; valaddr_reg:x3; val_offset:131814*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131814*0 + 3*162*FLEN/8, x4, x1, x2)

inst_43939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8017ffffffffffff; valaddr_reg:x3; val_offset:131817*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131817*0 + 3*163*FLEN/8, x4, x1, x2)

inst_43940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x8018000000000000; valaddr_reg:x3; val_offset:131820*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131820*0 + 3*164*FLEN/8, x4, x1, x2)

inst_43941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801c000000000000; valaddr_reg:x3; val_offset:131823*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131823*0 + 3*165*FLEN/8, x4, x1, x2)

inst_43942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801e000000000000; valaddr_reg:x3; val_offset:131826*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131826*0 + 3*166*FLEN/8, x4, x1, x2)

inst_43943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801f000000000000; valaddr_reg:x3; val_offset:131829*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131829*0 + 3*167*FLEN/8, x4, x1, x2)

inst_43944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801f800000000000; valaddr_reg:x3; val_offset:131832*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131832*0 + 3*168*FLEN/8, x4, x1, x2)

inst_43945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fc00000000000; valaddr_reg:x3; val_offset:131835*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131835*0 + 3*169*FLEN/8, x4, x1, x2)

inst_43946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fe00000000000; valaddr_reg:x3; val_offset:131838*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131838*0 + 3*170*FLEN/8, x4, x1, x2)

inst_43947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ff00000000000; valaddr_reg:x3; val_offset:131841*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131841*0 + 3*171*FLEN/8, x4, x1, x2)

inst_43948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ff80000000000; valaddr_reg:x3; val_offset:131844*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131844*0 + 3*172*FLEN/8, x4, x1, x2)

inst_43949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffc0000000000; valaddr_reg:x3; val_offset:131847*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131847*0 + 3*173*FLEN/8, x4, x1, x2)

inst_43950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffe0000000000; valaddr_reg:x3; val_offset:131850*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131850*0 + 3*174*FLEN/8, x4, x1, x2)

inst_43951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fff0000000000; valaddr_reg:x3; val_offset:131853*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131853*0 + 3*175*FLEN/8, x4, x1, x2)

inst_43952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fff8000000000; valaddr_reg:x3; val_offset:131856*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131856*0 + 3*176*FLEN/8, x4, x1, x2)

inst_43953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffc000000000; valaddr_reg:x3; val_offset:131859*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131859*0 + 3*177*FLEN/8, x4, x1, x2)

inst_43954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffe000000000; valaddr_reg:x3; val_offset:131862*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131862*0 + 3*178*FLEN/8, x4, x1, x2)

inst_43955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffff000000000; valaddr_reg:x3; val_offset:131865*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131865*0 + 3*179*FLEN/8, x4, x1, x2)

inst_43956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffff800000000; valaddr_reg:x3; val_offset:131868*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131868*0 + 3*180*FLEN/8, x4, x1, x2)

inst_43957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffc00000000; valaddr_reg:x3; val_offset:131871*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131871*0 + 3*181*FLEN/8, x4, x1, x2)

inst_43958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffe00000000; valaddr_reg:x3; val_offset:131874*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131874*0 + 3*182*FLEN/8, x4, x1, x2)

inst_43959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffff00000000; valaddr_reg:x3; val_offset:131877*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131877*0 + 3*183*FLEN/8, x4, x1, x2)

inst_43960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffff80000000; valaddr_reg:x3; val_offset:131880*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131880*0 + 3*184*FLEN/8, x4, x1, x2)

inst_43961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffc0000000; valaddr_reg:x3; val_offset:131883*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131883*0 + 3*185*FLEN/8, x4, x1, x2)

inst_43962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffe0000000; valaddr_reg:x3; val_offset:131886*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131886*0 + 3*186*FLEN/8, x4, x1, x2)

inst_43963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffff0000000; valaddr_reg:x3; val_offset:131889*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131889*0 + 3*187*FLEN/8, x4, x1, x2)

inst_43964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffff8000000; valaddr_reg:x3; val_offset:131892*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131892*0 + 3*188*FLEN/8, x4, x1, x2)

inst_43965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffc000000; valaddr_reg:x3; val_offset:131895*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131895*0 + 3*189*FLEN/8, x4, x1, x2)

inst_43966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffe000000; valaddr_reg:x3; val_offset:131898*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131898*0 + 3*190*FLEN/8, x4, x1, x2)

inst_43967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffff000000; valaddr_reg:x3; val_offset:131901*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131901*0 + 3*191*FLEN/8, x4, x1, x2)

inst_43968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffff800000; valaddr_reg:x3; val_offset:131904*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131904*0 + 3*192*FLEN/8, x4, x1, x2)

inst_43969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffffc00000; valaddr_reg:x3; val_offset:131907*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131907*0 + 3*193*FLEN/8, x4, x1, x2)

inst_43970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffffe00000; valaddr_reg:x3; val_offset:131910*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131910*0 + 3*194*FLEN/8, x4, x1, x2)

inst_43971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffff00000; valaddr_reg:x3; val_offset:131913*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131913*0 + 3*195*FLEN/8, x4, x1, x2)

inst_43972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffff80000; valaddr_reg:x3; val_offset:131916*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131916*0 + 3*196*FLEN/8, x4, x1, x2)

inst_43973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffffc0000; valaddr_reg:x3; val_offset:131919*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131919*0 + 3*197*FLEN/8, x4, x1, x2)

inst_43974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffffe0000; valaddr_reg:x3; val_offset:131922*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131922*0 + 3*198*FLEN/8, x4, x1, x2)

inst_43975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffffff0000; valaddr_reg:x3; val_offset:131925*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131925*0 + 3*199*FLEN/8, x4, x1, x2)

inst_43976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffffff8000; valaddr_reg:x3; val_offset:131928*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131928*0 + 3*200*FLEN/8, x4, x1, x2)

inst_43977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffffffc000; valaddr_reg:x3; val_offset:131931*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131931*0 + 3*201*FLEN/8, x4, x1, x2)

inst_43978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffffffe000; valaddr_reg:x3; val_offset:131934*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131934*0 + 3*202*FLEN/8, x4, x1, x2)

inst_43979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffffff000; valaddr_reg:x3; val_offset:131937*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131937*0 + 3*203*FLEN/8, x4, x1, x2)

inst_43980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffffff800; valaddr_reg:x3; val_offset:131940*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131940*0 + 3*204*FLEN/8, x4, x1, x2)

inst_43981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffffffc00; valaddr_reg:x3; val_offset:131943*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131943*0 + 3*205*FLEN/8, x4, x1, x2)

inst_43982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffffffe00; valaddr_reg:x3; val_offset:131946*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131946*0 + 3*206*FLEN/8, x4, x1, x2)

inst_43983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffffffff00; valaddr_reg:x3; val_offset:131949*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131949*0 + 3*207*FLEN/8, x4, x1, x2)

inst_43984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffffffff80; valaddr_reg:x3; val_offset:131952*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131952*0 + 3*208*FLEN/8, x4, x1, x2)

inst_43985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:131955*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131955*0 + 3*209*FLEN/8, x4, x1, x2)

inst_43986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:131958*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131958*0 + 3*210*FLEN/8, x4, x1, x2)

inst_43987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:131961*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131961*0 + 3*211*FLEN/8, x4, x1, x2)

inst_43988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:131964*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131964*0 + 3*212*FLEN/8, x4, x1, x2)

inst_43989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:131967*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131967*0 + 3*213*FLEN/8, x4, x1, x2)

inst_43990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:131970*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131970*0 + 3*214*FLEN/8, x4, x1, x2)

inst_43991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ae7cb22e21faf; op2val:0x8000;
op3val:0x801fffffffffffff; valaddr_reg:x3; val_offset:131973*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131973*0 + 3*215*FLEN/8, x4, x1, x2)

inst_43992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:131976*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131976*0 + 3*216*FLEN/8, x4, x1, x2)

inst_43993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:131979*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131979*0 + 3*217*FLEN/8, x4, x1, x2)

inst_43994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:131982*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131982*0 + 3*218*FLEN/8, x4, x1, x2)

inst_43995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:131985*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131985*0 + 3*219*FLEN/8, x4, x1, x2)

inst_43996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:131988*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131988*0 + 3*220*FLEN/8, x4, x1, x2)

inst_43997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:131991*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131991*0 + 3*221*FLEN/8, x4, x1, x2)

inst_43998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:131994*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131994*0 + 3*222*FLEN/8, x4, x1, x2)

inst_43999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:131997*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131997*0 + 3*223*FLEN/8, x4, x1, x2)

inst_44000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:132000*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132000*0 + 3*224*FLEN/8, x4, x1, x2)

inst_44001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:132003*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132003*0 + 3*225*FLEN/8, x4, x1, x2)

inst_44002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:132006*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132006*0 + 3*226*FLEN/8, x4, x1, x2)

inst_44003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:132009*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132009*0 + 3*227*FLEN/8, x4, x1, x2)

inst_44004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:132012*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132012*0 + 3*228*FLEN/8, x4, x1, x2)

inst_44005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:132015*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132015*0 + 3*229*FLEN/8, x4, x1, x2)

inst_44006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:132018*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132018*0 + 3*230*FLEN/8, x4, x1, x2)

inst_44007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:132021*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132021*0 + 3*231*FLEN/8, x4, x1, x2)

inst_44008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:132024*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132024*0 + 3*232*FLEN/8, x4, x1, x2)

inst_44009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:132027*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132027*0 + 3*233*FLEN/8, x4, x1, x2)

inst_44010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:132030*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132030*0 + 3*234*FLEN/8, x4, x1, x2)

inst_44011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:132033*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132033*0 + 3*235*FLEN/8, x4, x1, x2)

inst_44012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:132036*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132036*0 + 3*236*FLEN/8, x4, x1, x2)

inst_44013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:132039*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132039*0 + 3*237*FLEN/8, x4, x1, x2)

inst_44014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000000000000; valaddr_reg:x3; val_offset:132042*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132042*0 + 3*238*FLEN/8, x4, x1, x2)

inst_44015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000000000001; valaddr_reg:x3; val_offset:132045*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132045*0 + 3*239*FLEN/8, x4, x1, x2)

inst_44016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000000000003; valaddr_reg:x3; val_offset:132048*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132048*0 + 3*240*FLEN/8, x4, x1, x2)

inst_44017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000000000007; valaddr_reg:x3; val_offset:132051*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132051*0 + 3*241*FLEN/8, x4, x1, x2)

inst_44018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000000000000f; valaddr_reg:x3; val_offset:132054*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132054*0 + 3*242*FLEN/8, x4, x1, x2)

inst_44019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000000000001f; valaddr_reg:x3; val_offset:132057*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132057*0 + 3*243*FLEN/8, x4, x1, x2)

inst_44020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000000000003f; valaddr_reg:x3; val_offset:132060*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132060*0 + 3*244*FLEN/8, x4, x1, x2)

inst_44021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000000000007f; valaddr_reg:x3; val_offset:132063*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132063*0 + 3*245*FLEN/8, x4, x1, x2)

inst_44022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300000000000ff; valaddr_reg:x3; val_offset:132066*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132066*0 + 3*246*FLEN/8, x4, x1, x2)

inst_44023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300000000001ff; valaddr_reg:x3; val_offset:132069*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132069*0 + 3*247*FLEN/8, x4, x1, x2)

inst_44024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300000000003ff; valaddr_reg:x3; val_offset:132072*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132072*0 + 3*248*FLEN/8, x4, x1, x2)

inst_44025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300000000007ff; valaddr_reg:x3; val_offset:132075*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132075*0 + 3*249*FLEN/8, x4, x1, x2)

inst_44026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000000000fff; valaddr_reg:x3; val_offset:132078*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132078*0 + 3*250*FLEN/8, x4, x1, x2)

inst_44027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000000001fff; valaddr_reg:x3; val_offset:132081*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132081*0 + 3*251*FLEN/8, x4, x1, x2)

inst_44028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000000003fff; valaddr_reg:x3; val_offset:132084*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132084*0 + 3*252*FLEN/8, x4, x1, x2)

inst_44029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000000007fff; valaddr_reg:x3; val_offset:132087*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132087*0 + 3*253*FLEN/8, x4, x1, x2)

inst_44030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000000000ffff; valaddr_reg:x3; val_offset:132090*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132090*0 + 3*254*FLEN/8, x4, x1, x2)

inst_44031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000000001ffff; valaddr_reg:x3; val_offset:132093*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132093*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_44032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000000003ffff; valaddr_reg:x3; val_offset:132096*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132096*0 + 3*256*FLEN/8, x4, x1, x2)

inst_44033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000000007ffff; valaddr_reg:x3; val_offset:132099*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132099*0 + 3*257*FLEN/8, x4, x1, x2)

inst_44034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300000000fffff; valaddr_reg:x3; val_offset:132102*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132102*0 + 3*258*FLEN/8, x4, x1, x2)

inst_44035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300000001fffff; valaddr_reg:x3; val_offset:132105*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132105*0 + 3*259*FLEN/8, x4, x1, x2)

inst_44036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300000003fffff; valaddr_reg:x3; val_offset:132108*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132108*0 + 3*260*FLEN/8, x4, x1, x2)

inst_44037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300000007fffff; valaddr_reg:x3; val_offset:132111*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132111*0 + 3*261*FLEN/8, x4, x1, x2)

inst_44038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000000ffffff; valaddr_reg:x3; val_offset:132114*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132114*0 + 3*262*FLEN/8, x4, x1, x2)

inst_44039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000001ffffff; valaddr_reg:x3; val_offset:132117*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132117*0 + 3*263*FLEN/8, x4, x1, x2)

inst_44040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000003ffffff; valaddr_reg:x3; val_offset:132120*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132120*0 + 3*264*FLEN/8, x4, x1, x2)

inst_44041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000007ffffff; valaddr_reg:x3; val_offset:132123*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132123*0 + 3*265*FLEN/8, x4, x1, x2)

inst_44042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000000fffffff; valaddr_reg:x3; val_offset:132126*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132126*0 + 3*266*FLEN/8, x4, x1, x2)

inst_44043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000001fffffff; valaddr_reg:x3; val_offset:132129*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132129*0 + 3*267*FLEN/8, x4, x1, x2)

inst_44044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000003fffffff; valaddr_reg:x3; val_offset:132132*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132132*0 + 3*268*FLEN/8, x4, x1, x2)

inst_44045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000007fffffff; valaddr_reg:x3; val_offset:132135*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132135*0 + 3*269*FLEN/8, x4, x1, x2)

inst_44046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300000ffffffff; valaddr_reg:x3; val_offset:132138*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132138*0 + 3*270*FLEN/8, x4, x1, x2)

inst_44047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300001ffffffff; valaddr_reg:x3; val_offset:132141*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132141*0 + 3*271*FLEN/8, x4, x1, x2)

inst_44048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300003ffffffff; valaddr_reg:x3; val_offset:132144*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132144*0 + 3*272*FLEN/8, x4, x1, x2)

inst_44049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300007ffffffff; valaddr_reg:x3; val_offset:132147*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132147*0 + 3*273*FLEN/8, x4, x1, x2)

inst_44050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230000fffffffff; valaddr_reg:x3; val_offset:132150*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132150*0 + 3*274*FLEN/8, x4, x1, x2)

inst_44051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230001fffffffff; valaddr_reg:x3; val_offset:132153*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132153*0 + 3*275*FLEN/8, x4, x1, x2)

inst_44052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230003fffffffff; valaddr_reg:x3; val_offset:132156*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132156*0 + 3*276*FLEN/8, x4, x1, x2)

inst_44053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230007fffffffff; valaddr_reg:x3; val_offset:132159*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132159*0 + 3*277*FLEN/8, x4, x1, x2)

inst_44054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23000ffffffffff; valaddr_reg:x3; val_offset:132162*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132162*0 + 3*278*FLEN/8, x4, x1, x2)

inst_44055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23001ffffffffff; valaddr_reg:x3; val_offset:132165*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132165*0 + 3*279*FLEN/8, x4, x1, x2)

inst_44056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23003ffffffffff; valaddr_reg:x3; val_offset:132168*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132168*0 + 3*280*FLEN/8, x4, x1, x2)

inst_44057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23007ffffffffff; valaddr_reg:x3; val_offset:132171*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132171*0 + 3*281*FLEN/8, x4, x1, x2)

inst_44058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2300fffffffffff; valaddr_reg:x3; val_offset:132174*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132174*0 + 3*282*FLEN/8, x4, x1, x2)

inst_44059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2301fffffffffff; valaddr_reg:x3; val_offset:132177*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132177*0 + 3*283*FLEN/8, x4, x1, x2)

inst_44060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2303fffffffffff; valaddr_reg:x3; val_offset:132180*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132180*0 + 3*284*FLEN/8, x4, x1, x2)

inst_44061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x2307fffffffffff; valaddr_reg:x3; val_offset:132183*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132183*0 + 3*285*FLEN/8, x4, x1, x2)

inst_44062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x230ffffffffffff; valaddr_reg:x3; val_offset:132186*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132186*0 + 3*286*FLEN/8, x4, x1, x2)

inst_44063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x231ffffffffffff; valaddr_reg:x3; val_offset:132189*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132189*0 + 3*287*FLEN/8, x4, x1, x2)

inst_44064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x233ffffffffffff; valaddr_reg:x3; val_offset:132192*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132192*0 + 3*288*FLEN/8, x4, x1, x2)

inst_44065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x237ffffffffffff; valaddr_reg:x3; val_offset:132195*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132195*0 + 3*289*FLEN/8, x4, x1, x2)

inst_44066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x238000000000000; valaddr_reg:x3; val_offset:132198*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132198*0 + 3*290*FLEN/8, x4, x1, x2)

inst_44067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23c000000000000; valaddr_reg:x3; val_offset:132201*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132201*0 + 3*291*FLEN/8, x4, x1, x2)

inst_44068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23e000000000000; valaddr_reg:x3; val_offset:132204*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132204*0 + 3*292*FLEN/8, x4, x1, x2)

inst_44069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23f000000000000; valaddr_reg:x3; val_offset:132207*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132207*0 + 3*293*FLEN/8, x4, x1, x2)

inst_44070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23f800000000000; valaddr_reg:x3; val_offset:132210*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132210*0 + 3*294*FLEN/8, x4, x1, x2)

inst_44071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fc00000000000; valaddr_reg:x3; val_offset:132213*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132213*0 + 3*295*FLEN/8, x4, x1, x2)

inst_44072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fe00000000000; valaddr_reg:x3; val_offset:132216*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132216*0 + 3*296*FLEN/8, x4, x1, x2)

inst_44073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ff00000000000; valaddr_reg:x3; val_offset:132219*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132219*0 + 3*297*FLEN/8, x4, x1, x2)

inst_44074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ff80000000000; valaddr_reg:x3; val_offset:132222*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132222*0 + 3*298*FLEN/8, x4, x1, x2)

inst_44075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffc0000000000; valaddr_reg:x3; val_offset:132225*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132225*0 + 3*299*FLEN/8, x4, x1, x2)

inst_44076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffe0000000000; valaddr_reg:x3; val_offset:132228*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132228*0 + 3*300*FLEN/8, x4, x1, x2)

inst_44077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fff0000000000; valaddr_reg:x3; val_offset:132231*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132231*0 + 3*301*FLEN/8, x4, x1, x2)

inst_44078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fff8000000000; valaddr_reg:x3; val_offset:132234*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132234*0 + 3*302*FLEN/8, x4, x1, x2)

inst_44079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffc000000000; valaddr_reg:x3; val_offset:132237*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132237*0 + 3*303*FLEN/8, x4, x1, x2)

inst_44080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffe000000000; valaddr_reg:x3; val_offset:132240*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132240*0 + 3*304*FLEN/8, x4, x1, x2)

inst_44081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffff000000000; valaddr_reg:x3; val_offset:132243*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132243*0 + 3*305*FLEN/8, x4, x1, x2)

inst_44082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffff800000000; valaddr_reg:x3; val_offset:132246*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132246*0 + 3*306*FLEN/8, x4, x1, x2)

inst_44083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffc00000000; valaddr_reg:x3; val_offset:132249*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132249*0 + 3*307*FLEN/8, x4, x1, x2)

inst_44084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffe00000000; valaddr_reg:x3; val_offset:132252*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132252*0 + 3*308*FLEN/8, x4, x1, x2)

inst_44085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffff00000000; valaddr_reg:x3; val_offset:132255*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132255*0 + 3*309*FLEN/8, x4, x1, x2)

inst_44086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffff80000000; valaddr_reg:x3; val_offset:132258*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132258*0 + 3*310*FLEN/8, x4, x1, x2)

inst_44087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffc0000000; valaddr_reg:x3; val_offset:132261*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132261*0 + 3*311*FLEN/8, x4, x1, x2)

inst_44088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffe0000000; valaddr_reg:x3; val_offset:132264*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132264*0 + 3*312*FLEN/8, x4, x1, x2)

inst_44089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffff0000000; valaddr_reg:x3; val_offset:132267*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132267*0 + 3*313*FLEN/8, x4, x1, x2)

inst_44090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffff8000000; valaddr_reg:x3; val_offset:132270*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132270*0 + 3*314*FLEN/8, x4, x1, x2)

inst_44091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffc000000; valaddr_reg:x3; val_offset:132273*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132273*0 + 3*315*FLEN/8, x4, x1, x2)

inst_44092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffe000000; valaddr_reg:x3; val_offset:132276*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132276*0 + 3*316*FLEN/8, x4, x1, x2)

inst_44093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffff000000; valaddr_reg:x3; val_offset:132279*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132279*0 + 3*317*FLEN/8, x4, x1, x2)

inst_44094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffff800000; valaddr_reg:x3; val_offset:132282*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132282*0 + 3*318*FLEN/8, x4, x1, x2)

inst_44095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffffc00000; valaddr_reg:x3; val_offset:132285*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132285*0 + 3*319*FLEN/8, x4, x1, x2)

inst_44096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffffe00000; valaddr_reg:x3; val_offset:132288*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132288*0 + 3*320*FLEN/8, x4, x1, x2)

inst_44097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffff00000; valaddr_reg:x3; val_offset:132291*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132291*0 + 3*321*FLEN/8, x4, x1, x2)

inst_44098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffff80000; valaddr_reg:x3; val_offset:132294*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132294*0 + 3*322*FLEN/8, x4, x1, x2)

inst_44099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffffc0000; valaddr_reg:x3; val_offset:132297*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132297*0 + 3*323*FLEN/8, x4, x1, x2)

inst_44100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffffe0000; valaddr_reg:x3; val_offset:132300*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132300*0 + 3*324*FLEN/8, x4, x1, x2)

inst_44101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffffff0000; valaddr_reg:x3; val_offset:132303*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132303*0 + 3*325*FLEN/8, x4, x1, x2)

inst_44102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffffff8000; valaddr_reg:x3; val_offset:132306*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132306*0 + 3*326*FLEN/8, x4, x1, x2)

inst_44103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffffffc000; valaddr_reg:x3; val_offset:132309*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132309*0 + 3*327*FLEN/8, x4, x1, x2)

inst_44104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffffffe000; valaddr_reg:x3; val_offset:132312*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132312*0 + 3*328*FLEN/8, x4, x1, x2)

inst_44105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffffff000; valaddr_reg:x3; val_offset:132315*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132315*0 + 3*329*FLEN/8, x4, x1, x2)

inst_44106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffffff800; valaddr_reg:x3; val_offset:132318*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132318*0 + 3*330*FLEN/8, x4, x1, x2)

inst_44107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffffffc00; valaddr_reg:x3; val_offset:132321*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132321*0 + 3*331*FLEN/8, x4, x1, x2)

inst_44108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffffffe00; valaddr_reg:x3; val_offset:132324*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132324*0 + 3*332*FLEN/8, x4, x1, x2)

inst_44109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffffffff00; valaddr_reg:x3; val_offset:132327*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132327*0 + 3*333*FLEN/8, x4, x1, x2)

inst_44110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffffffff80; valaddr_reg:x3; val_offset:132330*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132330*0 + 3*334*FLEN/8, x4, x1, x2)

inst_44111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffffffffc0; valaddr_reg:x3; val_offset:132333*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132333*0 + 3*335*FLEN/8, x4, x1, x2)

inst_44112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffffffffe0; valaddr_reg:x3; val_offset:132336*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132336*0 + 3*336*FLEN/8, x4, x1, x2)

inst_44113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffffffff0; valaddr_reg:x3; val_offset:132339*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132339*0 + 3*337*FLEN/8, x4, x1, x2)

inst_44114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffffffff8; valaddr_reg:x3; val_offset:132342*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132342*0 + 3*338*FLEN/8, x4, x1, x2)

inst_44115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffffffffc; valaddr_reg:x3; val_offset:132345*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132345*0 + 3*339*FLEN/8, x4, x1, x2)

inst_44116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23ffffffffffffe; valaddr_reg:x3; val_offset:132348*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132348*0 + 3*340*FLEN/8, x4, x1, x2)

inst_44117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xaec4fcd9fed23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9aec4fcd9fed23; op2val:0x0;
op3val:0x23fffffffffffff; valaddr_reg:x3; val_offset:132351*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132351*0 + 3*341*FLEN/8, x4, x1, x2)

inst_44118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000000000000; valaddr_reg:x3; val_offset:132354*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132354*0 + 3*342*FLEN/8, x4, x1, x2)

inst_44119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000000000001; valaddr_reg:x3; val_offset:132357*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132357*0 + 3*343*FLEN/8, x4, x1, x2)

inst_44120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000000000003; valaddr_reg:x3; val_offset:132360*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132360*0 + 3*344*FLEN/8, x4, x1, x2)

inst_44121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000000000007; valaddr_reg:x3; val_offset:132363*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132363*0 + 3*345*FLEN/8, x4, x1, x2)

inst_44122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000000000000f; valaddr_reg:x3; val_offset:132366*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132366*0 + 3*346*FLEN/8, x4, x1, x2)

inst_44123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000000000001f; valaddr_reg:x3; val_offset:132369*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132369*0 + 3*347*FLEN/8, x4, x1, x2)

inst_44124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000000000003f; valaddr_reg:x3; val_offset:132372*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132372*0 + 3*348*FLEN/8, x4, x1, x2)

inst_44125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000000000007f; valaddr_reg:x3; val_offset:132375*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132375*0 + 3*349*FLEN/8, x4, x1, x2)

inst_44126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00000000000ff; valaddr_reg:x3; val_offset:132378*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132378*0 + 3*350*FLEN/8, x4, x1, x2)

inst_44127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00000000001ff; valaddr_reg:x3; val_offset:132381*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132381*0 + 3*351*FLEN/8, x4, x1, x2)

inst_44128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00000000003ff; valaddr_reg:x3; val_offset:132384*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132384*0 + 3*352*FLEN/8, x4, x1, x2)

inst_44129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00000000007ff; valaddr_reg:x3; val_offset:132387*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132387*0 + 3*353*FLEN/8, x4, x1, x2)

inst_44130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000000000fff; valaddr_reg:x3; val_offset:132390*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132390*0 + 3*354*FLEN/8, x4, x1, x2)

inst_44131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000000001fff; valaddr_reg:x3; val_offset:132393*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132393*0 + 3*355*FLEN/8, x4, x1, x2)

inst_44132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000000003fff; valaddr_reg:x3; val_offset:132396*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132396*0 + 3*356*FLEN/8, x4, x1, x2)

inst_44133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000000007fff; valaddr_reg:x3; val_offset:132399*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132399*0 + 3*357*FLEN/8, x4, x1, x2)

inst_44134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000000000ffff; valaddr_reg:x3; val_offset:132402*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132402*0 + 3*358*FLEN/8, x4, x1, x2)

inst_44135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000000001ffff; valaddr_reg:x3; val_offset:132405*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132405*0 + 3*359*FLEN/8, x4, x1, x2)

inst_44136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000000003ffff; valaddr_reg:x3; val_offset:132408*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132408*0 + 3*360*FLEN/8, x4, x1, x2)

inst_44137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000000007ffff; valaddr_reg:x3; val_offset:132411*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132411*0 + 3*361*FLEN/8, x4, x1, x2)

inst_44138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00000000fffff; valaddr_reg:x3; val_offset:132414*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132414*0 + 3*362*FLEN/8, x4, x1, x2)

inst_44139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00000001fffff; valaddr_reg:x3; val_offset:132417*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132417*0 + 3*363*FLEN/8, x4, x1, x2)

inst_44140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00000003fffff; valaddr_reg:x3; val_offset:132420*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132420*0 + 3*364*FLEN/8, x4, x1, x2)

inst_44141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00000007fffff; valaddr_reg:x3; val_offset:132423*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132423*0 + 3*365*FLEN/8, x4, x1, x2)

inst_44142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000000ffffff; valaddr_reg:x3; val_offset:132426*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132426*0 + 3*366*FLEN/8, x4, x1, x2)

inst_44143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000001ffffff; valaddr_reg:x3; val_offset:132429*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132429*0 + 3*367*FLEN/8, x4, x1, x2)

inst_44144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000003ffffff; valaddr_reg:x3; val_offset:132432*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132432*0 + 3*368*FLEN/8, x4, x1, x2)

inst_44145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000007ffffff; valaddr_reg:x3; val_offset:132435*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132435*0 + 3*369*FLEN/8, x4, x1, x2)

inst_44146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000000fffffff; valaddr_reg:x3; val_offset:132438*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132438*0 + 3*370*FLEN/8, x4, x1, x2)

inst_44147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000001fffffff; valaddr_reg:x3; val_offset:132441*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132441*0 + 3*371*FLEN/8, x4, x1, x2)

inst_44148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000003fffffff; valaddr_reg:x3; val_offset:132444*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132444*0 + 3*372*FLEN/8, x4, x1, x2)

inst_44149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000007fffffff; valaddr_reg:x3; val_offset:132447*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132447*0 + 3*373*FLEN/8, x4, x1, x2)

inst_44150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00000ffffffff; valaddr_reg:x3; val_offset:132450*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132450*0 + 3*374*FLEN/8, x4, x1, x2)

inst_44151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00001ffffffff; valaddr_reg:x3; val_offset:132453*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132453*0 + 3*375*FLEN/8, x4, x1, x2)

inst_44152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00003ffffffff; valaddr_reg:x3; val_offset:132456*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132456*0 + 3*376*FLEN/8, x4, x1, x2)

inst_44153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00007ffffffff; valaddr_reg:x3; val_offset:132459*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132459*0 + 3*377*FLEN/8, x4, x1, x2)

inst_44154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0000fffffffff; valaddr_reg:x3; val_offset:132462*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132462*0 + 3*378*FLEN/8, x4, x1, x2)

inst_44155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0001fffffffff; valaddr_reg:x3; val_offset:132465*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132465*0 + 3*379*FLEN/8, x4, x1, x2)

inst_44156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0003fffffffff; valaddr_reg:x3; val_offset:132468*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132468*0 + 3*380*FLEN/8, x4, x1, x2)

inst_44157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0007fffffffff; valaddr_reg:x3; val_offset:132471*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132471*0 + 3*381*FLEN/8, x4, x1, x2)

inst_44158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c000ffffffffff; valaddr_reg:x3; val_offset:132474*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132474*0 + 3*382*FLEN/8, x4, x1, x2)

inst_44159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c001ffffffffff; valaddr_reg:x3; val_offset:132477*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132477*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_44160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c003ffffffffff; valaddr_reg:x3; val_offset:132480*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132480*0 + 3*384*FLEN/8, x4, x1, x2)

inst_44161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c007ffffffffff; valaddr_reg:x3; val_offset:132483*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132483*0 + 3*385*FLEN/8, x4, x1, x2)

inst_44162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c00fffffffffff; valaddr_reg:x3; val_offset:132486*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132486*0 + 3*386*FLEN/8, x4, x1, x2)

inst_44163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c01fffffffffff; valaddr_reg:x3; val_offset:132489*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132489*0 + 3*387*FLEN/8, x4, x1, x2)

inst_44164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c03fffffffffff; valaddr_reg:x3; val_offset:132492*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132492*0 + 3*388*FLEN/8, x4, x1, x2)

inst_44165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c07fffffffffff; valaddr_reg:x3; val_offset:132495*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132495*0 + 3*389*FLEN/8, x4, x1, x2)

inst_44166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c0ffffffffffff; valaddr_reg:x3; val_offset:132498*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132498*0 + 3*390*FLEN/8, x4, x1, x2)

inst_44167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c1ffffffffffff; valaddr_reg:x3; val_offset:132501*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132501*0 + 3*391*FLEN/8, x4, x1, x2)

inst_44168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c3ffffffffffff; valaddr_reg:x3; val_offset:132504*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132504*0 + 3*392*FLEN/8, x4, x1, x2)

inst_44169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c7ffffffffffff; valaddr_reg:x3; val_offset:132507*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132507*0 + 3*393*FLEN/8, x4, x1, x2)

inst_44170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39c8000000000000; valaddr_reg:x3; val_offset:132510*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132510*0 + 3*394*FLEN/8, x4, x1, x2)

inst_44171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cc000000000000; valaddr_reg:x3; val_offset:132513*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132513*0 + 3*395*FLEN/8, x4, x1, x2)

inst_44172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39ce000000000000; valaddr_reg:x3; val_offset:132516*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132516*0 + 3*396*FLEN/8, x4, x1, x2)

inst_44173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cf000000000000; valaddr_reg:x3; val_offset:132519*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132519*0 + 3*397*FLEN/8, x4, x1, x2)

inst_44174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cf800000000000; valaddr_reg:x3; val_offset:132522*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132522*0 + 3*398*FLEN/8, x4, x1, x2)

inst_44175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfc00000000000; valaddr_reg:x3; val_offset:132525*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132525*0 + 3*399*FLEN/8, x4, x1, x2)

inst_44176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfe00000000000; valaddr_reg:x3; val_offset:132528*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132528*0 + 3*400*FLEN/8, x4, x1, x2)

inst_44177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cff00000000000; valaddr_reg:x3; val_offset:132531*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132531*0 + 3*401*FLEN/8, x4, x1, x2)

inst_44178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cff80000000000; valaddr_reg:x3; val_offset:132534*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132534*0 + 3*402*FLEN/8, x4, x1, x2)

inst_44179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffc0000000000; valaddr_reg:x3; val_offset:132537*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132537*0 + 3*403*FLEN/8, x4, x1, x2)

inst_44180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffe0000000000; valaddr_reg:x3; val_offset:132540*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132540*0 + 3*404*FLEN/8, x4, x1, x2)

inst_44181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfff0000000000; valaddr_reg:x3; val_offset:132543*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132543*0 + 3*405*FLEN/8, x4, x1, x2)

inst_44182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfff8000000000; valaddr_reg:x3; val_offset:132546*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132546*0 + 3*406*FLEN/8, x4, x1, x2)

inst_44183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffc000000000; valaddr_reg:x3; val_offset:132549*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132549*0 + 3*407*FLEN/8, x4, x1, x2)

inst_44184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffe000000000; valaddr_reg:x3; val_offset:132552*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132552*0 + 3*408*FLEN/8, x4, x1, x2)

inst_44185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffff000000000; valaddr_reg:x3; val_offset:132555*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132555*0 + 3*409*FLEN/8, x4, x1, x2)

inst_44186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffff800000000; valaddr_reg:x3; val_offset:132558*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132558*0 + 3*410*FLEN/8, x4, x1, x2)

inst_44187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffc00000000; valaddr_reg:x3; val_offset:132561*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132561*0 + 3*411*FLEN/8, x4, x1, x2)

inst_44188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffe00000000; valaddr_reg:x3; val_offset:132564*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132564*0 + 3*412*FLEN/8, x4, x1, x2)

inst_44189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffff00000000; valaddr_reg:x3; val_offset:132567*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132567*0 + 3*413*FLEN/8, x4, x1, x2)

inst_44190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffff80000000; valaddr_reg:x3; val_offset:132570*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132570*0 + 3*414*FLEN/8, x4, x1, x2)

inst_44191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffc0000000; valaddr_reg:x3; val_offset:132573*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132573*0 + 3*415*FLEN/8, x4, x1, x2)

inst_44192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffe0000000; valaddr_reg:x3; val_offset:132576*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132576*0 + 3*416*FLEN/8, x4, x1, x2)

inst_44193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffff0000000; valaddr_reg:x3; val_offset:132579*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132579*0 + 3*417*FLEN/8, x4, x1, x2)

inst_44194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffff8000000; valaddr_reg:x3; val_offset:132582*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132582*0 + 3*418*FLEN/8, x4, x1, x2)

inst_44195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffc000000; valaddr_reg:x3; val_offset:132585*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132585*0 + 3*419*FLEN/8, x4, x1, x2)

inst_44196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffe000000; valaddr_reg:x3; val_offset:132588*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132588*0 + 3*420*FLEN/8, x4, x1, x2)

inst_44197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffff000000; valaddr_reg:x3; val_offset:132591*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132591*0 + 3*421*FLEN/8, x4, x1, x2)

inst_44198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffff800000; valaddr_reg:x3; val_offset:132594*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132594*0 + 3*422*FLEN/8, x4, x1, x2)

inst_44199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffffc00000; valaddr_reg:x3; val_offset:132597*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132597*0 + 3*423*FLEN/8, x4, x1, x2)

inst_44200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffffe00000; valaddr_reg:x3; val_offset:132600*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132600*0 + 3*424*FLEN/8, x4, x1, x2)

inst_44201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffff00000; valaddr_reg:x3; val_offset:132603*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132603*0 + 3*425*FLEN/8, x4, x1, x2)

inst_44202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffff80000; valaddr_reg:x3; val_offset:132606*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132606*0 + 3*426*FLEN/8, x4, x1, x2)

inst_44203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffffc0000; valaddr_reg:x3; val_offset:132609*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132609*0 + 3*427*FLEN/8, x4, x1, x2)

inst_44204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffffe0000; valaddr_reg:x3; val_offset:132612*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132612*0 + 3*428*FLEN/8, x4, x1, x2)

inst_44205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffffff0000; valaddr_reg:x3; val_offset:132615*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132615*0 + 3*429*FLEN/8, x4, x1, x2)

inst_44206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffffff8000; valaddr_reg:x3; val_offset:132618*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132618*0 + 3*430*FLEN/8, x4, x1, x2)

inst_44207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffffffc000; valaddr_reg:x3; val_offset:132621*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132621*0 + 3*431*FLEN/8, x4, x1, x2)

inst_44208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffffffe000; valaddr_reg:x3; val_offset:132624*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132624*0 + 3*432*FLEN/8, x4, x1, x2)

inst_44209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffffff000; valaddr_reg:x3; val_offset:132627*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132627*0 + 3*433*FLEN/8, x4, x1, x2)

inst_44210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffffff800; valaddr_reg:x3; val_offset:132630*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132630*0 + 3*434*FLEN/8, x4, x1, x2)

inst_44211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffffffc00; valaddr_reg:x3; val_offset:132633*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132633*0 + 3*435*FLEN/8, x4, x1, x2)

inst_44212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffffffe00; valaddr_reg:x3; val_offset:132636*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132636*0 + 3*436*FLEN/8, x4, x1, x2)

inst_44213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffffffff00; valaddr_reg:x3; val_offset:132639*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132639*0 + 3*437*FLEN/8, x4, x1, x2)

inst_44214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffffffff80; valaddr_reg:x3; val_offset:132642*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132642*0 + 3*438*FLEN/8, x4, x1, x2)

inst_44215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffffffffc0; valaddr_reg:x3; val_offset:132645*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132645*0 + 3*439*FLEN/8, x4, x1, x2)

inst_44216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffffffffe0; valaddr_reg:x3; val_offset:132648*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132648*0 + 3*440*FLEN/8, x4, x1, x2)

inst_44217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffffffff0; valaddr_reg:x3; val_offset:132651*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132651*0 + 3*441*FLEN/8, x4, x1, x2)

inst_44218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffffffff8; valaddr_reg:x3; val_offset:132654*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132654*0 + 3*442*FLEN/8, x4, x1, x2)

inst_44219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffffffffc; valaddr_reg:x3; val_offset:132657*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132657*0 + 3*443*FLEN/8, x4, x1, x2)

inst_44220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cffffffffffffe; valaddr_reg:x3; val_offset:132660*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132660*0 + 3*444*FLEN/8, x4, x1, x2)

inst_44221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x39cfffffffffffff; valaddr_reg:x3; val_offset:132663*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132663*0 + 3*445*FLEN/8, x4, x1, x2)

inst_44222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:132666*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132666*0 + 3*446*FLEN/8, x4, x1, x2)

inst_44223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:132669*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132669*0 + 3*447*FLEN/8, x4, x1, x2)

inst_44224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:132672*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132672*0 + 3*448*FLEN/8, x4, x1, x2)

inst_44225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:132675*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132675*0 + 3*449*FLEN/8, x4, x1, x2)

inst_44226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:132678*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132678*0 + 3*450*FLEN/8, x4, x1, x2)

inst_44227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:132681*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132681*0 + 3*451*FLEN/8, x4, x1, x2)

inst_44228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:132684*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132684*0 + 3*452*FLEN/8, x4, x1, x2)

inst_44229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:132687*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132687*0 + 3*453*FLEN/8, x4, x1, x2)

inst_44230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:132690*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132690*0 + 3*454*FLEN/8, x4, x1, x2)

inst_44231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:132693*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132693*0 + 3*455*FLEN/8, x4, x1, x2)

inst_44232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:132696*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132696*0 + 3*456*FLEN/8, x4, x1, x2)

inst_44233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:132699*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132699*0 + 3*457*FLEN/8, x4, x1, x2)

inst_44234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:132702*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132702*0 + 3*458*FLEN/8, x4, x1, x2)

inst_44235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:132705*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132705*0 + 3*459*FLEN/8, x4, x1, x2)

inst_44236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:132708*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132708*0 + 3*460*FLEN/8, x4, x1, x2)

inst_44237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:132711*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132711*0 + 3*461*FLEN/8, x4, x1, x2)

inst_44238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:132714*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132714*0 + 3*462*FLEN/8, x4, x1, x2)

inst_44239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:132717*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132717*0 + 3*463*FLEN/8, x4, x1, x2)

inst_44240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:132720*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132720*0 + 3*464*FLEN/8, x4, x1, x2)

inst_44241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:132723*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132723*0 + 3*465*FLEN/8, x4, x1, x2)

inst_44242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:132726*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132726*0 + 3*466*FLEN/8, x4, x1, x2)

inst_44243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2e969f3d51e04 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b12b5923ada87; op2val:0x2042e969f3d51e04;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:132729*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132729*0 + 3*467*FLEN/8, x4, x1, x2)

inst_44244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:132732*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132732*0 + 3*468*FLEN/8, x4, x1, x2)

inst_44245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:132735*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132735*0 + 3*469*FLEN/8, x4, x1, x2)

inst_44246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:132738*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132738*0 + 3*470*FLEN/8, x4, x1, x2)

inst_44247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:132741*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132741*0 + 3*471*FLEN/8, x4, x1, x2)

inst_44248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:132744*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132744*0 + 3*472*FLEN/8, x4, x1, x2)

inst_44249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:132747*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132747*0 + 3*473*FLEN/8, x4, x1, x2)

inst_44250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:132750*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132750*0 + 3*474*FLEN/8, x4, x1, x2)

inst_44251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:132753*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132753*0 + 3*475*FLEN/8, x4, x1, x2)

inst_44252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:132756*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132756*0 + 3*476*FLEN/8, x4, x1, x2)

inst_44253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:132759*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132759*0 + 3*477*FLEN/8, x4, x1, x2)

inst_44254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:132762*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132762*0 + 3*478*FLEN/8, x4, x1, x2)

inst_44255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:132765*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132765*0 + 3*479*FLEN/8, x4, x1, x2)

inst_44256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:132768*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132768*0 + 3*480*FLEN/8, x4, x1, x2)

inst_44257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:132771*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132771*0 + 3*481*FLEN/8, x4, x1, x2)

inst_44258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:132774*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132774*0 + 3*482*FLEN/8, x4, x1, x2)

inst_44259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:132777*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132777*0 + 3*483*FLEN/8, x4, x1, x2)

inst_44260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:132780*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132780*0 + 3*484*FLEN/8, x4, x1, x2)

inst_44261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:132783*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132783*0 + 3*485*FLEN/8, x4, x1, x2)

inst_44262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:132786*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132786*0 + 3*486*FLEN/8, x4, x1, x2)

inst_44263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:132789*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132789*0 + 3*487*FLEN/8, x4, x1, x2)

inst_44264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:132792*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132792*0 + 3*488*FLEN/8, x4, x1, x2)

inst_44265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:132795*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132795*0 + 3*489*FLEN/8, x4, x1, x2)

inst_44266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000000000000; valaddr_reg:x3; val_offset:132798*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132798*0 + 3*490*FLEN/8, x4, x1, x2)

inst_44267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000000000001; valaddr_reg:x3; val_offset:132801*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132801*0 + 3*491*FLEN/8, x4, x1, x2)

inst_44268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000000000003; valaddr_reg:x3; val_offset:132804*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132804*0 + 3*492*FLEN/8, x4, x1, x2)

inst_44269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000000000007; valaddr_reg:x3; val_offset:132807*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132807*0 + 3*493*FLEN/8, x4, x1, x2)

inst_44270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000000000000f; valaddr_reg:x3; val_offset:132810*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132810*0 + 3*494*FLEN/8, x4, x1, x2)

inst_44271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000000000001f; valaddr_reg:x3; val_offset:132813*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132813*0 + 3*495*FLEN/8, x4, x1, x2)

inst_44272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000000000003f; valaddr_reg:x3; val_offset:132816*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132816*0 + 3*496*FLEN/8, x4, x1, x2)

inst_44273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000000000007f; valaddr_reg:x3; val_offset:132819*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132819*0 + 3*497*FLEN/8, x4, x1, x2)

inst_44274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200000000000ff; valaddr_reg:x3; val_offset:132822*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132822*0 + 3*498*FLEN/8, x4, x1, x2)

inst_44275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200000000001ff; valaddr_reg:x3; val_offset:132825*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132825*0 + 3*499*FLEN/8, x4, x1, x2)

inst_44276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200000000003ff; valaddr_reg:x3; val_offset:132828*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132828*0 + 3*500*FLEN/8, x4, x1, x2)

inst_44277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200000000007ff; valaddr_reg:x3; val_offset:132831*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132831*0 + 3*501*FLEN/8, x4, x1, x2)

inst_44278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000000000fff; valaddr_reg:x3; val_offset:132834*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132834*0 + 3*502*FLEN/8, x4, x1, x2)

inst_44279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000000001fff; valaddr_reg:x3; val_offset:132837*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132837*0 + 3*503*FLEN/8, x4, x1, x2)

inst_44280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000000003fff; valaddr_reg:x3; val_offset:132840*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132840*0 + 3*504*FLEN/8, x4, x1, x2)

inst_44281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000000007fff; valaddr_reg:x3; val_offset:132843*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132843*0 + 3*505*FLEN/8, x4, x1, x2)

inst_44282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000000000ffff; valaddr_reg:x3; val_offset:132846*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132846*0 + 3*506*FLEN/8, x4, x1, x2)

inst_44283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000000001ffff; valaddr_reg:x3; val_offset:132849*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132849*0 + 3*507*FLEN/8, x4, x1, x2)

inst_44284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000000003ffff; valaddr_reg:x3; val_offset:132852*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132852*0 + 3*508*FLEN/8, x4, x1, x2)

inst_44285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000000007ffff; valaddr_reg:x3; val_offset:132855*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132855*0 + 3*509*FLEN/8, x4, x1, x2)

inst_44286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200000000fffff; valaddr_reg:x3; val_offset:132858*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132858*0 + 3*510*FLEN/8, x4, x1, x2)

inst_44287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200000001fffff; valaddr_reg:x3; val_offset:132861*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132861*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_44288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200000003fffff; valaddr_reg:x3; val_offset:132864*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132864*0 + 3*512*FLEN/8, x4, x1, x2)

inst_44289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200000007fffff; valaddr_reg:x3; val_offset:132867*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132867*0 + 3*513*FLEN/8, x4, x1, x2)

inst_44290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000000ffffff; valaddr_reg:x3; val_offset:132870*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132870*0 + 3*514*FLEN/8, x4, x1, x2)

inst_44291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000001ffffff; valaddr_reg:x3; val_offset:132873*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132873*0 + 3*515*FLEN/8, x4, x1, x2)

inst_44292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000003ffffff; valaddr_reg:x3; val_offset:132876*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132876*0 + 3*516*FLEN/8, x4, x1, x2)

inst_44293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000007ffffff; valaddr_reg:x3; val_offset:132879*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132879*0 + 3*517*FLEN/8, x4, x1, x2)

inst_44294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000000fffffff; valaddr_reg:x3; val_offset:132882*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132882*0 + 3*518*FLEN/8, x4, x1, x2)

inst_44295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000001fffffff; valaddr_reg:x3; val_offset:132885*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132885*0 + 3*519*FLEN/8, x4, x1, x2)

inst_44296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000003fffffff; valaddr_reg:x3; val_offset:132888*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132888*0 + 3*520*FLEN/8, x4, x1, x2)

inst_44297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000007fffffff; valaddr_reg:x3; val_offset:132891*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132891*0 + 3*521*FLEN/8, x4, x1, x2)

inst_44298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200000ffffffff; valaddr_reg:x3; val_offset:132894*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132894*0 + 3*522*FLEN/8, x4, x1, x2)

inst_44299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200001ffffffff; valaddr_reg:x3; val_offset:132897*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132897*0 + 3*523*FLEN/8, x4, x1, x2)

inst_44300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200003ffffffff; valaddr_reg:x3; val_offset:132900*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132900*0 + 3*524*FLEN/8, x4, x1, x2)

inst_44301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200007ffffffff; valaddr_reg:x3; val_offset:132903*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132903*0 + 3*525*FLEN/8, x4, x1, x2)

inst_44302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320000fffffffff; valaddr_reg:x3; val_offset:132906*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132906*0 + 3*526*FLEN/8, x4, x1, x2)

inst_44303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320001fffffffff; valaddr_reg:x3; val_offset:132909*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132909*0 + 3*527*FLEN/8, x4, x1, x2)

inst_44304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320003fffffffff; valaddr_reg:x3; val_offset:132912*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132912*0 + 3*528*FLEN/8, x4, x1, x2)

inst_44305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320007fffffffff; valaddr_reg:x3; val_offset:132915*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132915*0 + 3*529*FLEN/8, x4, x1, x2)

inst_44306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832000ffffffffff; valaddr_reg:x3; val_offset:132918*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132918*0 + 3*530*FLEN/8, x4, x1, x2)

inst_44307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832001ffffffffff; valaddr_reg:x3; val_offset:132921*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132921*0 + 3*531*FLEN/8, x4, x1, x2)

inst_44308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832003ffffffffff; valaddr_reg:x3; val_offset:132924*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132924*0 + 3*532*FLEN/8, x4, x1, x2)

inst_44309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832007ffffffffff; valaddr_reg:x3; val_offset:132927*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132927*0 + 3*533*FLEN/8, x4, x1, x2)

inst_44310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83200fffffffffff; valaddr_reg:x3; val_offset:132930*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132930*0 + 3*534*FLEN/8, x4, x1, x2)

inst_44311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83201fffffffffff; valaddr_reg:x3; val_offset:132933*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132933*0 + 3*535*FLEN/8, x4, x1, x2)

inst_44312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83203fffffffffff; valaddr_reg:x3; val_offset:132936*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132936*0 + 3*536*FLEN/8, x4, x1, x2)

inst_44313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x83207fffffffffff; valaddr_reg:x3; val_offset:132939*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132939*0 + 3*537*FLEN/8, x4, x1, x2)

inst_44314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8320ffffffffffff; valaddr_reg:x3; val_offset:132942*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132942*0 + 3*538*FLEN/8, x4, x1, x2)

inst_44315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8321ffffffffffff; valaddr_reg:x3; val_offset:132945*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132945*0 + 3*539*FLEN/8, x4, x1, x2)

inst_44316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8323ffffffffffff; valaddr_reg:x3; val_offset:132948*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132948*0 + 3*540*FLEN/8, x4, x1, x2)

inst_44317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8327ffffffffffff; valaddr_reg:x3; val_offset:132951*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132951*0 + 3*541*FLEN/8, x4, x1, x2)

inst_44318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x8328000000000000; valaddr_reg:x3; val_offset:132954*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132954*0 + 3*542*FLEN/8, x4, x1, x2)

inst_44319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832c000000000000; valaddr_reg:x3; val_offset:132957*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132957*0 + 3*543*FLEN/8, x4, x1, x2)

inst_44320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832e000000000000; valaddr_reg:x3; val_offset:132960*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132960*0 + 3*544*FLEN/8, x4, x1, x2)

inst_44321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832f000000000000; valaddr_reg:x3; val_offset:132963*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132963*0 + 3*545*FLEN/8, x4, x1, x2)

inst_44322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832f800000000000; valaddr_reg:x3; val_offset:132966*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132966*0 + 3*546*FLEN/8, x4, x1, x2)

inst_44323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fc00000000000; valaddr_reg:x3; val_offset:132969*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132969*0 + 3*547*FLEN/8, x4, x1, x2)

inst_44324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fe00000000000; valaddr_reg:x3; val_offset:132972*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132972*0 + 3*548*FLEN/8, x4, x1, x2)

inst_44325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ff00000000000; valaddr_reg:x3; val_offset:132975*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132975*0 + 3*549*FLEN/8, x4, x1, x2)

inst_44326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ff80000000000; valaddr_reg:x3; val_offset:132978*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132978*0 + 3*550*FLEN/8, x4, x1, x2)

inst_44327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffc0000000000; valaddr_reg:x3; val_offset:132981*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132981*0 + 3*551*FLEN/8, x4, x1, x2)

inst_44328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffe0000000000; valaddr_reg:x3; val_offset:132984*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132984*0 + 3*552*FLEN/8, x4, x1, x2)

inst_44329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fff0000000000; valaddr_reg:x3; val_offset:132987*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132987*0 + 3*553*FLEN/8, x4, x1, x2)

inst_44330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fff8000000000; valaddr_reg:x3; val_offset:132990*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132990*0 + 3*554*FLEN/8, x4, x1, x2)

inst_44331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffc000000000; valaddr_reg:x3; val_offset:132993*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132993*0 + 3*555*FLEN/8, x4, x1, x2)

inst_44332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffe000000000; valaddr_reg:x3; val_offset:132996*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132996*0 + 3*556*FLEN/8, x4, x1, x2)

inst_44333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffff000000000; valaddr_reg:x3; val_offset:132999*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132999*0 + 3*557*FLEN/8, x4, x1, x2)

inst_44334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffff800000000; valaddr_reg:x3; val_offset:133002*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133002*0 + 3*558*FLEN/8, x4, x1, x2)

inst_44335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffc00000000; valaddr_reg:x3; val_offset:133005*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133005*0 + 3*559*FLEN/8, x4, x1, x2)

inst_44336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffe00000000; valaddr_reg:x3; val_offset:133008*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133008*0 + 3*560*FLEN/8, x4, x1, x2)

inst_44337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffff00000000; valaddr_reg:x3; val_offset:133011*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133011*0 + 3*561*FLEN/8, x4, x1, x2)

inst_44338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffff80000000; valaddr_reg:x3; val_offset:133014*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133014*0 + 3*562*FLEN/8, x4, x1, x2)

inst_44339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffc0000000; valaddr_reg:x3; val_offset:133017*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133017*0 + 3*563*FLEN/8, x4, x1, x2)

inst_44340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffe0000000; valaddr_reg:x3; val_offset:133020*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133020*0 + 3*564*FLEN/8, x4, x1, x2)

inst_44341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffff0000000; valaddr_reg:x3; val_offset:133023*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133023*0 + 3*565*FLEN/8, x4, x1, x2)

inst_44342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffff8000000; valaddr_reg:x3; val_offset:133026*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133026*0 + 3*566*FLEN/8, x4, x1, x2)

inst_44343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffc000000; valaddr_reg:x3; val_offset:133029*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133029*0 + 3*567*FLEN/8, x4, x1, x2)

inst_44344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffe000000; valaddr_reg:x3; val_offset:133032*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133032*0 + 3*568*FLEN/8, x4, x1, x2)

inst_44345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffff000000; valaddr_reg:x3; val_offset:133035*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133035*0 + 3*569*FLEN/8, x4, x1, x2)

inst_44346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffff800000; valaddr_reg:x3; val_offset:133038*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133038*0 + 3*570*FLEN/8, x4, x1, x2)

inst_44347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffffc00000; valaddr_reg:x3; val_offset:133041*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133041*0 + 3*571*FLEN/8, x4, x1, x2)

inst_44348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffffe00000; valaddr_reg:x3; val_offset:133044*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133044*0 + 3*572*FLEN/8, x4, x1, x2)

inst_44349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffff00000; valaddr_reg:x3; val_offset:133047*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133047*0 + 3*573*FLEN/8, x4, x1, x2)

inst_44350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffff80000; valaddr_reg:x3; val_offset:133050*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133050*0 + 3*574*FLEN/8, x4, x1, x2)

inst_44351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffffc0000; valaddr_reg:x3; val_offset:133053*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133053*0 + 3*575*FLEN/8, x4, x1, x2)

inst_44352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffffe0000; valaddr_reg:x3; val_offset:133056*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133056*0 + 3*576*FLEN/8, x4, x1, x2)

inst_44353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffffff0000; valaddr_reg:x3; val_offset:133059*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133059*0 + 3*577*FLEN/8, x4, x1, x2)

inst_44354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffffff8000; valaddr_reg:x3; val_offset:133062*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133062*0 + 3*578*FLEN/8, x4, x1, x2)

inst_44355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffffffc000; valaddr_reg:x3; val_offset:133065*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133065*0 + 3*579*FLEN/8, x4, x1, x2)

inst_44356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffffffe000; valaddr_reg:x3; val_offset:133068*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133068*0 + 3*580*FLEN/8, x4, x1, x2)

inst_44357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffffff000; valaddr_reg:x3; val_offset:133071*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133071*0 + 3*581*FLEN/8, x4, x1, x2)

inst_44358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffffff800; valaddr_reg:x3; val_offset:133074*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133074*0 + 3*582*FLEN/8, x4, x1, x2)

inst_44359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffffffc00; valaddr_reg:x3; val_offset:133077*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133077*0 + 3*583*FLEN/8, x4, x1, x2)

inst_44360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffffffe00; valaddr_reg:x3; val_offset:133080*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133080*0 + 3*584*FLEN/8, x4, x1, x2)

inst_44361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffffffff00; valaddr_reg:x3; val_offset:133083*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133083*0 + 3*585*FLEN/8, x4, x1, x2)

inst_44362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffffffff80; valaddr_reg:x3; val_offset:133086*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133086*0 + 3*586*FLEN/8, x4, x1, x2)

inst_44363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffffffffc0; valaddr_reg:x3; val_offset:133089*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133089*0 + 3*587*FLEN/8, x4, x1, x2)

inst_44364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffffffffe0; valaddr_reg:x3; val_offset:133092*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133092*0 + 3*588*FLEN/8, x4, x1, x2)

inst_44365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffffffff0; valaddr_reg:x3; val_offset:133095*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133095*0 + 3*589*FLEN/8, x4, x1, x2)

inst_44366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffffffff8; valaddr_reg:x3; val_offset:133098*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133098*0 + 3*590*FLEN/8, x4, x1, x2)

inst_44367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffffffffc; valaddr_reg:x3; val_offset:133101*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133101*0 + 3*591*FLEN/8, x4, x1, x2)

inst_44368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832ffffffffffffe; valaddr_reg:x3; val_offset:133104*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133104*0 + 3*592*FLEN/8, x4, x1, x2)

inst_44369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb522c5909775b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b522c5909775b; op2val:0x8000;
op3val:0x832fffffffffffff; valaddr_reg:x3; val_offset:133107*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133107*0 + 3*593*FLEN/8, x4, x1, x2)

inst_44370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000000000000; valaddr_reg:x3; val_offset:133110*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133110*0 + 3*594*FLEN/8, x4, x1, x2)

inst_44371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000000000001; valaddr_reg:x3; val_offset:133113*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133113*0 + 3*595*FLEN/8, x4, x1, x2)

inst_44372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000000000003; valaddr_reg:x3; val_offset:133116*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133116*0 + 3*596*FLEN/8, x4, x1, x2)

inst_44373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000000000007; valaddr_reg:x3; val_offset:133119*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133119*0 + 3*597*FLEN/8, x4, x1, x2)

inst_44374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000000000000f; valaddr_reg:x3; val_offset:133122*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133122*0 + 3*598*FLEN/8, x4, x1, x2)

inst_44375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000000000001f; valaddr_reg:x3; val_offset:133125*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133125*0 + 3*599*FLEN/8, x4, x1, x2)

inst_44376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000000000003f; valaddr_reg:x3; val_offset:133128*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133128*0 + 3*600*FLEN/8, x4, x1, x2)

inst_44377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000000000007f; valaddr_reg:x3; val_offset:133131*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133131*0 + 3*601*FLEN/8, x4, x1, x2)

inst_44378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200000000000ff; valaddr_reg:x3; val_offset:133134*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133134*0 + 3*602*FLEN/8, x4, x1, x2)

inst_44379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200000000001ff; valaddr_reg:x3; val_offset:133137*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133137*0 + 3*603*FLEN/8, x4, x1, x2)

inst_44380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200000000003ff; valaddr_reg:x3; val_offset:133140*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133140*0 + 3*604*FLEN/8, x4, x1, x2)

inst_44381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200000000007ff; valaddr_reg:x3; val_offset:133143*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133143*0 + 3*605*FLEN/8, x4, x1, x2)

inst_44382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000000000fff; valaddr_reg:x3; val_offset:133146*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133146*0 + 3*606*FLEN/8, x4, x1, x2)

inst_44383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000000001fff; valaddr_reg:x3; val_offset:133149*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133149*0 + 3*607*FLEN/8, x4, x1, x2)

inst_44384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000000003fff; valaddr_reg:x3; val_offset:133152*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133152*0 + 3*608*FLEN/8, x4, x1, x2)

inst_44385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000000007fff; valaddr_reg:x3; val_offset:133155*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133155*0 + 3*609*FLEN/8, x4, x1, x2)

inst_44386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000000000ffff; valaddr_reg:x3; val_offset:133158*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133158*0 + 3*610*FLEN/8, x4, x1, x2)

inst_44387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000000001ffff; valaddr_reg:x3; val_offset:133161*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133161*0 + 3*611*FLEN/8, x4, x1, x2)

inst_44388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000000003ffff; valaddr_reg:x3; val_offset:133164*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133164*0 + 3*612*FLEN/8, x4, x1, x2)

inst_44389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000000007ffff; valaddr_reg:x3; val_offset:133167*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133167*0 + 3*613*FLEN/8, x4, x1, x2)

inst_44390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200000000fffff; valaddr_reg:x3; val_offset:133170*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133170*0 + 3*614*FLEN/8, x4, x1, x2)

inst_44391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200000001fffff; valaddr_reg:x3; val_offset:133173*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133173*0 + 3*615*FLEN/8, x4, x1, x2)

inst_44392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200000003fffff; valaddr_reg:x3; val_offset:133176*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133176*0 + 3*616*FLEN/8, x4, x1, x2)

inst_44393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200000007fffff; valaddr_reg:x3; val_offset:133179*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133179*0 + 3*617*FLEN/8, x4, x1, x2)

inst_44394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000000ffffff; valaddr_reg:x3; val_offset:133182*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133182*0 + 3*618*FLEN/8, x4, x1, x2)

inst_44395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000001ffffff; valaddr_reg:x3; val_offset:133185*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133185*0 + 3*619*FLEN/8, x4, x1, x2)

inst_44396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000003ffffff; valaddr_reg:x3; val_offset:133188*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133188*0 + 3*620*FLEN/8, x4, x1, x2)

inst_44397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000007ffffff; valaddr_reg:x3; val_offset:133191*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133191*0 + 3*621*FLEN/8, x4, x1, x2)

inst_44398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000000fffffff; valaddr_reg:x3; val_offset:133194*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133194*0 + 3*622*FLEN/8, x4, x1, x2)

inst_44399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000001fffffff; valaddr_reg:x3; val_offset:133197*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133197*0 + 3*623*FLEN/8, x4, x1, x2)

inst_44400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000003fffffff; valaddr_reg:x3; val_offset:133200*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133200*0 + 3*624*FLEN/8, x4, x1, x2)

inst_44401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000007fffffff; valaddr_reg:x3; val_offset:133203*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133203*0 + 3*625*FLEN/8, x4, x1, x2)

inst_44402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200000ffffffff; valaddr_reg:x3; val_offset:133206*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133206*0 + 3*626*FLEN/8, x4, x1, x2)

inst_44403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200001ffffffff; valaddr_reg:x3; val_offset:133209*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133209*0 + 3*627*FLEN/8, x4, x1, x2)

inst_44404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200003ffffffff; valaddr_reg:x3; val_offset:133212*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133212*0 + 3*628*FLEN/8, x4, x1, x2)

inst_44405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200007ffffffff; valaddr_reg:x3; val_offset:133215*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133215*0 + 3*629*FLEN/8, x4, x1, x2)

inst_44406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20000fffffffff; valaddr_reg:x3; val_offset:133218*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133218*0 + 3*630*FLEN/8, x4, x1, x2)

inst_44407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20001fffffffff; valaddr_reg:x3; val_offset:133221*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133221*0 + 3*631*FLEN/8, x4, x1, x2)

inst_44408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20003fffffffff; valaddr_reg:x3; val_offset:133224*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133224*0 + 3*632*FLEN/8, x4, x1, x2)

inst_44409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20007fffffffff; valaddr_reg:x3; val_offset:133227*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133227*0 + 3*633*FLEN/8, x4, x1, x2)

inst_44410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2000ffffffffff; valaddr_reg:x3; val_offset:133230*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133230*0 + 3*634*FLEN/8, x4, x1, x2)

inst_44411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2001ffffffffff; valaddr_reg:x3; val_offset:133233*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133233*0 + 3*635*FLEN/8, x4, x1, x2)

inst_44412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2003ffffffffff; valaddr_reg:x3; val_offset:133236*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133236*0 + 3*636*FLEN/8, x4, x1, x2)

inst_44413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2007ffffffffff; valaddr_reg:x3; val_offset:133239*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133239*0 + 3*637*FLEN/8, x4, x1, x2)

inst_44414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f200fffffffffff; valaddr_reg:x3; val_offset:133242*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133242*0 + 3*638*FLEN/8, x4, x1, x2)

inst_44415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f201fffffffffff; valaddr_reg:x3; val_offset:133245*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133245*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_44416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f203fffffffffff; valaddr_reg:x3; val_offset:133248*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133248*0 + 3*640*FLEN/8, x4, x1, x2)

inst_44417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f207fffffffffff; valaddr_reg:x3; val_offset:133251*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133251*0 + 3*641*FLEN/8, x4, x1, x2)

inst_44418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f20ffffffffffff; valaddr_reg:x3; val_offset:133254*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133254*0 + 3*642*FLEN/8, x4, x1, x2)

inst_44419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f21ffffffffffff; valaddr_reg:x3; val_offset:133257*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133257*0 + 3*643*FLEN/8, x4, x1, x2)

inst_44420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f23ffffffffffff; valaddr_reg:x3; val_offset:133260*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133260*0 + 3*644*FLEN/8, x4, x1, x2)

inst_44421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f27ffffffffffff; valaddr_reg:x3; val_offset:133263*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133263*0 + 3*645*FLEN/8, x4, x1, x2)

inst_44422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f28000000000000; valaddr_reg:x3; val_offset:133266*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133266*0 + 3*646*FLEN/8, x4, x1, x2)

inst_44423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2c000000000000; valaddr_reg:x3; val_offset:133269*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133269*0 + 3*647*FLEN/8, x4, x1, x2)

inst_44424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2e000000000000; valaddr_reg:x3; val_offset:133272*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133272*0 + 3*648*FLEN/8, x4, x1, x2)

inst_44425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2f000000000000; valaddr_reg:x3; val_offset:133275*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133275*0 + 3*649*FLEN/8, x4, x1, x2)

inst_44426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2f800000000000; valaddr_reg:x3; val_offset:133278*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133278*0 + 3*650*FLEN/8, x4, x1, x2)

inst_44427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fc00000000000; valaddr_reg:x3; val_offset:133281*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133281*0 + 3*651*FLEN/8, x4, x1, x2)

inst_44428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fe00000000000; valaddr_reg:x3; val_offset:133284*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133284*0 + 3*652*FLEN/8, x4, x1, x2)

inst_44429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ff00000000000; valaddr_reg:x3; val_offset:133287*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133287*0 + 3*653*FLEN/8, x4, x1, x2)

inst_44430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ff80000000000; valaddr_reg:x3; val_offset:133290*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133290*0 + 3*654*FLEN/8, x4, x1, x2)

inst_44431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffc0000000000; valaddr_reg:x3; val_offset:133293*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133293*0 + 3*655*FLEN/8, x4, x1, x2)

inst_44432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffe0000000000; valaddr_reg:x3; val_offset:133296*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133296*0 + 3*656*FLEN/8, x4, x1, x2)

inst_44433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fff0000000000; valaddr_reg:x3; val_offset:133299*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133299*0 + 3*657*FLEN/8, x4, x1, x2)

inst_44434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fff8000000000; valaddr_reg:x3; val_offset:133302*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133302*0 + 3*658*FLEN/8, x4, x1, x2)

inst_44435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffc000000000; valaddr_reg:x3; val_offset:133305*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133305*0 + 3*659*FLEN/8, x4, x1, x2)

inst_44436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffe000000000; valaddr_reg:x3; val_offset:133308*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133308*0 + 3*660*FLEN/8, x4, x1, x2)

inst_44437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffff000000000; valaddr_reg:x3; val_offset:133311*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133311*0 + 3*661*FLEN/8, x4, x1, x2)

inst_44438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffff800000000; valaddr_reg:x3; val_offset:133314*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133314*0 + 3*662*FLEN/8, x4, x1, x2)

inst_44439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffc00000000; valaddr_reg:x3; val_offset:133317*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133317*0 + 3*663*FLEN/8, x4, x1, x2)

inst_44440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffe00000000; valaddr_reg:x3; val_offset:133320*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133320*0 + 3*664*FLEN/8, x4, x1, x2)

inst_44441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffff00000000; valaddr_reg:x3; val_offset:133323*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133323*0 + 3*665*FLEN/8, x4, x1, x2)

inst_44442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffff80000000; valaddr_reg:x3; val_offset:133326*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133326*0 + 3*666*FLEN/8, x4, x1, x2)

inst_44443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffc0000000; valaddr_reg:x3; val_offset:133329*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133329*0 + 3*667*FLEN/8, x4, x1, x2)

inst_44444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffe0000000; valaddr_reg:x3; val_offset:133332*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133332*0 + 3*668*FLEN/8, x4, x1, x2)

inst_44445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffff0000000; valaddr_reg:x3; val_offset:133335*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133335*0 + 3*669*FLEN/8, x4, x1, x2)

inst_44446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffff8000000; valaddr_reg:x3; val_offset:133338*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133338*0 + 3*670*FLEN/8, x4, x1, x2)

inst_44447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffc000000; valaddr_reg:x3; val_offset:133341*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133341*0 + 3*671*FLEN/8, x4, x1, x2)

inst_44448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffe000000; valaddr_reg:x3; val_offset:133344*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133344*0 + 3*672*FLEN/8, x4, x1, x2)

inst_44449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffff000000; valaddr_reg:x3; val_offset:133347*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133347*0 + 3*673*FLEN/8, x4, x1, x2)

inst_44450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffff800000; valaddr_reg:x3; val_offset:133350*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133350*0 + 3*674*FLEN/8, x4, x1, x2)

inst_44451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffffc00000; valaddr_reg:x3; val_offset:133353*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133353*0 + 3*675*FLEN/8, x4, x1, x2)

inst_44452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffffe00000; valaddr_reg:x3; val_offset:133356*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133356*0 + 3*676*FLEN/8, x4, x1, x2)

inst_44453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffff00000; valaddr_reg:x3; val_offset:133359*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133359*0 + 3*677*FLEN/8, x4, x1, x2)

inst_44454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffff80000; valaddr_reg:x3; val_offset:133362*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133362*0 + 3*678*FLEN/8, x4, x1, x2)

inst_44455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffffc0000; valaddr_reg:x3; val_offset:133365*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133365*0 + 3*679*FLEN/8, x4, x1, x2)

inst_44456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffffe0000; valaddr_reg:x3; val_offset:133368*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133368*0 + 3*680*FLEN/8, x4, x1, x2)

inst_44457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffffff0000; valaddr_reg:x3; val_offset:133371*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133371*0 + 3*681*FLEN/8, x4, x1, x2)

inst_44458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffffff8000; valaddr_reg:x3; val_offset:133374*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133374*0 + 3*682*FLEN/8, x4, x1, x2)

inst_44459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffffffc000; valaddr_reg:x3; val_offset:133377*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133377*0 + 3*683*FLEN/8, x4, x1, x2)

inst_44460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffffffe000; valaddr_reg:x3; val_offset:133380*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133380*0 + 3*684*FLEN/8, x4, x1, x2)

inst_44461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffffff000; valaddr_reg:x3; val_offset:133383*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133383*0 + 3*685*FLEN/8, x4, x1, x2)

inst_44462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffffff800; valaddr_reg:x3; val_offset:133386*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133386*0 + 3*686*FLEN/8, x4, x1, x2)

inst_44463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffffffc00; valaddr_reg:x3; val_offset:133389*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133389*0 + 3*687*FLEN/8, x4, x1, x2)

inst_44464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffffffe00; valaddr_reg:x3; val_offset:133392*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133392*0 + 3*688*FLEN/8, x4, x1, x2)

inst_44465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffffffff00; valaddr_reg:x3; val_offset:133395*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133395*0 + 3*689*FLEN/8, x4, x1, x2)

inst_44466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffffffff80; valaddr_reg:x3; val_offset:133398*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133398*0 + 3*690*FLEN/8, x4, x1, x2)

inst_44467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffffffffc0; valaddr_reg:x3; val_offset:133401*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133401*0 + 3*691*FLEN/8, x4, x1, x2)

inst_44468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffffffffe0; valaddr_reg:x3; val_offset:133404*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133404*0 + 3*692*FLEN/8, x4, x1, x2)

inst_44469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffffffff0; valaddr_reg:x3; val_offset:133407*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133407*0 + 3*693*FLEN/8, x4, x1, x2)

inst_44470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffffffff8; valaddr_reg:x3; val_offset:133410*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133410*0 + 3*694*FLEN/8, x4, x1, x2)

inst_44471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffffffffc; valaddr_reg:x3; val_offset:133413*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133413*0 + 3*695*FLEN/8, x4, x1, x2)

inst_44472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2ffffffffffffe; valaddr_reg:x3; val_offset:133416*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133416*0 + 3*696*FLEN/8, x4, x1, x2)

inst_44473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3f2fffffffffffff; valaddr_reg:x3; val_offset:133419*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133419*0 + 3*697*FLEN/8, x4, x1, x2)

inst_44474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:133422*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133422*0 + 3*698*FLEN/8, x4, x1, x2)

inst_44475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:133425*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133425*0 + 3*699*FLEN/8, x4, x1, x2)

inst_44476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:133428*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133428*0 + 3*700*FLEN/8, x4, x1, x2)

inst_44477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:133431*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133431*0 + 3*701*FLEN/8, x4, x1, x2)

inst_44478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:133434*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133434*0 + 3*702*FLEN/8, x4, x1, x2)

inst_44479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:133437*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133437*0 + 3*703*FLEN/8, x4, x1, x2)

inst_44480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:133440*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133440*0 + 3*704*FLEN/8, x4, x1, x2)

inst_44481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:133443*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133443*0 + 3*705*FLEN/8, x4, x1, x2)

inst_44482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:133446*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133446*0 + 3*706*FLEN/8, x4, x1, x2)

inst_44483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:133449*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133449*0 + 3*707*FLEN/8, x4, x1, x2)

inst_44484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:133452*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133452*0 + 3*708*FLEN/8, x4, x1, x2)

inst_44485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:133455*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133455*0 + 3*709*FLEN/8, x4, x1, x2)

inst_44486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:133458*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133458*0 + 3*710*FLEN/8, x4, x1, x2)

inst_44487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:133461*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133461*0 + 3*711*FLEN/8, x4, x1, x2)

inst_44488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:133464*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133464*0 + 3*712*FLEN/8, x4, x1, x2)

inst_44489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:133467*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133467*0 + 3*713*FLEN/8, x4, x1, x2)

inst_44490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:133470*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133470*0 + 3*714*FLEN/8, x4, x1, x2)

inst_44491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:133473*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133473*0 + 3*715*FLEN/8, x4, x1, x2)

inst_44492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:133476*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133476*0 + 3*716*FLEN/8, x4, x1, x2)

inst_44493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:133479*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133479*0 + 3*717*FLEN/8, x4, x1, x2)

inst_44494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:133482*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133482*0 + 3*718*FLEN/8, x4, x1, x2)

inst_44495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x2b4eb86d0fd7f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b5eae2d90a071; op2val:0x2042b4eb86d0fd7f;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:133485*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133485*0 + 3*719*FLEN/8, x4, x1, x2)

inst_44496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:133488*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133488*0 + 3*720*FLEN/8, x4, x1, x2)

inst_44497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:133491*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133491*0 + 3*721*FLEN/8, x4, x1, x2)

inst_44498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:133494*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133494*0 + 3*722*FLEN/8, x4, x1, x2)

inst_44499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:133497*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133497*0 + 3*723*FLEN/8, x4, x1, x2)

inst_44500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:133500*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133500*0 + 3*724*FLEN/8, x4, x1, x2)

inst_44501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:133503*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133503*0 + 3*725*FLEN/8, x4, x1, x2)

inst_44502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:133506*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133506*0 + 3*726*FLEN/8, x4, x1, x2)

inst_44503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:133509*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133509*0 + 3*727*FLEN/8, x4, x1, x2)

inst_44504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:133512*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133512*0 + 3*728*FLEN/8, x4, x1, x2)

inst_44505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:133515*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133515*0 + 3*729*FLEN/8, x4, x1, x2)

inst_44506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:133518*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133518*0 + 3*730*FLEN/8, x4, x1, x2)

inst_44507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:133521*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133521*0 + 3*731*FLEN/8, x4, x1, x2)

inst_44508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:133524*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133524*0 + 3*732*FLEN/8, x4, x1, x2)

inst_44509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:133527*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133527*0 + 3*733*FLEN/8, x4, x1, x2)

inst_44510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:133530*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133530*0 + 3*734*FLEN/8, x4, x1, x2)

inst_44511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:133533*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133533*0 + 3*735*FLEN/8, x4, x1, x2)

inst_44512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:133536*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133536*0 + 3*736*FLEN/8, x4, x1, x2)

inst_44513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:133539*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133539*0 + 3*737*FLEN/8, x4, x1, x2)

inst_44514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:133542*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133542*0 + 3*738*FLEN/8, x4, x1, x2)

inst_44515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:133545*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133545*0 + 3*739*FLEN/8, x4, x1, x2)

inst_44516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:133548*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133548*0 + 3*740*FLEN/8, x4, x1, x2)

inst_44517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:133551*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133551*0 + 3*741*FLEN/8, x4, x1, x2)

inst_44518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000000000000; valaddr_reg:x3; val_offset:133554*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133554*0 + 3*742*FLEN/8, x4, x1, x2)

inst_44519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000000000001; valaddr_reg:x3; val_offset:133557*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133557*0 + 3*743*FLEN/8, x4, x1, x2)

inst_44520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000000000003; valaddr_reg:x3; val_offset:133560*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133560*0 + 3*744*FLEN/8, x4, x1, x2)

inst_44521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000000000007; valaddr_reg:x3; val_offset:133563*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133563*0 + 3*745*FLEN/8, x4, x1, x2)

inst_44522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000000000000f; valaddr_reg:x3; val_offset:133566*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133566*0 + 3*746*FLEN/8, x4, x1, x2)

inst_44523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000000000001f; valaddr_reg:x3; val_offset:133569*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133569*0 + 3*747*FLEN/8, x4, x1, x2)

inst_44524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000000000003f; valaddr_reg:x3; val_offset:133572*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133572*0 + 3*748*FLEN/8, x4, x1, x2)

inst_44525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000000000007f; valaddr_reg:x3; val_offset:133575*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133575*0 + 3*749*FLEN/8, x4, x1, x2)

inst_44526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00000000000ff; valaddr_reg:x3; val_offset:133578*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133578*0 + 3*750*FLEN/8, x4, x1, x2)

inst_44527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00000000001ff; valaddr_reg:x3; val_offset:133581*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133581*0 + 3*751*FLEN/8, x4, x1, x2)

inst_44528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00000000003ff; valaddr_reg:x3; val_offset:133584*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133584*0 + 3*752*FLEN/8, x4, x1, x2)

inst_44529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00000000007ff; valaddr_reg:x3; val_offset:133587*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133587*0 + 3*753*FLEN/8, x4, x1, x2)

inst_44530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000000000fff; valaddr_reg:x3; val_offset:133590*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133590*0 + 3*754*FLEN/8, x4, x1, x2)

inst_44531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000000001fff; valaddr_reg:x3; val_offset:133593*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133593*0 + 3*755*FLEN/8, x4, x1, x2)

inst_44532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000000003fff; valaddr_reg:x3; val_offset:133596*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133596*0 + 3*756*FLEN/8, x4, x1, x2)

inst_44533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000000007fff; valaddr_reg:x3; val_offset:133599*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133599*0 + 3*757*FLEN/8, x4, x1, x2)

inst_44534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000000000ffff; valaddr_reg:x3; val_offset:133602*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133602*0 + 3*758*FLEN/8, x4, x1, x2)

inst_44535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000000001ffff; valaddr_reg:x3; val_offset:133605*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133605*0 + 3*759*FLEN/8, x4, x1, x2)

inst_44536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000000003ffff; valaddr_reg:x3; val_offset:133608*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133608*0 + 3*760*FLEN/8, x4, x1, x2)

inst_44537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d000000007ffff; valaddr_reg:x3; val_offset:133611*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133611*0 + 3*761*FLEN/8, x4, x1, x2)

inst_44538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00000000fffff; valaddr_reg:x3; val_offset:133614*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133614*0 + 3*762*FLEN/8, x4, x1, x2)

inst_44539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00000001fffff; valaddr_reg:x3; val_offset:133617*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133617*0 + 3*763*FLEN/8, x4, x1, x2)

inst_44540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00000003fffff; valaddr_reg:x3; val_offset:133620*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133620*0 + 3*764*FLEN/8, x4, x1, x2)

inst_44541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d00000007fffff; valaddr_reg:x3; val_offset:133623*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133623*0 + 3*765*FLEN/8, x4, x1, x2)

inst_44542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000000ffffff; valaddr_reg:x3; val_offset:133626*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133626*0 + 3*766*FLEN/8, x4, x1, x2)

inst_44543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8178fb8c7f25; op2val:0x8000;
op3val:0x80d0000001ffffff; valaddr_reg:x3; val_offset:133629*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133629*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066750532235034623,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066750600954511359,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066750738393464831,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066751013271371775,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066751563027185663,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066752662538813439,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066754861562068991,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066759259608580095,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066768055701602303,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066785647887646719,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066820832259735551,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4066891201003913215,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4067031938492268543,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4067313413468979199,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4067876363422400511,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4069002263329243135,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4069002263329243136,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4070128163236085760,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4070691113189507072,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4070972588166217728,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071113325654573056,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071183694398750720,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071218878770839552,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071236470956883968,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071245267049906176,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071249665096417280,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071251864119672832,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071252963631300608,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071253513387114496,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071253788265021440,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071253925703974912,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071253994423451648,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254028783190016,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254045963059200,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254054552993792,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254058847961088,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254060995444736,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254062069186560,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254062606057472,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254062874492928,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063008710656,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063075819520,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063109373952,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063126151168,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063134539776,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063138734080,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063140831232,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063141879808,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142404096,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142666240,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142797312,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142862848,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142895616,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142912000,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142920192,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142924288,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142926336,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142927360,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142927872,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142928128,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142928256,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142928320,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142928352,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142928368,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142928376,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142928380,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142928382,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4071254063142928383,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889061874298125571,64,FLEN)
NAN_BOXED(2324718358575221884,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146304,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146431,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146559,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146815,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482147327,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482148351,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482150399,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482154495,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482162687,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482179071,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482211839,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482277375,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482408447,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482670591,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636483194879,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636484243455,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636486340607,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636490534911,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636498923519,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636515700735,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636549255167,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636616364031,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636750581759,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875637019017215,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875637555888127,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875638629629951,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875640777113599,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875645072080895,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875653662015487,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875670841884671,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875705201623039,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875773921099775,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875911360053247,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227876186237960191,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227876735993774079,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227877835505401855,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227880034528657407,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227884432575168511,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227893228668190719,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227910820854235135,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227946005226323967,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228016373970501631,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228157111458856959,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228438586435567615,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229001536388988927,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230127436295831551,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230127436295831552,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231253336202674176,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231816286156095488,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232097761132806144,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232238498621161472,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232308867365339136,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232344051737427968,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232361643923472384,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232370440016494592,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232374838063005696,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232377037086261248,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232378136597889024,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232378686353702912,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232378961231609856,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379098670563328,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379167390040064,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379201749778432,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379218929647616,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379227519582208,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379231814549504,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379233962033152,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235035774976,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235572645888,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235841081344,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235975299072,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236042407936,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236075962368,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236092739584,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236101128192,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236105322496,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236107419648,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236108468224,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236108992512,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109254656,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109385728,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109451264,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109484032,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109500416,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109508608,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109512704,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109514752,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109515776,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516288,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516544,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516672,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889073439666216879,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516799,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967360,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967361,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967363,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967367,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967375,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967391,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967423,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967487,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967615,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967871,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957968383,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957969407,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957971455,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957975551,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957983743,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958000127,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958032895,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958098431,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958229503,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958491647,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986959015935,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986960064511,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986962161663,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986966355967,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986974744575,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986991521791,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987025076223,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987092185087,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987226402815,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625987494838271,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625988031709183,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625989105451007,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625991252934655,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625995547901951,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626004137836543,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626021317705727,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626055677444095,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626124396920831,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626261835874303,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157626536713781247,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157627086469595135,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157628185981222911,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157630385004478463,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157634783050989567,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157643579144011775,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157661171330056191,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157696355702145023,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157766724446322687,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157907461934678015,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(158188936911388671,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(158751886864809983,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(159877786771652607,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(159877786771652608,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161003686678495232,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161566636631916544,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161848111608627200,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(161988849096982528,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162059217841160192,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162094402213249024,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162111994399293440,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162120790492315648,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162125188538826752,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162127387562082304,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162128487073710080,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129036829523968,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129311707430912,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129449146384384,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129517865861120,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129552225599488,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129569405468672,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129577995403264,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129582290370560,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129584437854208,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129585511596032,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586048466944,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586316902400,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586451120128,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586518228992,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586551783424,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586568560640,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586576949248,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586581143552,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586583240704,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584289280,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586584813568,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585075712,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585206784,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585272320,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585305088,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585321472,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585329664,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585333760,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585335808,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585336832,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337344,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337600,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337728,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337792,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337824,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337840,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337848,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337852,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337854,64,FLEN)
NAN_BOXED(6889078407512976675,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337855,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690338304,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690338305,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690338307,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690338311,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690338319,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690338335,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690338367,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690338431,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690338559,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690338815,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690339327,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690340351,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690342399,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690346495,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690354687,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690371071,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690403839,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690469375,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690600447,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055690862591,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055691386879,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055692435455,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055694532607,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055698726911,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055707115519,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055723892735,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055757447167,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055824556031,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326055958773759,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326056227209215,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326056764080127,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326057837821951,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326059985305599,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326064280272895,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326072870207487,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326090050076671,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326124409815039,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326193129291775,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326330568245247,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161326605446152191,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161327155201966079,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161328254713593855,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161330453736849407,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161334851783360511,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161343647876382719,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161361240062427135,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161396424434515967,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161466793178693631,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161607530667048959,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4161889005643759615,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4162451955597180927,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4163577855504023551,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4163577855504023552,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4164703755410866176,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165266705364287488,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165548180340998144,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165688917829353472,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165759286573531136,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165794470945619968,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165812063131664384,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165820859224686592,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165825257271197696,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165827456294453248,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165828555806081024,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829105561894912,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829380439801856,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829517878755328,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829586598232064,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829620957970432,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829638137839616,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829646727774208,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829651022741504,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829653170225152,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829654243966976,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829654780837888,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655049273344,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655183491072,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655250599936,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655284154368,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655300931584,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655309320192,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655313514496,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655315611648,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655316660224,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317184512,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317446656,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317577728,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317643264,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317676032,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317692416,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317700608,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317704704,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317706752,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317707776,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317708288,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317708544,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317708672,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317708736,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317708768,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317708784,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317708792,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317708796,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317708798,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4165829655317708799,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889120626045016711,64,FLEN)
NAN_BOXED(2324676998948265476,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300608,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300609,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300611,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300615,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300623,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300639,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300671,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300735,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300863,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223301119,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223301631,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223302655,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223304703,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223308799,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223316991,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223333375,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223366143,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223431679,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223562751,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223824895,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018224349183,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018225397759,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018227494911,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018231689215,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018240077823,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018256855039,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018290409471,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018357518335,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018491736063,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018760171519,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552019297042431,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552020370784255,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552022518267903,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552026813235199,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552035403169791,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552052583038975,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552086942777343,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552155662254079,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552293101207551,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552567979114495,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448553117734928383,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448554217246556159,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448556416269811711,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448560814316322815,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448569610409345023,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448587202595389439,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448622386967478271,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448692755711655935,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448833493200011263,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9449114968176721919,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9449677918130143231,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9450803818036985855,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9450803818036985856,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9451929717943828480,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452492667897249792,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452774142873960448,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452914880362315776,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452985249106493440,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453020433478582272,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453038025664626688,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453046821757648896,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453051219804160000,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453053418827415552,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453054518339043328,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055068094857216,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055342972764160,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055480411717632,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055549131194368,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055583490932736,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055600670801920,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055609260736512,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055613555703808,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055615703187456,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055616776929280,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617313800192,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617582235648,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617716453376,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617783562240,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617817116672,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617833893888,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617842282496,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617846476800,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617848573952,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617849622528,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850146816,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850408960,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850540032,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850605568,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850638336,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850654720,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850662912,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850667008,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850669056,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670080,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670592,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670848,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670976,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671040,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671072,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671088,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671096,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671100,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671102,64,FLEN)
NAN_BOXED(6889190405419136859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671103,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644200960,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644200961,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644200963,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644200967,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644200975,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644200991,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644201023,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644201087,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644201215,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644201471,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644201983,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644203007,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644205055,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644209151,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644217343,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644233727,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644266495,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644332031,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644463103,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623644725247,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623645249535,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623646298111,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623648395263,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623652589567,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623660978175,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623677755391,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623711309823,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623778418687,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635623912636415,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635624181071871,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635624717942783,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635625791684607,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635627939168255,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635632234135551,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635640824070143,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635658003939327,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635692363677695,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635761083154431,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548635898522107903,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548636173400014847,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548636723155828735,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548637822667456511,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548640021690712063,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548644419737223167,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548653215830245375,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548670808016289791,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548705992388378623,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548776361132556287,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4548917098620911615,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4549198573597622271,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4549761523551043583,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4550887423457886207,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4550887423457886208,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4552013323364728832,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4552576273318150144,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4552857748294860800,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4552998485783216128,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553068854527393792,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553104038899482624,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553121631085527040,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553130427178549248,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553134825225060352,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553137024248315904,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553138123759943680,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553138673515757568,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553138948393664512,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139085832617984,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139154552094720,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139188911833088,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139206091702272,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139214681636864,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139218976604160,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139221124087808,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139222197829632,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139222734700544,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223003136000,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223137353728,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223204462592,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223238017024,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223254794240,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223263182848,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223267377152,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223269474304,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223270522880,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271047168,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271309312,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271440384,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271505920,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271538688,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271555072,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271563264,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271567360,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271569408,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271570432,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271570944,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271571200,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271571328,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271571392,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271571424,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271571440,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271571448,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271571452,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271571454,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4553139223271571455,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889204157175079025,64,FLEN)
NAN_BOXED(2324619281348754815,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592256,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592257,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592259,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592263,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592271,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592287,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592319,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592383,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592511,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592767,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010593279,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010594303,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010596351,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010600447,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010608639,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010625023,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010657791,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010723327,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010854399,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011116543,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011640831,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832012689407,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832014786559,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832018980863,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832027369471,64,FLEN)
NAN_BOXED(6889242411609653029,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832044146687,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
