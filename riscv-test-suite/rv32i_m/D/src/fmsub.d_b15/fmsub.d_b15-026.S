
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_19200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x103ffffffffffff; valaddr_reg:x3; val_offset:57600*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57600*0 + 3*0*FLEN/8, x4, x1, x2)

inst_19201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x107ffffffffffff; valaddr_reg:x3; val_offset:57603*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57603*0 + 3*1*FLEN/8, x4, x1, x2)

inst_19202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x108000000000000; valaddr_reg:x3; val_offset:57606*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57606*0 + 3*2*FLEN/8, x4, x1, x2)

inst_19203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10c000000000000; valaddr_reg:x3; val_offset:57609*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57609*0 + 3*3*FLEN/8, x4, x1, x2)

inst_19204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10e000000000000; valaddr_reg:x3; val_offset:57612*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57612*0 + 3*4*FLEN/8, x4, x1, x2)

inst_19205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10f000000000000; valaddr_reg:x3; val_offset:57615*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57615*0 + 3*5*FLEN/8, x4, x1, x2)

inst_19206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10f800000000000; valaddr_reg:x3; val_offset:57618*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57618*0 + 3*6*FLEN/8, x4, x1, x2)

inst_19207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fc00000000000; valaddr_reg:x3; val_offset:57621*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57621*0 + 3*7*FLEN/8, x4, x1, x2)

inst_19208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fe00000000000; valaddr_reg:x3; val_offset:57624*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57624*0 + 3*8*FLEN/8, x4, x1, x2)

inst_19209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ff00000000000; valaddr_reg:x3; val_offset:57627*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57627*0 + 3*9*FLEN/8, x4, x1, x2)

inst_19210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ff80000000000; valaddr_reg:x3; val_offset:57630*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57630*0 + 3*10*FLEN/8, x4, x1, x2)

inst_19211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffc0000000000; valaddr_reg:x3; val_offset:57633*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57633*0 + 3*11*FLEN/8, x4, x1, x2)

inst_19212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffe0000000000; valaddr_reg:x3; val_offset:57636*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57636*0 + 3*12*FLEN/8, x4, x1, x2)

inst_19213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fff0000000000; valaddr_reg:x3; val_offset:57639*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57639*0 + 3*13*FLEN/8, x4, x1, x2)

inst_19214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fff8000000000; valaddr_reg:x3; val_offset:57642*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57642*0 + 3*14*FLEN/8, x4, x1, x2)

inst_19215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffc000000000; valaddr_reg:x3; val_offset:57645*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57645*0 + 3*15*FLEN/8, x4, x1, x2)

inst_19216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffe000000000; valaddr_reg:x3; val_offset:57648*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57648*0 + 3*16*FLEN/8, x4, x1, x2)

inst_19217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffff000000000; valaddr_reg:x3; val_offset:57651*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57651*0 + 3*17*FLEN/8, x4, x1, x2)

inst_19218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffff800000000; valaddr_reg:x3; val_offset:57654*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57654*0 + 3*18*FLEN/8, x4, x1, x2)

inst_19219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffc00000000; valaddr_reg:x3; val_offset:57657*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57657*0 + 3*19*FLEN/8, x4, x1, x2)

inst_19220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffe00000000; valaddr_reg:x3; val_offset:57660*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57660*0 + 3*20*FLEN/8, x4, x1, x2)

inst_19221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffff00000000; valaddr_reg:x3; val_offset:57663*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57663*0 + 3*21*FLEN/8, x4, x1, x2)

inst_19222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffff80000000; valaddr_reg:x3; val_offset:57666*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57666*0 + 3*22*FLEN/8, x4, x1, x2)

inst_19223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffc0000000; valaddr_reg:x3; val_offset:57669*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57669*0 + 3*23*FLEN/8, x4, x1, x2)

inst_19224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffe0000000; valaddr_reg:x3; val_offset:57672*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57672*0 + 3*24*FLEN/8, x4, x1, x2)

inst_19225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffff0000000; valaddr_reg:x3; val_offset:57675*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57675*0 + 3*25*FLEN/8, x4, x1, x2)

inst_19226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffff8000000; valaddr_reg:x3; val_offset:57678*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57678*0 + 3*26*FLEN/8, x4, x1, x2)

inst_19227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffc000000; valaddr_reg:x3; val_offset:57681*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57681*0 + 3*27*FLEN/8, x4, x1, x2)

inst_19228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffe000000; valaddr_reg:x3; val_offset:57684*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57684*0 + 3*28*FLEN/8, x4, x1, x2)

inst_19229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffff000000; valaddr_reg:x3; val_offset:57687*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57687*0 + 3*29*FLEN/8, x4, x1, x2)

inst_19230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffff800000; valaddr_reg:x3; val_offset:57690*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57690*0 + 3*30*FLEN/8, x4, x1, x2)

inst_19231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffffc00000; valaddr_reg:x3; val_offset:57693*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57693*0 + 3*31*FLEN/8, x4, x1, x2)

inst_19232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffffe00000; valaddr_reg:x3; val_offset:57696*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57696*0 + 3*32*FLEN/8, x4, x1, x2)

inst_19233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffff00000; valaddr_reg:x3; val_offset:57699*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57699*0 + 3*33*FLEN/8, x4, x1, x2)

inst_19234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffff80000; valaddr_reg:x3; val_offset:57702*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57702*0 + 3*34*FLEN/8, x4, x1, x2)

inst_19235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffffc0000; valaddr_reg:x3; val_offset:57705*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57705*0 + 3*35*FLEN/8, x4, x1, x2)

inst_19236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffffe0000; valaddr_reg:x3; val_offset:57708*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57708*0 + 3*36*FLEN/8, x4, x1, x2)

inst_19237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffffff0000; valaddr_reg:x3; val_offset:57711*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57711*0 + 3*37*FLEN/8, x4, x1, x2)

inst_19238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffffff8000; valaddr_reg:x3; val_offset:57714*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57714*0 + 3*38*FLEN/8, x4, x1, x2)

inst_19239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffffffc000; valaddr_reg:x3; val_offset:57717*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57717*0 + 3*39*FLEN/8, x4, x1, x2)

inst_19240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffffffe000; valaddr_reg:x3; val_offset:57720*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57720*0 + 3*40*FLEN/8, x4, x1, x2)

inst_19241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffffff000; valaddr_reg:x3; val_offset:57723*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57723*0 + 3*41*FLEN/8, x4, x1, x2)

inst_19242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffffff800; valaddr_reg:x3; val_offset:57726*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57726*0 + 3*42*FLEN/8, x4, x1, x2)

inst_19243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffffffc00; valaddr_reg:x3; val_offset:57729*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57729*0 + 3*43*FLEN/8, x4, x1, x2)

inst_19244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffffffe00; valaddr_reg:x3; val_offset:57732*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57732*0 + 3*44*FLEN/8, x4, x1, x2)

inst_19245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffffffff00; valaddr_reg:x3; val_offset:57735*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57735*0 + 3*45*FLEN/8, x4, x1, x2)

inst_19246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffffffff80; valaddr_reg:x3; val_offset:57738*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57738*0 + 3*46*FLEN/8, x4, x1, x2)

inst_19247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffffffffc0; valaddr_reg:x3; val_offset:57741*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57741*0 + 3*47*FLEN/8, x4, x1, x2)

inst_19248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffffffffe0; valaddr_reg:x3; val_offset:57744*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57744*0 + 3*48*FLEN/8, x4, x1, x2)

inst_19249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffffffff0; valaddr_reg:x3; val_offset:57747*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57747*0 + 3*49*FLEN/8, x4, x1, x2)

inst_19250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffffffff8; valaddr_reg:x3; val_offset:57750*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57750*0 + 3*50*FLEN/8, x4, x1, x2)

inst_19251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffffffffc; valaddr_reg:x3; val_offset:57753*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57753*0 + 3*51*FLEN/8, x4, x1, x2)

inst_19252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10ffffffffffffe; valaddr_reg:x3; val_offset:57756*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57756*0 + 3*52*FLEN/8, x4, x1, x2)

inst_19253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7b909c5b293b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x010 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87b909c5b293b7; op2val:0x0;
op3val:0x10fffffffffffff; valaddr_reg:x3; val_offset:57759*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57759*0 + 3*53*FLEN/8, x4, x1, x2)

inst_19254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000000000000; valaddr_reg:x3; val_offset:57762*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57762*0 + 3*54*FLEN/8, x4, x1, x2)

inst_19255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000000000001; valaddr_reg:x3; val_offset:57765*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57765*0 + 3*55*FLEN/8, x4, x1, x2)

inst_19256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000000000003; valaddr_reg:x3; val_offset:57768*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57768*0 + 3*56*FLEN/8, x4, x1, x2)

inst_19257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000000000007; valaddr_reg:x3; val_offset:57771*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57771*0 + 3*57*FLEN/8, x4, x1, x2)

inst_19258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000000000000f; valaddr_reg:x3; val_offset:57774*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57774*0 + 3*58*FLEN/8, x4, x1, x2)

inst_19259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000000000001f; valaddr_reg:x3; val_offset:57777*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57777*0 + 3*59*FLEN/8, x4, x1, x2)

inst_19260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000000000003f; valaddr_reg:x3; val_offset:57780*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57780*0 + 3*60*FLEN/8, x4, x1, x2)

inst_19261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000000000007f; valaddr_reg:x3; val_offset:57783*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57783*0 + 3*61*FLEN/8, x4, x1, x2)

inst_19262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400000000000ff; valaddr_reg:x3; val_offset:57786*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57786*0 + 3*62*FLEN/8, x4, x1, x2)

inst_19263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400000000001ff; valaddr_reg:x3; val_offset:57789*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57789*0 + 3*63*FLEN/8, x4, x1, x2)

inst_19264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400000000003ff; valaddr_reg:x3; val_offset:57792*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57792*0 + 3*64*FLEN/8, x4, x1, x2)

inst_19265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400000000007ff; valaddr_reg:x3; val_offset:57795*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57795*0 + 3*65*FLEN/8, x4, x1, x2)

inst_19266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000000000fff; valaddr_reg:x3; val_offset:57798*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57798*0 + 3*66*FLEN/8, x4, x1, x2)

inst_19267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000000001fff; valaddr_reg:x3; val_offset:57801*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57801*0 + 3*67*FLEN/8, x4, x1, x2)

inst_19268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000000003fff; valaddr_reg:x3; val_offset:57804*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57804*0 + 3*68*FLEN/8, x4, x1, x2)

inst_19269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000000007fff; valaddr_reg:x3; val_offset:57807*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57807*0 + 3*69*FLEN/8, x4, x1, x2)

inst_19270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000000000ffff; valaddr_reg:x3; val_offset:57810*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57810*0 + 3*70*FLEN/8, x4, x1, x2)

inst_19271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000000001ffff; valaddr_reg:x3; val_offset:57813*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57813*0 + 3*71*FLEN/8, x4, x1, x2)

inst_19272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000000003ffff; valaddr_reg:x3; val_offset:57816*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57816*0 + 3*72*FLEN/8, x4, x1, x2)

inst_19273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000000007ffff; valaddr_reg:x3; val_offset:57819*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57819*0 + 3*73*FLEN/8, x4, x1, x2)

inst_19274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400000000fffff; valaddr_reg:x3; val_offset:57822*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57822*0 + 3*74*FLEN/8, x4, x1, x2)

inst_19275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400000001fffff; valaddr_reg:x3; val_offset:57825*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57825*0 + 3*75*FLEN/8, x4, x1, x2)

inst_19276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400000003fffff; valaddr_reg:x3; val_offset:57828*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57828*0 + 3*76*FLEN/8, x4, x1, x2)

inst_19277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400000007fffff; valaddr_reg:x3; val_offset:57831*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57831*0 + 3*77*FLEN/8, x4, x1, x2)

inst_19278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000000ffffff; valaddr_reg:x3; val_offset:57834*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57834*0 + 3*78*FLEN/8, x4, x1, x2)

inst_19279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000001ffffff; valaddr_reg:x3; val_offset:57837*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57837*0 + 3*79*FLEN/8, x4, x1, x2)

inst_19280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000003ffffff; valaddr_reg:x3; val_offset:57840*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57840*0 + 3*80*FLEN/8, x4, x1, x2)

inst_19281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000007ffffff; valaddr_reg:x3; val_offset:57843*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57843*0 + 3*81*FLEN/8, x4, x1, x2)

inst_19282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000000fffffff; valaddr_reg:x3; val_offset:57846*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57846*0 + 3*82*FLEN/8, x4, x1, x2)

inst_19283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000001fffffff; valaddr_reg:x3; val_offset:57849*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57849*0 + 3*83*FLEN/8, x4, x1, x2)

inst_19284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000003fffffff; valaddr_reg:x3; val_offset:57852*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57852*0 + 3*84*FLEN/8, x4, x1, x2)

inst_19285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000007fffffff; valaddr_reg:x3; val_offset:57855*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57855*0 + 3*85*FLEN/8, x4, x1, x2)

inst_19286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400000ffffffff; valaddr_reg:x3; val_offset:57858*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57858*0 + 3*86*FLEN/8, x4, x1, x2)

inst_19287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400001ffffffff; valaddr_reg:x3; val_offset:57861*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57861*0 + 3*87*FLEN/8, x4, x1, x2)

inst_19288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400003ffffffff; valaddr_reg:x3; val_offset:57864*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57864*0 + 3*88*FLEN/8, x4, x1, x2)

inst_19289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400007ffffffff; valaddr_reg:x3; val_offset:57867*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57867*0 + 3*89*FLEN/8, x4, x1, x2)

inst_19290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40000fffffffff; valaddr_reg:x3; val_offset:57870*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57870*0 + 3*90*FLEN/8, x4, x1, x2)

inst_19291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40001fffffffff; valaddr_reg:x3; val_offset:57873*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57873*0 + 3*91*FLEN/8, x4, x1, x2)

inst_19292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40003fffffffff; valaddr_reg:x3; val_offset:57876*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57876*0 + 3*92*FLEN/8, x4, x1, x2)

inst_19293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40007fffffffff; valaddr_reg:x3; val_offset:57879*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57879*0 + 3*93*FLEN/8, x4, x1, x2)

inst_19294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4000ffffffffff; valaddr_reg:x3; val_offset:57882*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57882*0 + 3*94*FLEN/8, x4, x1, x2)

inst_19295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4001ffffffffff; valaddr_reg:x3; val_offset:57885*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57885*0 + 3*95*FLEN/8, x4, x1, x2)

inst_19296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4003ffffffffff; valaddr_reg:x3; val_offset:57888*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57888*0 + 3*96*FLEN/8, x4, x1, x2)

inst_19297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4007ffffffffff; valaddr_reg:x3; val_offset:57891*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57891*0 + 3*97*FLEN/8, x4, x1, x2)

inst_19298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a400fffffffffff; valaddr_reg:x3; val_offset:57894*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57894*0 + 3*98*FLEN/8, x4, x1, x2)

inst_19299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a401fffffffffff; valaddr_reg:x3; val_offset:57897*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57897*0 + 3*99*FLEN/8, x4, x1, x2)

inst_19300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a403fffffffffff; valaddr_reg:x3; val_offset:57900*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57900*0 + 3*100*FLEN/8, x4, x1, x2)

inst_19301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a407fffffffffff; valaddr_reg:x3; val_offset:57903*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57903*0 + 3*101*FLEN/8, x4, x1, x2)

inst_19302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a40ffffffffffff; valaddr_reg:x3; val_offset:57906*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57906*0 + 3*102*FLEN/8, x4, x1, x2)

inst_19303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a41ffffffffffff; valaddr_reg:x3; val_offset:57909*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57909*0 + 3*103*FLEN/8, x4, x1, x2)

inst_19304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a43ffffffffffff; valaddr_reg:x3; val_offset:57912*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57912*0 + 3*104*FLEN/8, x4, x1, x2)

inst_19305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a47ffffffffffff; valaddr_reg:x3; val_offset:57915*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57915*0 + 3*105*FLEN/8, x4, x1, x2)

inst_19306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a48000000000000; valaddr_reg:x3; val_offset:57918*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57918*0 + 3*106*FLEN/8, x4, x1, x2)

inst_19307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4c000000000000; valaddr_reg:x3; val_offset:57921*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57921*0 + 3*107*FLEN/8, x4, x1, x2)

inst_19308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4e000000000000; valaddr_reg:x3; val_offset:57924*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57924*0 + 3*108*FLEN/8, x4, x1, x2)

inst_19309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4f000000000000; valaddr_reg:x3; val_offset:57927*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57927*0 + 3*109*FLEN/8, x4, x1, x2)

inst_19310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4f800000000000; valaddr_reg:x3; val_offset:57930*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57930*0 + 3*110*FLEN/8, x4, x1, x2)

inst_19311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fc00000000000; valaddr_reg:x3; val_offset:57933*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57933*0 + 3*111*FLEN/8, x4, x1, x2)

inst_19312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fe00000000000; valaddr_reg:x3; val_offset:57936*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57936*0 + 3*112*FLEN/8, x4, x1, x2)

inst_19313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ff00000000000; valaddr_reg:x3; val_offset:57939*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57939*0 + 3*113*FLEN/8, x4, x1, x2)

inst_19314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ff80000000000; valaddr_reg:x3; val_offset:57942*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57942*0 + 3*114*FLEN/8, x4, x1, x2)

inst_19315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffc0000000000; valaddr_reg:x3; val_offset:57945*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57945*0 + 3*115*FLEN/8, x4, x1, x2)

inst_19316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffe0000000000; valaddr_reg:x3; val_offset:57948*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57948*0 + 3*116*FLEN/8, x4, x1, x2)

inst_19317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fff0000000000; valaddr_reg:x3; val_offset:57951*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57951*0 + 3*117*FLEN/8, x4, x1, x2)

inst_19318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fff8000000000; valaddr_reg:x3; val_offset:57954*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57954*0 + 3*118*FLEN/8, x4, x1, x2)

inst_19319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffc000000000; valaddr_reg:x3; val_offset:57957*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57957*0 + 3*119*FLEN/8, x4, x1, x2)

inst_19320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffe000000000; valaddr_reg:x3; val_offset:57960*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57960*0 + 3*120*FLEN/8, x4, x1, x2)

inst_19321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffff000000000; valaddr_reg:x3; val_offset:57963*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57963*0 + 3*121*FLEN/8, x4, x1, x2)

inst_19322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffff800000000; valaddr_reg:x3; val_offset:57966*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57966*0 + 3*122*FLEN/8, x4, x1, x2)

inst_19323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffc00000000; valaddr_reg:x3; val_offset:57969*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57969*0 + 3*123*FLEN/8, x4, x1, x2)

inst_19324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffe00000000; valaddr_reg:x3; val_offset:57972*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57972*0 + 3*124*FLEN/8, x4, x1, x2)

inst_19325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffff00000000; valaddr_reg:x3; val_offset:57975*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57975*0 + 3*125*FLEN/8, x4, x1, x2)

inst_19326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffff80000000; valaddr_reg:x3; val_offset:57978*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57978*0 + 3*126*FLEN/8, x4, x1, x2)

inst_19327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffc0000000; valaddr_reg:x3; val_offset:57981*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57981*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_19328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffe0000000; valaddr_reg:x3; val_offset:57984*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57984*0 + 3*128*FLEN/8, x4, x1, x2)

inst_19329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffff0000000; valaddr_reg:x3; val_offset:57987*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57987*0 + 3*129*FLEN/8, x4, x1, x2)

inst_19330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffff8000000; valaddr_reg:x3; val_offset:57990*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57990*0 + 3*130*FLEN/8, x4, x1, x2)

inst_19331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffc000000; valaddr_reg:x3; val_offset:57993*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57993*0 + 3*131*FLEN/8, x4, x1, x2)

inst_19332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffe000000; valaddr_reg:x3; val_offset:57996*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57996*0 + 3*132*FLEN/8, x4, x1, x2)

inst_19333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffff000000; valaddr_reg:x3; val_offset:57999*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57999*0 + 3*133*FLEN/8, x4, x1, x2)

inst_19334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffff800000; valaddr_reg:x3; val_offset:58002*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58002*0 + 3*134*FLEN/8, x4, x1, x2)

inst_19335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffffc00000; valaddr_reg:x3; val_offset:58005*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58005*0 + 3*135*FLEN/8, x4, x1, x2)

inst_19336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffffe00000; valaddr_reg:x3; val_offset:58008*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58008*0 + 3*136*FLEN/8, x4, x1, x2)

inst_19337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffff00000; valaddr_reg:x3; val_offset:58011*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58011*0 + 3*137*FLEN/8, x4, x1, x2)

inst_19338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffff80000; valaddr_reg:x3; val_offset:58014*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58014*0 + 3*138*FLEN/8, x4, x1, x2)

inst_19339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffffc0000; valaddr_reg:x3; val_offset:58017*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58017*0 + 3*139*FLEN/8, x4, x1, x2)

inst_19340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffffe0000; valaddr_reg:x3; val_offset:58020*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58020*0 + 3*140*FLEN/8, x4, x1, x2)

inst_19341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffffff0000; valaddr_reg:x3; val_offset:58023*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58023*0 + 3*141*FLEN/8, x4, x1, x2)

inst_19342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffffff8000; valaddr_reg:x3; val_offset:58026*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58026*0 + 3*142*FLEN/8, x4, x1, x2)

inst_19343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffffffc000; valaddr_reg:x3; val_offset:58029*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58029*0 + 3*143*FLEN/8, x4, x1, x2)

inst_19344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffffffe000; valaddr_reg:x3; val_offset:58032*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58032*0 + 3*144*FLEN/8, x4, x1, x2)

inst_19345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffffff000; valaddr_reg:x3; val_offset:58035*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58035*0 + 3*145*FLEN/8, x4, x1, x2)

inst_19346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffffff800; valaddr_reg:x3; val_offset:58038*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58038*0 + 3*146*FLEN/8, x4, x1, x2)

inst_19347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffffffc00; valaddr_reg:x3; val_offset:58041*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58041*0 + 3*147*FLEN/8, x4, x1, x2)

inst_19348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffffffe00; valaddr_reg:x3; val_offset:58044*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58044*0 + 3*148*FLEN/8, x4, x1, x2)

inst_19349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffffffff00; valaddr_reg:x3; val_offset:58047*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58047*0 + 3*149*FLEN/8, x4, x1, x2)

inst_19350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffffffff80; valaddr_reg:x3; val_offset:58050*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58050*0 + 3*150*FLEN/8, x4, x1, x2)

inst_19351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffffffffc0; valaddr_reg:x3; val_offset:58053*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58053*0 + 3*151*FLEN/8, x4, x1, x2)

inst_19352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffffffffe0; valaddr_reg:x3; val_offset:58056*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58056*0 + 3*152*FLEN/8, x4, x1, x2)

inst_19353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffffffff0; valaddr_reg:x3; val_offset:58059*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58059*0 + 3*153*FLEN/8, x4, x1, x2)

inst_19354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffffffff8; valaddr_reg:x3; val_offset:58062*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58062*0 + 3*154*FLEN/8, x4, x1, x2)

inst_19355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffffffffc; valaddr_reg:x3; val_offset:58065*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58065*0 + 3*155*FLEN/8, x4, x1, x2)

inst_19356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4ffffffffffffe; valaddr_reg:x3; val_offset:58068*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58068*0 + 3*156*FLEN/8, x4, x1, x2)

inst_19357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x5a4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x5a4fffffffffffff; valaddr_reg:x3; val_offset:58071*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58071*0 + 3*157*FLEN/8, x4, x1, x2)

inst_19358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe0000000000001; valaddr_reg:x3; val_offset:58074*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58074*0 + 3*158*FLEN/8, x4, x1, x2)

inst_19359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe0000000000003; valaddr_reg:x3; val_offset:58077*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58077*0 + 3*159*FLEN/8, x4, x1, x2)

inst_19360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe0000000000007; valaddr_reg:x3; val_offset:58080*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58080*0 + 3*160*FLEN/8, x4, x1, x2)

inst_19361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe000000000000f; valaddr_reg:x3; val_offset:58083*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58083*0 + 3*161*FLEN/8, x4, x1, x2)

inst_19362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe000000000001f; valaddr_reg:x3; val_offset:58086*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58086*0 + 3*162*FLEN/8, x4, x1, x2)

inst_19363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe000000000003f; valaddr_reg:x3; val_offset:58089*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58089*0 + 3*163*FLEN/8, x4, x1, x2)

inst_19364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe3333333333333; valaddr_reg:x3; val_offset:58092*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58092*0 + 3*164*FLEN/8, x4, x1, x2)

inst_19365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe4924924924924; valaddr_reg:x3; val_offset:58095*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58095*0 + 3*165*FLEN/8, x4, x1, x2)

inst_19366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe6666666666666; valaddr_reg:x3; val_offset:58098*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58098*0 + 3*166*FLEN/8, x4, x1, x2)

inst_19367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe6db6db6db6db6; valaddr_reg:x3; val_offset:58101*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58101*0 + 3*167*FLEN/8, x4, x1, x2)

inst_19368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe7777777777777; valaddr_reg:x3; val_offset:58104*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58104*0 + 3*168*FLEN/8, x4, x1, x2)

inst_19369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe8888888888888; valaddr_reg:x3; val_offset:58107*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58107*0 + 3*169*FLEN/8, x4, x1, x2)

inst_19370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fe9999999999999; valaddr_reg:x3; val_offset:58110*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58110*0 + 3*170*FLEN/8, x4, x1, x2)

inst_19371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7feb6db6db6db6db; valaddr_reg:x3; val_offset:58113*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58113*0 + 3*171*FLEN/8, x4, x1, x2)

inst_19372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7feccccccccccccc; valaddr_reg:x3; val_offset:58116*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58116*0 + 3*172*FLEN/8, x4, x1, x2)

inst_19373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fedb6db6db6db6d; valaddr_reg:x3; val_offset:58119*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58119*0 + 3*173*FLEN/8, x4, x1, x2)

inst_19374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fefffffffffffc0; valaddr_reg:x3; val_offset:58122*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58122*0 + 3*174*FLEN/8, x4, x1, x2)

inst_19375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7fefffffffffffe0; valaddr_reg:x3; val_offset:58125*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58125*0 + 3*175*FLEN/8, x4, x1, x2)

inst_19376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7feffffffffffff0; valaddr_reg:x3; val_offset:58128*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58128*0 + 3*176*FLEN/8, x4, x1, x2)

inst_19377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7feffffffffffff8; valaddr_reg:x3; val_offset:58131*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58131*0 + 3*177*FLEN/8, x4, x1, x2)

inst_19378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7feffffffffffffc; valaddr_reg:x3; val_offset:58134*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58134*0 + 3*178*FLEN/8, x4, x1, x2)

inst_19379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x7f4fcafa3a9a7 and fs2 == 0 and fe2 == 0x605 and fm2 == 0x55f23e3e6f793 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f87f4fcafa3a9a7; op2val:0x60555f23e3e6f793;
op3val:0x7feffffffffffffe; valaddr_reg:x3; val_offset:58137*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58137*0 + 3*179*FLEN/8, x4, x1, x2)

inst_19380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:58140*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58140*0 + 3*180*FLEN/8, x4, x1, x2)

inst_19381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:58143*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58143*0 + 3*181*FLEN/8, x4, x1, x2)

inst_19382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:58146*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58146*0 + 3*182*FLEN/8, x4, x1, x2)

inst_19383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:58149*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58149*0 + 3*183*FLEN/8, x4, x1, x2)

inst_19384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:58152*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58152*0 + 3*184*FLEN/8, x4, x1, x2)

inst_19385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:58155*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58155*0 + 3*185*FLEN/8, x4, x1, x2)

inst_19386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:58158*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58158*0 + 3*186*FLEN/8, x4, x1, x2)

inst_19387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:58161*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58161*0 + 3*187*FLEN/8, x4, x1, x2)

inst_19388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:58164*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58164*0 + 3*188*FLEN/8, x4, x1, x2)

inst_19389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:58167*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58167*0 + 3*189*FLEN/8, x4, x1, x2)

inst_19390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:58170*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58170*0 + 3*190*FLEN/8, x4, x1, x2)

inst_19391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:58173*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58173*0 + 3*191*FLEN/8, x4, x1, x2)

inst_19392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:58176*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58176*0 + 3*192*FLEN/8, x4, x1, x2)

inst_19393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:58179*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58179*0 + 3*193*FLEN/8, x4, x1, x2)

inst_19394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:58182*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58182*0 + 3*194*FLEN/8, x4, x1, x2)

inst_19395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:58185*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58185*0 + 3*195*FLEN/8, x4, x1, x2)

inst_19396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:58188*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58188*0 + 3*196*FLEN/8, x4, x1, x2)

inst_19397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:58191*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58191*0 + 3*197*FLEN/8, x4, x1, x2)

inst_19398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:58194*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58194*0 + 3*198*FLEN/8, x4, x1, x2)

inst_19399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:58197*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58197*0 + 3*199*FLEN/8, x4, x1, x2)

inst_19400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:58200*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58200*0 + 3*200*FLEN/8, x4, x1, x2)

inst_19401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:58203*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58203*0 + 3*201*FLEN/8, x4, x1, x2)

inst_19402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000000000000; valaddr_reg:x3; val_offset:58206*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58206*0 + 3*202*FLEN/8, x4, x1, x2)

inst_19403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000000000001; valaddr_reg:x3; val_offset:58209*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58209*0 + 3*203*FLEN/8, x4, x1, x2)

inst_19404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000000000003; valaddr_reg:x3; val_offset:58212*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58212*0 + 3*204*FLEN/8, x4, x1, x2)

inst_19405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000000000007; valaddr_reg:x3; val_offset:58215*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58215*0 + 3*205*FLEN/8, x4, x1, x2)

inst_19406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000000000000f; valaddr_reg:x3; val_offset:58218*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58218*0 + 3*206*FLEN/8, x4, x1, x2)

inst_19407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000000000001f; valaddr_reg:x3; val_offset:58221*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58221*0 + 3*207*FLEN/8, x4, x1, x2)

inst_19408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000000000003f; valaddr_reg:x3; val_offset:58224*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58224*0 + 3*208*FLEN/8, x4, x1, x2)

inst_19409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000000000007f; valaddr_reg:x3; val_offset:58227*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58227*0 + 3*209*FLEN/8, x4, x1, x2)

inst_19410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600000000000ff; valaddr_reg:x3; val_offset:58230*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58230*0 + 3*210*FLEN/8, x4, x1, x2)

inst_19411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600000000001ff; valaddr_reg:x3; val_offset:58233*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58233*0 + 3*211*FLEN/8, x4, x1, x2)

inst_19412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600000000003ff; valaddr_reg:x3; val_offset:58236*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58236*0 + 3*212*FLEN/8, x4, x1, x2)

inst_19413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600000000007ff; valaddr_reg:x3; val_offset:58239*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58239*0 + 3*213*FLEN/8, x4, x1, x2)

inst_19414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000000000fff; valaddr_reg:x3; val_offset:58242*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58242*0 + 3*214*FLEN/8, x4, x1, x2)

inst_19415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000000001fff; valaddr_reg:x3; val_offset:58245*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58245*0 + 3*215*FLEN/8, x4, x1, x2)

inst_19416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000000003fff; valaddr_reg:x3; val_offset:58248*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58248*0 + 3*216*FLEN/8, x4, x1, x2)

inst_19417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000000007fff; valaddr_reg:x3; val_offset:58251*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58251*0 + 3*217*FLEN/8, x4, x1, x2)

inst_19418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000000000ffff; valaddr_reg:x3; val_offset:58254*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58254*0 + 3*218*FLEN/8, x4, x1, x2)

inst_19419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000000001ffff; valaddr_reg:x3; val_offset:58257*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58257*0 + 3*219*FLEN/8, x4, x1, x2)

inst_19420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000000003ffff; valaddr_reg:x3; val_offset:58260*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58260*0 + 3*220*FLEN/8, x4, x1, x2)

inst_19421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000000007ffff; valaddr_reg:x3; val_offset:58263*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58263*0 + 3*221*FLEN/8, x4, x1, x2)

inst_19422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600000000fffff; valaddr_reg:x3; val_offset:58266*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58266*0 + 3*222*FLEN/8, x4, x1, x2)

inst_19423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600000001fffff; valaddr_reg:x3; val_offset:58269*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58269*0 + 3*223*FLEN/8, x4, x1, x2)

inst_19424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600000003fffff; valaddr_reg:x3; val_offset:58272*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58272*0 + 3*224*FLEN/8, x4, x1, x2)

inst_19425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600000007fffff; valaddr_reg:x3; val_offset:58275*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58275*0 + 3*225*FLEN/8, x4, x1, x2)

inst_19426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000000ffffff; valaddr_reg:x3; val_offset:58278*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58278*0 + 3*226*FLEN/8, x4, x1, x2)

inst_19427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000001ffffff; valaddr_reg:x3; val_offset:58281*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58281*0 + 3*227*FLEN/8, x4, x1, x2)

inst_19428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000003ffffff; valaddr_reg:x3; val_offset:58284*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58284*0 + 3*228*FLEN/8, x4, x1, x2)

inst_19429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000007ffffff; valaddr_reg:x3; val_offset:58287*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58287*0 + 3*229*FLEN/8, x4, x1, x2)

inst_19430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000000fffffff; valaddr_reg:x3; val_offset:58290*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58290*0 + 3*230*FLEN/8, x4, x1, x2)

inst_19431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000001fffffff; valaddr_reg:x3; val_offset:58293*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58293*0 + 3*231*FLEN/8, x4, x1, x2)

inst_19432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000003fffffff; valaddr_reg:x3; val_offset:58296*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58296*0 + 3*232*FLEN/8, x4, x1, x2)

inst_19433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000007fffffff; valaddr_reg:x3; val_offset:58299*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58299*0 + 3*233*FLEN/8, x4, x1, x2)

inst_19434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600000ffffffff; valaddr_reg:x3; val_offset:58302*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58302*0 + 3*234*FLEN/8, x4, x1, x2)

inst_19435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600001ffffffff; valaddr_reg:x3; val_offset:58305*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58305*0 + 3*235*FLEN/8, x4, x1, x2)

inst_19436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600003ffffffff; valaddr_reg:x3; val_offset:58308*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58308*0 + 3*236*FLEN/8, x4, x1, x2)

inst_19437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600007ffffffff; valaddr_reg:x3; val_offset:58311*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58311*0 + 3*237*FLEN/8, x4, x1, x2)

inst_19438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260000fffffffff; valaddr_reg:x3; val_offset:58314*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58314*0 + 3*238*FLEN/8, x4, x1, x2)

inst_19439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260001fffffffff; valaddr_reg:x3; val_offset:58317*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58317*0 + 3*239*FLEN/8, x4, x1, x2)

inst_19440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260003fffffffff; valaddr_reg:x3; val_offset:58320*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58320*0 + 3*240*FLEN/8, x4, x1, x2)

inst_19441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260007fffffffff; valaddr_reg:x3; val_offset:58323*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58323*0 + 3*241*FLEN/8, x4, x1, x2)

inst_19442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826000ffffffffff; valaddr_reg:x3; val_offset:58326*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58326*0 + 3*242*FLEN/8, x4, x1, x2)

inst_19443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826001ffffffffff; valaddr_reg:x3; val_offset:58329*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58329*0 + 3*243*FLEN/8, x4, x1, x2)

inst_19444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826003ffffffffff; valaddr_reg:x3; val_offset:58332*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58332*0 + 3*244*FLEN/8, x4, x1, x2)

inst_19445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826007ffffffffff; valaddr_reg:x3; val_offset:58335*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58335*0 + 3*245*FLEN/8, x4, x1, x2)

inst_19446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82600fffffffffff; valaddr_reg:x3; val_offset:58338*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58338*0 + 3*246*FLEN/8, x4, x1, x2)

inst_19447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82601fffffffffff; valaddr_reg:x3; val_offset:58341*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58341*0 + 3*247*FLEN/8, x4, x1, x2)

inst_19448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82603fffffffffff; valaddr_reg:x3; val_offset:58344*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58344*0 + 3*248*FLEN/8, x4, x1, x2)

inst_19449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x82607fffffffffff; valaddr_reg:x3; val_offset:58347*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58347*0 + 3*249*FLEN/8, x4, x1, x2)

inst_19450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8260ffffffffffff; valaddr_reg:x3; val_offset:58350*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58350*0 + 3*250*FLEN/8, x4, x1, x2)

inst_19451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8261ffffffffffff; valaddr_reg:x3; val_offset:58353*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58353*0 + 3*251*FLEN/8, x4, x1, x2)

inst_19452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8263ffffffffffff; valaddr_reg:x3; val_offset:58356*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58356*0 + 3*252*FLEN/8, x4, x1, x2)

inst_19453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8267ffffffffffff; valaddr_reg:x3; val_offset:58359*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58359*0 + 3*253*FLEN/8, x4, x1, x2)

inst_19454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x8268000000000000; valaddr_reg:x3; val_offset:58362*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58362*0 + 3*254*FLEN/8, x4, x1, x2)

inst_19455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826c000000000000; valaddr_reg:x3; val_offset:58365*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58365*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_19456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826e000000000000; valaddr_reg:x3; val_offset:58368*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58368*0 + 3*256*FLEN/8, x4, x1, x2)

inst_19457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826f000000000000; valaddr_reg:x3; val_offset:58371*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58371*0 + 3*257*FLEN/8, x4, x1, x2)

inst_19458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826f800000000000; valaddr_reg:x3; val_offset:58374*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58374*0 + 3*258*FLEN/8, x4, x1, x2)

inst_19459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fc00000000000; valaddr_reg:x3; val_offset:58377*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58377*0 + 3*259*FLEN/8, x4, x1, x2)

inst_19460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fe00000000000; valaddr_reg:x3; val_offset:58380*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58380*0 + 3*260*FLEN/8, x4, x1, x2)

inst_19461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ff00000000000; valaddr_reg:x3; val_offset:58383*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58383*0 + 3*261*FLEN/8, x4, x1, x2)

inst_19462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ff80000000000; valaddr_reg:x3; val_offset:58386*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58386*0 + 3*262*FLEN/8, x4, x1, x2)

inst_19463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffc0000000000; valaddr_reg:x3; val_offset:58389*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58389*0 + 3*263*FLEN/8, x4, x1, x2)

inst_19464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffe0000000000; valaddr_reg:x3; val_offset:58392*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58392*0 + 3*264*FLEN/8, x4, x1, x2)

inst_19465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fff0000000000; valaddr_reg:x3; val_offset:58395*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58395*0 + 3*265*FLEN/8, x4, x1, x2)

inst_19466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fff8000000000; valaddr_reg:x3; val_offset:58398*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58398*0 + 3*266*FLEN/8, x4, x1, x2)

inst_19467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffc000000000; valaddr_reg:x3; val_offset:58401*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58401*0 + 3*267*FLEN/8, x4, x1, x2)

inst_19468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffe000000000; valaddr_reg:x3; val_offset:58404*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58404*0 + 3*268*FLEN/8, x4, x1, x2)

inst_19469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffff000000000; valaddr_reg:x3; val_offset:58407*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58407*0 + 3*269*FLEN/8, x4, x1, x2)

inst_19470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffff800000000; valaddr_reg:x3; val_offset:58410*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58410*0 + 3*270*FLEN/8, x4, x1, x2)

inst_19471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffc00000000; valaddr_reg:x3; val_offset:58413*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58413*0 + 3*271*FLEN/8, x4, x1, x2)

inst_19472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffe00000000; valaddr_reg:x3; val_offset:58416*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58416*0 + 3*272*FLEN/8, x4, x1, x2)

inst_19473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffff00000000; valaddr_reg:x3; val_offset:58419*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58419*0 + 3*273*FLEN/8, x4, x1, x2)

inst_19474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffff80000000; valaddr_reg:x3; val_offset:58422*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58422*0 + 3*274*FLEN/8, x4, x1, x2)

inst_19475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffc0000000; valaddr_reg:x3; val_offset:58425*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58425*0 + 3*275*FLEN/8, x4, x1, x2)

inst_19476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffe0000000; valaddr_reg:x3; val_offset:58428*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58428*0 + 3*276*FLEN/8, x4, x1, x2)

inst_19477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffff0000000; valaddr_reg:x3; val_offset:58431*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58431*0 + 3*277*FLEN/8, x4, x1, x2)

inst_19478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffff8000000; valaddr_reg:x3; val_offset:58434*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58434*0 + 3*278*FLEN/8, x4, x1, x2)

inst_19479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffc000000; valaddr_reg:x3; val_offset:58437*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58437*0 + 3*279*FLEN/8, x4, x1, x2)

inst_19480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffe000000; valaddr_reg:x3; val_offset:58440*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58440*0 + 3*280*FLEN/8, x4, x1, x2)

inst_19481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffff000000; valaddr_reg:x3; val_offset:58443*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58443*0 + 3*281*FLEN/8, x4, x1, x2)

inst_19482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffff800000; valaddr_reg:x3; val_offset:58446*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58446*0 + 3*282*FLEN/8, x4, x1, x2)

inst_19483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffffc00000; valaddr_reg:x3; val_offset:58449*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58449*0 + 3*283*FLEN/8, x4, x1, x2)

inst_19484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffffe00000; valaddr_reg:x3; val_offset:58452*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58452*0 + 3*284*FLEN/8, x4, x1, x2)

inst_19485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffff00000; valaddr_reg:x3; val_offset:58455*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58455*0 + 3*285*FLEN/8, x4, x1, x2)

inst_19486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffff80000; valaddr_reg:x3; val_offset:58458*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58458*0 + 3*286*FLEN/8, x4, x1, x2)

inst_19487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffffc0000; valaddr_reg:x3; val_offset:58461*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58461*0 + 3*287*FLEN/8, x4, x1, x2)

inst_19488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffffe0000; valaddr_reg:x3; val_offset:58464*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58464*0 + 3*288*FLEN/8, x4, x1, x2)

inst_19489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffffff0000; valaddr_reg:x3; val_offset:58467*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58467*0 + 3*289*FLEN/8, x4, x1, x2)

inst_19490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffffff8000; valaddr_reg:x3; val_offset:58470*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58470*0 + 3*290*FLEN/8, x4, x1, x2)

inst_19491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffffffc000; valaddr_reg:x3; val_offset:58473*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58473*0 + 3*291*FLEN/8, x4, x1, x2)

inst_19492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffffffe000; valaddr_reg:x3; val_offset:58476*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58476*0 + 3*292*FLEN/8, x4, x1, x2)

inst_19493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffffff000; valaddr_reg:x3; val_offset:58479*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58479*0 + 3*293*FLEN/8, x4, x1, x2)

inst_19494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffffff800; valaddr_reg:x3; val_offset:58482*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58482*0 + 3*294*FLEN/8, x4, x1, x2)

inst_19495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffffffc00; valaddr_reg:x3; val_offset:58485*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58485*0 + 3*295*FLEN/8, x4, x1, x2)

inst_19496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffffffe00; valaddr_reg:x3; val_offset:58488*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58488*0 + 3*296*FLEN/8, x4, x1, x2)

inst_19497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffffffff00; valaddr_reg:x3; val_offset:58491*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58491*0 + 3*297*FLEN/8, x4, x1, x2)

inst_19498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffffffff80; valaddr_reg:x3; val_offset:58494*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58494*0 + 3*298*FLEN/8, x4, x1, x2)

inst_19499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffffffffc0; valaddr_reg:x3; val_offset:58497*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58497*0 + 3*299*FLEN/8, x4, x1, x2)

inst_19500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffffffffe0; valaddr_reg:x3; val_offset:58500*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58500*0 + 3*300*FLEN/8, x4, x1, x2)

inst_19501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffffffff0; valaddr_reg:x3; val_offset:58503*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58503*0 + 3*301*FLEN/8, x4, x1, x2)

inst_19502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffffffff8; valaddr_reg:x3; val_offset:58506*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58506*0 + 3*302*FLEN/8, x4, x1, x2)

inst_19503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffffffffc; valaddr_reg:x3; val_offset:58509*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58509*0 + 3*303*FLEN/8, x4, x1, x2)

inst_19504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826ffffffffffffe; valaddr_reg:x3; val_offset:58512*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58512*0 + 3*304*FLEN/8, x4, x1, x2)

inst_19505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x84f4bf1a5a9f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f884f4bf1a5a9f7; op2val:0x8000;
op3val:0x826fffffffffffff; valaddr_reg:x3; val_offset:58515*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58515*0 + 3*305*FLEN/8, x4, x1, x2)

inst_19506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:58518*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58518*0 + 3*306*FLEN/8, x4, x1, x2)

inst_19507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:58521*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58521*0 + 3*307*FLEN/8, x4, x1, x2)

inst_19508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:58524*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58524*0 + 3*308*FLEN/8, x4, x1, x2)

inst_19509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:58527*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58527*0 + 3*309*FLEN/8, x4, x1, x2)

inst_19510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:58530*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58530*0 + 3*310*FLEN/8, x4, x1, x2)

inst_19511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:58533*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58533*0 + 3*311*FLEN/8, x4, x1, x2)

inst_19512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:58536*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58536*0 + 3*312*FLEN/8, x4, x1, x2)

inst_19513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:58539*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58539*0 + 3*313*FLEN/8, x4, x1, x2)

inst_19514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:58542*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58542*0 + 3*314*FLEN/8, x4, x1, x2)

inst_19515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:58545*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58545*0 + 3*315*FLEN/8, x4, x1, x2)

inst_19516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:58548*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58548*0 + 3*316*FLEN/8, x4, x1, x2)

inst_19517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:58551*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58551*0 + 3*317*FLEN/8, x4, x1, x2)

inst_19518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:58554*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58554*0 + 3*318*FLEN/8, x4, x1, x2)

inst_19519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:58557*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58557*0 + 3*319*FLEN/8, x4, x1, x2)

inst_19520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:58560*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58560*0 + 3*320*FLEN/8, x4, x1, x2)

inst_19521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:58563*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58563*0 + 3*321*FLEN/8, x4, x1, x2)

inst_19522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:58566*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58566*0 + 3*322*FLEN/8, x4, x1, x2)

inst_19523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:58569*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58569*0 + 3*323*FLEN/8, x4, x1, x2)

inst_19524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:58572*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58572*0 + 3*324*FLEN/8, x4, x1, x2)

inst_19525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:58575*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58575*0 + 3*325*FLEN/8, x4, x1, x2)

inst_19526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:58578*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58578*0 + 3*326*FLEN/8, x4, x1, x2)

inst_19527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:58581*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58581*0 + 3*327*FLEN/8, x4, x1, x2)

inst_19528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000000000000; valaddr_reg:x3; val_offset:58584*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58584*0 + 3*328*FLEN/8, x4, x1, x2)

inst_19529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000000000001; valaddr_reg:x3; val_offset:58587*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58587*0 + 3*329*FLEN/8, x4, x1, x2)

inst_19530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000000000003; valaddr_reg:x3; val_offset:58590*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58590*0 + 3*330*FLEN/8, x4, x1, x2)

inst_19531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000000000007; valaddr_reg:x3; val_offset:58593*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58593*0 + 3*331*FLEN/8, x4, x1, x2)

inst_19532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000000000000f; valaddr_reg:x3; val_offset:58596*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58596*0 + 3*332*FLEN/8, x4, x1, x2)

inst_19533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000000000001f; valaddr_reg:x3; val_offset:58599*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58599*0 + 3*333*FLEN/8, x4, x1, x2)

inst_19534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000000000003f; valaddr_reg:x3; val_offset:58602*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58602*0 + 3*334*FLEN/8, x4, x1, x2)

inst_19535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000000000007f; valaddr_reg:x3; val_offset:58605*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58605*0 + 3*335*FLEN/8, x4, x1, x2)

inst_19536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00000000000ff; valaddr_reg:x3; val_offset:58608*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58608*0 + 3*336*FLEN/8, x4, x1, x2)

inst_19537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00000000001ff; valaddr_reg:x3; val_offset:58611*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58611*0 + 3*337*FLEN/8, x4, x1, x2)

inst_19538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00000000003ff; valaddr_reg:x3; val_offset:58614*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58614*0 + 3*338*FLEN/8, x4, x1, x2)

inst_19539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00000000007ff; valaddr_reg:x3; val_offset:58617*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58617*0 + 3*339*FLEN/8, x4, x1, x2)

inst_19540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000000000fff; valaddr_reg:x3; val_offset:58620*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58620*0 + 3*340*FLEN/8, x4, x1, x2)

inst_19541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000000001fff; valaddr_reg:x3; val_offset:58623*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58623*0 + 3*341*FLEN/8, x4, x1, x2)

inst_19542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000000003fff; valaddr_reg:x3; val_offset:58626*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58626*0 + 3*342*FLEN/8, x4, x1, x2)

inst_19543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000000007fff; valaddr_reg:x3; val_offset:58629*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58629*0 + 3*343*FLEN/8, x4, x1, x2)

inst_19544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000000000ffff; valaddr_reg:x3; val_offset:58632*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58632*0 + 3*344*FLEN/8, x4, x1, x2)

inst_19545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000000001ffff; valaddr_reg:x3; val_offset:58635*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58635*0 + 3*345*FLEN/8, x4, x1, x2)

inst_19546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000000003ffff; valaddr_reg:x3; val_offset:58638*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58638*0 + 3*346*FLEN/8, x4, x1, x2)

inst_19547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000000007ffff; valaddr_reg:x3; val_offset:58641*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58641*0 + 3*347*FLEN/8, x4, x1, x2)

inst_19548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00000000fffff; valaddr_reg:x3; val_offset:58644*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58644*0 + 3*348*FLEN/8, x4, x1, x2)

inst_19549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00000001fffff; valaddr_reg:x3; val_offset:58647*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58647*0 + 3*349*FLEN/8, x4, x1, x2)

inst_19550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00000003fffff; valaddr_reg:x3; val_offset:58650*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58650*0 + 3*350*FLEN/8, x4, x1, x2)

inst_19551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00000007fffff; valaddr_reg:x3; val_offset:58653*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58653*0 + 3*351*FLEN/8, x4, x1, x2)

inst_19552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000000ffffff; valaddr_reg:x3; val_offset:58656*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58656*0 + 3*352*FLEN/8, x4, x1, x2)

inst_19553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000001ffffff; valaddr_reg:x3; val_offset:58659*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58659*0 + 3*353*FLEN/8, x4, x1, x2)

inst_19554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000003ffffff; valaddr_reg:x3; val_offset:58662*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58662*0 + 3*354*FLEN/8, x4, x1, x2)

inst_19555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000007ffffff; valaddr_reg:x3; val_offset:58665*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58665*0 + 3*355*FLEN/8, x4, x1, x2)

inst_19556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000000fffffff; valaddr_reg:x3; val_offset:58668*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58668*0 + 3*356*FLEN/8, x4, x1, x2)

inst_19557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000001fffffff; valaddr_reg:x3; val_offset:58671*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58671*0 + 3*357*FLEN/8, x4, x1, x2)

inst_19558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000003fffffff; valaddr_reg:x3; val_offset:58674*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58674*0 + 3*358*FLEN/8, x4, x1, x2)

inst_19559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000007fffffff; valaddr_reg:x3; val_offset:58677*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58677*0 + 3*359*FLEN/8, x4, x1, x2)

inst_19560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00000ffffffff; valaddr_reg:x3; val_offset:58680*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58680*0 + 3*360*FLEN/8, x4, x1, x2)

inst_19561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00001ffffffff; valaddr_reg:x3; val_offset:58683*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58683*0 + 3*361*FLEN/8, x4, x1, x2)

inst_19562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00003ffffffff; valaddr_reg:x3; val_offset:58686*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58686*0 + 3*362*FLEN/8, x4, x1, x2)

inst_19563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00007ffffffff; valaddr_reg:x3; val_offset:58689*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58689*0 + 3*363*FLEN/8, x4, x1, x2)

inst_19564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0000fffffffff; valaddr_reg:x3; val_offset:58692*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58692*0 + 3*364*FLEN/8, x4, x1, x2)

inst_19565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0001fffffffff; valaddr_reg:x3; val_offset:58695*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58695*0 + 3*365*FLEN/8, x4, x1, x2)

inst_19566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0003fffffffff; valaddr_reg:x3; val_offset:58698*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58698*0 + 3*366*FLEN/8, x4, x1, x2)

inst_19567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0007fffffffff; valaddr_reg:x3; val_offset:58701*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58701*0 + 3*367*FLEN/8, x4, x1, x2)

inst_19568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b000ffffffffff; valaddr_reg:x3; val_offset:58704*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58704*0 + 3*368*FLEN/8, x4, x1, x2)

inst_19569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b001ffffffffff; valaddr_reg:x3; val_offset:58707*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58707*0 + 3*369*FLEN/8, x4, x1, x2)

inst_19570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b003ffffffffff; valaddr_reg:x3; val_offset:58710*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58710*0 + 3*370*FLEN/8, x4, x1, x2)

inst_19571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b007ffffffffff; valaddr_reg:x3; val_offset:58713*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58713*0 + 3*371*FLEN/8, x4, x1, x2)

inst_19572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b00fffffffffff; valaddr_reg:x3; val_offset:58716*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58716*0 + 3*372*FLEN/8, x4, x1, x2)

inst_19573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b01fffffffffff; valaddr_reg:x3; val_offset:58719*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58719*0 + 3*373*FLEN/8, x4, x1, x2)

inst_19574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b03fffffffffff; valaddr_reg:x3; val_offset:58722*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58722*0 + 3*374*FLEN/8, x4, x1, x2)

inst_19575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b07fffffffffff; valaddr_reg:x3; val_offset:58725*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58725*0 + 3*375*FLEN/8, x4, x1, x2)

inst_19576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b0ffffffffffff; valaddr_reg:x3; val_offset:58728*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58728*0 + 3*376*FLEN/8, x4, x1, x2)

inst_19577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b1ffffffffffff; valaddr_reg:x3; val_offset:58731*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58731*0 + 3*377*FLEN/8, x4, x1, x2)

inst_19578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b3ffffffffffff; valaddr_reg:x3; val_offset:58734*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58734*0 + 3*378*FLEN/8, x4, x1, x2)

inst_19579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b7ffffffffffff; valaddr_reg:x3; val_offset:58737*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58737*0 + 3*379*FLEN/8, x4, x1, x2)

inst_19580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81b8000000000000; valaddr_reg:x3; val_offset:58740*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58740*0 + 3*380*FLEN/8, x4, x1, x2)

inst_19581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bc000000000000; valaddr_reg:x3; val_offset:58743*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58743*0 + 3*381*FLEN/8, x4, x1, x2)

inst_19582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81be000000000000; valaddr_reg:x3; val_offset:58746*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58746*0 + 3*382*FLEN/8, x4, x1, x2)

inst_19583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bf000000000000; valaddr_reg:x3; val_offset:58749*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58749*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_19584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bf800000000000; valaddr_reg:x3; val_offset:58752*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58752*0 + 3*384*FLEN/8, x4, x1, x2)

inst_19585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfc00000000000; valaddr_reg:x3; val_offset:58755*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58755*0 + 3*385*FLEN/8, x4, x1, x2)

inst_19586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfe00000000000; valaddr_reg:x3; val_offset:58758*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58758*0 + 3*386*FLEN/8, x4, x1, x2)

inst_19587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bff00000000000; valaddr_reg:x3; val_offset:58761*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58761*0 + 3*387*FLEN/8, x4, x1, x2)

inst_19588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bff80000000000; valaddr_reg:x3; val_offset:58764*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58764*0 + 3*388*FLEN/8, x4, x1, x2)

inst_19589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffc0000000000; valaddr_reg:x3; val_offset:58767*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58767*0 + 3*389*FLEN/8, x4, x1, x2)

inst_19590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffe0000000000; valaddr_reg:x3; val_offset:58770*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58770*0 + 3*390*FLEN/8, x4, x1, x2)

inst_19591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfff0000000000; valaddr_reg:x3; val_offset:58773*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58773*0 + 3*391*FLEN/8, x4, x1, x2)

inst_19592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfff8000000000; valaddr_reg:x3; val_offset:58776*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58776*0 + 3*392*FLEN/8, x4, x1, x2)

inst_19593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffc000000000; valaddr_reg:x3; val_offset:58779*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58779*0 + 3*393*FLEN/8, x4, x1, x2)

inst_19594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffe000000000; valaddr_reg:x3; val_offset:58782*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58782*0 + 3*394*FLEN/8, x4, x1, x2)

inst_19595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffff000000000; valaddr_reg:x3; val_offset:58785*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58785*0 + 3*395*FLEN/8, x4, x1, x2)

inst_19596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffff800000000; valaddr_reg:x3; val_offset:58788*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58788*0 + 3*396*FLEN/8, x4, x1, x2)

inst_19597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffc00000000; valaddr_reg:x3; val_offset:58791*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58791*0 + 3*397*FLEN/8, x4, x1, x2)

inst_19598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffe00000000; valaddr_reg:x3; val_offset:58794*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58794*0 + 3*398*FLEN/8, x4, x1, x2)

inst_19599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffff00000000; valaddr_reg:x3; val_offset:58797*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58797*0 + 3*399*FLEN/8, x4, x1, x2)

inst_19600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffff80000000; valaddr_reg:x3; val_offset:58800*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58800*0 + 3*400*FLEN/8, x4, x1, x2)

inst_19601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffc0000000; valaddr_reg:x3; val_offset:58803*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58803*0 + 3*401*FLEN/8, x4, x1, x2)

inst_19602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffe0000000; valaddr_reg:x3; val_offset:58806*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58806*0 + 3*402*FLEN/8, x4, x1, x2)

inst_19603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffff0000000; valaddr_reg:x3; val_offset:58809*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58809*0 + 3*403*FLEN/8, x4, x1, x2)

inst_19604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffff8000000; valaddr_reg:x3; val_offset:58812*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58812*0 + 3*404*FLEN/8, x4, x1, x2)

inst_19605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffc000000; valaddr_reg:x3; val_offset:58815*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58815*0 + 3*405*FLEN/8, x4, x1, x2)

inst_19606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffe000000; valaddr_reg:x3; val_offset:58818*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58818*0 + 3*406*FLEN/8, x4, x1, x2)

inst_19607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffff000000; valaddr_reg:x3; val_offset:58821*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58821*0 + 3*407*FLEN/8, x4, x1, x2)

inst_19608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffff800000; valaddr_reg:x3; val_offset:58824*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58824*0 + 3*408*FLEN/8, x4, x1, x2)

inst_19609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffffc00000; valaddr_reg:x3; val_offset:58827*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58827*0 + 3*409*FLEN/8, x4, x1, x2)

inst_19610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffffe00000; valaddr_reg:x3; val_offset:58830*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58830*0 + 3*410*FLEN/8, x4, x1, x2)

inst_19611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffff00000; valaddr_reg:x3; val_offset:58833*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58833*0 + 3*411*FLEN/8, x4, x1, x2)

inst_19612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffff80000; valaddr_reg:x3; val_offset:58836*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58836*0 + 3*412*FLEN/8, x4, x1, x2)

inst_19613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffffc0000; valaddr_reg:x3; val_offset:58839*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58839*0 + 3*413*FLEN/8, x4, x1, x2)

inst_19614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffffe0000; valaddr_reg:x3; val_offset:58842*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58842*0 + 3*414*FLEN/8, x4, x1, x2)

inst_19615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffffff0000; valaddr_reg:x3; val_offset:58845*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58845*0 + 3*415*FLEN/8, x4, x1, x2)

inst_19616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffffff8000; valaddr_reg:x3; val_offset:58848*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58848*0 + 3*416*FLEN/8, x4, x1, x2)

inst_19617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffffffc000; valaddr_reg:x3; val_offset:58851*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58851*0 + 3*417*FLEN/8, x4, x1, x2)

inst_19618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffffffe000; valaddr_reg:x3; val_offset:58854*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58854*0 + 3*418*FLEN/8, x4, x1, x2)

inst_19619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffffff000; valaddr_reg:x3; val_offset:58857*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58857*0 + 3*419*FLEN/8, x4, x1, x2)

inst_19620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffffff800; valaddr_reg:x3; val_offset:58860*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58860*0 + 3*420*FLEN/8, x4, x1, x2)

inst_19621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffffffc00; valaddr_reg:x3; val_offset:58863*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58863*0 + 3*421*FLEN/8, x4, x1, x2)

inst_19622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffffffe00; valaddr_reg:x3; val_offset:58866*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58866*0 + 3*422*FLEN/8, x4, x1, x2)

inst_19623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffffffff00; valaddr_reg:x3; val_offset:58869*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58869*0 + 3*423*FLEN/8, x4, x1, x2)

inst_19624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffffffff80; valaddr_reg:x3; val_offset:58872*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58872*0 + 3*424*FLEN/8, x4, x1, x2)

inst_19625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffffffffc0; valaddr_reg:x3; val_offset:58875*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58875*0 + 3*425*FLEN/8, x4, x1, x2)

inst_19626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffffffffe0; valaddr_reg:x3; val_offset:58878*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58878*0 + 3*426*FLEN/8, x4, x1, x2)

inst_19627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffffffff0; valaddr_reg:x3; val_offset:58881*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58881*0 + 3*427*FLEN/8, x4, x1, x2)

inst_19628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffffffff8; valaddr_reg:x3; val_offset:58884*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58884*0 + 3*428*FLEN/8, x4, x1, x2)

inst_19629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffffffffc; valaddr_reg:x3; val_offset:58887*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58887*0 + 3*429*FLEN/8, x4, x1, x2)

inst_19630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bffffffffffffe; valaddr_reg:x3; val_offset:58890*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58890*0 + 3*430*FLEN/8, x4, x1, x2)

inst_19631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x86dad794b05bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f886dad794b05bb; op2val:0x8000;
op3val:0x81bfffffffffffff; valaddr_reg:x3; val_offset:58893*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58893*0 + 3*431*FLEN/8, x4, x1, x2)

inst_19632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000000000000; valaddr_reg:x3; val_offset:58896*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58896*0 + 3*432*FLEN/8, x4, x1, x2)

inst_19633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000000000001; valaddr_reg:x3; val_offset:58899*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58899*0 + 3*433*FLEN/8, x4, x1, x2)

inst_19634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000000000003; valaddr_reg:x3; val_offset:58902*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58902*0 + 3*434*FLEN/8, x4, x1, x2)

inst_19635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000000000007; valaddr_reg:x3; val_offset:58905*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58905*0 + 3*435*FLEN/8, x4, x1, x2)

inst_19636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000000000000f; valaddr_reg:x3; val_offset:58908*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58908*0 + 3*436*FLEN/8, x4, x1, x2)

inst_19637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000000000001f; valaddr_reg:x3; val_offset:58911*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58911*0 + 3*437*FLEN/8, x4, x1, x2)

inst_19638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000000000003f; valaddr_reg:x3; val_offset:58914*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58914*0 + 3*438*FLEN/8, x4, x1, x2)

inst_19639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000000000007f; valaddr_reg:x3; val_offset:58917*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58917*0 + 3*439*FLEN/8, x4, x1, x2)

inst_19640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700000000000ff; valaddr_reg:x3; val_offset:58920*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58920*0 + 3*440*FLEN/8, x4, x1, x2)

inst_19641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700000000001ff; valaddr_reg:x3; val_offset:58923*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58923*0 + 3*441*FLEN/8, x4, x1, x2)

inst_19642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700000000003ff; valaddr_reg:x3; val_offset:58926*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58926*0 + 3*442*FLEN/8, x4, x1, x2)

inst_19643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700000000007ff; valaddr_reg:x3; val_offset:58929*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58929*0 + 3*443*FLEN/8, x4, x1, x2)

inst_19644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000000000fff; valaddr_reg:x3; val_offset:58932*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58932*0 + 3*444*FLEN/8, x4, x1, x2)

inst_19645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000000001fff; valaddr_reg:x3; val_offset:58935*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58935*0 + 3*445*FLEN/8, x4, x1, x2)

inst_19646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000000003fff; valaddr_reg:x3; val_offset:58938*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58938*0 + 3*446*FLEN/8, x4, x1, x2)

inst_19647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000000007fff; valaddr_reg:x3; val_offset:58941*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58941*0 + 3*447*FLEN/8, x4, x1, x2)

inst_19648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000000000ffff; valaddr_reg:x3; val_offset:58944*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58944*0 + 3*448*FLEN/8, x4, x1, x2)

inst_19649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000000001ffff; valaddr_reg:x3; val_offset:58947*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58947*0 + 3*449*FLEN/8, x4, x1, x2)

inst_19650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000000003ffff; valaddr_reg:x3; val_offset:58950*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58950*0 + 3*450*FLEN/8, x4, x1, x2)

inst_19651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000000007ffff; valaddr_reg:x3; val_offset:58953*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58953*0 + 3*451*FLEN/8, x4, x1, x2)

inst_19652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700000000fffff; valaddr_reg:x3; val_offset:58956*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58956*0 + 3*452*FLEN/8, x4, x1, x2)

inst_19653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700000001fffff; valaddr_reg:x3; val_offset:58959*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58959*0 + 3*453*FLEN/8, x4, x1, x2)

inst_19654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700000003fffff; valaddr_reg:x3; val_offset:58962*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58962*0 + 3*454*FLEN/8, x4, x1, x2)

inst_19655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700000007fffff; valaddr_reg:x3; val_offset:58965*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58965*0 + 3*455*FLEN/8, x4, x1, x2)

inst_19656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000000ffffff; valaddr_reg:x3; val_offset:58968*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58968*0 + 3*456*FLEN/8, x4, x1, x2)

inst_19657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000001ffffff; valaddr_reg:x3; val_offset:58971*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58971*0 + 3*457*FLEN/8, x4, x1, x2)

inst_19658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000003ffffff; valaddr_reg:x3; val_offset:58974*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58974*0 + 3*458*FLEN/8, x4, x1, x2)

inst_19659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000007ffffff; valaddr_reg:x3; val_offset:58977*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58977*0 + 3*459*FLEN/8, x4, x1, x2)

inst_19660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000000fffffff; valaddr_reg:x3; val_offset:58980*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58980*0 + 3*460*FLEN/8, x4, x1, x2)

inst_19661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000001fffffff; valaddr_reg:x3; val_offset:58983*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58983*0 + 3*461*FLEN/8, x4, x1, x2)

inst_19662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000003fffffff; valaddr_reg:x3; val_offset:58986*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58986*0 + 3*462*FLEN/8, x4, x1, x2)

inst_19663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000007fffffff; valaddr_reg:x3; val_offset:58989*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58989*0 + 3*463*FLEN/8, x4, x1, x2)

inst_19664:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700000ffffffff; valaddr_reg:x3; val_offset:58992*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58992*0 + 3*464*FLEN/8, x4, x1, x2)

inst_19665:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700001ffffffff; valaddr_reg:x3; val_offset:58995*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58995*0 + 3*465*FLEN/8, x4, x1, x2)

inst_19666:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700003ffffffff; valaddr_reg:x3; val_offset:58998*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 58998*0 + 3*466*FLEN/8, x4, x1, x2)

inst_19667:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700007ffffffff; valaddr_reg:x3; val_offset:59001*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59001*0 + 3*467*FLEN/8, x4, x1, x2)

inst_19668:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70000fffffffff; valaddr_reg:x3; val_offset:59004*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59004*0 + 3*468*FLEN/8, x4, x1, x2)

inst_19669:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70001fffffffff; valaddr_reg:x3; val_offset:59007*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59007*0 + 3*469*FLEN/8, x4, x1, x2)

inst_19670:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70003fffffffff; valaddr_reg:x3; val_offset:59010*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59010*0 + 3*470*FLEN/8, x4, x1, x2)

inst_19671:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70007fffffffff; valaddr_reg:x3; val_offset:59013*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59013*0 + 3*471*FLEN/8, x4, x1, x2)

inst_19672:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7000ffffffffff; valaddr_reg:x3; val_offset:59016*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59016*0 + 3*472*FLEN/8, x4, x1, x2)

inst_19673:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7001ffffffffff; valaddr_reg:x3; val_offset:59019*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59019*0 + 3*473*FLEN/8, x4, x1, x2)

inst_19674:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7003ffffffffff; valaddr_reg:x3; val_offset:59022*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59022*0 + 3*474*FLEN/8, x4, x1, x2)

inst_19675:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7007ffffffffff; valaddr_reg:x3; val_offset:59025*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59025*0 + 3*475*FLEN/8, x4, x1, x2)

inst_19676:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb700fffffffffff; valaddr_reg:x3; val_offset:59028*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59028*0 + 3*476*FLEN/8, x4, x1, x2)

inst_19677:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb701fffffffffff; valaddr_reg:x3; val_offset:59031*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59031*0 + 3*477*FLEN/8, x4, x1, x2)

inst_19678:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb703fffffffffff; valaddr_reg:x3; val_offset:59034*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59034*0 + 3*478*FLEN/8, x4, x1, x2)

inst_19679:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb707fffffffffff; valaddr_reg:x3; val_offset:59037*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59037*0 + 3*479*FLEN/8, x4, x1, x2)

inst_19680:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb70ffffffffffff; valaddr_reg:x3; val_offset:59040*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59040*0 + 3*480*FLEN/8, x4, x1, x2)

inst_19681:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb71ffffffffffff; valaddr_reg:x3; val_offset:59043*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59043*0 + 3*481*FLEN/8, x4, x1, x2)

inst_19682:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb73ffffffffffff; valaddr_reg:x3; val_offset:59046*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59046*0 + 3*482*FLEN/8, x4, x1, x2)

inst_19683:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb77ffffffffffff; valaddr_reg:x3; val_offset:59049*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59049*0 + 3*483*FLEN/8, x4, x1, x2)

inst_19684:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb78000000000000; valaddr_reg:x3; val_offset:59052*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59052*0 + 3*484*FLEN/8, x4, x1, x2)

inst_19685:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7c000000000000; valaddr_reg:x3; val_offset:59055*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59055*0 + 3*485*FLEN/8, x4, x1, x2)

inst_19686:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7e000000000000; valaddr_reg:x3; val_offset:59058*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59058*0 + 3*486*FLEN/8, x4, x1, x2)

inst_19687:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7f000000000000; valaddr_reg:x3; val_offset:59061*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59061*0 + 3*487*FLEN/8, x4, x1, x2)

inst_19688:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7f800000000000; valaddr_reg:x3; val_offset:59064*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59064*0 + 3*488*FLEN/8, x4, x1, x2)

inst_19689:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fc00000000000; valaddr_reg:x3; val_offset:59067*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59067*0 + 3*489*FLEN/8, x4, x1, x2)

inst_19690:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fe00000000000; valaddr_reg:x3; val_offset:59070*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59070*0 + 3*490*FLEN/8, x4, x1, x2)

inst_19691:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ff00000000000; valaddr_reg:x3; val_offset:59073*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59073*0 + 3*491*FLEN/8, x4, x1, x2)

inst_19692:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ff80000000000; valaddr_reg:x3; val_offset:59076*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59076*0 + 3*492*FLEN/8, x4, x1, x2)

inst_19693:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffc0000000000; valaddr_reg:x3; val_offset:59079*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59079*0 + 3*493*FLEN/8, x4, x1, x2)

inst_19694:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffe0000000000; valaddr_reg:x3; val_offset:59082*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59082*0 + 3*494*FLEN/8, x4, x1, x2)

inst_19695:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fff0000000000; valaddr_reg:x3; val_offset:59085*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59085*0 + 3*495*FLEN/8, x4, x1, x2)

inst_19696:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fff8000000000; valaddr_reg:x3; val_offset:59088*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59088*0 + 3*496*FLEN/8, x4, x1, x2)

inst_19697:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffc000000000; valaddr_reg:x3; val_offset:59091*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59091*0 + 3*497*FLEN/8, x4, x1, x2)

inst_19698:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffe000000000; valaddr_reg:x3; val_offset:59094*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59094*0 + 3*498*FLEN/8, x4, x1, x2)

inst_19699:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffff000000000; valaddr_reg:x3; val_offset:59097*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59097*0 + 3*499*FLEN/8, x4, x1, x2)

inst_19700:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffff800000000; valaddr_reg:x3; val_offset:59100*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59100*0 + 3*500*FLEN/8, x4, x1, x2)

inst_19701:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffc00000000; valaddr_reg:x3; val_offset:59103*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59103*0 + 3*501*FLEN/8, x4, x1, x2)

inst_19702:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffe00000000; valaddr_reg:x3; val_offset:59106*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59106*0 + 3*502*FLEN/8, x4, x1, x2)

inst_19703:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffff00000000; valaddr_reg:x3; val_offset:59109*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59109*0 + 3*503*FLEN/8, x4, x1, x2)

inst_19704:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffff80000000; valaddr_reg:x3; val_offset:59112*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59112*0 + 3*504*FLEN/8, x4, x1, x2)

inst_19705:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffc0000000; valaddr_reg:x3; val_offset:59115*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59115*0 + 3*505*FLEN/8, x4, x1, x2)

inst_19706:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffe0000000; valaddr_reg:x3; val_offset:59118*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59118*0 + 3*506*FLEN/8, x4, x1, x2)

inst_19707:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffff0000000; valaddr_reg:x3; val_offset:59121*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59121*0 + 3*507*FLEN/8, x4, x1, x2)

inst_19708:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffff8000000; valaddr_reg:x3; val_offset:59124*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59124*0 + 3*508*FLEN/8, x4, x1, x2)

inst_19709:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffc000000; valaddr_reg:x3; val_offset:59127*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59127*0 + 3*509*FLEN/8, x4, x1, x2)

inst_19710:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffe000000; valaddr_reg:x3; val_offset:59130*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59130*0 + 3*510*FLEN/8, x4, x1, x2)

inst_19711:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffff000000; valaddr_reg:x3; val_offset:59133*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59133*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_19712:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffff800000; valaddr_reg:x3; val_offset:59136*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59136*0 + 3*512*FLEN/8, x4, x1, x2)

inst_19713:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffffc00000; valaddr_reg:x3; val_offset:59139*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59139*0 + 3*513*FLEN/8, x4, x1, x2)

inst_19714:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffffe00000; valaddr_reg:x3; val_offset:59142*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59142*0 + 3*514*FLEN/8, x4, x1, x2)

inst_19715:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffff00000; valaddr_reg:x3; val_offset:59145*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59145*0 + 3*515*FLEN/8, x4, x1, x2)

inst_19716:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffff80000; valaddr_reg:x3; val_offset:59148*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59148*0 + 3*516*FLEN/8, x4, x1, x2)

inst_19717:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffffc0000; valaddr_reg:x3; val_offset:59151*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59151*0 + 3*517*FLEN/8, x4, x1, x2)

inst_19718:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffffe0000; valaddr_reg:x3; val_offset:59154*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59154*0 + 3*518*FLEN/8, x4, x1, x2)

inst_19719:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffffff0000; valaddr_reg:x3; val_offset:59157*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59157*0 + 3*519*FLEN/8, x4, x1, x2)

inst_19720:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffffff8000; valaddr_reg:x3; val_offset:59160*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59160*0 + 3*520*FLEN/8, x4, x1, x2)

inst_19721:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffffffc000; valaddr_reg:x3; val_offset:59163*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59163*0 + 3*521*FLEN/8, x4, x1, x2)

inst_19722:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffffffe000; valaddr_reg:x3; val_offset:59166*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59166*0 + 3*522*FLEN/8, x4, x1, x2)

inst_19723:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffffff000; valaddr_reg:x3; val_offset:59169*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59169*0 + 3*523*FLEN/8, x4, x1, x2)

inst_19724:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffffff800; valaddr_reg:x3; val_offset:59172*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59172*0 + 3*524*FLEN/8, x4, x1, x2)

inst_19725:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffffffc00; valaddr_reg:x3; val_offset:59175*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59175*0 + 3*525*FLEN/8, x4, x1, x2)

inst_19726:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffffffe00; valaddr_reg:x3; val_offset:59178*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59178*0 + 3*526*FLEN/8, x4, x1, x2)

inst_19727:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffffffff00; valaddr_reg:x3; val_offset:59181*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59181*0 + 3*527*FLEN/8, x4, x1, x2)

inst_19728:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffffffff80; valaddr_reg:x3; val_offset:59184*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59184*0 + 3*528*FLEN/8, x4, x1, x2)

inst_19729:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffffffffc0; valaddr_reg:x3; val_offset:59187*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59187*0 + 3*529*FLEN/8, x4, x1, x2)

inst_19730:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffffffffe0; valaddr_reg:x3; val_offset:59190*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59190*0 + 3*530*FLEN/8, x4, x1, x2)

inst_19731:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffffffff0; valaddr_reg:x3; val_offset:59193*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59193*0 + 3*531*FLEN/8, x4, x1, x2)

inst_19732:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffffffff8; valaddr_reg:x3; val_offset:59196*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59196*0 + 3*532*FLEN/8, x4, x1, x2)

inst_19733:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffffffffc; valaddr_reg:x3; val_offset:59199*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59199*0 + 3*533*FLEN/8, x4, x1, x2)

inst_19734:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7ffffffffffffe; valaddr_reg:x3; val_offset:59202*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59202*0 + 3*534*FLEN/8, x4, x1, x2)

inst_19735:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3b7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbb7fffffffffffff; valaddr_reg:x3; val_offset:59205*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59205*0 + 3*535*FLEN/8, x4, x1, x2)

inst_19736:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:59208*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59208*0 + 3*536*FLEN/8, x4, x1, x2)

inst_19737:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:59211*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59211*0 + 3*537*FLEN/8, x4, x1, x2)

inst_19738:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:59214*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59214*0 + 3*538*FLEN/8, x4, x1, x2)

inst_19739:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:59217*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59217*0 + 3*539*FLEN/8, x4, x1, x2)

inst_19740:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:59220*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59220*0 + 3*540*FLEN/8, x4, x1, x2)

inst_19741:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:59223*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59223*0 + 3*541*FLEN/8, x4, x1, x2)

inst_19742:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:59226*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59226*0 + 3*542*FLEN/8, x4, x1, x2)

inst_19743:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:59229*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59229*0 + 3*543*FLEN/8, x4, x1, x2)

inst_19744:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:59232*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59232*0 + 3*544*FLEN/8, x4, x1, x2)

inst_19745:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:59235*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59235*0 + 3*545*FLEN/8, x4, x1, x2)

inst_19746:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:59238*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59238*0 + 3*546*FLEN/8, x4, x1, x2)

inst_19747:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:59241*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59241*0 + 3*547*FLEN/8, x4, x1, x2)

inst_19748:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:59244*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59244*0 + 3*548*FLEN/8, x4, x1, x2)

inst_19749:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:59247*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59247*0 + 3*549*FLEN/8, x4, x1, x2)

inst_19750:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:59250*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59250*0 + 3*550*FLEN/8, x4, x1, x2)

inst_19751:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:59253*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59253*0 + 3*551*FLEN/8, x4, x1, x2)

inst_19752:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:59256*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59256*0 + 3*552*FLEN/8, x4, x1, x2)

inst_19753:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:59259*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59259*0 + 3*553*FLEN/8, x4, x1, x2)

inst_19754:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:59262*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59262*0 + 3*554*FLEN/8, x4, x1, x2)

inst_19755:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:59265*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59265*0 + 3*555*FLEN/8, x4, x1, x2)

inst_19756:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:59268*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59268*0 + 3*556*FLEN/8, x4, x1, x2)

inst_19757:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x882e3a7d63c53 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4e36a089d8c5d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8882e3a7d63c53; op2val:0x9fe4e36a089d8c5d;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:59271*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59271*0 + 3*557*FLEN/8, x4, x1, x2)

inst_19758:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:59274*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59274*0 + 3*558*FLEN/8, x4, x1, x2)

inst_19759:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:59277*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59277*0 + 3*559*FLEN/8, x4, x1, x2)

inst_19760:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:59280*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59280*0 + 3*560*FLEN/8, x4, x1, x2)

inst_19761:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:59283*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59283*0 + 3*561*FLEN/8, x4, x1, x2)

inst_19762:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:59286*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59286*0 + 3*562*FLEN/8, x4, x1, x2)

inst_19763:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:59289*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59289*0 + 3*563*FLEN/8, x4, x1, x2)

inst_19764:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:59292*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59292*0 + 3*564*FLEN/8, x4, x1, x2)

inst_19765:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:59295*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59295*0 + 3*565*FLEN/8, x4, x1, x2)

inst_19766:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:59298*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59298*0 + 3*566*FLEN/8, x4, x1, x2)

inst_19767:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:59301*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59301*0 + 3*567*FLEN/8, x4, x1, x2)

inst_19768:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:59304*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59304*0 + 3*568*FLEN/8, x4, x1, x2)

inst_19769:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:59307*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59307*0 + 3*569*FLEN/8, x4, x1, x2)

inst_19770:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:59310*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59310*0 + 3*570*FLEN/8, x4, x1, x2)

inst_19771:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:59313*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59313*0 + 3*571*FLEN/8, x4, x1, x2)

inst_19772:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:59316*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59316*0 + 3*572*FLEN/8, x4, x1, x2)

inst_19773:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:59319*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59319*0 + 3*573*FLEN/8, x4, x1, x2)

inst_19774:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:59322*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59322*0 + 3*574*FLEN/8, x4, x1, x2)

inst_19775:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:59325*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59325*0 + 3*575*FLEN/8, x4, x1, x2)

inst_19776:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:59328*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59328*0 + 3*576*FLEN/8, x4, x1, x2)

inst_19777:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:59331*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59331*0 + 3*577*FLEN/8, x4, x1, x2)

inst_19778:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:59334*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59334*0 + 3*578*FLEN/8, x4, x1, x2)

inst_19779:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:59337*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59337*0 + 3*579*FLEN/8, x4, x1, x2)

inst_19780:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000000000000; valaddr_reg:x3; val_offset:59340*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59340*0 + 3*580*FLEN/8, x4, x1, x2)

inst_19781:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000000000001; valaddr_reg:x3; val_offset:59343*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59343*0 + 3*581*FLEN/8, x4, x1, x2)

inst_19782:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000000000003; valaddr_reg:x3; val_offset:59346*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59346*0 + 3*582*FLEN/8, x4, x1, x2)

inst_19783:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000000000007; valaddr_reg:x3; val_offset:59349*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59349*0 + 3*583*FLEN/8, x4, x1, x2)

inst_19784:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000000000000f; valaddr_reg:x3; val_offset:59352*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59352*0 + 3*584*FLEN/8, x4, x1, x2)

inst_19785:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000000000001f; valaddr_reg:x3; val_offset:59355*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59355*0 + 3*585*FLEN/8, x4, x1, x2)

inst_19786:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000000000003f; valaddr_reg:x3; val_offset:59358*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59358*0 + 3*586*FLEN/8, x4, x1, x2)

inst_19787:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000000000007f; valaddr_reg:x3; val_offset:59361*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59361*0 + 3*587*FLEN/8, x4, x1, x2)

inst_19788:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00000000000ff; valaddr_reg:x3; val_offset:59364*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59364*0 + 3*588*FLEN/8, x4, x1, x2)

inst_19789:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00000000001ff; valaddr_reg:x3; val_offset:59367*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59367*0 + 3*589*FLEN/8, x4, x1, x2)

inst_19790:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00000000003ff; valaddr_reg:x3; val_offset:59370*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59370*0 + 3*590*FLEN/8, x4, x1, x2)

inst_19791:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00000000007ff; valaddr_reg:x3; val_offset:59373*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59373*0 + 3*591*FLEN/8, x4, x1, x2)

inst_19792:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000000000fff; valaddr_reg:x3; val_offset:59376*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59376*0 + 3*592*FLEN/8, x4, x1, x2)

inst_19793:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000000001fff; valaddr_reg:x3; val_offset:59379*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59379*0 + 3*593*FLEN/8, x4, x1, x2)

inst_19794:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000000003fff; valaddr_reg:x3; val_offset:59382*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59382*0 + 3*594*FLEN/8, x4, x1, x2)

inst_19795:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000000007fff; valaddr_reg:x3; val_offset:59385*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59385*0 + 3*595*FLEN/8, x4, x1, x2)

inst_19796:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000000000ffff; valaddr_reg:x3; val_offset:59388*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59388*0 + 3*596*FLEN/8, x4, x1, x2)

inst_19797:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000000001ffff; valaddr_reg:x3; val_offset:59391*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59391*0 + 3*597*FLEN/8, x4, x1, x2)

inst_19798:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000000003ffff; valaddr_reg:x3; val_offset:59394*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59394*0 + 3*598*FLEN/8, x4, x1, x2)

inst_19799:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000000007ffff; valaddr_reg:x3; val_offset:59397*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59397*0 + 3*599*FLEN/8, x4, x1, x2)

inst_19800:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00000000fffff; valaddr_reg:x3; val_offset:59400*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59400*0 + 3*600*FLEN/8, x4, x1, x2)

inst_19801:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00000001fffff; valaddr_reg:x3; val_offset:59403*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59403*0 + 3*601*FLEN/8, x4, x1, x2)

inst_19802:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00000003fffff; valaddr_reg:x3; val_offset:59406*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59406*0 + 3*602*FLEN/8, x4, x1, x2)

inst_19803:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00000007fffff; valaddr_reg:x3; val_offset:59409*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59409*0 + 3*603*FLEN/8, x4, x1, x2)

inst_19804:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000000ffffff; valaddr_reg:x3; val_offset:59412*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59412*0 + 3*604*FLEN/8, x4, x1, x2)

inst_19805:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000001ffffff; valaddr_reg:x3; val_offset:59415*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59415*0 + 3*605*FLEN/8, x4, x1, x2)

inst_19806:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000003ffffff; valaddr_reg:x3; val_offset:59418*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59418*0 + 3*606*FLEN/8, x4, x1, x2)

inst_19807:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000007ffffff; valaddr_reg:x3; val_offset:59421*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59421*0 + 3*607*FLEN/8, x4, x1, x2)

inst_19808:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000000fffffff; valaddr_reg:x3; val_offset:59424*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59424*0 + 3*608*FLEN/8, x4, x1, x2)

inst_19809:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000001fffffff; valaddr_reg:x3; val_offset:59427*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59427*0 + 3*609*FLEN/8, x4, x1, x2)

inst_19810:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000003fffffff; valaddr_reg:x3; val_offset:59430*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59430*0 + 3*610*FLEN/8, x4, x1, x2)

inst_19811:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000007fffffff; valaddr_reg:x3; val_offset:59433*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59433*0 + 3*611*FLEN/8, x4, x1, x2)

inst_19812:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00000ffffffff; valaddr_reg:x3; val_offset:59436*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59436*0 + 3*612*FLEN/8, x4, x1, x2)

inst_19813:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00001ffffffff; valaddr_reg:x3; val_offset:59439*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59439*0 + 3*613*FLEN/8, x4, x1, x2)

inst_19814:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00003ffffffff; valaddr_reg:x3; val_offset:59442*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59442*0 + 3*614*FLEN/8, x4, x1, x2)

inst_19815:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00007ffffffff; valaddr_reg:x3; val_offset:59445*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59445*0 + 3*615*FLEN/8, x4, x1, x2)

inst_19816:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0000fffffffff; valaddr_reg:x3; val_offset:59448*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59448*0 + 3*616*FLEN/8, x4, x1, x2)

inst_19817:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0001fffffffff; valaddr_reg:x3; val_offset:59451*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59451*0 + 3*617*FLEN/8, x4, x1, x2)

inst_19818:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0003fffffffff; valaddr_reg:x3; val_offset:59454*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59454*0 + 3*618*FLEN/8, x4, x1, x2)

inst_19819:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0007fffffffff; valaddr_reg:x3; val_offset:59457*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59457*0 + 3*619*FLEN/8, x4, x1, x2)

inst_19820:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d000ffffffffff; valaddr_reg:x3; val_offset:59460*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59460*0 + 3*620*FLEN/8, x4, x1, x2)

inst_19821:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d001ffffffffff; valaddr_reg:x3; val_offset:59463*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59463*0 + 3*621*FLEN/8, x4, x1, x2)

inst_19822:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d003ffffffffff; valaddr_reg:x3; val_offset:59466*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59466*0 + 3*622*FLEN/8, x4, x1, x2)

inst_19823:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d007ffffffffff; valaddr_reg:x3; val_offset:59469*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59469*0 + 3*623*FLEN/8, x4, x1, x2)

inst_19824:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d00fffffffffff; valaddr_reg:x3; val_offset:59472*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59472*0 + 3*624*FLEN/8, x4, x1, x2)

inst_19825:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d01fffffffffff; valaddr_reg:x3; val_offset:59475*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59475*0 + 3*625*FLEN/8, x4, x1, x2)

inst_19826:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d03fffffffffff; valaddr_reg:x3; val_offset:59478*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59478*0 + 3*626*FLEN/8, x4, x1, x2)

inst_19827:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d07fffffffffff; valaddr_reg:x3; val_offset:59481*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59481*0 + 3*627*FLEN/8, x4, x1, x2)

inst_19828:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d0ffffffffffff; valaddr_reg:x3; val_offset:59484*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59484*0 + 3*628*FLEN/8, x4, x1, x2)

inst_19829:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d1ffffffffffff; valaddr_reg:x3; val_offset:59487*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59487*0 + 3*629*FLEN/8, x4, x1, x2)

inst_19830:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d3ffffffffffff; valaddr_reg:x3; val_offset:59490*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59490*0 + 3*630*FLEN/8, x4, x1, x2)

inst_19831:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d7ffffffffffff; valaddr_reg:x3; val_offset:59493*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59493*0 + 3*631*FLEN/8, x4, x1, x2)

inst_19832:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81d8000000000000; valaddr_reg:x3; val_offset:59496*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59496*0 + 3*632*FLEN/8, x4, x1, x2)

inst_19833:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dc000000000000; valaddr_reg:x3; val_offset:59499*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59499*0 + 3*633*FLEN/8, x4, x1, x2)

inst_19834:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81de000000000000; valaddr_reg:x3; val_offset:59502*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59502*0 + 3*634*FLEN/8, x4, x1, x2)

inst_19835:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81df000000000000; valaddr_reg:x3; val_offset:59505*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59505*0 + 3*635*FLEN/8, x4, x1, x2)

inst_19836:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81df800000000000; valaddr_reg:x3; val_offset:59508*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59508*0 + 3*636*FLEN/8, x4, x1, x2)

inst_19837:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfc00000000000; valaddr_reg:x3; val_offset:59511*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59511*0 + 3*637*FLEN/8, x4, x1, x2)

inst_19838:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfe00000000000; valaddr_reg:x3; val_offset:59514*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59514*0 + 3*638*FLEN/8, x4, x1, x2)

inst_19839:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dff00000000000; valaddr_reg:x3; val_offset:59517*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59517*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_19840:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dff80000000000; valaddr_reg:x3; val_offset:59520*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59520*0 + 3*640*FLEN/8, x4, x1, x2)

inst_19841:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffc0000000000; valaddr_reg:x3; val_offset:59523*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59523*0 + 3*641*FLEN/8, x4, x1, x2)

inst_19842:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffe0000000000; valaddr_reg:x3; val_offset:59526*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59526*0 + 3*642*FLEN/8, x4, x1, x2)

inst_19843:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfff0000000000; valaddr_reg:x3; val_offset:59529*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59529*0 + 3*643*FLEN/8, x4, x1, x2)

inst_19844:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfff8000000000; valaddr_reg:x3; val_offset:59532*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59532*0 + 3*644*FLEN/8, x4, x1, x2)

inst_19845:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffc000000000; valaddr_reg:x3; val_offset:59535*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59535*0 + 3*645*FLEN/8, x4, x1, x2)

inst_19846:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffe000000000; valaddr_reg:x3; val_offset:59538*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59538*0 + 3*646*FLEN/8, x4, x1, x2)

inst_19847:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffff000000000; valaddr_reg:x3; val_offset:59541*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59541*0 + 3*647*FLEN/8, x4, x1, x2)

inst_19848:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffff800000000; valaddr_reg:x3; val_offset:59544*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59544*0 + 3*648*FLEN/8, x4, x1, x2)

inst_19849:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffc00000000; valaddr_reg:x3; val_offset:59547*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59547*0 + 3*649*FLEN/8, x4, x1, x2)

inst_19850:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffe00000000; valaddr_reg:x3; val_offset:59550*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59550*0 + 3*650*FLEN/8, x4, x1, x2)

inst_19851:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffff00000000; valaddr_reg:x3; val_offset:59553*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59553*0 + 3*651*FLEN/8, x4, x1, x2)

inst_19852:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffff80000000; valaddr_reg:x3; val_offset:59556*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59556*0 + 3*652*FLEN/8, x4, x1, x2)

inst_19853:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffc0000000; valaddr_reg:x3; val_offset:59559*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59559*0 + 3*653*FLEN/8, x4, x1, x2)

inst_19854:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffe0000000; valaddr_reg:x3; val_offset:59562*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59562*0 + 3*654*FLEN/8, x4, x1, x2)

inst_19855:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffff0000000; valaddr_reg:x3; val_offset:59565*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59565*0 + 3*655*FLEN/8, x4, x1, x2)

inst_19856:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffff8000000; valaddr_reg:x3; val_offset:59568*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59568*0 + 3*656*FLEN/8, x4, x1, x2)

inst_19857:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffc000000; valaddr_reg:x3; val_offset:59571*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59571*0 + 3*657*FLEN/8, x4, x1, x2)

inst_19858:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffe000000; valaddr_reg:x3; val_offset:59574*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59574*0 + 3*658*FLEN/8, x4, x1, x2)

inst_19859:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffff000000; valaddr_reg:x3; val_offset:59577*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59577*0 + 3*659*FLEN/8, x4, x1, x2)

inst_19860:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffff800000; valaddr_reg:x3; val_offset:59580*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59580*0 + 3*660*FLEN/8, x4, x1, x2)

inst_19861:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffffc00000; valaddr_reg:x3; val_offset:59583*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59583*0 + 3*661*FLEN/8, x4, x1, x2)

inst_19862:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffffe00000; valaddr_reg:x3; val_offset:59586*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59586*0 + 3*662*FLEN/8, x4, x1, x2)

inst_19863:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffff00000; valaddr_reg:x3; val_offset:59589*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59589*0 + 3*663*FLEN/8, x4, x1, x2)

inst_19864:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffff80000; valaddr_reg:x3; val_offset:59592*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59592*0 + 3*664*FLEN/8, x4, x1, x2)

inst_19865:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffffc0000; valaddr_reg:x3; val_offset:59595*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59595*0 + 3*665*FLEN/8, x4, x1, x2)

inst_19866:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffffe0000; valaddr_reg:x3; val_offset:59598*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59598*0 + 3*666*FLEN/8, x4, x1, x2)

inst_19867:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffffff0000; valaddr_reg:x3; val_offset:59601*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59601*0 + 3*667*FLEN/8, x4, x1, x2)

inst_19868:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffffff8000; valaddr_reg:x3; val_offset:59604*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59604*0 + 3*668*FLEN/8, x4, x1, x2)

inst_19869:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffffffc000; valaddr_reg:x3; val_offset:59607*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59607*0 + 3*669*FLEN/8, x4, x1, x2)

inst_19870:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffffffe000; valaddr_reg:x3; val_offset:59610*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59610*0 + 3*670*FLEN/8, x4, x1, x2)

inst_19871:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffffff000; valaddr_reg:x3; val_offset:59613*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59613*0 + 3*671*FLEN/8, x4, x1, x2)

inst_19872:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffffff800; valaddr_reg:x3; val_offset:59616*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59616*0 + 3*672*FLEN/8, x4, x1, x2)

inst_19873:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffffffc00; valaddr_reg:x3; val_offset:59619*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59619*0 + 3*673*FLEN/8, x4, x1, x2)

inst_19874:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffffffe00; valaddr_reg:x3; val_offset:59622*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59622*0 + 3*674*FLEN/8, x4, x1, x2)

inst_19875:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffffffff00; valaddr_reg:x3; val_offset:59625*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59625*0 + 3*675*FLEN/8, x4, x1, x2)

inst_19876:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffffffff80; valaddr_reg:x3; val_offset:59628*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59628*0 + 3*676*FLEN/8, x4, x1, x2)

inst_19877:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffffffffc0; valaddr_reg:x3; val_offset:59631*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59631*0 + 3*677*FLEN/8, x4, x1, x2)

inst_19878:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffffffffe0; valaddr_reg:x3; val_offset:59634*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59634*0 + 3*678*FLEN/8, x4, x1, x2)

inst_19879:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffffffff0; valaddr_reg:x3; val_offset:59637*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59637*0 + 3*679*FLEN/8, x4, x1, x2)

inst_19880:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffffffff8; valaddr_reg:x3; val_offset:59640*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59640*0 + 3*680*FLEN/8, x4, x1, x2)

inst_19881:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffffffffc; valaddr_reg:x3; val_offset:59643*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59643*0 + 3*681*FLEN/8, x4, x1, x2)

inst_19882:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dffffffffffffe; valaddr_reg:x3; val_offset:59646*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59646*0 + 3*682*FLEN/8, x4, x1, x2)

inst_19883:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x897ba0c15b68f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8897ba0c15b68f; op2val:0x8000;
op3val:0x81dfffffffffffff; valaddr_reg:x3; val_offset:59649*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59649*0 + 3*683*FLEN/8, x4, x1, x2)

inst_19884:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000000000000; valaddr_reg:x3; val_offset:59652*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59652*0 + 3*684*FLEN/8, x4, x1, x2)

inst_19885:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000000000001; valaddr_reg:x3; val_offset:59655*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59655*0 + 3*685*FLEN/8, x4, x1, x2)

inst_19886:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000000000003; valaddr_reg:x3; val_offset:59658*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59658*0 + 3*686*FLEN/8, x4, x1, x2)

inst_19887:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000000000007; valaddr_reg:x3; val_offset:59661*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59661*0 + 3*687*FLEN/8, x4, x1, x2)

inst_19888:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000000000000f; valaddr_reg:x3; val_offset:59664*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59664*0 + 3*688*FLEN/8, x4, x1, x2)

inst_19889:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000000000001f; valaddr_reg:x3; val_offset:59667*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59667*0 + 3*689*FLEN/8, x4, x1, x2)

inst_19890:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000000000003f; valaddr_reg:x3; val_offset:59670*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59670*0 + 3*690*FLEN/8, x4, x1, x2)

inst_19891:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000000000007f; valaddr_reg:x3; val_offset:59673*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59673*0 + 3*691*FLEN/8, x4, x1, x2)

inst_19892:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200000000000ff; valaddr_reg:x3; val_offset:59676*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59676*0 + 3*692*FLEN/8, x4, x1, x2)

inst_19893:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200000000001ff; valaddr_reg:x3; val_offset:59679*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59679*0 + 3*693*FLEN/8, x4, x1, x2)

inst_19894:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200000000003ff; valaddr_reg:x3; val_offset:59682*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59682*0 + 3*694*FLEN/8, x4, x1, x2)

inst_19895:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200000000007ff; valaddr_reg:x3; val_offset:59685*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59685*0 + 3*695*FLEN/8, x4, x1, x2)

inst_19896:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000000000fff; valaddr_reg:x3; val_offset:59688*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59688*0 + 3*696*FLEN/8, x4, x1, x2)

inst_19897:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000000001fff; valaddr_reg:x3; val_offset:59691*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59691*0 + 3*697*FLEN/8, x4, x1, x2)

inst_19898:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000000003fff; valaddr_reg:x3; val_offset:59694*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59694*0 + 3*698*FLEN/8, x4, x1, x2)

inst_19899:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000000007fff; valaddr_reg:x3; val_offset:59697*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59697*0 + 3*699*FLEN/8, x4, x1, x2)

inst_19900:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000000000ffff; valaddr_reg:x3; val_offset:59700*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59700*0 + 3*700*FLEN/8, x4, x1, x2)

inst_19901:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000000001ffff; valaddr_reg:x3; val_offset:59703*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59703*0 + 3*701*FLEN/8, x4, x1, x2)

inst_19902:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000000003ffff; valaddr_reg:x3; val_offset:59706*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59706*0 + 3*702*FLEN/8, x4, x1, x2)

inst_19903:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000000007ffff; valaddr_reg:x3; val_offset:59709*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59709*0 + 3*703*FLEN/8, x4, x1, x2)

inst_19904:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200000000fffff; valaddr_reg:x3; val_offset:59712*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59712*0 + 3*704*FLEN/8, x4, x1, x2)

inst_19905:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200000001fffff; valaddr_reg:x3; val_offset:59715*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59715*0 + 3*705*FLEN/8, x4, x1, x2)

inst_19906:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200000003fffff; valaddr_reg:x3; val_offset:59718*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59718*0 + 3*706*FLEN/8, x4, x1, x2)

inst_19907:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200000007fffff; valaddr_reg:x3; val_offset:59721*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59721*0 + 3*707*FLEN/8, x4, x1, x2)

inst_19908:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000000ffffff; valaddr_reg:x3; val_offset:59724*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59724*0 + 3*708*FLEN/8, x4, x1, x2)

inst_19909:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000001ffffff; valaddr_reg:x3; val_offset:59727*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59727*0 + 3*709*FLEN/8, x4, x1, x2)

inst_19910:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000003ffffff; valaddr_reg:x3; val_offset:59730*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59730*0 + 3*710*FLEN/8, x4, x1, x2)

inst_19911:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000007ffffff; valaddr_reg:x3; val_offset:59733*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59733*0 + 3*711*FLEN/8, x4, x1, x2)

inst_19912:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000000fffffff; valaddr_reg:x3; val_offset:59736*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59736*0 + 3*712*FLEN/8, x4, x1, x2)

inst_19913:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000001fffffff; valaddr_reg:x3; val_offset:59739*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59739*0 + 3*713*FLEN/8, x4, x1, x2)

inst_19914:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000003fffffff; valaddr_reg:x3; val_offset:59742*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59742*0 + 3*714*FLEN/8, x4, x1, x2)

inst_19915:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000007fffffff; valaddr_reg:x3; val_offset:59745*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59745*0 + 3*715*FLEN/8, x4, x1, x2)

inst_19916:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200000ffffffff; valaddr_reg:x3; val_offset:59748*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59748*0 + 3*716*FLEN/8, x4, x1, x2)

inst_19917:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200001ffffffff; valaddr_reg:x3; val_offset:59751*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59751*0 + 3*717*FLEN/8, x4, x1, x2)

inst_19918:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200003ffffffff; valaddr_reg:x3; val_offset:59754*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59754*0 + 3*718*FLEN/8, x4, x1, x2)

inst_19919:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200007ffffffff; valaddr_reg:x3; val_offset:59757*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59757*0 + 3*719*FLEN/8, x4, x1, x2)

inst_19920:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20000fffffffff; valaddr_reg:x3; val_offset:59760*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59760*0 + 3*720*FLEN/8, x4, x1, x2)

inst_19921:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20001fffffffff; valaddr_reg:x3; val_offset:59763*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59763*0 + 3*721*FLEN/8, x4, x1, x2)

inst_19922:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20003fffffffff; valaddr_reg:x3; val_offset:59766*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59766*0 + 3*722*FLEN/8, x4, x1, x2)

inst_19923:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20007fffffffff; valaddr_reg:x3; val_offset:59769*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59769*0 + 3*723*FLEN/8, x4, x1, x2)

inst_19924:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2000ffffffffff; valaddr_reg:x3; val_offset:59772*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59772*0 + 3*724*FLEN/8, x4, x1, x2)

inst_19925:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2001ffffffffff; valaddr_reg:x3; val_offset:59775*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59775*0 + 3*725*FLEN/8, x4, x1, x2)

inst_19926:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2003ffffffffff; valaddr_reg:x3; val_offset:59778*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59778*0 + 3*726*FLEN/8, x4, x1, x2)

inst_19927:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2007ffffffffff; valaddr_reg:x3; val_offset:59781*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59781*0 + 3*727*FLEN/8, x4, x1, x2)

inst_19928:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d200fffffffffff; valaddr_reg:x3; val_offset:59784*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59784*0 + 3*728*FLEN/8, x4, x1, x2)

inst_19929:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d201fffffffffff; valaddr_reg:x3; val_offset:59787*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59787*0 + 3*729*FLEN/8, x4, x1, x2)

inst_19930:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d203fffffffffff; valaddr_reg:x3; val_offset:59790*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59790*0 + 3*730*FLEN/8, x4, x1, x2)

inst_19931:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d207fffffffffff; valaddr_reg:x3; val_offset:59793*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59793*0 + 3*731*FLEN/8, x4, x1, x2)

inst_19932:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d20ffffffffffff; valaddr_reg:x3; val_offset:59796*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59796*0 + 3*732*FLEN/8, x4, x1, x2)

inst_19933:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d21ffffffffffff; valaddr_reg:x3; val_offset:59799*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59799*0 + 3*733*FLEN/8, x4, x1, x2)

inst_19934:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d23ffffffffffff; valaddr_reg:x3; val_offset:59802*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59802*0 + 3*734*FLEN/8, x4, x1, x2)

inst_19935:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d27ffffffffffff; valaddr_reg:x3; val_offset:59805*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59805*0 + 3*735*FLEN/8, x4, x1, x2)

inst_19936:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d28000000000000; valaddr_reg:x3; val_offset:59808*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59808*0 + 3*736*FLEN/8, x4, x1, x2)

inst_19937:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2c000000000000; valaddr_reg:x3; val_offset:59811*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59811*0 + 3*737*FLEN/8, x4, x1, x2)

inst_19938:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2e000000000000; valaddr_reg:x3; val_offset:59814*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59814*0 + 3*738*FLEN/8, x4, x1, x2)

inst_19939:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2f000000000000; valaddr_reg:x3; val_offset:59817*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59817*0 + 3*739*FLEN/8, x4, x1, x2)

inst_19940:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2f800000000000; valaddr_reg:x3; val_offset:59820*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59820*0 + 3*740*FLEN/8, x4, x1, x2)

inst_19941:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fc00000000000; valaddr_reg:x3; val_offset:59823*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59823*0 + 3*741*FLEN/8, x4, x1, x2)

inst_19942:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fe00000000000; valaddr_reg:x3; val_offset:59826*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59826*0 + 3*742*FLEN/8, x4, x1, x2)

inst_19943:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ff00000000000; valaddr_reg:x3; val_offset:59829*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59829*0 + 3*743*FLEN/8, x4, x1, x2)

inst_19944:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ff80000000000; valaddr_reg:x3; val_offset:59832*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59832*0 + 3*744*FLEN/8, x4, x1, x2)

inst_19945:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffc0000000000; valaddr_reg:x3; val_offset:59835*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59835*0 + 3*745*FLEN/8, x4, x1, x2)

inst_19946:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffe0000000000; valaddr_reg:x3; val_offset:59838*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59838*0 + 3*746*FLEN/8, x4, x1, x2)

inst_19947:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fff0000000000; valaddr_reg:x3; val_offset:59841*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59841*0 + 3*747*FLEN/8, x4, x1, x2)

inst_19948:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fff8000000000; valaddr_reg:x3; val_offset:59844*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59844*0 + 3*748*FLEN/8, x4, x1, x2)

inst_19949:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffc000000000; valaddr_reg:x3; val_offset:59847*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59847*0 + 3*749*FLEN/8, x4, x1, x2)

inst_19950:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffe000000000; valaddr_reg:x3; val_offset:59850*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59850*0 + 3*750*FLEN/8, x4, x1, x2)

inst_19951:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffff000000000; valaddr_reg:x3; val_offset:59853*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59853*0 + 3*751*FLEN/8, x4, x1, x2)

inst_19952:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffff800000000; valaddr_reg:x3; val_offset:59856*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59856*0 + 3*752*FLEN/8, x4, x1, x2)

inst_19953:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffc00000000; valaddr_reg:x3; val_offset:59859*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59859*0 + 3*753*FLEN/8, x4, x1, x2)

inst_19954:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffe00000000; valaddr_reg:x3; val_offset:59862*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59862*0 + 3*754*FLEN/8, x4, x1, x2)

inst_19955:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffff00000000; valaddr_reg:x3; val_offset:59865*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59865*0 + 3*755*FLEN/8, x4, x1, x2)

inst_19956:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffff80000000; valaddr_reg:x3; val_offset:59868*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59868*0 + 3*756*FLEN/8, x4, x1, x2)

inst_19957:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffc0000000; valaddr_reg:x3; val_offset:59871*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59871*0 + 3*757*FLEN/8, x4, x1, x2)

inst_19958:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffe0000000; valaddr_reg:x3; val_offset:59874*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59874*0 + 3*758*FLEN/8, x4, x1, x2)

inst_19959:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffff0000000; valaddr_reg:x3; val_offset:59877*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59877*0 + 3*759*FLEN/8, x4, x1, x2)

inst_19960:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffff8000000; valaddr_reg:x3; val_offset:59880*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59880*0 + 3*760*FLEN/8, x4, x1, x2)

inst_19961:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffc000000; valaddr_reg:x3; val_offset:59883*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59883*0 + 3*761*FLEN/8, x4, x1, x2)

inst_19962:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffe000000; valaddr_reg:x3; val_offset:59886*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59886*0 + 3*762*FLEN/8, x4, x1, x2)

inst_19963:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffff000000; valaddr_reg:x3; val_offset:59889*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59889*0 + 3*763*FLEN/8, x4, x1, x2)

inst_19964:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffff800000; valaddr_reg:x3; val_offset:59892*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59892*0 + 3*764*FLEN/8, x4, x1, x2)

inst_19965:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffffc00000; valaddr_reg:x3; val_offset:59895*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59895*0 + 3*765*FLEN/8, x4, x1, x2)

inst_19966:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2fffffffe00000; valaddr_reg:x3; val_offset:59898*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59898*0 + 3*766*FLEN/8, x4, x1, x2)

inst_19967:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x205 and fm2 == 0x4cb604d647380 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f889f3951da2feb; op2val:0x2054cb604d647380;
op3val:0x3d2ffffffff00000; valaddr_reg:x3; val_offset:59901*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59901*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(73183493944770559,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(74309393851613183,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(74309393851613184,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(75435293758455808,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(75998243711877120,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76279718688587776,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76420456176943104,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76490824921120768,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76526009293209600,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76543601479254016,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76552397572276224,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76556795618787328,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76558994642042880,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560094153670656,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560643909484544,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76560918787391488,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561056226344960,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561124945821696,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561159305560064,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561176485429248,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561185075363840,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561189370331136,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561191517814784,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561192591556608,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193128427520,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193396862976,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193531080704,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193598189568,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193631744000,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193648521216,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193656909824,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193661104128,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193663201280,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193664249856,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193664774144,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665036288,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665167360,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665232896,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665265664,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665282048,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665290240,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665294336,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665296384,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665297408,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665297920,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298176,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298304,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298368,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298400,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298416,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298424,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298428,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298430,64,FLEN)
NAN_BOXED(6883674007081751479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298431,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922996224,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922996225,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922996227,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922996231,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922996239,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922996255,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922996287,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922996351,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922996479,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922996735,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922997247,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861922998271,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861923000319,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861923004415,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861923012607,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861923028991,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861923061759,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861923127295,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861923258367,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861923520511,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861924044799,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861925093375,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861927190527,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861931384831,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861939773439,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861956550655,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197861990105087,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197862057213951,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197862191431679,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197862459867135,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197862996738047,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197864070479871,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197866217963519,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197870512930815,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197879102865407,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197896282734591,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197930642472959,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503197999361949695,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503198136800903167,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503198411678810111,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503198961434623999,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503200060946251775,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503202259969507327,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503206658016018431,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503215454109040639,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503233046295085055,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503268230667173887,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503338599411351551,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503479336899706879,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6503760811876417535,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6504323761829838847,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6505449661736681471,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6505449661736681472,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6506575561643524096,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507138511596945408,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507419986573656064,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507560724062011392,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507631092806189056,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507666277178277888,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507683869364322304,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507692665457344512,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507697063503855616,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507699262527111168,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507700362038738944,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507700911794552832,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701186672459776,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701324111413248,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701392830889984,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701427190628352,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701444370497536,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701452960432128,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701457255399424,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701459402883072,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701460476624896,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461013495808,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461281931264,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461416148992,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461483257856,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461516812288,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461533589504,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461541978112,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461546172416,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461548269568,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461549318144,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461549842432,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550104576,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550235648,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550301184,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550333952,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550350336,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550358528,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550362624,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550364672,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550365696,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550366208,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550366464,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550366592,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550366656,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550366688,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550366704,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550366712,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550366716,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550366718,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(6507701461550366719,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9214364837600034817,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9214364837600034819,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9214364837600034823,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9214364837600034831,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9214364837600034847,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9214364837600034879,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9215265557525508915,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9215651580350712100,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9216166277450983014,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9216294951726050742,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9216466517426141047,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9216766757401299080,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9217066997376457113,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9217581694476728027,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9217967717301931212,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9218225065852066669,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9218868437227405248,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9218868437227405280,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9218868437227405296,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9218868437227405304,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9218868437227405308,64,FLEN)
NAN_BOXED(6883739921574767015,64,FLEN)
NAN_BOXED(6941559008413546387,64,FLEN)
NAN_BOXED(9218868437227405310,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854656,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854657,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854659,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854663,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854671,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854687,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854719,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854783,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854911,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694855167,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694855679,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694856703,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694858751,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694862847,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694871039,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694887423,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694920191,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694985727,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695116799,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695378943,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695903231,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822696951807,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822699048959,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822703243263,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822711631871,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822728409087,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822761963519,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822829072383,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822963290111,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508823231725567,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508823768596479,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508824842338303,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508826989821951,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508831284789247,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508839874723839,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508857054593023,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508891414331391,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508960133808127,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509097572761599,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509372450668543,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509922206482431,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394511021718110207,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394513220741365759,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394517618787876863,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394526414880899071,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394544007066943487,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394579191439032319,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394649560183209983,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394790297671565311,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9395071772648275967,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9395634722601697279,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9396760622508539903,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9396760622508539904,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9397886522415382528,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398449472368803840,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398730947345514496,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398871684833869824,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398942053578047488,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398977237950136320,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398994830136180736,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399003626229202944,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399008024275714048,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399010223298969600,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399011322810597376,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399011872566411264,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012147444318208,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012284883271680,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012353602748416,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012387962486784,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012405142355968,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012413732290560,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012418027257856,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012420174741504,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012421248483328,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012421785354240,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422053789696,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422188007424,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422255116288,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422288670720,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422305447936,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422313836544,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422318030848,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422320128000,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321176576,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321700864,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321963008,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322094080,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322159616,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322192384,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322208768,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322216960,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322221056,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322223104,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224128,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224640,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224896,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225024,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225088,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225120,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225136,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225144,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225148,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225150,64,FLEN)
NAN_BOXED(6883839218031110647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225151,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779200,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779201,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779203,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779207,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779215,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779231,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779263,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779327,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779455,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779711,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793780223,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793781247,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793783295,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793787391,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793795583,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793811967,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793844735,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793910271,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226794041343,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226794303487,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226794827775,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226795876351,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226797973503,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226802167807,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226810556415,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226827333631,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226860888063,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226927996927,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969227062214655,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969227330650111,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969227867521023,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969228941262847,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969231088746495,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969235383713791,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969243973648383,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969261153517567,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969295513255935,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969364232732671,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969501671686143,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969776549593087,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344970326305406975,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344971425817034751,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344973624840290303,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344978022886801407,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344986818979823615,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345004411165868031,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345039595537956863,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345109964282134527,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345250701770489855,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345532176747200511,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9346095126700621823,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9347221026607464447,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9347221026607464448,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9348346926514307072,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9348909876467728384,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349191351444439040,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349332088932794368,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349402457676972032,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349437642049060864,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349455234235105280,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349464030328127488,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349468428374638592,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349470627397894144,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349471726909521920,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472276665335808,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472551543242752,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472688982196224,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472757701672960,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472792061411328,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472809241280512,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472817831215104,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472822126182400,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472824273666048,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472825347407872,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472825884278784,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826152714240,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826286931968,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826354040832,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826387595264,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826404372480,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826412761088,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826416955392,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826419052544,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826420101120,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826420625408,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826420887552,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421018624,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421084160,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421116928,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421133312,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421141504,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421145600,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421147648,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421148672,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149184,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149440,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149568,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149632,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149664,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149680,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149688,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149692,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149694,64,FLEN)
NAN_BOXED(6883872622267532731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149695,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484117504,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484117505,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484117507,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484117511,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484117519,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484117535,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484117567,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484117631,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484117759,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484118015,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484118527,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484119551,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484121599,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484125695,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484133887,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484150271,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484183039,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484248575,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484379647,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282484641791,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282485166079,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282486214655,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282488311807,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282492506111,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282500894719,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282517671935,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282551226367,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282618335231,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295282752552959,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295283020988415,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295283557859327,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295284631601151,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295286779084799,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295291074052095,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295299663986687,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295316843855871,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295351203594239,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295419923070975,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295557362024447,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506295832239931391,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506296381995745279,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506297481507373055,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506299680530628607,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506304078577139711,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506312874670161919,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506330466856206335,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506365651228295167,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506436019972472831,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506576757460828159,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13506858232437538815,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13507421182390960127,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13508547082297802751,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13508547082297802752,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13509672982204645376,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510235932158066688,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510517407134777344,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510658144623132672,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510728513367310336,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510763697739399168,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510781289925443584,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510790086018465792,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510794484064976896,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510796683088232448,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510797782599860224,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798332355674112,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798607233581056,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798744672534528,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798813392011264,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798847751749632,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798864931618816,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798873521553408,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798877816520704,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798879964004352,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798881037746176,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798881574617088,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798881843052544,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798881977270272,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882044379136,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882077933568,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882094710784,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882103099392,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882107293696,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882109390848,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882110439424,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882110963712,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111225856,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111356928,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111422464,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111455232,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111471616,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111479808,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111483904,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111485952,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111486976,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111487488,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111487744,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111487872,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111487936,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111487968,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111487984,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111487992,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111487996,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111487998,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13510798882111487999,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6883895944720825427,64,FLEN)
NAN_BOXED(11521583791271152733,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520192,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520193,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520195,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520199,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520207,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520223,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520255,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520319,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520447,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520703,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048521215,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048522239,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048524287,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048528383,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048536575,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048552959,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048585727,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048651263,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048782335,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426049044479,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426049568767,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426050617343,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426052714495,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426056908799,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426065297407,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426082074623,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426115629055,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426182737919,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426316955647,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426585391103,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976427122262015,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976428196003839,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976430343487487,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976434638454783,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976443228389375,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976460408258559,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976494767996927,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976563487473663,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976700926427135,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976975804334079,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353977525560147967,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353978625071775743,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353980824095031295,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353985222141542399,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353994018234564607,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354011610420609023,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354046794792697855,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354117163536875519,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354257901025230847,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354539376001941503,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9355102325955362815,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9356228225862205439,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9356228225862205440,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9357354125769048064,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9357917075722469376,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358198550699180032,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358339288187535360,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358409656931713024,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358444841303801856,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358462433489846272,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358471229582868480,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358475627629379584,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358477826652635136,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358478926164262912,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479475920076800,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479750797983744,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479888236937216,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479956956413952,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479991316152320,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480008496021504,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480017085956096,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480021380923392,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480023528407040,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480024602148864,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025139019776,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025407455232,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025541672960,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025608781824,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025642336256,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025659113472,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025667502080,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025671696384,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025673793536,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025674842112,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675366400,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675628544,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675759616,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675825152,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675857920,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675874304,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675882496,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675886592,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675888640,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675889664,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890176,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890432,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890560,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890624,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890656,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890672,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890680,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890684,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890686,64,FLEN)
NAN_BOXED(6883918855758263951,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890687,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568345088,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568345089,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568345091,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568345095,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568345103,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568345119,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568345151,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568345215,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568345343,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568345599,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568346111,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568347135,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568349183,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568353279,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568361471,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568377855,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568410623,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568476159,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568607231,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435568869375,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435569393663,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435570442239,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435572539391,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435576733695,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435585122303,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435601899519,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435635453951,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435702562815,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520435836780543,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520436105215999,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520436642086911,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520437715828735,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520439863312383,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520444158279679,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520452748214271,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520469928083455,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520504287821823,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520573007298559,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520710446252031,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404520985324158975,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404521535079972863,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404522634591600639,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404524833614856191,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404529231661367295,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404538027754389503,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404555619940433919,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404590804312522751,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404661173056700415,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4404801910545055743,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4405083385521766399,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4405646335475187711,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4406772235382030335,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4406772235382030336,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4407898135288872960,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4408461085242294272,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4408742560219004928,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4408883297707360256,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4408953666451537920,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4408988850823626752,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409006443009671168,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409015239102693376,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409019637149204480,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409021836172460032,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409022935684087808,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409023485439901696,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409023760317808640,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409023897756762112,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409023966476238848,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024000835977216,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024018015846400,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024026605780992,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024030900748288,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024033048231936,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024034121973760,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024034658844672,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024034927280128,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035061497856,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035128606720,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035162161152,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035178938368,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035187326976,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035191521280,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035193618432,64,FLEN)
NAN_BOXED(6883927098971009003,64,FLEN)
NAN_BOXED(2329710521733116800,64,FLEN)
NAN_BOXED(4409024035194667008,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
