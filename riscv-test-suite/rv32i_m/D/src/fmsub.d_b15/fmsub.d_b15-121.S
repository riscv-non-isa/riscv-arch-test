
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_92160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8013ffffffffffff; valaddr_reg:x3; val_offset:276480*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276480*0 + 3*0*FLEN/8, x4, x1, x2)

inst_92161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8017ffffffffffff; valaddr_reg:x3; val_offset:276483*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276483*0 + 3*1*FLEN/8, x4, x1, x2)

inst_92162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x8018000000000000; valaddr_reg:x3; val_offset:276486*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276486*0 + 3*2*FLEN/8, x4, x1, x2)

inst_92163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801c000000000000; valaddr_reg:x3; val_offset:276489*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276489*0 + 3*3*FLEN/8, x4, x1, x2)

inst_92164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801e000000000000; valaddr_reg:x3; val_offset:276492*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276492*0 + 3*4*FLEN/8, x4, x1, x2)

inst_92165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801f000000000000; valaddr_reg:x3; val_offset:276495*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276495*0 + 3*5*FLEN/8, x4, x1, x2)

inst_92166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801f800000000000; valaddr_reg:x3; val_offset:276498*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276498*0 + 3*6*FLEN/8, x4, x1, x2)

inst_92167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fc00000000000; valaddr_reg:x3; val_offset:276501*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276501*0 + 3*7*FLEN/8, x4, x1, x2)

inst_92168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fe00000000000; valaddr_reg:x3; val_offset:276504*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276504*0 + 3*8*FLEN/8, x4, x1, x2)

inst_92169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ff00000000000; valaddr_reg:x3; val_offset:276507*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276507*0 + 3*9*FLEN/8, x4, x1, x2)

inst_92170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ff80000000000; valaddr_reg:x3; val_offset:276510*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276510*0 + 3*10*FLEN/8, x4, x1, x2)

inst_92171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffc0000000000; valaddr_reg:x3; val_offset:276513*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276513*0 + 3*11*FLEN/8, x4, x1, x2)

inst_92172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffe0000000000; valaddr_reg:x3; val_offset:276516*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276516*0 + 3*12*FLEN/8, x4, x1, x2)

inst_92173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fff0000000000; valaddr_reg:x3; val_offset:276519*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276519*0 + 3*13*FLEN/8, x4, x1, x2)

inst_92174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fff8000000000; valaddr_reg:x3; val_offset:276522*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276522*0 + 3*14*FLEN/8, x4, x1, x2)

inst_92175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffc000000000; valaddr_reg:x3; val_offset:276525*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276525*0 + 3*15*FLEN/8, x4, x1, x2)

inst_92176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffe000000000; valaddr_reg:x3; val_offset:276528*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276528*0 + 3*16*FLEN/8, x4, x1, x2)

inst_92177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffff000000000; valaddr_reg:x3; val_offset:276531*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276531*0 + 3*17*FLEN/8, x4, x1, x2)

inst_92178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffff800000000; valaddr_reg:x3; val_offset:276534*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276534*0 + 3*18*FLEN/8, x4, x1, x2)

inst_92179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffc00000000; valaddr_reg:x3; val_offset:276537*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276537*0 + 3*19*FLEN/8, x4, x1, x2)

inst_92180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffe00000000; valaddr_reg:x3; val_offset:276540*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276540*0 + 3*20*FLEN/8, x4, x1, x2)

inst_92181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffff00000000; valaddr_reg:x3; val_offset:276543*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276543*0 + 3*21*FLEN/8, x4, x1, x2)

inst_92182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffff80000000; valaddr_reg:x3; val_offset:276546*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276546*0 + 3*22*FLEN/8, x4, x1, x2)

inst_92183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffc0000000; valaddr_reg:x3; val_offset:276549*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276549*0 + 3*23*FLEN/8, x4, x1, x2)

inst_92184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffe0000000; valaddr_reg:x3; val_offset:276552*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276552*0 + 3*24*FLEN/8, x4, x1, x2)

inst_92185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffff0000000; valaddr_reg:x3; val_offset:276555*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276555*0 + 3*25*FLEN/8, x4, x1, x2)

inst_92186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffff8000000; valaddr_reg:x3; val_offset:276558*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276558*0 + 3*26*FLEN/8, x4, x1, x2)

inst_92187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffc000000; valaddr_reg:x3; val_offset:276561*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276561*0 + 3*27*FLEN/8, x4, x1, x2)

inst_92188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffe000000; valaddr_reg:x3; val_offset:276564*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276564*0 + 3*28*FLEN/8, x4, x1, x2)

inst_92189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffff000000; valaddr_reg:x3; val_offset:276567*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276567*0 + 3*29*FLEN/8, x4, x1, x2)

inst_92190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffff800000; valaddr_reg:x3; val_offset:276570*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276570*0 + 3*30*FLEN/8, x4, x1, x2)

inst_92191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffffc00000; valaddr_reg:x3; val_offset:276573*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276573*0 + 3*31*FLEN/8, x4, x1, x2)

inst_92192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffffe00000; valaddr_reg:x3; val_offset:276576*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276576*0 + 3*32*FLEN/8, x4, x1, x2)

inst_92193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffff00000; valaddr_reg:x3; val_offset:276579*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276579*0 + 3*33*FLEN/8, x4, x1, x2)

inst_92194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffff80000; valaddr_reg:x3; val_offset:276582*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276582*0 + 3*34*FLEN/8, x4, x1, x2)

inst_92195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffffc0000; valaddr_reg:x3; val_offset:276585*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276585*0 + 3*35*FLEN/8, x4, x1, x2)

inst_92196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffffe0000; valaddr_reg:x3; val_offset:276588*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276588*0 + 3*36*FLEN/8, x4, x1, x2)

inst_92197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffffff0000; valaddr_reg:x3; val_offset:276591*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276591*0 + 3*37*FLEN/8, x4, x1, x2)

inst_92198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffffff8000; valaddr_reg:x3; val_offset:276594*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276594*0 + 3*38*FLEN/8, x4, x1, x2)

inst_92199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffffffc000; valaddr_reg:x3; val_offset:276597*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276597*0 + 3*39*FLEN/8, x4, x1, x2)

inst_92200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffffffe000; valaddr_reg:x3; val_offset:276600*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276600*0 + 3*40*FLEN/8, x4, x1, x2)

inst_92201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffffff000; valaddr_reg:x3; val_offset:276603*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276603*0 + 3*41*FLEN/8, x4, x1, x2)

inst_92202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffffff800; valaddr_reg:x3; val_offset:276606*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276606*0 + 3*42*FLEN/8, x4, x1, x2)

inst_92203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffffffc00; valaddr_reg:x3; val_offset:276609*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276609*0 + 3*43*FLEN/8, x4, x1, x2)

inst_92204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffffffe00; valaddr_reg:x3; val_offset:276612*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276612*0 + 3*44*FLEN/8, x4, x1, x2)

inst_92205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffffffff00; valaddr_reg:x3; val_offset:276615*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276615*0 + 3*45*FLEN/8, x4, x1, x2)

inst_92206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffffffff80; valaddr_reg:x3; val_offset:276618*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276618*0 + 3*46*FLEN/8, x4, x1, x2)

inst_92207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:276621*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276621*0 + 3*47*FLEN/8, x4, x1, x2)

inst_92208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:276624*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276624*0 + 3*48*FLEN/8, x4, x1, x2)

inst_92209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:276627*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276627*0 + 3*49*FLEN/8, x4, x1, x2)

inst_92210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:276630*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276630*0 + 3*50*FLEN/8, x4, x1, x2)

inst_92211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:276633*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276633*0 + 3*51*FLEN/8, x4, x1, x2)

inst_92212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:276636*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276636*0 + 3*52*FLEN/8, x4, x1, x2)

inst_92213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce0efa212d486 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5face0efa212d486; op2val:0x8000;
op3val:0x801fffffffffffff; valaddr_reg:x3; val_offset:276639*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276639*0 + 3*53*FLEN/8, x4, x1, x2)

inst_92214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:276642*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276642*0 + 3*54*FLEN/8, x4, x1, x2)

inst_92215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:276645*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276645*0 + 3*55*FLEN/8, x4, x1, x2)

inst_92216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:276648*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276648*0 + 3*56*FLEN/8, x4, x1, x2)

inst_92217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:276651*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276651*0 + 3*57*FLEN/8, x4, x1, x2)

inst_92218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:276654*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276654*0 + 3*58*FLEN/8, x4, x1, x2)

inst_92219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:276657*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276657*0 + 3*59*FLEN/8, x4, x1, x2)

inst_92220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:276660*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276660*0 + 3*60*FLEN/8, x4, x1, x2)

inst_92221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:276663*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276663*0 + 3*61*FLEN/8, x4, x1, x2)

inst_92222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:276666*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276666*0 + 3*62*FLEN/8, x4, x1, x2)

inst_92223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:276669*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276669*0 + 3*63*FLEN/8, x4, x1, x2)

inst_92224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:276672*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276672*0 + 3*64*FLEN/8, x4, x1, x2)

inst_92225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:276675*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276675*0 + 3*65*FLEN/8, x4, x1, x2)

inst_92226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:276678*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276678*0 + 3*66*FLEN/8, x4, x1, x2)

inst_92227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:276681*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276681*0 + 3*67*FLEN/8, x4, x1, x2)

inst_92228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:276684*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276684*0 + 3*68*FLEN/8, x4, x1, x2)

inst_92229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:276687*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276687*0 + 3*69*FLEN/8, x4, x1, x2)

inst_92230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:276690*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276690*0 + 3*70*FLEN/8, x4, x1, x2)

inst_92231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:276693*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276693*0 + 3*71*FLEN/8, x4, x1, x2)

inst_92232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:276696*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276696*0 + 3*72*FLEN/8, x4, x1, x2)

inst_92233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:276699*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276699*0 + 3*73*FLEN/8, x4, x1, x2)

inst_92234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:276702*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276702*0 + 3*74*FLEN/8, x4, x1, x2)

inst_92235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:276705*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276705*0 + 3*75*FLEN/8, x4, x1, x2)

inst_92236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000000000000; valaddr_reg:x3; val_offset:276708*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276708*0 + 3*76*FLEN/8, x4, x1, x2)

inst_92237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000000000001; valaddr_reg:x3; val_offset:276711*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276711*0 + 3*77*FLEN/8, x4, x1, x2)

inst_92238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000000000003; valaddr_reg:x3; val_offset:276714*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276714*0 + 3*78*FLEN/8, x4, x1, x2)

inst_92239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000000000007; valaddr_reg:x3; val_offset:276717*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276717*0 + 3*79*FLEN/8, x4, x1, x2)

inst_92240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000000000000f; valaddr_reg:x3; val_offset:276720*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276720*0 + 3*80*FLEN/8, x4, x1, x2)

inst_92241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000000000001f; valaddr_reg:x3; val_offset:276723*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276723*0 + 3*81*FLEN/8, x4, x1, x2)

inst_92242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000000000003f; valaddr_reg:x3; val_offset:276726*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276726*0 + 3*82*FLEN/8, x4, x1, x2)

inst_92243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000000000007f; valaddr_reg:x3; val_offset:276729*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276729*0 + 3*83*FLEN/8, x4, x1, x2)

inst_92244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00000000000ff; valaddr_reg:x3; val_offset:276732*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276732*0 + 3*84*FLEN/8, x4, x1, x2)

inst_92245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00000000001ff; valaddr_reg:x3; val_offset:276735*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276735*0 + 3*85*FLEN/8, x4, x1, x2)

inst_92246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00000000003ff; valaddr_reg:x3; val_offset:276738*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276738*0 + 3*86*FLEN/8, x4, x1, x2)

inst_92247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00000000007ff; valaddr_reg:x3; val_offset:276741*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276741*0 + 3*87*FLEN/8, x4, x1, x2)

inst_92248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000000000fff; valaddr_reg:x3; val_offset:276744*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276744*0 + 3*88*FLEN/8, x4, x1, x2)

inst_92249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000000001fff; valaddr_reg:x3; val_offset:276747*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276747*0 + 3*89*FLEN/8, x4, x1, x2)

inst_92250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000000003fff; valaddr_reg:x3; val_offset:276750*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276750*0 + 3*90*FLEN/8, x4, x1, x2)

inst_92251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000000007fff; valaddr_reg:x3; val_offset:276753*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276753*0 + 3*91*FLEN/8, x4, x1, x2)

inst_92252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000000000ffff; valaddr_reg:x3; val_offset:276756*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276756*0 + 3*92*FLEN/8, x4, x1, x2)

inst_92253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000000001ffff; valaddr_reg:x3; val_offset:276759*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276759*0 + 3*93*FLEN/8, x4, x1, x2)

inst_92254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000000003ffff; valaddr_reg:x3; val_offset:276762*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276762*0 + 3*94*FLEN/8, x4, x1, x2)

inst_92255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000000007ffff; valaddr_reg:x3; val_offset:276765*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276765*0 + 3*95*FLEN/8, x4, x1, x2)

inst_92256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00000000fffff; valaddr_reg:x3; val_offset:276768*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276768*0 + 3*96*FLEN/8, x4, x1, x2)

inst_92257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00000001fffff; valaddr_reg:x3; val_offset:276771*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276771*0 + 3*97*FLEN/8, x4, x1, x2)

inst_92258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00000003fffff; valaddr_reg:x3; val_offset:276774*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276774*0 + 3*98*FLEN/8, x4, x1, x2)

inst_92259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00000007fffff; valaddr_reg:x3; val_offset:276777*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276777*0 + 3*99*FLEN/8, x4, x1, x2)

inst_92260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000000ffffff; valaddr_reg:x3; val_offset:276780*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276780*0 + 3*100*FLEN/8, x4, x1, x2)

inst_92261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000001ffffff; valaddr_reg:x3; val_offset:276783*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276783*0 + 3*101*FLEN/8, x4, x1, x2)

inst_92262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000003ffffff; valaddr_reg:x3; val_offset:276786*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276786*0 + 3*102*FLEN/8, x4, x1, x2)

inst_92263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000007ffffff; valaddr_reg:x3; val_offset:276789*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276789*0 + 3*103*FLEN/8, x4, x1, x2)

inst_92264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000000fffffff; valaddr_reg:x3; val_offset:276792*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276792*0 + 3*104*FLEN/8, x4, x1, x2)

inst_92265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000001fffffff; valaddr_reg:x3; val_offset:276795*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276795*0 + 3*105*FLEN/8, x4, x1, x2)

inst_92266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000003fffffff; valaddr_reg:x3; val_offset:276798*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276798*0 + 3*106*FLEN/8, x4, x1, x2)

inst_92267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000007fffffff; valaddr_reg:x3; val_offset:276801*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276801*0 + 3*107*FLEN/8, x4, x1, x2)

inst_92268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00000ffffffff; valaddr_reg:x3; val_offset:276804*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276804*0 + 3*108*FLEN/8, x4, x1, x2)

inst_92269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00001ffffffff; valaddr_reg:x3; val_offset:276807*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276807*0 + 3*109*FLEN/8, x4, x1, x2)

inst_92270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00003ffffffff; valaddr_reg:x3; val_offset:276810*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276810*0 + 3*110*FLEN/8, x4, x1, x2)

inst_92271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00007ffffffff; valaddr_reg:x3; val_offset:276813*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276813*0 + 3*111*FLEN/8, x4, x1, x2)

inst_92272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0000fffffffff; valaddr_reg:x3; val_offset:276816*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276816*0 + 3*112*FLEN/8, x4, x1, x2)

inst_92273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0001fffffffff; valaddr_reg:x3; val_offset:276819*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276819*0 + 3*113*FLEN/8, x4, x1, x2)

inst_92274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0003fffffffff; valaddr_reg:x3; val_offset:276822*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276822*0 + 3*114*FLEN/8, x4, x1, x2)

inst_92275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0007fffffffff; valaddr_reg:x3; val_offset:276825*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276825*0 + 3*115*FLEN/8, x4, x1, x2)

inst_92276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b000ffffffffff; valaddr_reg:x3; val_offset:276828*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276828*0 + 3*116*FLEN/8, x4, x1, x2)

inst_92277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b001ffffffffff; valaddr_reg:x3; val_offset:276831*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276831*0 + 3*117*FLEN/8, x4, x1, x2)

inst_92278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b003ffffffffff; valaddr_reg:x3; val_offset:276834*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276834*0 + 3*118*FLEN/8, x4, x1, x2)

inst_92279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b007ffffffffff; valaddr_reg:x3; val_offset:276837*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276837*0 + 3*119*FLEN/8, x4, x1, x2)

inst_92280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b00fffffffffff; valaddr_reg:x3; val_offset:276840*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276840*0 + 3*120*FLEN/8, x4, x1, x2)

inst_92281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b01fffffffffff; valaddr_reg:x3; val_offset:276843*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276843*0 + 3*121*FLEN/8, x4, x1, x2)

inst_92282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b03fffffffffff; valaddr_reg:x3; val_offset:276846*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276846*0 + 3*122*FLEN/8, x4, x1, x2)

inst_92283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b07fffffffffff; valaddr_reg:x3; val_offset:276849*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276849*0 + 3*123*FLEN/8, x4, x1, x2)

inst_92284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b0ffffffffffff; valaddr_reg:x3; val_offset:276852*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276852*0 + 3*124*FLEN/8, x4, x1, x2)

inst_92285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b1ffffffffffff; valaddr_reg:x3; val_offset:276855*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276855*0 + 3*125*FLEN/8, x4, x1, x2)

inst_92286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b3ffffffffffff; valaddr_reg:x3; val_offset:276858*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276858*0 + 3*126*FLEN/8, x4, x1, x2)

inst_92287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b7ffffffffffff; valaddr_reg:x3; val_offset:276861*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276861*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_92288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81b8000000000000; valaddr_reg:x3; val_offset:276864*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276864*0 + 3*128*FLEN/8, x4, x1, x2)

inst_92289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bc000000000000; valaddr_reg:x3; val_offset:276867*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276867*0 + 3*129*FLEN/8, x4, x1, x2)

inst_92290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81be000000000000; valaddr_reg:x3; val_offset:276870*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276870*0 + 3*130*FLEN/8, x4, x1, x2)

inst_92291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bf000000000000; valaddr_reg:x3; val_offset:276873*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276873*0 + 3*131*FLEN/8, x4, x1, x2)

inst_92292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bf800000000000; valaddr_reg:x3; val_offset:276876*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276876*0 + 3*132*FLEN/8, x4, x1, x2)

inst_92293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfc00000000000; valaddr_reg:x3; val_offset:276879*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276879*0 + 3*133*FLEN/8, x4, x1, x2)

inst_92294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfe00000000000; valaddr_reg:x3; val_offset:276882*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276882*0 + 3*134*FLEN/8, x4, x1, x2)

inst_92295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bff00000000000; valaddr_reg:x3; val_offset:276885*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276885*0 + 3*135*FLEN/8, x4, x1, x2)

inst_92296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bff80000000000; valaddr_reg:x3; val_offset:276888*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276888*0 + 3*136*FLEN/8, x4, x1, x2)

inst_92297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffc0000000000; valaddr_reg:x3; val_offset:276891*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276891*0 + 3*137*FLEN/8, x4, x1, x2)

inst_92298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffe0000000000; valaddr_reg:x3; val_offset:276894*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276894*0 + 3*138*FLEN/8, x4, x1, x2)

inst_92299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfff0000000000; valaddr_reg:x3; val_offset:276897*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276897*0 + 3*139*FLEN/8, x4, x1, x2)

inst_92300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfff8000000000; valaddr_reg:x3; val_offset:276900*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276900*0 + 3*140*FLEN/8, x4, x1, x2)

inst_92301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffc000000000; valaddr_reg:x3; val_offset:276903*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276903*0 + 3*141*FLEN/8, x4, x1, x2)

inst_92302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffe000000000; valaddr_reg:x3; val_offset:276906*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276906*0 + 3*142*FLEN/8, x4, x1, x2)

inst_92303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffff000000000; valaddr_reg:x3; val_offset:276909*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276909*0 + 3*143*FLEN/8, x4, x1, x2)

inst_92304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffff800000000; valaddr_reg:x3; val_offset:276912*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276912*0 + 3*144*FLEN/8, x4, x1, x2)

inst_92305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffc00000000; valaddr_reg:x3; val_offset:276915*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276915*0 + 3*145*FLEN/8, x4, x1, x2)

inst_92306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffe00000000; valaddr_reg:x3; val_offset:276918*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276918*0 + 3*146*FLEN/8, x4, x1, x2)

inst_92307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffff00000000; valaddr_reg:x3; val_offset:276921*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276921*0 + 3*147*FLEN/8, x4, x1, x2)

inst_92308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffff80000000; valaddr_reg:x3; val_offset:276924*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276924*0 + 3*148*FLEN/8, x4, x1, x2)

inst_92309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffc0000000; valaddr_reg:x3; val_offset:276927*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276927*0 + 3*149*FLEN/8, x4, x1, x2)

inst_92310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffe0000000; valaddr_reg:x3; val_offset:276930*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276930*0 + 3*150*FLEN/8, x4, x1, x2)

inst_92311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffff0000000; valaddr_reg:x3; val_offset:276933*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276933*0 + 3*151*FLEN/8, x4, x1, x2)

inst_92312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffff8000000; valaddr_reg:x3; val_offset:276936*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276936*0 + 3*152*FLEN/8, x4, x1, x2)

inst_92313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffc000000; valaddr_reg:x3; val_offset:276939*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276939*0 + 3*153*FLEN/8, x4, x1, x2)

inst_92314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffe000000; valaddr_reg:x3; val_offset:276942*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276942*0 + 3*154*FLEN/8, x4, x1, x2)

inst_92315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffff000000; valaddr_reg:x3; val_offset:276945*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276945*0 + 3*155*FLEN/8, x4, x1, x2)

inst_92316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffff800000; valaddr_reg:x3; val_offset:276948*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276948*0 + 3*156*FLEN/8, x4, x1, x2)

inst_92317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffffc00000; valaddr_reg:x3; val_offset:276951*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276951*0 + 3*157*FLEN/8, x4, x1, x2)

inst_92318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffffe00000; valaddr_reg:x3; val_offset:276954*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276954*0 + 3*158*FLEN/8, x4, x1, x2)

inst_92319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffff00000; valaddr_reg:x3; val_offset:276957*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276957*0 + 3*159*FLEN/8, x4, x1, x2)

inst_92320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffff80000; valaddr_reg:x3; val_offset:276960*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276960*0 + 3*160*FLEN/8, x4, x1, x2)

inst_92321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffffc0000; valaddr_reg:x3; val_offset:276963*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276963*0 + 3*161*FLEN/8, x4, x1, x2)

inst_92322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffffe0000; valaddr_reg:x3; val_offset:276966*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276966*0 + 3*162*FLEN/8, x4, x1, x2)

inst_92323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffffff0000; valaddr_reg:x3; val_offset:276969*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276969*0 + 3*163*FLEN/8, x4, x1, x2)

inst_92324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffffff8000; valaddr_reg:x3; val_offset:276972*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276972*0 + 3*164*FLEN/8, x4, x1, x2)

inst_92325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffffffc000; valaddr_reg:x3; val_offset:276975*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276975*0 + 3*165*FLEN/8, x4, x1, x2)

inst_92326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffffffe000; valaddr_reg:x3; val_offset:276978*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276978*0 + 3*166*FLEN/8, x4, x1, x2)

inst_92327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffffff000; valaddr_reg:x3; val_offset:276981*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276981*0 + 3*167*FLEN/8, x4, x1, x2)

inst_92328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffffff800; valaddr_reg:x3; val_offset:276984*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276984*0 + 3*168*FLEN/8, x4, x1, x2)

inst_92329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffffffc00; valaddr_reg:x3; val_offset:276987*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276987*0 + 3*169*FLEN/8, x4, x1, x2)

inst_92330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffffffe00; valaddr_reg:x3; val_offset:276990*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276990*0 + 3*170*FLEN/8, x4, x1, x2)

inst_92331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffffffff00; valaddr_reg:x3; val_offset:276993*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276993*0 + 3*171*FLEN/8, x4, x1, x2)

inst_92332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffffffff80; valaddr_reg:x3; val_offset:276996*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276996*0 + 3*172*FLEN/8, x4, x1, x2)

inst_92333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffffffffc0; valaddr_reg:x3; val_offset:276999*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276999*0 + 3*173*FLEN/8, x4, x1, x2)

inst_92334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffffffffe0; valaddr_reg:x3; val_offset:277002*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277002*0 + 3*174*FLEN/8, x4, x1, x2)

inst_92335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffffffff0; valaddr_reg:x3; val_offset:277005*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277005*0 + 3*175*FLEN/8, x4, x1, x2)

inst_92336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffffffff8; valaddr_reg:x3; val_offset:277008*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277008*0 + 3*176*FLEN/8, x4, x1, x2)

inst_92337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffffffffc; valaddr_reg:x3; val_offset:277011*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277011*0 + 3*177*FLEN/8, x4, x1, x2)

inst_92338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bffffffffffffe; valaddr_reg:x3; val_offset:277014*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277014*0 + 3*178*FLEN/8, x4, x1, x2)

inst_92339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf070977a66ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf070977a66ae; op2val:0x8000;
op3val:0x81bfffffffffffff; valaddr_reg:x3; val_offset:277017*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277017*0 + 3*179*FLEN/8, x4, x1, x2)

inst_92340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000000000000; valaddr_reg:x3; val_offset:277020*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277020*0 + 3*180*FLEN/8, x4, x1, x2)

inst_92341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000000000001; valaddr_reg:x3; val_offset:277023*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277023*0 + 3*181*FLEN/8, x4, x1, x2)

inst_92342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000000000003; valaddr_reg:x3; val_offset:277026*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277026*0 + 3*182*FLEN/8, x4, x1, x2)

inst_92343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000000000007; valaddr_reg:x3; val_offset:277029*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277029*0 + 3*183*FLEN/8, x4, x1, x2)

inst_92344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000000000000f; valaddr_reg:x3; val_offset:277032*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277032*0 + 3*184*FLEN/8, x4, x1, x2)

inst_92345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000000000001f; valaddr_reg:x3; val_offset:277035*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277035*0 + 3*185*FLEN/8, x4, x1, x2)

inst_92346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000000000003f; valaddr_reg:x3; val_offset:277038*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277038*0 + 3*186*FLEN/8, x4, x1, x2)

inst_92347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000000000007f; valaddr_reg:x3; val_offset:277041*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277041*0 + 3*187*FLEN/8, x4, x1, x2)

inst_92348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00000000000ff; valaddr_reg:x3; val_offset:277044*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277044*0 + 3*188*FLEN/8, x4, x1, x2)

inst_92349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00000000001ff; valaddr_reg:x3; val_offset:277047*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277047*0 + 3*189*FLEN/8, x4, x1, x2)

inst_92350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00000000003ff; valaddr_reg:x3; val_offset:277050*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277050*0 + 3*190*FLEN/8, x4, x1, x2)

inst_92351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00000000007ff; valaddr_reg:x3; val_offset:277053*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277053*0 + 3*191*FLEN/8, x4, x1, x2)

inst_92352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000000000fff; valaddr_reg:x3; val_offset:277056*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277056*0 + 3*192*FLEN/8, x4, x1, x2)

inst_92353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000000001fff; valaddr_reg:x3; val_offset:277059*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277059*0 + 3*193*FLEN/8, x4, x1, x2)

inst_92354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000000003fff; valaddr_reg:x3; val_offset:277062*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277062*0 + 3*194*FLEN/8, x4, x1, x2)

inst_92355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000000007fff; valaddr_reg:x3; val_offset:277065*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277065*0 + 3*195*FLEN/8, x4, x1, x2)

inst_92356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000000000ffff; valaddr_reg:x3; val_offset:277068*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277068*0 + 3*196*FLEN/8, x4, x1, x2)

inst_92357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000000001ffff; valaddr_reg:x3; val_offset:277071*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277071*0 + 3*197*FLEN/8, x4, x1, x2)

inst_92358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000000003ffff; valaddr_reg:x3; val_offset:277074*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277074*0 + 3*198*FLEN/8, x4, x1, x2)

inst_92359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000000007ffff; valaddr_reg:x3; val_offset:277077*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277077*0 + 3*199*FLEN/8, x4, x1, x2)

inst_92360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00000000fffff; valaddr_reg:x3; val_offset:277080*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277080*0 + 3*200*FLEN/8, x4, x1, x2)

inst_92361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00000001fffff; valaddr_reg:x3; val_offset:277083*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277083*0 + 3*201*FLEN/8, x4, x1, x2)

inst_92362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00000003fffff; valaddr_reg:x3; val_offset:277086*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277086*0 + 3*202*FLEN/8, x4, x1, x2)

inst_92363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00000007fffff; valaddr_reg:x3; val_offset:277089*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277089*0 + 3*203*FLEN/8, x4, x1, x2)

inst_92364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000000ffffff; valaddr_reg:x3; val_offset:277092*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277092*0 + 3*204*FLEN/8, x4, x1, x2)

inst_92365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000001ffffff; valaddr_reg:x3; val_offset:277095*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277095*0 + 3*205*FLEN/8, x4, x1, x2)

inst_92366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000003ffffff; valaddr_reg:x3; val_offset:277098*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277098*0 + 3*206*FLEN/8, x4, x1, x2)

inst_92367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000007ffffff; valaddr_reg:x3; val_offset:277101*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277101*0 + 3*207*FLEN/8, x4, x1, x2)

inst_92368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000000fffffff; valaddr_reg:x3; val_offset:277104*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277104*0 + 3*208*FLEN/8, x4, x1, x2)

inst_92369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000001fffffff; valaddr_reg:x3; val_offset:277107*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277107*0 + 3*209*FLEN/8, x4, x1, x2)

inst_92370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000003fffffff; valaddr_reg:x3; val_offset:277110*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277110*0 + 3*210*FLEN/8, x4, x1, x2)

inst_92371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000007fffffff; valaddr_reg:x3; val_offset:277113*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277113*0 + 3*211*FLEN/8, x4, x1, x2)

inst_92372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00000ffffffff; valaddr_reg:x3; val_offset:277116*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277116*0 + 3*212*FLEN/8, x4, x1, x2)

inst_92373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00001ffffffff; valaddr_reg:x3; val_offset:277119*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277119*0 + 3*213*FLEN/8, x4, x1, x2)

inst_92374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00003ffffffff; valaddr_reg:x3; val_offset:277122*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277122*0 + 3*214*FLEN/8, x4, x1, x2)

inst_92375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00007ffffffff; valaddr_reg:x3; val_offset:277125*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277125*0 + 3*215*FLEN/8, x4, x1, x2)

inst_92376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0000fffffffff; valaddr_reg:x3; val_offset:277128*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277128*0 + 3*216*FLEN/8, x4, x1, x2)

inst_92377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0001fffffffff; valaddr_reg:x3; val_offset:277131*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277131*0 + 3*217*FLEN/8, x4, x1, x2)

inst_92378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0003fffffffff; valaddr_reg:x3; val_offset:277134*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277134*0 + 3*218*FLEN/8, x4, x1, x2)

inst_92379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0007fffffffff; valaddr_reg:x3; val_offset:277137*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277137*0 + 3*219*FLEN/8, x4, x1, x2)

inst_92380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf000ffffffffff; valaddr_reg:x3; val_offset:277140*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277140*0 + 3*220*FLEN/8, x4, x1, x2)

inst_92381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf001ffffffffff; valaddr_reg:x3; val_offset:277143*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277143*0 + 3*221*FLEN/8, x4, x1, x2)

inst_92382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf003ffffffffff; valaddr_reg:x3; val_offset:277146*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277146*0 + 3*222*FLEN/8, x4, x1, x2)

inst_92383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf007ffffffffff; valaddr_reg:x3; val_offset:277149*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277149*0 + 3*223*FLEN/8, x4, x1, x2)

inst_92384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf00fffffffffff; valaddr_reg:x3; val_offset:277152*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277152*0 + 3*224*FLEN/8, x4, x1, x2)

inst_92385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf01fffffffffff; valaddr_reg:x3; val_offset:277155*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277155*0 + 3*225*FLEN/8, x4, x1, x2)

inst_92386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf03fffffffffff; valaddr_reg:x3; val_offset:277158*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277158*0 + 3*226*FLEN/8, x4, x1, x2)

inst_92387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf07fffffffffff; valaddr_reg:x3; val_offset:277161*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277161*0 + 3*227*FLEN/8, x4, x1, x2)

inst_92388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf0ffffffffffff; valaddr_reg:x3; val_offset:277164*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277164*0 + 3*228*FLEN/8, x4, x1, x2)

inst_92389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf1ffffffffffff; valaddr_reg:x3; val_offset:277167*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277167*0 + 3*229*FLEN/8, x4, x1, x2)

inst_92390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf3ffffffffffff; valaddr_reg:x3; val_offset:277170*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277170*0 + 3*230*FLEN/8, x4, x1, x2)

inst_92391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf7ffffffffffff; valaddr_reg:x3; val_offset:277173*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277173*0 + 3*231*FLEN/8, x4, x1, x2)

inst_92392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaf8000000000000; valaddr_reg:x3; val_offset:277176*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277176*0 + 3*232*FLEN/8, x4, x1, x2)

inst_92393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafc000000000000; valaddr_reg:x3; val_offset:277179*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277179*0 + 3*233*FLEN/8, x4, x1, x2)

inst_92394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafe000000000000; valaddr_reg:x3; val_offset:277182*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277182*0 + 3*234*FLEN/8, x4, x1, x2)

inst_92395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaff000000000000; valaddr_reg:x3; val_offset:277185*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277185*0 + 3*235*FLEN/8, x4, x1, x2)

inst_92396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaff800000000000; valaddr_reg:x3; val_offset:277188*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277188*0 + 3*236*FLEN/8, x4, x1, x2)

inst_92397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffc00000000000; valaddr_reg:x3; val_offset:277191*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277191*0 + 3*237*FLEN/8, x4, x1, x2)

inst_92398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffe00000000000; valaddr_reg:x3; val_offset:277194*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277194*0 + 3*238*FLEN/8, x4, x1, x2)

inst_92399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafff00000000000; valaddr_reg:x3; val_offset:277197*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277197*0 + 3*239*FLEN/8, x4, x1, x2)

inst_92400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafff80000000000; valaddr_reg:x3; val_offset:277200*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277200*0 + 3*240*FLEN/8, x4, x1, x2)

inst_92401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffc0000000000; valaddr_reg:x3; val_offset:277203*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277203*0 + 3*241*FLEN/8, x4, x1, x2)

inst_92402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffe0000000000; valaddr_reg:x3; val_offset:277206*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277206*0 + 3*242*FLEN/8, x4, x1, x2)

inst_92403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffff0000000000; valaddr_reg:x3; val_offset:277209*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277209*0 + 3*243*FLEN/8, x4, x1, x2)

inst_92404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffff8000000000; valaddr_reg:x3; val_offset:277212*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277212*0 + 3*244*FLEN/8, x4, x1, x2)

inst_92405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffc000000000; valaddr_reg:x3; val_offset:277215*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277215*0 + 3*245*FLEN/8, x4, x1, x2)

inst_92406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffe000000000; valaddr_reg:x3; val_offset:277218*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277218*0 + 3*246*FLEN/8, x4, x1, x2)

inst_92407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffff000000000; valaddr_reg:x3; val_offset:277221*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277221*0 + 3*247*FLEN/8, x4, x1, x2)

inst_92408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffff800000000; valaddr_reg:x3; val_offset:277224*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277224*0 + 3*248*FLEN/8, x4, x1, x2)

inst_92409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffc00000000; valaddr_reg:x3; val_offset:277227*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277227*0 + 3*249*FLEN/8, x4, x1, x2)

inst_92410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffe00000000; valaddr_reg:x3; val_offset:277230*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277230*0 + 3*250*FLEN/8, x4, x1, x2)

inst_92411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffff00000000; valaddr_reg:x3; val_offset:277233*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277233*0 + 3*251*FLEN/8, x4, x1, x2)

inst_92412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffff80000000; valaddr_reg:x3; val_offset:277236*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277236*0 + 3*252*FLEN/8, x4, x1, x2)

inst_92413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffc0000000; valaddr_reg:x3; val_offset:277239*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277239*0 + 3*253*FLEN/8, x4, x1, x2)

inst_92414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffe0000000; valaddr_reg:x3; val_offset:277242*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277242*0 + 3*254*FLEN/8, x4, x1, x2)

inst_92415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffff0000000; valaddr_reg:x3; val_offset:277245*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277245*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_92416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffff8000000; valaddr_reg:x3; val_offset:277248*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277248*0 + 3*256*FLEN/8, x4, x1, x2)

inst_92417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffc000000; valaddr_reg:x3; val_offset:277251*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277251*0 + 3*257*FLEN/8, x4, x1, x2)

inst_92418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffe000000; valaddr_reg:x3; val_offset:277254*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277254*0 + 3*258*FLEN/8, x4, x1, x2)

inst_92419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffff000000; valaddr_reg:x3; val_offset:277257*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277257*0 + 3*259*FLEN/8, x4, x1, x2)

inst_92420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffff800000; valaddr_reg:x3; val_offset:277260*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277260*0 + 3*260*FLEN/8, x4, x1, x2)

inst_92421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffffc00000; valaddr_reg:x3; val_offset:277263*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277263*0 + 3*261*FLEN/8, x4, x1, x2)

inst_92422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffffe00000; valaddr_reg:x3; val_offset:277266*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277266*0 + 3*262*FLEN/8, x4, x1, x2)

inst_92423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffff00000; valaddr_reg:x3; val_offset:277269*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277269*0 + 3*263*FLEN/8, x4, x1, x2)

inst_92424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffff80000; valaddr_reg:x3; val_offset:277272*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277272*0 + 3*264*FLEN/8, x4, x1, x2)

inst_92425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffffc0000; valaddr_reg:x3; val_offset:277275*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277275*0 + 3*265*FLEN/8, x4, x1, x2)

inst_92426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffffe0000; valaddr_reg:x3; val_offset:277278*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277278*0 + 3*266*FLEN/8, x4, x1, x2)

inst_92427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffffff0000; valaddr_reg:x3; val_offset:277281*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277281*0 + 3*267*FLEN/8, x4, x1, x2)

inst_92428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffffff8000; valaddr_reg:x3; val_offset:277284*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277284*0 + 3*268*FLEN/8, x4, x1, x2)

inst_92429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffffffc000; valaddr_reg:x3; val_offset:277287*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277287*0 + 3*269*FLEN/8, x4, x1, x2)

inst_92430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffffffe000; valaddr_reg:x3; val_offset:277290*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277290*0 + 3*270*FLEN/8, x4, x1, x2)

inst_92431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffffff000; valaddr_reg:x3; val_offset:277293*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277293*0 + 3*271*FLEN/8, x4, x1, x2)

inst_92432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffffff800; valaddr_reg:x3; val_offset:277296*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277296*0 + 3*272*FLEN/8, x4, x1, x2)

inst_92433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffffffc00; valaddr_reg:x3; val_offset:277299*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277299*0 + 3*273*FLEN/8, x4, x1, x2)

inst_92434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffffffe00; valaddr_reg:x3; val_offset:277302*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277302*0 + 3*274*FLEN/8, x4, x1, x2)

inst_92435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffffffff00; valaddr_reg:x3; val_offset:277305*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277305*0 + 3*275*FLEN/8, x4, x1, x2)

inst_92436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffffffff80; valaddr_reg:x3; val_offset:277308*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277308*0 + 3*276*FLEN/8, x4, x1, x2)

inst_92437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffffffffc0; valaddr_reg:x3; val_offset:277311*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277311*0 + 3*277*FLEN/8, x4, x1, x2)

inst_92438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffffffffe0; valaddr_reg:x3; val_offset:277314*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277314*0 + 3*278*FLEN/8, x4, x1, x2)

inst_92439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffffffff0; valaddr_reg:x3; val_offset:277317*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277317*0 + 3*279*FLEN/8, x4, x1, x2)

inst_92440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffffffff8; valaddr_reg:x3; val_offset:277320*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277320*0 + 3*280*FLEN/8, x4, x1, x2)

inst_92441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffffffffc; valaddr_reg:x3; val_offset:277323*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277323*0 + 3*281*FLEN/8, x4, x1, x2)

inst_92442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbafffffffffffffe; valaddr_reg:x3; val_offset:277326*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277326*0 + 3*282*FLEN/8, x4, x1, x2)

inst_92443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3af and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbaffffffffffffff; valaddr_reg:x3; val_offset:277329*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277329*0 + 3*283*FLEN/8, x4, x1, x2)

inst_92444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:277332*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277332*0 + 3*284*FLEN/8, x4, x1, x2)

inst_92445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:277335*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277335*0 + 3*285*FLEN/8, x4, x1, x2)

inst_92446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:277338*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277338*0 + 3*286*FLEN/8, x4, x1, x2)

inst_92447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:277341*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277341*0 + 3*287*FLEN/8, x4, x1, x2)

inst_92448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:277344*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277344*0 + 3*288*FLEN/8, x4, x1, x2)

inst_92449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:277347*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277347*0 + 3*289*FLEN/8, x4, x1, x2)

inst_92450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:277350*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277350*0 + 3*290*FLEN/8, x4, x1, x2)

inst_92451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:277353*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277353*0 + 3*291*FLEN/8, x4, x1, x2)

inst_92452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:277356*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277356*0 + 3*292*FLEN/8, x4, x1, x2)

inst_92453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:277359*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277359*0 + 3*293*FLEN/8, x4, x1, x2)

inst_92454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:277362*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277362*0 + 3*294*FLEN/8, x4, x1, x2)

inst_92455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:277365*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277365*0 + 3*295*FLEN/8, x4, x1, x2)

inst_92456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:277368*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277368*0 + 3*296*FLEN/8, x4, x1, x2)

inst_92457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:277371*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277371*0 + 3*297*FLEN/8, x4, x1, x2)

inst_92458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:277374*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277374*0 + 3*298*FLEN/8, x4, x1, x2)

inst_92459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:277377*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277377*0 + 3*299*FLEN/8, x4, x1, x2)

inst_92460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:277380*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277380*0 + 3*300*FLEN/8, x4, x1, x2)

inst_92461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:277383*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277383*0 + 3*301*FLEN/8, x4, x1, x2)

inst_92462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:277386*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277386*0 + 3*302*FLEN/8, x4, x1, x2)

inst_92463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:277389*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277389*0 + 3*303*FLEN/8, x4, x1, x2)

inst_92464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:277392*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277392*0 + 3*304*FLEN/8, x4, x1, x2)

inst_92465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcf86800dcabd2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x1ac5a182b6ee4 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5facf86800dcabd2; op2val:0x9fc1ac5a182b6ee4;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:277395*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277395*0 + 3*305*FLEN/8, x4, x1, x2)

inst_92466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000000000000; valaddr_reg:x3; val_offset:277398*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277398*0 + 3*306*FLEN/8, x4, x1, x2)

inst_92467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000000000001; valaddr_reg:x3; val_offset:277401*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277401*0 + 3*307*FLEN/8, x4, x1, x2)

inst_92468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000000000003; valaddr_reg:x3; val_offset:277404*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277404*0 + 3*308*FLEN/8, x4, x1, x2)

inst_92469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000000000007; valaddr_reg:x3; val_offset:277407*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277407*0 + 3*309*FLEN/8, x4, x1, x2)

inst_92470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000000000000f; valaddr_reg:x3; val_offset:277410*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277410*0 + 3*310*FLEN/8, x4, x1, x2)

inst_92471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000000000001f; valaddr_reg:x3; val_offset:277413*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277413*0 + 3*311*FLEN/8, x4, x1, x2)

inst_92472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000000000003f; valaddr_reg:x3; val_offset:277416*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277416*0 + 3*312*FLEN/8, x4, x1, x2)

inst_92473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000000000007f; valaddr_reg:x3; val_offset:277419*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277419*0 + 3*313*FLEN/8, x4, x1, x2)

inst_92474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00000000000ff; valaddr_reg:x3; val_offset:277422*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277422*0 + 3*314*FLEN/8, x4, x1, x2)

inst_92475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00000000001ff; valaddr_reg:x3; val_offset:277425*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277425*0 + 3*315*FLEN/8, x4, x1, x2)

inst_92476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00000000003ff; valaddr_reg:x3; val_offset:277428*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277428*0 + 3*316*FLEN/8, x4, x1, x2)

inst_92477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00000000007ff; valaddr_reg:x3; val_offset:277431*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277431*0 + 3*317*FLEN/8, x4, x1, x2)

inst_92478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000000000fff; valaddr_reg:x3; val_offset:277434*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277434*0 + 3*318*FLEN/8, x4, x1, x2)

inst_92479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000000001fff; valaddr_reg:x3; val_offset:277437*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277437*0 + 3*319*FLEN/8, x4, x1, x2)

inst_92480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000000003fff; valaddr_reg:x3; val_offset:277440*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277440*0 + 3*320*FLEN/8, x4, x1, x2)

inst_92481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000000007fff; valaddr_reg:x3; val_offset:277443*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277443*0 + 3*321*FLEN/8, x4, x1, x2)

inst_92482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000000000ffff; valaddr_reg:x3; val_offset:277446*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277446*0 + 3*322*FLEN/8, x4, x1, x2)

inst_92483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000000001ffff; valaddr_reg:x3; val_offset:277449*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277449*0 + 3*323*FLEN/8, x4, x1, x2)

inst_92484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000000003ffff; valaddr_reg:x3; val_offset:277452*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277452*0 + 3*324*FLEN/8, x4, x1, x2)

inst_92485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000000007ffff; valaddr_reg:x3; val_offset:277455*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277455*0 + 3*325*FLEN/8, x4, x1, x2)

inst_92486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00000000fffff; valaddr_reg:x3; val_offset:277458*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277458*0 + 3*326*FLEN/8, x4, x1, x2)

inst_92487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00000001fffff; valaddr_reg:x3; val_offset:277461*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277461*0 + 3*327*FLEN/8, x4, x1, x2)

inst_92488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00000003fffff; valaddr_reg:x3; val_offset:277464*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277464*0 + 3*328*FLEN/8, x4, x1, x2)

inst_92489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00000007fffff; valaddr_reg:x3; val_offset:277467*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277467*0 + 3*329*FLEN/8, x4, x1, x2)

inst_92490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000000ffffff; valaddr_reg:x3; val_offset:277470*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277470*0 + 3*330*FLEN/8, x4, x1, x2)

inst_92491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000001ffffff; valaddr_reg:x3; val_offset:277473*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277473*0 + 3*331*FLEN/8, x4, x1, x2)

inst_92492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000003ffffff; valaddr_reg:x3; val_offset:277476*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277476*0 + 3*332*FLEN/8, x4, x1, x2)

inst_92493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000007ffffff; valaddr_reg:x3; val_offset:277479*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277479*0 + 3*333*FLEN/8, x4, x1, x2)

inst_92494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000000fffffff; valaddr_reg:x3; val_offset:277482*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277482*0 + 3*334*FLEN/8, x4, x1, x2)

inst_92495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000001fffffff; valaddr_reg:x3; val_offset:277485*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277485*0 + 3*335*FLEN/8, x4, x1, x2)

inst_92496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000003fffffff; valaddr_reg:x3; val_offset:277488*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277488*0 + 3*336*FLEN/8, x4, x1, x2)

inst_92497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000007fffffff; valaddr_reg:x3; val_offset:277491*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277491*0 + 3*337*FLEN/8, x4, x1, x2)

inst_92498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00000ffffffff; valaddr_reg:x3; val_offset:277494*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277494*0 + 3*338*FLEN/8, x4, x1, x2)

inst_92499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00001ffffffff; valaddr_reg:x3; val_offset:277497*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277497*0 + 3*339*FLEN/8, x4, x1, x2)

inst_92500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00003ffffffff; valaddr_reg:x3; val_offset:277500*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277500*0 + 3*340*FLEN/8, x4, x1, x2)

inst_92501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00007ffffffff; valaddr_reg:x3; val_offset:277503*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277503*0 + 3*341*FLEN/8, x4, x1, x2)

inst_92502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0000fffffffff; valaddr_reg:x3; val_offset:277506*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277506*0 + 3*342*FLEN/8, x4, x1, x2)

inst_92503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0001fffffffff; valaddr_reg:x3; val_offset:277509*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277509*0 + 3*343*FLEN/8, x4, x1, x2)

inst_92504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0003fffffffff; valaddr_reg:x3; val_offset:277512*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277512*0 + 3*344*FLEN/8, x4, x1, x2)

inst_92505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0007fffffffff; valaddr_reg:x3; val_offset:277515*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277515*0 + 3*345*FLEN/8, x4, x1, x2)

inst_92506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad000ffffffffff; valaddr_reg:x3; val_offset:277518*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277518*0 + 3*346*FLEN/8, x4, x1, x2)

inst_92507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad001ffffffffff; valaddr_reg:x3; val_offset:277521*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277521*0 + 3*347*FLEN/8, x4, x1, x2)

inst_92508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad003ffffffffff; valaddr_reg:x3; val_offset:277524*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277524*0 + 3*348*FLEN/8, x4, x1, x2)

inst_92509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad007ffffffffff; valaddr_reg:x3; val_offset:277527*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277527*0 + 3*349*FLEN/8, x4, x1, x2)

inst_92510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad00fffffffffff; valaddr_reg:x3; val_offset:277530*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277530*0 + 3*350*FLEN/8, x4, x1, x2)

inst_92511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad01fffffffffff; valaddr_reg:x3; val_offset:277533*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277533*0 + 3*351*FLEN/8, x4, x1, x2)

inst_92512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad03fffffffffff; valaddr_reg:x3; val_offset:277536*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277536*0 + 3*352*FLEN/8, x4, x1, x2)

inst_92513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad07fffffffffff; valaddr_reg:x3; val_offset:277539*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277539*0 + 3*353*FLEN/8, x4, x1, x2)

inst_92514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad0ffffffffffff; valaddr_reg:x3; val_offset:277542*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277542*0 + 3*354*FLEN/8, x4, x1, x2)

inst_92515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad1ffffffffffff; valaddr_reg:x3; val_offset:277545*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277545*0 + 3*355*FLEN/8, x4, x1, x2)

inst_92516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad3ffffffffffff; valaddr_reg:x3; val_offset:277548*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277548*0 + 3*356*FLEN/8, x4, x1, x2)

inst_92517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad7ffffffffffff; valaddr_reg:x3; val_offset:277551*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277551*0 + 3*357*FLEN/8, x4, x1, x2)

inst_92518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ad8000000000000; valaddr_reg:x3; val_offset:277554*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277554*0 + 3*358*FLEN/8, x4, x1, x2)

inst_92519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adc000000000000; valaddr_reg:x3; val_offset:277557*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277557*0 + 3*359*FLEN/8, x4, x1, x2)

inst_92520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ade000000000000; valaddr_reg:x3; val_offset:277560*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277560*0 + 3*360*FLEN/8, x4, x1, x2)

inst_92521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adf000000000000; valaddr_reg:x3; val_offset:277563*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277563*0 + 3*361*FLEN/8, x4, x1, x2)

inst_92522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adf800000000000; valaddr_reg:x3; val_offset:277566*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277566*0 + 3*362*FLEN/8, x4, x1, x2)

inst_92523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfc00000000000; valaddr_reg:x3; val_offset:277569*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277569*0 + 3*363*FLEN/8, x4, x1, x2)

inst_92524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfe00000000000; valaddr_reg:x3; val_offset:277572*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277572*0 + 3*364*FLEN/8, x4, x1, x2)

inst_92525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adff00000000000; valaddr_reg:x3; val_offset:277575*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277575*0 + 3*365*FLEN/8, x4, x1, x2)

inst_92526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adff80000000000; valaddr_reg:x3; val_offset:277578*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277578*0 + 3*366*FLEN/8, x4, x1, x2)

inst_92527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffc0000000000; valaddr_reg:x3; val_offset:277581*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277581*0 + 3*367*FLEN/8, x4, x1, x2)

inst_92528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffe0000000000; valaddr_reg:x3; val_offset:277584*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277584*0 + 3*368*FLEN/8, x4, x1, x2)

inst_92529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfff0000000000; valaddr_reg:x3; val_offset:277587*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277587*0 + 3*369*FLEN/8, x4, x1, x2)

inst_92530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfff8000000000; valaddr_reg:x3; val_offset:277590*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277590*0 + 3*370*FLEN/8, x4, x1, x2)

inst_92531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffc000000000; valaddr_reg:x3; val_offset:277593*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277593*0 + 3*371*FLEN/8, x4, x1, x2)

inst_92532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffe000000000; valaddr_reg:x3; val_offset:277596*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277596*0 + 3*372*FLEN/8, x4, x1, x2)

inst_92533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffff000000000; valaddr_reg:x3; val_offset:277599*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277599*0 + 3*373*FLEN/8, x4, x1, x2)

inst_92534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffff800000000; valaddr_reg:x3; val_offset:277602*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277602*0 + 3*374*FLEN/8, x4, x1, x2)

inst_92535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffc00000000; valaddr_reg:x3; val_offset:277605*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277605*0 + 3*375*FLEN/8, x4, x1, x2)

inst_92536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffe00000000; valaddr_reg:x3; val_offset:277608*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277608*0 + 3*376*FLEN/8, x4, x1, x2)

inst_92537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffff00000000; valaddr_reg:x3; val_offset:277611*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277611*0 + 3*377*FLEN/8, x4, x1, x2)

inst_92538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffff80000000; valaddr_reg:x3; val_offset:277614*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277614*0 + 3*378*FLEN/8, x4, x1, x2)

inst_92539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffc0000000; valaddr_reg:x3; val_offset:277617*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277617*0 + 3*379*FLEN/8, x4, x1, x2)

inst_92540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffe0000000; valaddr_reg:x3; val_offset:277620*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277620*0 + 3*380*FLEN/8, x4, x1, x2)

inst_92541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffff0000000; valaddr_reg:x3; val_offset:277623*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277623*0 + 3*381*FLEN/8, x4, x1, x2)

inst_92542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffff8000000; valaddr_reg:x3; val_offset:277626*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277626*0 + 3*382*FLEN/8, x4, x1, x2)

inst_92543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffc000000; valaddr_reg:x3; val_offset:277629*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277629*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_92544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffe000000; valaddr_reg:x3; val_offset:277632*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277632*0 + 3*384*FLEN/8, x4, x1, x2)

inst_92545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffff000000; valaddr_reg:x3; val_offset:277635*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277635*0 + 3*385*FLEN/8, x4, x1, x2)

inst_92546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffff800000; valaddr_reg:x3; val_offset:277638*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277638*0 + 3*386*FLEN/8, x4, x1, x2)

inst_92547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffffc00000; valaddr_reg:x3; val_offset:277641*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277641*0 + 3*387*FLEN/8, x4, x1, x2)

inst_92548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffffe00000; valaddr_reg:x3; val_offset:277644*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277644*0 + 3*388*FLEN/8, x4, x1, x2)

inst_92549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffff00000; valaddr_reg:x3; val_offset:277647*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277647*0 + 3*389*FLEN/8, x4, x1, x2)

inst_92550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffff80000; valaddr_reg:x3; val_offset:277650*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277650*0 + 3*390*FLEN/8, x4, x1, x2)

inst_92551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffffc0000; valaddr_reg:x3; val_offset:277653*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277653*0 + 3*391*FLEN/8, x4, x1, x2)

inst_92552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffffe0000; valaddr_reg:x3; val_offset:277656*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277656*0 + 3*392*FLEN/8, x4, x1, x2)

inst_92553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffffff0000; valaddr_reg:x3; val_offset:277659*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277659*0 + 3*393*FLEN/8, x4, x1, x2)

inst_92554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffffff8000; valaddr_reg:x3; val_offset:277662*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277662*0 + 3*394*FLEN/8, x4, x1, x2)

inst_92555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffffffc000; valaddr_reg:x3; val_offset:277665*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277665*0 + 3*395*FLEN/8, x4, x1, x2)

inst_92556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffffffe000; valaddr_reg:x3; val_offset:277668*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277668*0 + 3*396*FLEN/8, x4, x1, x2)

inst_92557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffffff000; valaddr_reg:x3; val_offset:277671*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277671*0 + 3*397*FLEN/8, x4, x1, x2)

inst_92558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffffff800; valaddr_reg:x3; val_offset:277674*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277674*0 + 3*398*FLEN/8, x4, x1, x2)

inst_92559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffffffc00; valaddr_reg:x3; val_offset:277677*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277677*0 + 3*399*FLEN/8, x4, x1, x2)

inst_92560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffffffe00; valaddr_reg:x3; val_offset:277680*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277680*0 + 3*400*FLEN/8, x4, x1, x2)

inst_92561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffffffff00; valaddr_reg:x3; val_offset:277683*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277683*0 + 3*401*FLEN/8, x4, x1, x2)

inst_92562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffffffff80; valaddr_reg:x3; val_offset:277686*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277686*0 + 3*402*FLEN/8, x4, x1, x2)

inst_92563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffffffffc0; valaddr_reg:x3; val_offset:277689*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277689*0 + 3*403*FLEN/8, x4, x1, x2)

inst_92564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffffffffe0; valaddr_reg:x3; val_offset:277692*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277692*0 + 3*404*FLEN/8, x4, x1, x2)

inst_92565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffffffff0; valaddr_reg:x3; val_offset:277695*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277695*0 + 3*405*FLEN/8, x4, x1, x2)

inst_92566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffffffff8; valaddr_reg:x3; val_offset:277698*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277698*0 + 3*406*FLEN/8, x4, x1, x2)

inst_92567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffffffffc; valaddr_reg:x3; val_offset:277701*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277701*0 + 3*407*FLEN/8, x4, x1, x2)

inst_92568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adffffffffffffe; valaddr_reg:x3; val_offset:277704*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277704*0 + 3*408*FLEN/8, x4, x1, x2)

inst_92569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ad and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3adfffffffffffff; valaddr_reg:x3; val_offset:277707*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277707*0 + 3*409*FLEN/8, x4, x1, x2)

inst_92570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:277710*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277710*0 + 3*410*FLEN/8, x4, x1, x2)

inst_92571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:277713*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277713*0 + 3*411*FLEN/8, x4, x1, x2)

inst_92572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:277716*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277716*0 + 3*412*FLEN/8, x4, x1, x2)

inst_92573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:277719*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277719*0 + 3*413*FLEN/8, x4, x1, x2)

inst_92574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:277722*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277722*0 + 3*414*FLEN/8, x4, x1, x2)

inst_92575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:277725*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277725*0 + 3*415*FLEN/8, x4, x1, x2)

inst_92576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:277728*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277728*0 + 3*416*FLEN/8, x4, x1, x2)

inst_92577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:277731*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277731*0 + 3*417*FLEN/8, x4, x1, x2)

inst_92578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:277734*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277734*0 + 3*418*FLEN/8, x4, x1, x2)

inst_92579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:277737*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277737*0 + 3*419*FLEN/8, x4, x1, x2)

inst_92580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:277740*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277740*0 + 3*420*FLEN/8, x4, x1, x2)

inst_92581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:277743*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277743*0 + 3*421*FLEN/8, x4, x1, x2)

inst_92582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:277746*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277746*0 + 3*422*FLEN/8, x4, x1, x2)

inst_92583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:277749*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277749*0 + 3*423*FLEN/8, x4, x1, x2)

inst_92584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:277752*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277752*0 + 3*424*FLEN/8, x4, x1, x2)

inst_92585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:277755*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277755*0 + 3*425*FLEN/8, x4, x1, x2)

inst_92586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:277758*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277758*0 + 3*426*FLEN/8, x4, x1, x2)

inst_92587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:277761*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277761*0 + 3*427*FLEN/8, x4, x1, x2)

inst_92588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:277764*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277764*0 + 3*428*FLEN/8, x4, x1, x2)

inst_92589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:277767*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277767*0 + 3*429*FLEN/8, x4, x1, x2)

inst_92590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:277770*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277770*0 + 3*430*FLEN/8, x4, x1, x2)

inst_92591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x1a62a4f0e5da9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad028fbb0ac708; op2val:0x2031a62a4f0e5da9;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:277773*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277773*0 + 3*431*FLEN/8, x4, x1, x2)

inst_92592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:277776*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277776*0 + 3*432*FLEN/8, x4, x1, x2)

inst_92593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:277779*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277779*0 + 3*433*FLEN/8, x4, x1, x2)

inst_92594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:277782*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277782*0 + 3*434*FLEN/8, x4, x1, x2)

inst_92595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:277785*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277785*0 + 3*435*FLEN/8, x4, x1, x2)

inst_92596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:277788*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277788*0 + 3*436*FLEN/8, x4, x1, x2)

inst_92597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:277791*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277791*0 + 3*437*FLEN/8, x4, x1, x2)

inst_92598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:277794*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277794*0 + 3*438*FLEN/8, x4, x1, x2)

inst_92599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:277797*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277797*0 + 3*439*FLEN/8, x4, x1, x2)

inst_92600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:277800*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277800*0 + 3*440*FLEN/8, x4, x1, x2)

inst_92601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:277803*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277803*0 + 3*441*FLEN/8, x4, x1, x2)

inst_92602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:277806*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277806*0 + 3*442*FLEN/8, x4, x1, x2)

inst_92603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:277809*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277809*0 + 3*443*FLEN/8, x4, x1, x2)

inst_92604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:277812*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277812*0 + 3*444*FLEN/8, x4, x1, x2)

inst_92605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:277815*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277815*0 + 3*445*FLEN/8, x4, x1, x2)

inst_92606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:277818*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277818*0 + 3*446*FLEN/8, x4, x1, x2)

inst_92607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:277821*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277821*0 + 3*447*FLEN/8, x4, x1, x2)

inst_92608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:277824*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277824*0 + 3*448*FLEN/8, x4, x1, x2)

inst_92609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:277827*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277827*0 + 3*449*FLEN/8, x4, x1, x2)

inst_92610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:277830*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277830*0 + 3*450*FLEN/8, x4, x1, x2)

inst_92611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:277833*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277833*0 + 3*451*FLEN/8, x4, x1, x2)

inst_92612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:277836*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277836*0 + 3*452*FLEN/8, x4, x1, x2)

inst_92613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:277839*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277839*0 + 3*453*FLEN/8, x4, x1, x2)

inst_92614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000000000000; valaddr_reg:x3; val_offset:277842*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277842*0 + 3*454*FLEN/8, x4, x1, x2)

inst_92615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000000000001; valaddr_reg:x3; val_offset:277845*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277845*0 + 3*455*FLEN/8, x4, x1, x2)

inst_92616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000000000003; valaddr_reg:x3; val_offset:277848*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277848*0 + 3*456*FLEN/8, x4, x1, x2)

inst_92617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000000000007; valaddr_reg:x3; val_offset:277851*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277851*0 + 3*457*FLEN/8, x4, x1, x2)

inst_92618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000000000000f; valaddr_reg:x3; val_offset:277854*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277854*0 + 3*458*FLEN/8, x4, x1, x2)

inst_92619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000000000001f; valaddr_reg:x3; val_offset:277857*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277857*0 + 3*459*FLEN/8, x4, x1, x2)

inst_92620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000000000003f; valaddr_reg:x3; val_offset:277860*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277860*0 + 3*460*FLEN/8, x4, x1, x2)

inst_92621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000000000007f; valaddr_reg:x3; val_offset:277863*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277863*0 + 3*461*FLEN/8, x4, x1, x2)

inst_92622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400000000000ff; valaddr_reg:x3; val_offset:277866*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277866*0 + 3*462*FLEN/8, x4, x1, x2)

inst_92623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400000000001ff; valaddr_reg:x3; val_offset:277869*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277869*0 + 3*463*FLEN/8, x4, x1, x2)

inst_92624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400000000003ff; valaddr_reg:x3; val_offset:277872*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277872*0 + 3*464*FLEN/8, x4, x1, x2)

inst_92625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400000000007ff; valaddr_reg:x3; val_offset:277875*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277875*0 + 3*465*FLEN/8, x4, x1, x2)

inst_92626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000000000fff; valaddr_reg:x3; val_offset:277878*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277878*0 + 3*466*FLEN/8, x4, x1, x2)

inst_92627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000000001fff; valaddr_reg:x3; val_offset:277881*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277881*0 + 3*467*FLEN/8, x4, x1, x2)

inst_92628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000000003fff; valaddr_reg:x3; val_offset:277884*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277884*0 + 3*468*FLEN/8, x4, x1, x2)

inst_92629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000000007fff; valaddr_reg:x3; val_offset:277887*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277887*0 + 3*469*FLEN/8, x4, x1, x2)

inst_92630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000000000ffff; valaddr_reg:x3; val_offset:277890*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277890*0 + 3*470*FLEN/8, x4, x1, x2)

inst_92631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000000001ffff; valaddr_reg:x3; val_offset:277893*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277893*0 + 3*471*FLEN/8, x4, x1, x2)

inst_92632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000000003ffff; valaddr_reg:x3; val_offset:277896*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277896*0 + 3*472*FLEN/8, x4, x1, x2)

inst_92633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000000007ffff; valaddr_reg:x3; val_offset:277899*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277899*0 + 3*473*FLEN/8, x4, x1, x2)

inst_92634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400000000fffff; valaddr_reg:x3; val_offset:277902*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277902*0 + 3*474*FLEN/8, x4, x1, x2)

inst_92635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400000001fffff; valaddr_reg:x3; val_offset:277905*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277905*0 + 3*475*FLEN/8, x4, x1, x2)

inst_92636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400000003fffff; valaddr_reg:x3; val_offset:277908*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277908*0 + 3*476*FLEN/8, x4, x1, x2)

inst_92637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400000007fffff; valaddr_reg:x3; val_offset:277911*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277911*0 + 3*477*FLEN/8, x4, x1, x2)

inst_92638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000000ffffff; valaddr_reg:x3; val_offset:277914*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277914*0 + 3*478*FLEN/8, x4, x1, x2)

inst_92639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000001ffffff; valaddr_reg:x3; val_offset:277917*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277917*0 + 3*479*FLEN/8, x4, x1, x2)

inst_92640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000003ffffff; valaddr_reg:x3; val_offset:277920*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277920*0 + 3*480*FLEN/8, x4, x1, x2)

inst_92641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000007ffffff; valaddr_reg:x3; val_offset:277923*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277923*0 + 3*481*FLEN/8, x4, x1, x2)

inst_92642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000000fffffff; valaddr_reg:x3; val_offset:277926*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277926*0 + 3*482*FLEN/8, x4, x1, x2)

inst_92643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000001fffffff; valaddr_reg:x3; val_offset:277929*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277929*0 + 3*483*FLEN/8, x4, x1, x2)

inst_92644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000003fffffff; valaddr_reg:x3; val_offset:277932*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277932*0 + 3*484*FLEN/8, x4, x1, x2)

inst_92645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000007fffffff; valaddr_reg:x3; val_offset:277935*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277935*0 + 3*485*FLEN/8, x4, x1, x2)

inst_92646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400000ffffffff; valaddr_reg:x3; val_offset:277938*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277938*0 + 3*486*FLEN/8, x4, x1, x2)

inst_92647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400001ffffffff; valaddr_reg:x3; val_offset:277941*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277941*0 + 3*487*FLEN/8, x4, x1, x2)

inst_92648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400003ffffffff; valaddr_reg:x3; val_offset:277944*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277944*0 + 3*488*FLEN/8, x4, x1, x2)

inst_92649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400007ffffffff; valaddr_reg:x3; val_offset:277947*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277947*0 + 3*489*FLEN/8, x4, x1, x2)

inst_92650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240000fffffffff; valaddr_reg:x3; val_offset:277950*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277950*0 + 3*490*FLEN/8, x4, x1, x2)

inst_92651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240001fffffffff; valaddr_reg:x3; val_offset:277953*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277953*0 + 3*491*FLEN/8, x4, x1, x2)

inst_92652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240003fffffffff; valaddr_reg:x3; val_offset:277956*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277956*0 + 3*492*FLEN/8, x4, x1, x2)

inst_92653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240007fffffffff; valaddr_reg:x3; val_offset:277959*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277959*0 + 3*493*FLEN/8, x4, x1, x2)

inst_92654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24000ffffffffff; valaddr_reg:x3; val_offset:277962*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277962*0 + 3*494*FLEN/8, x4, x1, x2)

inst_92655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24001ffffffffff; valaddr_reg:x3; val_offset:277965*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277965*0 + 3*495*FLEN/8, x4, x1, x2)

inst_92656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24003ffffffffff; valaddr_reg:x3; val_offset:277968*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277968*0 + 3*496*FLEN/8, x4, x1, x2)

inst_92657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24007ffffffffff; valaddr_reg:x3; val_offset:277971*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277971*0 + 3*497*FLEN/8, x4, x1, x2)

inst_92658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2400fffffffffff; valaddr_reg:x3; val_offset:277974*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277974*0 + 3*498*FLEN/8, x4, x1, x2)

inst_92659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2401fffffffffff; valaddr_reg:x3; val_offset:277977*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277977*0 + 3*499*FLEN/8, x4, x1, x2)

inst_92660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2403fffffffffff; valaddr_reg:x3; val_offset:277980*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277980*0 + 3*500*FLEN/8, x4, x1, x2)

inst_92661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x2407fffffffffff; valaddr_reg:x3; val_offset:277983*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277983*0 + 3*501*FLEN/8, x4, x1, x2)

inst_92662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x240ffffffffffff; valaddr_reg:x3; val_offset:277986*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277986*0 + 3*502*FLEN/8, x4, x1, x2)

inst_92663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x241ffffffffffff; valaddr_reg:x3; val_offset:277989*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277989*0 + 3*503*FLEN/8, x4, x1, x2)

inst_92664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x243ffffffffffff; valaddr_reg:x3; val_offset:277992*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277992*0 + 3*504*FLEN/8, x4, x1, x2)

inst_92665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x247ffffffffffff; valaddr_reg:x3; val_offset:277995*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277995*0 + 3*505*FLEN/8, x4, x1, x2)

inst_92666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x248000000000000; valaddr_reg:x3; val_offset:277998*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277998*0 + 3*506*FLEN/8, x4, x1, x2)

inst_92667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24c000000000000; valaddr_reg:x3; val_offset:278001*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278001*0 + 3*507*FLEN/8, x4, x1, x2)

inst_92668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24e000000000000; valaddr_reg:x3; val_offset:278004*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278004*0 + 3*508*FLEN/8, x4, x1, x2)

inst_92669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24f000000000000; valaddr_reg:x3; val_offset:278007*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278007*0 + 3*509*FLEN/8, x4, x1, x2)

inst_92670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24f800000000000; valaddr_reg:x3; val_offset:278010*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278010*0 + 3*510*FLEN/8, x4, x1, x2)

inst_92671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fc00000000000; valaddr_reg:x3; val_offset:278013*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278013*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_92672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fe00000000000; valaddr_reg:x3; val_offset:278016*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278016*0 + 3*512*FLEN/8, x4, x1, x2)

inst_92673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ff00000000000; valaddr_reg:x3; val_offset:278019*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278019*0 + 3*513*FLEN/8, x4, x1, x2)

inst_92674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ff80000000000; valaddr_reg:x3; val_offset:278022*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278022*0 + 3*514*FLEN/8, x4, x1, x2)

inst_92675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffc0000000000; valaddr_reg:x3; val_offset:278025*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278025*0 + 3*515*FLEN/8, x4, x1, x2)

inst_92676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffe0000000000; valaddr_reg:x3; val_offset:278028*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278028*0 + 3*516*FLEN/8, x4, x1, x2)

inst_92677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fff0000000000; valaddr_reg:x3; val_offset:278031*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278031*0 + 3*517*FLEN/8, x4, x1, x2)

inst_92678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fff8000000000; valaddr_reg:x3; val_offset:278034*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278034*0 + 3*518*FLEN/8, x4, x1, x2)

inst_92679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffc000000000; valaddr_reg:x3; val_offset:278037*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278037*0 + 3*519*FLEN/8, x4, x1, x2)

inst_92680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffe000000000; valaddr_reg:x3; val_offset:278040*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278040*0 + 3*520*FLEN/8, x4, x1, x2)

inst_92681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffff000000000; valaddr_reg:x3; val_offset:278043*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278043*0 + 3*521*FLEN/8, x4, x1, x2)

inst_92682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffff800000000; valaddr_reg:x3; val_offset:278046*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278046*0 + 3*522*FLEN/8, x4, x1, x2)

inst_92683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffc00000000; valaddr_reg:x3; val_offset:278049*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278049*0 + 3*523*FLEN/8, x4, x1, x2)

inst_92684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffe00000000; valaddr_reg:x3; val_offset:278052*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278052*0 + 3*524*FLEN/8, x4, x1, x2)

inst_92685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffff00000000; valaddr_reg:x3; val_offset:278055*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278055*0 + 3*525*FLEN/8, x4, x1, x2)

inst_92686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffff80000000; valaddr_reg:x3; val_offset:278058*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278058*0 + 3*526*FLEN/8, x4, x1, x2)

inst_92687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffc0000000; valaddr_reg:x3; val_offset:278061*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278061*0 + 3*527*FLEN/8, x4, x1, x2)

inst_92688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffe0000000; valaddr_reg:x3; val_offset:278064*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278064*0 + 3*528*FLEN/8, x4, x1, x2)

inst_92689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffff0000000; valaddr_reg:x3; val_offset:278067*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278067*0 + 3*529*FLEN/8, x4, x1, x2)

inst_92690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffff8000000; valaddr_reg:x3; val_offset:278070*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278070*0 + 3*530*FLEN/8, x4, x1, x2)

inst_92691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffc000000; valaddr_reg:x3; val_offset:278073*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278073*0 + 3*531*FLEN/8, x4, x1, x2)

inst_92692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffe000000; valaddr_reg:x3; val_offset:278076*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278076*0 + 3*532*FLEN/8, x4, x1, x2)

inst_92693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffff000000; valaddr_reg:x3; val_offset:278079*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278079*0 + 3*533*FLEN/8, x4, x1, x2)

inst_92694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffff800000; valaddr_reg:x3; val_offset:278082*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278082*0 + 3*534*FLEN/8, x4, x1, x2)

inst_92695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffffc00000; valaddr_reg:x3; val_offset:278085*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278085*0 + 3*535*FLEN/8, x4, x1, x2)

inst_92696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffffe00000; valaddr_reg:x3; val_offset:278088*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278088*0 + 3*536*FLEN/8, x4, x1, x2)

inst_92697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffff00000; valaddr_reg:x3; val_offset:278091*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278091*0 + 3*537*FLEN/8, x4, x1, x2)

inst_92698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffff80000; valaddr_reg:x3; val_offset:278094*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278094*0 + 3*538*FLEN/8, x4, x1, x2)

inst_92699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffffc0000; valaddr_reg:x3; val_offset:278097*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278097*0 + 3*539*FLEN/8, x4, x1, x2)

inst_92700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffffe0000; valaddr_reg:x3; val_offset:278100*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278100*0 + 3*540*FLEN/8, x4, x1, x2)

inst_92701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffffff0000; valaddr_reg:x3; val_offset:278103*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278103*0 + 3*541*FLEN/8, x4, x1, x2)

inst_92702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffffff8000; valaddr_reg:x3; val_offset:278106*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278106*0 + 3*542*FLEN/8, x4, x1, x2)

inst_92703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffffffc000; valaddr_reg:x3; val_offset:278109*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278109*0 + 3*543*FLEN/8, x4, x1, x2)

inst_92704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffffffe000; valaddr_reg:x3; val_offset:278112*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278112*0 + 3*544*FLEN/8, x4, x1, x2)

inst_92705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffffff000; valaddr_reg:x3; val_offset:278115*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278115*0 + 3*545*FLEN/8, x4, x1, x2)

inst_92706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffffff800; valaddr_reg:x3; val_offset:278118*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278118*0 + 3*546*FLEN/8, x4, x1, x2)

inst_92707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffffffc00; valaddr_reg:x3; val_offset:278121*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278121*0 + 3*547*FLEN/8, x4, x1, x2)

inst_92708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffffffe00; valaddr_reg:x3; val_offset:278124*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278124*0 + 3*548*FLEN/8, x4, x1, x2)

inst_92709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffffffff00; valaddr_reg:x3; val_offset:278127*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278127*0 + 3*549*FLEN/8, x4, x1, x2)

inst_92710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffffffff80; valaddr_reg:x3; val_offset:278130*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278130*0 + 3*550*FLEN/8, x4, x1, x2)

inst_92711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffffffffc0; valaddr_reg:x3; val_offset:278133*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278133*0 + 3*551*FLEN/8, x4, x1, x2)

inst_92712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffffffffe0; valaddr_reg:x3; val_offset:278136*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278136*0 + 3*552*FLEN/8, x4, x1, x2)

inst_92713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffffffff0; valaddr_reg:x3; val_offset:278139*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278139*0 + 3*553*FLEN/8, x4, x1, x2)

inst_92714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffffffff8; valaddr_reg:x3; val_offset:278142*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278142*0 + 3*554*FLEN/8, x4, x1, x2)

inst_92715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffffffffc; valaddr_reg:x3; val_offset:278145*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278145*0 + 3*555*FLEN/8, x4, x1, x2)

inst_92716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24ffffffffffffe; valaddr_reg:x3; val_offset:278148*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278148*0 + 3*556*FLEN/8, x4, x1, x2)

inst_92717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad02d0afa24812; op2val:0x0;
op3val:0x24fffffffffffff; valaddr_reg:x3; val_offset:278151*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278151*0 + 3*557*FLEN/8, x4, x1, x2)

inst_92718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:278154*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278154*0 + 3*558*FLEN/8, x4, x1, x2)

inst_92719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:278157*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278157*0 + 3*559*FLEN/8, x4, x1, x2)

inst_92720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:278160*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278160*0 + 3*560*FLEN/8, x4, x1, x2)

inst_92721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:278163*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278163*0 + 3*561*FLEN/8, x4, x1, x2)

inst_92722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:278166*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278166*0 + 3*562*FLEN/8, x4, x1, x2)

inst_92723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:278169*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278169*0 + 3*563*FLEN/8, x4, x1, x2)

inst_92724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:278172*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278172*0 + 3*564*FLEN/8, x4, x1, x2)

inst_92725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:278175*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278175*0 + 3*565*FLEN/8, x4, x1, x2)

inst_92726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:278178*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278178*0 + 3*566*FLEN/8, x4, x1, x2)

inst_92727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:278181*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278181*0 + 3*567*FLEN/8, x4, x1, x2)

inst_92728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:278184*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278184*0 + 3*568*FLEN/8, x4, x1, x2)

inst_92729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:278187*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278187*0 + 3*569*FLEN/8, x4, x1, x2)

inst_92730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:278190*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278190*0 + 3*570*FLEN/8, x4, x1, x2)

inst_92731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:278193*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278193*0 + 3*571*FLEN/8, x4, x1, x2)

inst_92732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:278196*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278196*0 + 3*572*FLEN/8, x4, x1, x2)

inst_92733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:278199*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278199*0 + 3*573*FLEN/8, x4, x1, x2)

inst_92734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:278202*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278202*0 + 3*574*FLEN/8, x4, x1, x2)

inst_92735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:278205*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278205*0 + 3*575*FLEN/8, x4, x1, x2)

inst_92736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:278208*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278208*0 + 3*576*FLEN/8, x4, x1, x2)

inst_92737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:278211*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278211*0 + 3*577*FLEN/8, x4, x1, x2)

inst_92738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:278214*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278214*0 + 3*578*FLEN/8, x4, x1, x2)

inst_92739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:278217*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278217*0 + 3*579*FLEN/8, x4, x1, x2)

inst_92740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000000000000; valaddr_reg:x3; val_offset:278220*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278220*0 + 3*580*FLEN/8, x4, x1, x2)

inst_92741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000000000001; valaddr_reg:x3; val_offset:278223*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278223*0 + 3*581*FLEN/8, x4, x1, x2)

inst_92742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000000000003; valaddr_reg:x3; val_offset:278226*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278226*0 + 3*582*FLEN/8, x4, x1, x2)

inst_92743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000000000007; valaddr_reg:x3; val_offset:278229*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278229*0 + 3*583*FLEN/8, x4, x1, x2)

inst_92744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000000000000f; valaddr_reg:x3; val_offset:278232*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278232*0 + 3*584*FLEN/8, x4, x1, x2)

inst_92745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000000000001f; valaddr_reg:x3; val_offset:278235*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278235*0 + 3*585*FLEN/8, x4, x1, x2)

inst_92746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000000000003f; valaddr_reg:x3; val_offset:278238*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278238*0 + 3*586*FLEN/8, x4, x1, x2)

inst_92747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000000000007f; valaddr_reg:x3; val_offset:278241*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278241*0 + 3*587*FLEN/8, x4, x1, x2)

inst_92748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00000000000ff; valaddr_reg:x3; val_offset:278244*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278244*0 + 3*588*FLEN/8, x4, x1, x2)

inst_92749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00000000001ff; valaddr_reg:x3; val_offset:278247*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278247*0 + 3*589*FLEN/8, x4, x1, x2)

inst_92750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00000000003ff; valaddr_reg:x3; val_offset:278250*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278250*0 + 3*590*FLEN/8, x4, x1, x2)

inst_92751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00000000007ff; valaddr_reg:x3; val_offset:278253*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278253*0 + 3*591*FLEN/8, x4, x1, x2)

inst_92752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000000000fff; valaddr_reg:x3; val_offset:278256*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278256*0 + 3*592*FLEN/8, x4, x1, x2)

inst_92753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000000001fff; valaddr_reg:x3; val_offset:278259*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278259*0 + 3*593*FLEN/8, x4, x1, x2)

inst_92754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000000003fff; valaddr_reg:x3; val_offset:278262*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278262*0 + 3*594*FLEN/8, x4, x1, x2)

inst_92755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000000007fff; valaddr_reg:x3; val_offset:278265*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278265*0 + 3*595*FLEN/8, x4, x1, x2)

inst_92756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000000000ffff; valaddr_reg:x3; val_offset:278268*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278268*0 + 3*596*FLEN/8, x4, x1, x2)

inst_92757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000000001ffff; valaddr_reg:x3; val_offset:278271*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278271*0 + 3*597*FLEN/8, x4, x1, x2)

inst_92758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000000003ffff; valaddr_reg:x3; val_offset:278274*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278274*0 + 3*598*FLEN/8, x4, x1, x2)

inst_92759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000000007ffff; valaddr_reg:x3; val_offset:278277*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278277*0 + 3*599*FLEN/8, x4, x1, x2)

inst_92760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00000000fffff; valaddr_reg:x3; val_offset:278280*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278280*0 + 3*600*FLEN/8, x4, x1, x2)

inst_92761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00000001fffff; valaddr_reg:x3; val_offset:278283*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278283*0 + 3*601*FLEN/8, x4, x1, x2)

inst_92762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00000003fffff; valaddr_reg:x3; val_offset:278286*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278286*0 + 3*602*FLEN/8, x4, x1, x2)

inst_92763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00000007fffff; valaddr_reg:x3; val_offset:278289*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278289*0 + 3*603*FLEN/8, x4, x1, x2)

inst_92764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000000ffffff; valaddr_reg:x3; val_offset:278292*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278292*0 + 3*604*FLEN/8, x4, x1, x2)

inst_92765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000001ffffff; valaddr_reg:x3; val_offset:278295*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278295*0 + 3*605*FLEN/8, x4, x1, x2)

inst_92766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000003ffffff; valaddr_reg:x3; val_offset:278298*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278298*0 + 3*606*FLEN/8, x4, x1, x2)

inst_92767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000007ffffff; valaddr_reg:x3; val_offset:278301*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278301*0 + 3*607*FLEN/8, x4, x1, x2)

inst_92768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000000fffffff; valaddr_reg:x3; val_offset:278304*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278304*0 + 3*608*FLEN/8, x4, x1, x2)

inst_92769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000001fffffff; valaddr_reg:x3; val_offset:278307*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278307*0 + 3*609*FLEN/8, x4, x1, x2)

inst_92770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000003fffffff; valaddr_reg:x3; val_offset:278310*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278310*0 + 3*610*FLEN/8, x4, x1, x2)

inst_92771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000007fffffff; valaddr_reg:x3; val_offset:278313*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278313*0 + 3*611*FLEN/8, x4, x1, x2)

inst_92772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00000ffffffff; valaddr_reg:x3; val_offset:278316*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278316*0 + 3*612*FLEN/8, x4, x1, x2)

inst_92773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00001ffffffff; valaddr_reg:x3; val_offset:278319*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278319*0 + 3*613*FLEN/8, x4, x1, x2)

inst_92774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00003ffffffff; valaddr_reg:x3; val_offset:278322*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278322*0 + 3*614*FLEN/8, x4, x1, x2)

inst_92775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00007ffffffff; valaddr_reg:x3; val_offset:278325*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278325*0 + 3*615*FLEN/8, x4, x1, x2)

inst_92776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0000fffffffff; valaddr_reg:x3; val_offset:278328*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278328*0 + 3*616*FLEN/8, x4, x1, x2)

inst_92777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0001fffffffff; valaddr_reg:x3; val_offset:278331*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278331*0 + 3*617*FLEN/8, x4, x1, x2)

inst_92778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0003fffffffff; valaddr_reg:x3; val_offset:278334*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278334*0 + 3*618*FLEN/8, x4, x1, x2)

inst_92779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0007fffffffff; valaddr_reg:x3; val_offset:278337*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278337*0 + 3*619*FLEN/8, x4, x1, x2)

inst_92780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f000ffffffffff; valaddr_reg:x3; val_offset:278340*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278340*0 + 3*620*FLEN/8, x4, x1, x2)

inst_92781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f001ffffffffff; valaddr_reg:x3; val_offset:278343*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278343*0 + 3*621*FLEN/8, x4, x1, x2)

inst_92782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f003ffffffffff; valaddr_reg:x3; val_offset:278346*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278346*0 + 3*622*FLEN/8, x4, x1, x2)

inst_92783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f007ffffffffff; valaddr_reg:x3; val_offset:278349*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278349*0 + 3*623*FLEN/8, x4, x1, x2)

inst_92784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f00fffffffffff; valaddr_reg:x3; val_offset:278352*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278352*0 + 3*624*FLEN/8, x4, x1, x2)

inst_92785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f01fffffffffff; valaddr_reg:x3; val_offset:278355*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278355*0 + 3*625*FLEN/8, x4, x1, x2)

inst_92786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f03fffffffffff; valaddr_reg:x3; val_offset:278358*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278358*0 + 3*626*FLEN/8, x4, x1, x2)

inst_92787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f07fffffffffff; valaddr_reg:x3; val_offset:278361*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278361*0 + 3*627*FLEN/8, x4, x1, x2)

inst_92788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f0ffffffffffff; valaddr_reg:x3; val_offset:278364*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278364*0 + 3*628*FLEN/8, x4, x1, x2)

inst_92789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f1ffffffffffff; valaddr_reg:x3; val_offset:278367*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278367*0 + 3*629*FLEN/8, x4, x1, x2)

inst_92790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f3ffffffffffff; valaddr_reg:x3; val_offset:278370*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278370*0 + 3*630*FLEN/8, x4, x1, x2)

inst_92791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f7ffffffffffff; valaddr_reg:x3; val_offset:278373*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278373*0 + 3*631*FLEN/8, x4, x1, x2)

inst_92792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3f8000000000000; valaddr_reg:x3; val_offset:278376*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278376*0 + 3*632*FLEN/8, x4, x1, x2)

inst_92793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fc000000000000; valaddr_reg:x3; val_offset:278379*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278379*0 + 3*633*FLEN/8, x4, x1, x2)

inst_92794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fe000000000000; valaddr_reg:x3; val_offset:278382*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278382*0 + 3*634*FLEN/8, x4, x1, x2)

inst_92795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ff000000000000; valaddr_reg:x3; val_offset:278385*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278385*0 + 3*635*FLEN/8, x4, x1, x2)

inst_92796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ff800000000000; valaddr_reg:x3; val_offset:278388*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278388*0 + 3*636*FLEN/8, x4, x1, x2)

inst_92797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffc00000000000; valaddr_reg:x3; val_offset:278391*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278391*0 + 3*637*FLEN/8, x4, x1, x2)

inst_92798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffe00000000000; valaddr_reg:x3; val_offset:278394*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278394*0 + 3*638*FLEN/8, x4, x1, x2)

inst_92799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fff00000000000; valaddr_reg:x3; val_offset:278397*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278397*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_92800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fff80000000000; valaddr_reg:x3; val_offset:278400*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278400*0 + 3*640*FLEN/8, x4, x1, x2)

inst_92801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffc0000000000; valaddr_reg:x3; val_offset:278403*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278403*0 + 3*641*FLEN/8, x4, x1, x2)

inst_92802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffe0000000000; valaddr_reg:x3; val_offset:278406*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278406*0 + 3*642*FLEN/8, x4, x1, x2)

inst_92803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffff0000000000; valaddr_reg:x3; val_offset:278409*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278409*0 + 3*643*FLEN/8, x4, x1, x2)

inst_92804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffff8000000000; valaddr_reg:x3; val_offset:278412*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278412*0 + 3*644*FLEN/8, x4, x1, x2)

inst_92805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffc000000000; valaddr_reg:x3; val_offset:278415*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278415*0 + 3*645*FLEN/8, x4, x1, x2)

inst_92806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffe000000000; valaddr_reg:x3; val_offset:278418*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278418*0 + 3*646*FLEN/8, x4, x1, x2)

inst_92807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffff000000000; valaddr_reg:x3; val_offset:278421*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278421*0 + 3*647*FLEN/8, x4, x1, x2)

inst_92808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffff800000000; valaddr_reg:x3; val_offset:278424*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278424*0 + 3*648*FLEN/8, x4, x1, x2)

inst_92809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffc00000000; valaddr_reg:x3; val_offset:278427*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278427*0 + 3*649*FLEN/8, x4, x1, x2)

inst_92810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffe00000000; valaddr_reg:x3; val_offset:278430*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278430*0 + 3*650*FLEN/8, x4, x1, x2)

inst_92811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffff00000000; valaddr_reg:x3; val_offset:278433*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278433*0 + 3*651*FLEN/8, x4, x1, x2)

inst_92812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffff80000000; valaddr_reg:x3; val_offset:278436*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278436*0 + 3*652*FLEN/8, x4, x1, x2)

inst_92813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffc0000000; valaddr_reg:x3; val_offset:278439*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278439*0 + 3*653*FLEN/8, x4, x1, x2)

inst_92814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffe0000000; valaddr_reg:x3; val_offset:278442*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278442*0 + 3*654*FLEN/8, x4, x1, x2)

inst_92815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffff0000000; valaddr_reg:x3; val_offset:278445*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278445*0 + 3*655*FLEN/8, x4, x1, x2)

inst_92816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffff8000000; valaddr_reg:x3; val_offset:278448*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278448*0 + 3*656*FLEN/8, x4, x1, x2)

inst_92817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffc000000; valaddr_reg:x3; val_offset:278451*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278451*0 + 3*657*FLEN/8, x4, x1, x2)

inst_92818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffe000000; valaddr_reg:x3; val_offset:278454*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278454*0 + 3*658*FLEN/8, x4, x1, x2)

inst_92819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffff000000; valaddr_reg:x3; val_offset:278457*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278457*0 + 3*659*FLEN/8, x4, x1, x2)

inst_92820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffff800000; valaddr_reg:x3; val_offset:278460*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278460*0 + 3*660*FLEN/8, x4, x1, x2)

inst_92821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffffc00000; valaddr_reg:x3; val_offset:278463*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278463*0 + 3*661*FLEN/8, x4, x1, x2)

inst_92822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffffe00000; valaddr_reg:x3; val_offset:278466*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278466*0 + 3*662*FLEN/8, x4, x1, x2)

inst_92823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffff00000; valaddr_reg:x3; val_offset:278469*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278469*0 + 3*663*FLEN/8, x4, x1, x2)

inst_92824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffff80000; valaddr_reg:x3; val_offset:278472*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278472*0 + 3*664*FLEN/8, x4, x1, x2)

inst_92825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffffc0000; valaddr_reg:x3; val_offset:278475*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278475*0 + 3*665*FLEN/8, x4, x1, x2)

inst_92826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffffe0000; valaddr_reg:x3; val_offset:278478*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278478*0 + 3*666*FLEN/8, x4, x1, x2)

inst_92827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffffff0000; valaddr_reg:x3; val_offset:278481*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278481*0 + 3*667*FLEN/8, x4, x1, x2)

inst_92828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffffff8000; valaddr_reg:x3; val_offset:278484*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278484*0 + 3*668*FLEN/8, x4, x1, x2)

inst_92829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffffffc000; valaddr_reg:x3; val_offset:278487*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278487*0 + 3*669*FLEN/8, x4, x1, x2)

inst_92830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffffffe000; valaddr_reg:x3; val_offset:278490*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278490*0 + 3*670*FLEN/8, x4, x1, x2)

inst_92831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffffff000; valaddr_reg:x3; val_offset:278493*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278493*0 + 3*671*FLEN/8, x4, x1, x2)

inst_92832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffffff800; valaddr_reg:x3; val_offset:278496*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278496*0 + 3*672*FLEN/8, x4, x1, x2)

inst_92833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffffffc00; valaddr_reg:x3; val_offset:278499*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278499*0 + 3*673*FLEN/8, x4, x1, x2)

inst_92834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffffffe00; valaddr_reg:x3; val_offset:278502*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278502*0 + 3*674*FLEN/8, x4, x1, x2)

inst_92835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffffffff00; valaddr_reg:x3; val_offset:278505*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278505*0 + 3*675*FLEN/8, x4, x1, x2)

inst_92836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffffffff80; valaddr_reg:x3; val_offset:278508*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278508*0 + 3*676*FLEN/8, x4, x1, x2)

inst_92837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffffffffc0; valaddr_reg:x3; val_offset:278511*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278511*0 + 3*677*FLEN/8, x4, x1, x2)

inst_92838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffffffffe0; valaddr_reg:x3; val_offset:278514*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278514*0 + 3*678*FLEN/8, x4, x1, x2)

inst_92839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffffffff0; valaddr_reg:x3; val_offset:278517*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278517*0 + 3*679*FLEN/8, x4, x1, x2)

inst_92840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffffffff8; valaddr_reg:x3; val_offset:278520*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278520*0 + 3*680*FLEN/8, x4, x1, x2)

inst_92841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffffffffc; valaddr_reg:x3; val_offset:278523*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278523*0 + 3*681*FLEN/8, x4, x1, x2)

inst_92842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3fffffffffffffe; valaddr_reg:x3; val_offset:278526*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278526*0 + 3*682*FLEN/8, x4, x1, x2)

inst_92843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad0dd93a77236c; op2val:0x0;
op3val:0x3ffffffffffffff; valaddr_reg:x3; val_offset:278529*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278529*0 + 3*683*FLEN/8, x4, x1, x2)

inst_92844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:278532*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278532*0 + 3*684*FLEN/8, x4, x1, x2)

inst_92845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:278535*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278535*0 + 3*685*FLEN/8, x4, x1, x2)

inst_92846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:278538*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278538*0 + 3*686*FLEN/8, x4, x1, x2)

inst_92847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:278541*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278541*0 + 3*687*FLEN/8, x4, x1, x2)

inst_92848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:278544*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278544*0 + 3*688*FLEN/8, x4, x1, x2)

inst_92849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:278547*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278547*0 + 3*689*FLEN/8, x4, x1, x2)

inst_92850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:278550*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278550*0 + 3*690*FLEN/8, x4, x1, x2)

inst_92851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:278553*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278553*0 + 3*691*FLEN/8, x4, x1, x2)

inst_92852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:278556*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278556*0 + 3*692*FLEN/8, x4, x1, x2)

inst_92853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:278559*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278559*0 + 3*693*FLEN/8, x4, x1, x2)

inst_92854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:278562*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278562*0 + 3*694*FLEN/8, x4, x1, x2)

inst_92855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:278565*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278565*0 + 3*695*FLEN/8, x4, x1, x2)

inst_92856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:278568*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278568*0 + 3*696*FLEN/8, x4, x1, x2)

inst_92857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:278571*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278571*0 + 3*697*FLEN/8, x4, x1, x2)

inst_92858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:278574*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278574*0 + 3*698*FLEN/8, x4, x1, x2)

inst_92859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:278577*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278577*0 + 3*699*FLEN/8, x4, x1, x2)

inst_92860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:278580*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278580*0 + 3*700*FLEN/8, x4, x1, x2)

inst_92861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:278583*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278583*0 + 3*701*FLEN/8, x4, x1, x2)

inst_92862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:278586*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278586*0 + 3*702*FLEN/8, x4, x1, x2)

inst_92863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:278589*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278589*0 + 3*703*FLEN/8, x4, x1, x2)

inst_92864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:278592*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278592*0 + 3*704*FLEN/8, x4, x1, x2)

inst_92865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:278595*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278595*0 + 3*705*FLEN/8, x4, x1, x2)

inst_92866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000000000000; valaddr_reg:x3; val_offset:278598*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278598*0 + 3*706*FLEN/8, x4, x1, x2)

inst_92867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000000000001; valaddr_reg:x3; val_offset:278601*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278601*0 + 3*707*FLEN/8, x4, x1, x2)

inst_92868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000000000003; valaddr_reg:x3; val_offset:278604*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278604*0 + 3*708*FLEN/8, x4, x1, x2)

inst_92869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000000000007; valaddr_reg:x3; val_offset:278607*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278607*0 + 3*709*FLEN/8, x4, x1, x2)

inst_92870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000000000000f; valaddr_reg:x3; val_offset:278610*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278610*0 + 3*710*FLEN/8, x4, x1, x2)

inst_92871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000000000001f; valaddr_reg:x3; val_offset:278613*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278613*0 + 3*711*FLEN/8, x4, x1, x2)

inst_92872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000000000003f; valaddr_reg:x3; val_offset:278616*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278616*0 + 3*712*FLEN/8, x4, x1, x2)

inst_92873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000000000007f; valaddr_reg:x3; val_offset:278619*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278619*0 + 3*713*FLEN/8, x4, x1, x2)

inst_92874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100000000000ff; valaddr_reg:x3; val_offset:278622*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278622*0 + 3*714*FLEN/8, x4, x1, x2)

inst_92875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100000000001ff; valaddr_reg:x3; val_offset:278625*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278625*0 + 3*715*FLEN/8, x4, x1, x2)

inst_92876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100000000003ff; valaddr_reg:x3; val_offset:278628*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278628*0 + 3*716*FLEN/8, x4, x1, x2)

inst_92877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100000000007ff; valaddr_reg:x3; val_offset:278631*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278631*0 + 3*717*FLEN/8, x4, x1, x2)

inst_92878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000000000fff; valaddr_reg:x3; val_offset:278634*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278634*0 + 3*718*FLEN/8, x4, x1, x2)

inst_92879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000000001fff; valaddr_reg:x3; val_offset:278637*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278637*0 + 3*719*FLEN/8, x4, x1, x2)

inst_92880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000000003fff; valaddr_reg:x3; val_offset:278640*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278640*0 + 3*720*FLEN/8, x4, x1, x2)

inst_92881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000000007fff; valaddr_reg:x3; val_offset:278643*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278643*0 + 3*721*FLEN/8, x4, x1, x2)

inst_92882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000000000ffff; valaddr_reg:x3; val_offset:278646*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278646*0 + 3*722*FLEN/8, x4, x1, x2)

inst_92883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000000001ffff; valaddr_reg:x3; val_offset:278649*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278649*0 + 3*723*FLEN/8, x4, x1, x2)

inst_92884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000000003ffff; valaddr_reg:x3; val_offset:278652*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278652*0 + 3*724*FLEN/8, x4, x1, x2)

inst_92885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000000007ffff; valaddr_reg:x3; val_offset:278655*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278655*0 + 3*725*FLEN/8, x4, x1, x2)

inst_92886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100000000fffff; valaddr_reg:x3; val_offset:278658*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278658*0 + 3*726*FLEN/8, x4, x1, x2)

inst_92887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100000001fffff; valaddr_reg:x3; val_offset:278661*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278661*0 + 3*727*FLEN/8, x4, x1, x2)

inst_92888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100000003fffff; valaddr_reg:x3; val_offset:278664*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278664*0 + 3*728*FLEN/8, x4, x1, x2)

inst_92889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100000007fffff; valaddr_reg:x3; val_offset:278667*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278667*0 + 3*729*FLEN/8, x4, x1, x2)

inst_92890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000000ffffff; valaddr_reg:x3; val_offset:278670*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278670*0 + 3*730*FLEN/8, x4, x1, x2)

inst_92891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000001ffffff; valaddr_reg:x3; val_offset:278673*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278673*0 + 3*731*FLEN/8, x4, x1, x2)

inst_92892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000003ffffff; valaddr_reg:x3; val_offset:278676*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278676*0 + 3*732*FLEN/8, x4, x1, x2)

inst_92893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000007ffffff; valaddr_reg:x3; val_offset:278679*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278679*0 + 3*733*FLEN/8, x4, x1, x2)

inst_92894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000000fffffff; valaddr_reg:x3; val_offset:278682*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278682*0 + 3*734*FLEN/8, x4, x1, x2)

inst_92895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000001fffffff; valaddr_reg:x3; val_offset:278685*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278685*0 + 3*735*FLEN/8, x4, x1, x2)

inst_92896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000003fffffff; valaddr_reg:x3; val_offset:278688*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278688*0 + 3*736*FLEN/8, x4, x1, x2)

inst_92897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000007fffffff; valaddr_reg:x3; val_offset:278691*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278691*0 + 3*737*FLEN/8, x4, x1, x2)

inst_92898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100000ffffffff; valaddr_reg:x3; val_offset:278694*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278694*0 + 3*738*FLEN/8, x4, x1, x2)

inst_92899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100001ffffffff; valaddr_reg:x3; val_offset:278697*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278697*0 + 3*739*FLEN/8, x4, x1, x2)

inst_92900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100003ffffffff; valaddr_reg:x3; val_offset:278700*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278700*0 + 3*740*FLEN/8, x4, x1, x2)

inst_92901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100007ffffffff; valaddr_reg:x3; val_offset:278703*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278703*0 + 3*741*FLEN/8, x4, x1, x2)

inst_92902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210000fffffffff; valaddr_reg:x3; val_offset:278706*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278706*0 + 3*742*FLEN/8, x4, x1, x2)

inst_92903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210001fffffffff; valaddr_reg:x3; val_offset:278709*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278709*0 + 3*743*FLEN/8, x4, x1, x2)

inst_92904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210003fffffffff; valaddr_reg:x3; val_offset:278712*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278712*0 + 3*744*FLEN/8, x4, x1, x2)

inst_92905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210007fffffffff; valaddr_reg:x3; val_offset:278715*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278715*0 + 3*745*FLEN/8, x4, x1, x2)

inst_92906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821000ffffffffff; valaddr_reg:x3; val_offset:278718*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278718*0 + 3*746*FLEN/8, x4, x1, x2)

inst_92907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821001ffffffffff; valaddr_reg:x3; val_offset:278721*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278721*0 + 3*747*FLEN/8, x4, x1, x2)

inst_92908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821003ffffffffff; valaddr_reg:x3; val_offset:278724*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278724*0 + 3*748*FLEN/8, x4, x1, x2)

inst_92909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821007ffffffffff; valaddr_reg:x3; val_offset:278727*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278727*0 + 3*749*FLEN/8, x4, x1, x2)

inst_92910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82100fffffffffff; valaddr_reg:x3; val_offset:278730*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278730*0 + 3*750*FLEN/8, x4, x1, x2)

inst_92911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82101fffffffffff; valaddr_reg:x3; val_offset:278733*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278733*0 + 3*751*FLEN/8, x4, x1, x2)

inst_92912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82103fffffffffff; valaddr_reg:x3; val_offset:278736*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278736*0 + 3*752*FLEN/8, x4, x1, x2)

inst_92913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x82107fffffffffff; valaddr_reg:x3; val_offset:278739*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278739*0 + 3*753*FLEN/8, x4, x1, x2)

inst_92914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8210ffffffffffff; valaddr_reg:x3; val_offset:278742*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278742*0 + 3*754*FLEN/8, x4, x1, x2)

inst_92915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8211ffffffffffff; valaddr_reg:x3; val_offset:278745*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278745*0 + 3*755*FLEN/8, x4, x1, x2)

inst_92916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8213ffffffffffff; valaddr_reg:x3; val_offset:278748*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278748*0 + 3*756*FLEN/8, x4, x1, x2)

inst_92917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8217ffffffffffff; valaddr_reg:x3; val_offset:278751*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278751*0 + 3*757*FLEN/8, x4, x1, x2)

inst_92918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x8218000000000000; valaddr_reg:x3; val_offset:278754*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278754*0 + 3*758*FLEN/8, x4, x1, x2)

inst_92919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821c000000000000; valaddr_reg:x3; val_offset:278757*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278757*0 + 3*759*FLEN/8, x4, x1, x2)

inst_92920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821e000000000000; valaddr_reg:x3; val_offset:278760*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278760*0 + 3*760*FLEN/8, x4, x1, x2)

inst_92921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821f000000000000; valaddr_reg:x3; val_offset:278763*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278763*0 + 3*761*FLEN/8, x4, x1, x2)

inst_92922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821f800000000000; valaddr_reg:x3; val_offset:278766*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278766*0 + 3*762*FLEN/8, x4, x1, x2)

inst_92923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821fc00000000000; valaddr_reg:x3; val_offset:278769*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278769*0 + 3*763*FLEN/8, x4, x1, x2)

inst_92924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821fe00000000000; valaddr_reg:x3; val_offset:278772*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278772*0 + 3*764*FLEN/8, x4, x1, x2)

inst_92925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821ff00000000000; valaddr_reg:x3; val_offset:278775*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278775*0 + 3*765*FLEN/8, x4, x1, x2)

inst_92926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821ff80000000000; valaddr_reg:x3; val_offset:278778*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278778*0 + 3*766*FLEN/8, x4, x1, x2)

inst_92927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd17f9c970cd81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad17f9c970cd81; op2val:0x8000;
op3val:0x821ffc0000000000; valaddr_reg:x3; val_offset:278781*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278781*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229001536388988927,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230127436295831551,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230127436295831552,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231253336202674176,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231816286156095488,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232097761132806144,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232238498621161472,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232308867365339136,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232344051737427968,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232361643923472384,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232370440016494592,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232374838063005696,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232377037086261248,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232378136597889024,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232378686353702912,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232378961231609856,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379098670563328,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379167390040064,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379201749778432,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379218929647616,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379227519582208,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379231814549504,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379233962033152,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235035774976,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235572645888,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235841081344,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235975299072,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236042407936,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236075962368,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236092739584,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236101128192,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236105322496,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236107419648,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236108468224,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236108992512,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109254656,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109385728,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109451264,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109484032,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109500416,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109508608,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109512704,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109514752,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109515776,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516288,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516544,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516672,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894132449418335366,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516799,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779200,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779201,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779203,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779207,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779215,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779231,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779263,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779327,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779455,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779711,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793780223,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793781247,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793783295,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793787391,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793795583,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793811967,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793844735,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793910271,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226794041343,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226794303487,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226794827775,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226795876351,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226797973503,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226802167807,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226810556415,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226827333631,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226860888063,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226927996927,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969227062214655,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969227330650111,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969227867521023,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969228941262847,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969231088746495,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969235383713791,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969243973648383,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969261153517567,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969295513255935,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969364232732671,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969501671686143,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969776549593087,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344970326305406975,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344971425817034751,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344973624840290303,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344978022886801407,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344986818979823615,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345004411165868031,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345039595537956863,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345109964282134527,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345250701770489855,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9345532176747200511,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9346095126700621823,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9347221026607464447,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9347221026607464448,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9348346926514307072,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9348909876467728384,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349191351444439040,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349332088932794368,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349402457676972032,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349437642049060864,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349455234235105280,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349464030328127488,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349468428374638592,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349470627397894144,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349471726909521920,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472276665335808,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472551543242752,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472688982196224,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472757701672960,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472792061411328,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472809241280512,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472817831215104,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472822126182400,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472824273666048,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472825347407872,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472825884278784,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826152714240,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826286931968,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826354040832,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826387595264,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826404372480,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826412761088,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826416955392,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826419052544,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826420101120,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826420625408,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826420887552,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421018624,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421084160,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421116928,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421133312,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421141504,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421145600,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421147648,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421148672,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149184,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149440,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149568,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149632,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149664,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149680,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149688,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149692,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149694,64,FLEN)
NAN_BOXED(6894149495965771438,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149695,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465153536,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465153537,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465153539,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465153543,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465153551,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465153567,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465153599,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465153663,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465153791,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465154047,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465154559,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465155583,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465157631,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465161727,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465169919,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465186303,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465219071,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465284607,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465415679,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485465677823,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485466202111,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485467250687,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485469347839,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485473542143,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485481930751,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485498707967,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485532262399,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485599371263,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266485733588991,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266486002024447,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266486538895359,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266487612637183,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266489760120831,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266494055088127,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266502645022719,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266519824891903,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266554184630271,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266622904107007,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470266760343060479,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470267035220967423,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470267584976781311,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470268684488409087,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470270883511664639,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470275281558175743,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470284077651197951,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470301669837242367,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470336854209331199,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470407222953508863,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470547960441864191,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13470829435418574847,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13471392385371996159,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13472518285278838783,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13472518285278838784,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13473644185185681408,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474207135139102720,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474488610115813376,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474629347604168704,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474699716348346368,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474734900720435200,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474752492906479616,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474761288999501824,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474765687046012928,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474767886069268480,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474768985580896256,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474769535336710144,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474769810214617088,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474769947653570560,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770016373047296,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770050732785664,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770067912654848,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770076502589440,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770080797556736,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770082945040384,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770084018782208,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770084555653120,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770084824088576,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770084958306304,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085025415168,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085058969600,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085075746816,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085084135424,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085088329728,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085090426880,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085091475456,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085091999744,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092261888,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092392960,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092458496,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092491264,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092507648,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092515840,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092519936,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092521984,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092523008,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092523520,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092523776,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092523904,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092523968,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092524000,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092524016,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092524024,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092524028,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092524030,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13474770085092524031,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894158255172135890,64,FLEN)
NAN_BOXED(11511671625488232164,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355636736,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355636737,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355636739,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355636743,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355636751,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355636767,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355636799,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355636863,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355636991,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355637247,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355637759,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355638783,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355640831,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355644927,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355653119,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355669503,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355702271,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355767807,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249355898879,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249356161023,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249356685311,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249357733887,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249359831039,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249364025343,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249372413951,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249389191167,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249422745599,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249489854463,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249624072191,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887249892507647,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887250429378559,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887251503120383,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887253650604031,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887257945571327,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887266535505919,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887283715375103,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887318075113471,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887386794590207,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887524233543679,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237887799111450623,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237888348867264511,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237889448378892287,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237891647402147839,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237896045448658943,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237904841541681151,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237922433727725567,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4237957618099814399,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4238027986843992063,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4238168724332347391,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4238450199309058047,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4239013149262479359,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4240139049169321983,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4240139049169321984,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4241264949076164608,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4241827899029585920,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242109374006296576,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242250111494651904,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242320480238829568,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242355664610918400,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242373256796962816,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242382052889985024,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242386450936496128,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242388649959751680,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242389749471379456,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390299227193344,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390574105100288,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390711544053760,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390780263530496,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390814623268864,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390831803138048,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390840393072640,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390844688039936,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390846835523584,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390847909265408,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848446136320,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848714571776,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848848789504,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848915898368,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848949452800,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848966230016,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848974618624,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848978812928,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848980910080,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848981958656,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848982482944,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848982745088,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848982876160,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848982941696,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848982974464,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848982990848,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848982999040,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983003136,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983005184,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983006208,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983006720,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983006976,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983007104,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983007168,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983007200,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983007216,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983007224,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983007228,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983007230,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4242390848983007231,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894169420915721992,64,FLEN)
NAN_BOXED(2319817983717694889,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337856,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337857,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337859,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337863,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337871,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337887,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337919,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337983,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338111,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338367,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338879,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585339903,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585341951,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585346047,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585354239,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585370623,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585403391,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585468927,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585599999,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585862143,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586586386431,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586587435007,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586589532159,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586593726463,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586602115071,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586618892287,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586652446719,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586719555583,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586853773311,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129587122208767,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129587659079679,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129588732821503,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129590880305151,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129595175272447,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129603765207039,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129620945076223,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129655304814591,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129724024291327,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129861463244799,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162130136341151743,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162130686096965631,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162131785608593407,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162133984631848959,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162138382678360063,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162147178771382271,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162164770957426687,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162199955329515519,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162270324073693183,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162411061562048511,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162692536538759167,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(163255486492180479,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(164381386399023103,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(164381386399023104,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(165507286305865728,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166070236259287040,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166351711235997696,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166492448724353024,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166562817468530688,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166598001840619520,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166615594026663936,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166624390119686144,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166628788166197248,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166630987189452800,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632086701080576,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632636456894464,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632911334801408,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633048773754880,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633117493231616,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633151852969984,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633169032839168,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633177622773760,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633181917741056,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633184065224704,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185138966528,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185675837440,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185944272896,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186078490624,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186145599488,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186179153920,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186195931136,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186204319744,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186208514048,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186210611200,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186211659776,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212184064,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212446208,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212577280,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212642816,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212675584,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212691968,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212700160,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212704256,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212706304,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212707328,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212707840,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708096,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708224,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708288,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708320,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708336,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708344,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708348,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708350,64,FLEN)
NAN_BOXED(6894169699897198610,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708351,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341248,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341249,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341251,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341255,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341263,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341279,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341311,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341375,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341503,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341759,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524342271,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524343295,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524345343,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524349439,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524357631,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524374015,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524406783,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524472319,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524603391,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524865535,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776525389823,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776526438399,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776528535551,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776532729855,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776541118463,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776557895679,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776591450111,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776658558975,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776792776703,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777061212159,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777598083071,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726778671824895,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726780819308543,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726785114275839,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726793704210431,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726810884079615,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726845243817983,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726913963294719,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727051402248191,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727326280155135,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727876035969023,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283728975547596799,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283731174570852351,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283735572617363455,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283744368710385663,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283761960896430079,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283797145268518911,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283867514012696575,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284008251501051903,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284289726477762559,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284852676431183871,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026495,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026496,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287104476244869120,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287667426198290432,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287948901175001088,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288089638663356416,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288160007407534080,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288195191779622912,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288212783965667328,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288221580058689536,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288225978105200640,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288228177128456192,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229276640083968,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229826395897856,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230101273804800,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230238712758272,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230307432235008,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230341791973376,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230358971842560,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230367561777152,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230371856744448,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230374004228096,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375077969920,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375614840832,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375883276288,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376017494016,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376084602880,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376118157312,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376134934528,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376143323136,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376147517440,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376149614592,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376150663168,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151187456,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151449600,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151580672,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151646208,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151678976,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151695360,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151703552,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151707648,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151709696,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151710720,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711232,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711488,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711616,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711680,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711712,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711728,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711736,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711740,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711742,64,FLEN)
NAN_BOXED(6894181831214048108,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711743,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002176,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002177,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002179,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002183,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002191,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002207,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002239,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002303,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002431,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002687,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558003199,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558004223,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558006271,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558010367,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558018559,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558034943,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558067711,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558133247,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558264319,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558526463,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824559050751,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824560099327,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824562196479,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824566390783,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824574779391,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824591556607,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824625111039,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824692219903,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824826437631,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990825094873087,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990825631743999,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990826705485823,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990828852969471,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990833147936767,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990841737871359,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990858917740543,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990893277478911,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990961996955647,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991099435909119,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991374313816063,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991924069629951,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371993023581257727,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371995222604513279,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371999620651024383,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372008416744046591,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372026008930091007,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372061193302179839,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372131562046357503,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372272299534712831,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372553774511423487,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9373116724464844799,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9374242624371687423,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9374242624371687424,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9375368524278530048,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9375931474231951360,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376212949208662016,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376353686697017344,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376424055441195008,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376459239813283840,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376476831999328256,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376485628092350464,64,FLEN)
NAN_BOXED(6894192966168006017,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376490026138861568,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
