
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_68352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffe000000000; valaddr_reg:x3; val_offset:205056*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205056*0 + 3*0*FLEN/8, x4, x1, x2)

inst_68353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffff000000000; valaddr_reg:x3; val_offset:205059*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205059*0 + 3*1*FLEN/8, x4, x1, x2)

inst_68354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffff800000000; valaddr_reg:x3; val_offset:205062*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205062*0 + 3*2*FLEN/8, x4, x1, x2)

inst_68355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffc00000000; valaddr_reg:x3; val_offset:205065*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205065*0 + 3*3*FLEN/8, x4, x1, x2)

inst_68356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffe00000000; valaddr_reg:x3; val_offset:205068*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205068*0 + 3*4*FLEN/8, x4, x1, x2)

inst_68357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffff00000000; valaddr_reg:x3; val_offset:205071*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205071*0 + 3*5*FLEN/8, x4, x1, x2)

inst_68358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffff80000000; valaddr_reg:x3; val_offset:205074*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205074*0 + 3*6*FLEN/8, x4, x1, x2)

inst_68359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffc0000000; valaddr_reg:x3; val_offset:205077*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205077*0 + 3*7*FLEN/8, x4, x1, x2)

inst_68360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffe0000000; valaddr_reg:x3; val_offset:205080*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205080*0 + 3*8*FLEN/8, x4, x1, x2)

inst_68361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffff0000000; valaddr_reg:x3; val_offset:205083*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205083*0 + 3*9*FLEN/8, x4, x1, x2)

inst_68362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffff8000000; valaddr_reg:x3; val_offset:205086*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205086*0 + 3*10*FLEN/8, x4, x1, x2)

inst_68363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffc000000; valaddr_reg:x3; val_offset:205089*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205089*0 + 3*11*FLEN/8, x4, x1, x2)

inst_68364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffe000000; valaddr_reg:x3; val_offset:205092*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205092*0 + 3*12*FLEN/8, x4, x1, x2)

inst_68365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffff000000; valaddr_reg:x3; val_offset:205095*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205095*0 + 3*13*FLEN/8, x4, x1, x2)

inst_68366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffff800000; valaddr_reg:x3; val_offset:205098*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205098*0 + 3*14*FLEN/8, x4, x1, x2)

inst_68367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffffc00000; valaddr_reg:x3; val_offset:205101*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205101*0 + 3*15*FLEN/8, x4, x1, x2)

inst_68368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffffe00000; valaddr_reg:x3; val_offset:205104*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205104*0 + 3*16*FLEN/8, x4, x1, x2)

inst_68369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffff00000; valaddr_reg:x3; val_offset:205107*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205107*0 + 3*17*FLEN/8, x4, x1, x2)

inst_68370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffff80000; valaddr_reg:x3; val_offset:205110*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205110*0 + 3*18*FLEN/8, x4, x1, x2)

inst_68371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffffc0000; valaddr_reg:x3; val_offset:205113*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205113*0 + 3*19*FLEN/8, x4, x1, x2)

inst_68372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffffe0000; valaddr_reg:x3; val_offset:205116*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205116*0 + 3*20*FLEN/8, x4, x1, x2)

inst_68373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffffff0000; valaddr_reg:x3; val_offset:205119*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205119*0 + 3*21*FLEN/8, x4, x1, x2)

inst_68374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffffff8000; valaddr_reg:x3; val_offset:205122*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205122*0 + 3*22*FLEN/8, x4, x1, x2)

inst_68375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffffffc000; valaddr_reg:x3; val_offset:205125*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205125*0 + 3*23*FLEN/8, x4, x1, x2)

inst_68376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffffffe000; valaddr_reg:x3; val_offset:205128*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205128*0 + 3*24*FLEN/8, x4, x1, x2)

inst_68377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffffff000; valaddr_reg:x3; val_offset:205131*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205131*0 + 3*25*FLEN/8, x4, x1, x2)

inst_68378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffffff800; valaddr_reg:x3; val_offset:205134*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205134*0 + 3*26*FLEN/8, x4, x1, x2)

inst_68379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffffffc00; valaddr_reg:x3; val_offset:205137*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205137*0 + 3*27*FLEN/8, x4, x1, x2)

inst_68380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffffffe00; valaddr_reg:x3; val_offset:205140*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205140*0 + 3*28*FLEN/8, x4, x1, x2)

inst_68381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffffffff00; valaddr_reg:x3; val_offset:205143*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205143*0 + 3*29*FLEN/8, x4, x1, x2)

inst_68382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffffffff80; valaddr_reg:x3; val_offset:205146*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205146*0 + 3*30*FLEN/8, x4, x1, x2)

inst_68383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffffffffc0; valaddr_reg:x3; val_offset:205149*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205149*0 + 3*31*FLEN/8, x4, x1, x2)

inst_68384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffffffffe0; valaddr_reg:x3; val_offset:205152*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205152*0 + 3*32*FLEN/8, x4, x1, x2)

inst_68385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffffffff0; valaddr_reg:x3; val_offset:205155*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205155*0 + 3*33*FLEN/8, x4, x1, x2)

inst_68386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffffffff8; valaddr_reg:x3; val_offset:205158*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205158*0 + 3*34*FLEN/8, x4, x1, x2)

inst_68387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffffffffc; valaddr_reg:x3; val_offset:205161*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205161*0 + 3*35*FLEN/8, x4, x1, x2)

inst_68388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebffffffffffffe; valaddr_reg:x3; val_offset:205164*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205164*0 + 3*36*FLEN/8, x4, x1, x2)

inst_68389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3eb and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbebfffffffffffff; valaddr_reg:x3; val_offset:205167*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205167*0 + 3*37*FLEN/8, x4, x1, x2)

inst_68390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:205170*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205170*0 + 3*38*FLEN/8, x4, x1, x2)

inst_68391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:205173*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205173*0 + 3*39*FLEN/8, x4, x1, x2)

inst_68392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:205176*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205176*0 + 3*40*FLEN/8, x4, x1, x2)

inst_68393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:205179*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205179*0 + 3*41*FLEN/8, x4, x1, x2)

inst_68394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:205182*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205182*0 + 3*42*FLEN/8, x4, x1, x2)

inst_68395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:205185*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205185*0 + 3*43*FLEN/8, x4, x1, x2)

inst_68396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:205188*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205188*0 + 3*44*FLEN/8, x4, x1, x2)

inst_68397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:205191*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205191*0 + 3*45*FLEN/8, x4, x1, x2)

inst_68398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:205194*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205194*0 + 3*46*FLEN/8, x4, x1, x2)

inst_68399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:205197*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205197*0 + 3*47*FLEN/8, x4, x1, x2)

inst_68400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:205200*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205200*0 + 3*48*FLEN/8, x4, x1, x2)

inst_68401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:205203*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205203*0 + 3*49*FLEN/8, x4, x1, x2)

inst_68402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:205206*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205206*0 + 3*50*FLEN/8, x4, x1, x2)

inst_68403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:205209*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205209*0 + 3*51*FLEN/8, x4, x1, x2)

inst_68404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:205212*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205212*0 + 3*52*FLEN/8, x4, x1, x2)

inst_68405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:205215*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205215*0 + 3*53*FLEN/8, x4, x1, x2)

inst_68406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:205218*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205218*0 + 3*54*FLEN/8, x4, x1, x2)

inst_68407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:205221*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205221*0 + 3*55*FLEN/8, x4, x1, x2)

inst_68408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:205224*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205224*0 + 3*56*FLEN/8, x4, x1, x2)

inst_68409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:205227*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205227*0 + 3*57*FLEN/8, x4, x1, x2)

inst_68410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:205230*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205230*0 + 3*58*FLEN/8, x4, x1, x2)

inst_68411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4ae8eafcb29d2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c188720af997 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4ae8eafcb29d2; op2val:0x9fc8c188720af997;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:205233*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205233*0 + 3*59*FLEN/8, x4, x1, x2)

inst_68412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:205236*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205236*0 + 3*60*FLEN/8, x4, x1, x2)

inst_68413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:205239*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205239*0 + 3*61*FLEN/8, x4, x1, x2)

inst_68414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:205242*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205242*0 + 3*62*FLEN/8, x4, x1, x2)

inst_68415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:205245*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205245*0 + 3*63*FLEN/8, x4, x1, x2)

inst_68416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:205248*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205248*0 + 3*64*FLEN/8, x4, x1, x2)

inst_68417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:205251*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205251*0 + 3*65*FLEN/8, x4, x1, x2)

inst_68418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:205254*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205254*0 + 3*66*FLEN/8, x4, x1, x2)

inst_68419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:205257*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205257*0 + 3*67*FLEN/8, x4, x1, x2)

inst_68420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:205260*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205260*0 + 3*68*FLEN/8, x4, x1, x2)

inst_68421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:205263*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205263*0 + 3*69*FLEN/8, x4, x1, x2)

inst_68422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:205266*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205266*0 + 3*70*FLEN/8, x4, x1, x2)

inst_68423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:205269*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205269*0 + 3*71*FLEN/8, x4, x1, x2)

inst_68424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:205272*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205272*0 + 3*72*FLEN/8, x4, x1, x2)

inst_68425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:205275*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205275*0 + 3*73*FLEN/8, x4, x1, x2)

inst_68426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:205278*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205278*0 + 3*74*FLEN/8, x4, x1, x2)

inst_68427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:205281*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205281*0 + 3*75*FLEN/8, x4, x1, x2)

inst_68428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:205284*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205284*0 + 3*76*FLEN/8, x4, x1, x2)

inst_68429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:205287*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205287*0 + 3*77*FLEN/8, x4, x1, x2)

inst_68430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:205290*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205290*0 + 3*78*FLEN/8, x4, x1, x2)

inst_68431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:205293*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205293*0 + 3*79*FLEN/8, x4, x1, x2)

inst_68432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:205296*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205296*0 + 3*80*FLEN/8, x4, x1, x2)

inst_68433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:205299*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205299*0 + 3*81*FLEN/8, x4, x1, x2)

inst_68434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000000000000; valaddr_reg:x3; val_offset:205302*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205302*0 + 3*82*FLEN/8, x4, x1, x2)

inst_68435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000000000001; valaddr_reg:x3; val_offset:205305*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205305*0 + 3*83*FLEN/8, x4, x1, x2)

inst_68436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000000000003; valaddr_reg:x3; val_offset:205308*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205308*0 + 3*84*FLEN/8, x4, x1, x2)

inst_68437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000000000007; valaddr_reg:x3; val_offset:205311*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205311*0 + 3*85*FLEN/8, x4, x1, x2)

inst_68438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000000000000f; valaddr_reg:x3; val_offset:205314*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205314*0 + 3*86*FLEN/8, x4, x1, x2)

inst_68439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000000000001f; valaddr_reg:x3; val_offset:205317*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205317*0 + 3*87*FLEN/8, x4, x1, x2)

inst_68440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000000000003f; valaddr_reg:x3; val_offset:205320*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205320*0 + 3*88*FLEN/8, x4, x1, x2)

inst_68441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000000000007f; valaddr_reg:x3; val_offset:205323*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205323*0 + 3*89*FLEN/8, x4, x1, x2)

inst_68442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00000000000ff; valaddr_reg:x3; val_offset:205326*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205326*0 + 3*90*FLEN/8, x4, x1, x2)

inst_68443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00000000001ff; valaddr_reg:x3; val_offset:205329*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205329*0 + 3*91*FLEN/8, x4, x1, x2)

inst_68444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00000000003ff; valaddr_reg:x3; val_offset:205332*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205332*0 + 3*92*FLEN/8, x4, x1, x2)

inst_68445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00000000007ff; valaddr_reg:x3; val_offset:205335*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205335*0 + 3*93*FLEN/8, x4, x1, x2)

inst_68446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000000000fff; valaddr_reg:x3; val_offset:205338*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205338*0 + 3*94*FLEN/8, x4, x1, x2)

inst_68447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000000001fff; valaddr_reg:x3; val_offset:205341*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205341*0 + 3*95*FLEN/8, x4, x1, x2)

inst_68448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000000003fff; valaddr_reg:x3; val_offset:205344*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205344*0 + 3*96*FLEN/8, x4, x1, x2)

inst_68449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000000007fff; valaddr_reg:x3; val_offset:205347*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205347*0 + 3*97*FLEN/8, x4, x1, x2)

inst_68450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000000000ffff; valaddr_reg:x3; val_offset:205350*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205350*0 + 3*98*FLEN/8, x4, x1, x2)

inst_68451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000000001ffff; valaddr_reg:x3; val_offset:205353*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205353*0 + 3*99*FLEN/8, x4, x1, x2)

inst_68452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000000003ffff; valaddr_reg:x3; val_offset:205356*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205356*0 + 3*100*FLEN/8, x4, x1, x2)

inst_68453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000000007ffff; valaddr_reg:x3; val_offset:205359*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205359*0 + 3*101*FLEN/8, x4, x1, x2)

inst_68454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00000000fffff; valaddr_reg:x3; val_offset:205362*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205362*0 + 3*102*FLEN/8, x4, x1, x2)

inst_68455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00000001fffff; valaddr_reg:x3; val_offset:205365*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205365*0 + 3*103*FLEN/8, x4, x1, x2)

inst_68456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00000003fffff; valaddr_reg:x3; val_offset:205368*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205368*0 + 3*104*FLEN/8, x4, x1, x2)

inst_68457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00000007fffff; valaddr_reg:x3; val_offset:205371*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205371*0 + 3*105*FLEN/8, x4, x1, x2)

inst_68458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000000ffffff; valaddr_reg:x3; val_offset:205374*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205374*0 + 3*106*FLEN/8, x4, x1, x2)

inst_68459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000001ffffff; valaddr_reg:x3; val_offset:205377*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205377*0 + 3*107*FLEN/8, x4, x1, x2)

inst_68460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000003ffffff; valaddr_reg:x3; val_offset:205380*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205380*0 + 3*108*FLEN/8, x4, x1, x2)

inst_68461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000007ffffff; valaddr_reg:x3; val_offset:205383*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205383*0 + 3*109*FLEN/8, x4, x1, x2)

inst_68462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000000fffffff; valaddr_reg:x3; val_offset:205386*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205386*0 + 3*110*FLEN/8, x4, x1, x2)

inst_68463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000001fffffff; valaddr_reg:x3; val_offset:205389*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205389*0 + 3*111*FLEN/8, x4, x1, x2)

inst_68464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000003fffffff; valaddr_reg:x3; val_offset:205392*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205392*0 + 3*112*FLEN/8, x4, x1, x2)

inst_68465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000007fffffff; valaddr_reg:x3; val_offset:205395*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205395*0 + 3*113*FLEN/8, x4, x1, x2)

inst_68466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00000ffffffff; valaddr_reg:x3; val_offset:205398*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205398*0 + 3*114*FLEN/8, x4, x1, x2)

inst_68467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00001ffffffff; valaddr_reg:x3; val_offset:205401*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205401*0 + 3*115*FLEN/8, x4, x1, x2)

inst_68468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00003ffffffff; valaddr_reg:x3; val_offset:205404*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205404*0 + 3*116*FLEN/8, x4, x1, x2)

inst_68469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00007ffffffff; valaddr_reg:x3; val_offset:205407*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205407*0 + 3*117*FLEN/8, x4, x1, x2)

inst_68470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0000fffffffff; valaddr_reg:x3; val_offset:205410*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205410*0 + 3*118*FLEN/8, x4, x1, x2)

inst_68471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0001fffffffff; valaddr_reg:x3; val_offset:205413*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205413*0 + 3*119*FLEN/8, x4, x1, x2)

inst_68472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0003fffffffff; valaddr_reg:x3; val_offset:205416*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205416*0 + 3*120*FLEN/8, x4, x1, x2)

inst_68473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0007fffffffff; valaddr_reg:x3; val_offset:205419*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205419*0 + 3*121*FLEN/8, x4, x1, x2)

inst_68474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c000ffffffffff; valaddr_reg:x3; val_offset:205422*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205422*0 + 3*122*FLEN/8, x4, x1, x2)

inst_68475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c001ffffffffff; valaddr_reg:x3; val_offset:205425*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205425*0 + 3*123*FLEN/8, x4, x1, x2)

inst_68476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c003ffffffffff; valaddr_reg:x3; val_offset:205428*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205428*0 + 3*124*FLEN/8, x4, x1, x2)

inst_68477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c007ffffffffff; valaddr_reg:x3; val_offset:205431*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205431*0 + 3*125*FLEN/8, x4, x1, x2)

inst_68478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c00fffffffffff; valaddr_reg:x3; val_offset:205434*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205434*0 + 3*126*FLEN/8, x4, x1, x2)

inst_68479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c01fffffffffff; valaddr_reg:x3; val_offset:205437*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205437*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_68480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c03fffffffffff; valaddr_reg:x3; val_offset:205440*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205440*0 + 3*128*FLEN/8, x4, x1, x2)

inst_68481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c07fffffffffff; valaddr_reg:x3; val_offset:205443*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205443*0 + 3*129*FLEN/8, x4, x1, x2)

inst_68482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c0ffffffffffff; valaddr_reg:x3; val_offset:205446*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205446*0 + 3*130*FLEN/8, x4, x1, x2)

inst_68483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c1ffffffffffff; valaddr_reg:x3; val_offset:205449*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205449*0 + 3*131*FLEN/8, x4, x1, x2)

inst_68484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c3ffffffffffff; valaddr_reg:x3; val_offset:205452*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205452*0 + 3*132*FLEN/8, x4, x1, x2)

inst_68485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c7ffffffffffff; valaddr_reg:x3; val_offset:205455*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205455*0 + 3*133*FLEN/8, x4, x1, x2)

inst_68486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83c8000000000000; valaddr_reg:x3; val_offset:205458*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205458*0 + 3*134*FLEN/8, x4, x1, x2)

inst_68487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cc000000000000; valaddr_reg:x3; val_offset:205461*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205461*0 + 3*135*FLEN/8, x4, x1, x2)

inst_68488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83ce000000000000; valaddr_reg:x3; val_offset:205464*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205464*0 + 3*136*FLEN/8, x4, x1, x2)

inst_68489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cf000000000000; valaddr_reg:x3; val_offset:205467*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205467*0 + 3*137*FLEN/8, x4, x1, x2)

inst_68490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cf800000000000; valaddr_reg:x3; val_offset:205470*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205470*0 + 3*138*FLEN/8, x4, x1, x2)

inst_68491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfc00000000000; valaddr_reg:x3; val_offset:205473*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205473*0 + 3*139*FLEN/8, x4, x1, x2)

inst_68492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfe00000000000; valaddr_reg:x3; val_offset:205476*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205476*0 + 3*140*FLEN/8, x4, x1, x2)

inst_68493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cff00000000000; valaddr_reg:x3; val_offset:205479*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205479*0 + 3*141*FLEN/8, x4, x1, x2)

inst_68494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cff80000000000; valaddr_reg:x3; val_offset:205482*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205482*0 + 3*142*FLEN/8, x4, x1, x2)

inst_68495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffc0000000000; valaddr_reg:x3; val_offset:205485*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205485*0 + 3*143*FLEN/8, x4, x1, x2)

inst_68496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffe0000000000; valaddr_reg:x3; val_offset:205488*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205488*0 + 3*144*FLEN/8, x4, x1, x2)

inst_68497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfff0000000000; valaddr_reg:x3; val_offset:205491*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205491*0 + 3*145*FLEN/8, x4, x1, x2)

inst_68498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfff8000000000; valaddr_reg:x3; val_offset:205494*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205494*0 + 3*146*FLEN/8, x4, x1, x2)

inst_68499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffc000000000; valaddr_reg:x3; val_offset:205497*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205497*0 + 3*147*FLEN/8, x4, x1, x2)

inst_68500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffe000000000; valaddr_reg:x3; val_offset:205500*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205500*0 + 3*148*FLEN/8, x4, x1, x2)

inst_68501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffff000000000; valaddr_reg:x3; val_offset:205503*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205503*0 + 3*149*FLEN/8, x4, x1, x2)

inst_68502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffff800000000; valaddr_reg:x3; val_offset:205506*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205506*0 + 3*150*FLEN/8, x4, x1, x2)

inst_68503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffc00000000; valaddr_reg:x3; val_offset:205509*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205509*0 + 3*151*FLEN/8, x4, x1, x2)

inst_68504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffe00000000; valaddr_reg:x3; val_offset:205512*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205512*0 + 3*152*FLEN/8, x4, x1, x2)

inst_68505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffff00000000; valaddr_reg:x3; val_offset:205515*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205515*0 + 3*153*FLEN/8, x4, x1, x2)

inst_68506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffff80000000; valaddr_reg:x3; val_offset:205518*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205518*0 + 3*154*FLEN/8, x4, x1, x2)

inst_68507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffc0000000; valaddr_reg:x3; val_offset:205521*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205521*0 + 3*155*FLEN/8, x4, x1, x2)

inst_68508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffe0000000; valaddr_reg:x3; val_offset:205524*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205524*0 + 3*156*FLEN/8, x4, x1, x2)

inst_68509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffff0000000; valaddr_reg:x3; val_offset:205527*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205527*0 + 3*157*FLEN/8, x4, x1, x2)

inst_68510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffff8000000; valaddr_reg:x3; val_offset:205530*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205530*0 + 3*158*FLEN/8, x4, x1, x2)

inst_68511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffc000000; valaddr_reg:x3; val_offset:205533*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205533*0 + 3*159*FLEN/8, x4, x1, x2)

inst_68512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffe000000; valaddr_reg:x3; val_offset:205536*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205536*0 + 3*160*FLEN/8, x4, x1, x2)

inst_68513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffff000000; valaddr_reg:x3; val_offset:205539*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205539*0 + 3*161*FLEN/8, x4, x1, x2)

inst_68514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffff800000; valaddr_reg:x3; val_offset:205542*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205542*0 + 3*162*FLEN/8, x4, x1, x2)

inst_68515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffffc00000; valaddr_reg:x3; val_offset:205545*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205545*0 + 3*163*FLEN/8, x4, x1, x2)

inst_68516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffffe00000; valaddr_reg:x3; val_offset:205548*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205548*0 + 3*164*FLEN/8, x4, x1, x2)

inst_68517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffff00000; valaddr_reg:x3; val_offset:205551*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205551*0 + 3*165*FLEN/8, x4, x1, x2)

inst_68518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffff80000; valaddr_reg:x3; val_offset:205554*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205554*0 + 3*166*FLEN/8, x4, x1, x2)

inst_68519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffffc0000; valaddr_reg:x3; val_offset:205557*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205557*0 + 3*167*FLEN/8, x4, x1, x2)

inst_68520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffffe0000; valaddr_reg:x3; val_offset:205560*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205560*0 + 3*168*FLEN/8, x4, x1, x2)

inst_68521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffffff0000; valaddr_reg:x3; val_offset:205563*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205563*0 + 3*169*FLEN/8, x4, x1, x2)

inst_68522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffffff8000; valaddr_reg:x3; val_offset:205566*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205566*0 + 3*170*FLEN/8, x4, x1, x2)

inst_68523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffffffc000; valaddr_reg:x3; val_offset:205569*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205569*0 + 3*171*FLEN/8, x4, x1, x2)

inst_68524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffffffe000; valaddr_reg:x3; val_offset:205572*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205572*0 + 3*172*FLEN/8, x4, x1, x2)

inst_68525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffffff000; valaddr_reg:x3; val_offset:205575*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205575*0 + 3*173*FLEN/8, x4, x1, x2)

inst_68526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffffff800; valaddr_reg:x3; val_offset:205578*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205578*0 + 3*174*FLEN/8, x4, x1, x2)

inst_68527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffffffc00; valaddr_reg:x3; val_offset:205581*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205581*0 + 3*175*FLEN/8, x4, x1, x2)

inst_68528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffffffe00; valaddr_reg:x3; val_offset:205584*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205584*0 + 3*176*FLEN/8, x4, x1, x2)

inst_68529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffffffff00; valaddr_reg:x3; val_offset:205587*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205587*0 + 3*177*FLEN/8, x4, x1, x2)

inst_68530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffffffff80; valaddr_reg:x3; val_offset:205590*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205590*0 + 3*178*FLEN/8, x4, x1, x2)

inst_68531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffffffffc0; valaddr_reg:x3; val_offset:205593*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205593*0 + 3*179*FLEN/8, x4, x1, x2)

inst_68532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffffffffe0; valaddr_reg:x3; val_offset:205596*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205596*0 + 3*180*FLEN/8, x4, x1, x2)

inst_68533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffffffff0; valaddr_reg:x3; val_offset:205599*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205599*0 + 3*181*FLEN/8, x4, x1, x2)

inst_68534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffffffff8; valaddr_reg:x3; val_offset:205602*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205602*0 + 3*182*FLEN/8, x4, x1, x2)

inst_68535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffffffffc; valaddr_reg:x3; val_offset:205605*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205605*0 + 3*183*FLEN/8, x4, x1, x2)

inst_68536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cffffffffffffe; valaddr_reg:x3; val_offset:205608*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205608*0 + 3*184*FLEN/8, x4, x1, x2)

inst_68537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b8d839c8a214 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b8d839c8a214; op2val:0x8000;
op3val:0x83cfffffffffffff; valaddr_reg:x3; val_offset:205611*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205611*0 + 3*185*FLEN/8, x4, x1, x2)

inst_68538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:205614*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205614*0 + 3*186*FLEN/8, x4, x1, x2)

inst_68539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:205617*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205617*0 + 3*187*FLEN/8, x4, x1, x2)

inst_68540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:205620*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205620*0 + 3*188*FLEN/8, x4, x1, x2)

inst_68541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:205623*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205623*0 + 3*189*FLEN/8, x4, x1, x2)

inst_68542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:205626*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205626*0 + 3*190*FLEN/8, x4, x1, x2)

inst_68543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:205629*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205629*0 + 3*191*FLEN/8, x4, x1, x2)

inst_68544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:205632*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205632*0 + 3*192*FLEN/8, x4, x1, x2)

inst_68545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:205635*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205635*0 + 3*193*FLEN/8, x4, x1, x2)

inst_68546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:205638*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205638*0 + 3*194*FLEN/8, x4, x1, x2)

inst_68547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:205641*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205641*0 + 3*195*FLEN/8, x4, x1, x2)

inst_68548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:205644*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205644*0 + 3*196*FLEN/8, x4, x1, x2)

inst_68549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:205647*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205647*0 + 3*197*FLEN/8, x4, x1, x2)

inst_68550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:205650*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205650*0 + 3*198*FLEN/8, x4, x1, x2)

inst_68551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:205653*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205653*0 + 3*199*FLEN/8, x4, x1, x2)

inst_68552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:205656*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205656*0 + 3*200*FLEN/8, x4, x1, x2)

inst_68553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:205659*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205659*0 + 3*201*FLEN/8, x4, x1, x2)

inst_68554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:205662*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205662*0 + 3*202*FLEN/8, x4, x1, x2)

inst_68555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:205665*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205665*0 + 3*203*FLEN/8, x4, x1, x2)

inst_68556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:205668*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205668*0 + 3*204*FLEN/8, x4, x1, x2)

inst_68557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:205671*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205671*0 + 3*205*FLEN/8, x4, x1, x2)

inst_68558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:205674*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205674*0 + 3*206*FLEN/8, x4, x1, x2)

inst_68559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:205677*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205677*0 + 3*207*FLEN/8, x4, x1, x2)

inst_68560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000000000000; valaddr_reg:x3; val_offset:205680*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205680*0 + 3*208*FLEN/8, x4, x1, x2)

inst_68561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000000000001; valaddr_reg:x3; val_offset:205683*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205683*0 + 3*209*FLEN/8, x4, x1, x2)

inst_68562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000000000003; valaddr_reg:x3; val_offset:205686*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205686*0 + 3*210*FLEN/8, x4, x1, x2)

inst_68563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000000000007; valaddr_reg:x3; val_offset:205689*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205689*0 + 3*211*FLEN/8, x4, x1, x2)

inst_68564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000000000000f; valaddr_reg:x3; val_offset:205692*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205692*0 + 3*212*FLEN/8, x4, x1, x2)

inst_68565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000000000001f; valaddr_reg:x3; val_offset:205695*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205695*0 + 3*213*FLEN/8, x4, x1, x2)

inst_68566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000000000003f; valaddr_reg:x3; val_offset:205698*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205698*0 + 3*214*FLEN/8, x4, x1, x2)

inst_68567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000000000007f; valaddr_reg:x3; val_offset:205701*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205701*0 + 3*215*FLEN/8, x4, x1, x2)

inst_68568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00000000000ff; valaddr_reg:x3; val_offset:205704*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205704*0 + 3*216*FLEN/8, x4, x1, x2)

inst_68569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00000000001ff; valaddr_reg:x3; val_offset:205707*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205707*0 + 3*217*FLEN/8, x4, x1, x2)

inst_68570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00000000003ff; valaddr_reg:x3; val_offset:205710*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205710*0 + 3*218*FLEN/8, x4, x1, x2)

inst_68571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00000000007ff; valaddr_reg:x3; val_offset:205713*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205713*0 + 3*219*FLEN/8, x4, x1, x2)

inst_68572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000000000fff; valaddr_reg:x3; val_offset:205716*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205716*0 + 3*220*FLEN/8, x4, x1, x2)

inst_68573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000000001fff; valaddr_reg:x3; val_offset:205719*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205719*0 + 3*221*FLEN/8, x4, x1, x2)

inst_68574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000000003fff; valaddr_reg:x3; val_offset:205722*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205722*0 + 3*222*FLEN/8, x4, x1, x2)

inst_68575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000000007fff; valaddr_reg:x3; val_offset:205725*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205725*0 + 3*223*FLEN/8, x4, x1, x2)

inst_68576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000000000ffff; valaddr_reg:x3; val_offset:205728*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205728*0 + 3*224*FLEN/8, x4, x1, x2)

inst_68577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000000001ffff; valaddr_reg:x3; val_offset:205731*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205731*0 + 3*225*FLEN/8, x4, x1, x2)

inst_68578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000000003ffff; valaddr_reg:x3; val_offset:205734*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205734*0 + 3*226*FLEN/8, x4, x1, x2)

inst_68579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000000007ffff; valaddr_reg:x3; val_offset:205737*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205737*0 + 3*227*FLEN/8, x4, x1, x2)

inst_68580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00000000fffff; valaddr_reg:x3; val_offset:205740*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205740*0 + 3*228*FLEN/8, x4, x1, x2)

inst_68581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00000001fffff; valaddr_reg:x3; val_offset:205743*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205743*0 + 3*229*FLEN/8, x4, x1, x2)

inst_68582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00000003fffff; valaddr_reg:x3; val_offset:205746*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205746*0 + 3*230*FLEN/8, x4, x1, x2)

inst_68583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00000007fffff; valaddr_reg:x3; val_offset:205749*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205749*0 + 3*231*FLEN/8, x4, x1, x2)

inst_68584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000000ffffff; valaddr_reg:x3; val_offset:205752*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205752*0 + 3*232*FLEN/8, x4, x1, x2)

inst_68585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000001ffffff; valaddr_reg:x3; val_offset:205755*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205755*0 + 3*233*FLEN/8, x4, x1, x2)

inst_68586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000003ffffff; valaddr_reg:x3; val_offset:205758*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205758*0 + 3*234*FLEN/8, x4, x1, x2)

inst_68587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000007ffffff; valaddr_reg:x3; val_offset:205761*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205761*0 + 3*235*FLEN/8, x4, x1, x2)

inst_68588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000000fffffff; valaddr_reg:x3; val_offset:205764*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205764*0 + 3*236*FLEN/8, x4, x1, x2)

inst_68589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000001fffffff; valaddr_reg:x3; val_offset:205767*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205767*0 + 3*237*FLEN/8, x4, x1, x2)

inst_68590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000003fffffff; valaddr_reg:x3; val_offset:205770*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205770*0 + 3*238*FLEN/8, x4, x1, x2)

inst_68591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000007fffffff; valaddr_reg:x3; val_offset:205773*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205773*0 + 3*239*FLEN/8, x4, x1, x2)

inst_68592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00000ffffffff; valaddr_reg:x3; val_offset:205776*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205776*0 + 3*240*FLEN/8, x4, x1, x2)

inst_68593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00001ffffffff; valaddr_reg:x3; val_offset:205779*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205779*0 + 3*241*FLEN/8, x4, x1, x2)

inst_68594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00003ffffffff; valaddr_reg:x3; val_offset:205782*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205782*0 + 3*242*FLEN/8, x4, x1, x2)

inst_68595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00007ffffffff; valaddr_reg:x3; val_offset:205785*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205785*0 + 3*243*FLEN/8, x4, x1, x2)

inst_68596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0000fffffffff; valaddr_reg:x3; val_offset:205788*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205788*0 + 3*244*FLEN/8, x4, x1, x2)

inst_68597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0001fffffffff; valaddr_reg:x3; val_offset:205791*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205791*0 + 3*245*FLEN/8, x4, x1, x2)

inst_68598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0003fffffffff; valaddr_reg:x3; val_offset:205794*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205794*0 + 3*246*FLEN/8, x4, x1, x2)

inst_68599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0007fffffffff; valaddr_reg:x3; val_offset:205797*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205797*0 + 3*247*FLEN/8, x4, x1, x2)

inst_68600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc000ffffffffff; valaddr_reg:x3; val_offset:205800*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205800*0 + 3*248*FLEN/8, x4, x1, x2)

inst_68601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc001ffffffffff; valaddr_reg:x3; val_offset:205803*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205803*0 + 3*249*FLEN/8, x4, x1, x2)

inst_68602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc003ffffffffff; valaddr_reg:x3; val_offset:205806*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205806*0 + 3*250*FLEN/8, x4, x1, x2)

inst_68603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc007ffffffffff; valaddr_reg:x3; val_offset:205809*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205809*0 + 3*251*FLEN/8, x4, x1, x2)

inst_68604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc00fffffffffff; valaddr_reg:x3; val_offset:205812*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205812*0 + 3*252*FLEN/8, x4, x1, x2)

inst_68605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc01fffffffffff; valaddr_reg:x3; val_offset:205815*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205815*0 + 3*253*FLEN/8, x4, x1, x2)

inst_68606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc03fffffffffff; valaddr_reg:x3; val_offset:205818*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205818*0 + 3*254*FLEN/8, x4, x1, x2)

inst_68607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc07fffffffffff; valaddr_reg:x3; val_offset:205821*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205821*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_68608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc0ffffffffffff; valaddr_reg:x3; val_offset:205824*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205824*0 + 3*256*FLEN/8, x4, x1, x2)

inst_68609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc1ffffffffffff; valaddr_reg:x3; val_offset:205827*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205827*0 + 3*257*FLEN/8, x4, x1, x2)

inst_68610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc3ffffffffffff; valaddr_reg:x3; val_offset:205830*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205830*0 + 3*258*FLEN/8, x4, x1, x2)

inst_68611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc7ffffffffffff; valaddr_reg:x3; val_offset:205833*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205833*0 + 3*259*FLEN/8, x4, x1, x2)

inst_68612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xc8000000000000; valaddr_reg:x3; val_offset:205836*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205836*0 + 3*260*FLEN/8, x4, x1, x2)

inst_68613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcc000000000000; valaddr_reg:x3; val_offset:205839*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205839*0 + 3*261*FLEN/8, x4, x1, x2)

inst_68614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xce000000000000; valaddr_reg:x3; val_offset:205842*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205842*0 + 3*262*FLEN/8, x4, x1, x2)

inst_68615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcf000000000000; valaddr_reg:x3; val_offset:205845*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205845*0 + 3*263*FLEN/8, x4, x1, x2)

inst_68616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcf800000000000; valaddr_reg:x3; val_offset:205848*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205848*0 + 3*264*FLEN/8, x4, x1, x2)

inst_68617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfc00000000000; valaddr_reg:x3; val_offset:205851*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205851*0 + 3*265*FLEN/8, x4, x1, x2)

inst_68618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfe00000000000; valaddr_reg:x3; val_offset:205854*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205854*0 + 3*266*FLEN/8, x4, x1, x2)

inst_68619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcff00000000000; valaddr_reg:x3; val_offset:205857*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205857*0 + 3*267*FLEN/8, x4, x1, x2)

inst_68620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcff80000000000; valaddr_reg:x3; val_offset:205860*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205860*0 + 3*268*FLEN/8, x4, x1, x2)

inst_68621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffc0000000000; valaddr_reg:x3; val_offset:205863*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205863*0 + 3*269*FLEN/8, x4, x1, x2)

inst_68622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffe0000000000; valaddr_reg:x3; val_offset:205866*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205866*0 + 3*270*FLEN/8, x4, x1, x2)

inst_68623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfff0000000000; valaddr_reg:x3; val_offset:205869*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205869*0 + 3*271*FLEN/8, x4, x1, x2)

inst_68624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfff8000000000; valaddr_reg:x3; val_offset:205872*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205872*0 + 3*272*FLEN/8, x4, x1, x2)

inst_68625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffc000000000; valaddr_reg:x3; val_offset:205875*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205875*0 + 3*273*FLEN/8, x4, x1, x2)

inst_68626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffe000000000; valaddr_reg:x3; val_offset:205878*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205878*0 + 3*274*FLEN/8, x4, x1, x2)

inst_68627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffff000000000; valaddr_reg:x3; val_offset:205881*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205881*0 + 3*275*FLEN/8, x4, x1, x2)

inst_68628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffff800000000; valaddr_reg:x3; val_offset:205884*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205884*0 + 3*276*FLEN/8, x4, x1, x2)

inst_68629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffc00000000; valaddr_reg:x3; val_offset:205887*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205887*0 + 3*277*FLEN/8, x4, x1, x2)

inst_68630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffe00000000; valaddr_reg:x3; val_offset:205890*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205890*0 + 3*278*FLEN/8, x4, x1, x2)

inst_68631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffff00000000; valaddr_reg:x3; val_offset:205893*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205893*0 + 3*279*FLEN/8, x4, x1, x2)

inst_68632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffff80000000; valaddr_reg:x3; val_offset:205896*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205896*0 + 3*280*FLEN/8, x4, x1, x2)

inst_68633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffc0000000; valaddr_reg:x3; val_offset:205899*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205899*0 + 3*281*FLEN/8, x4, x1, x2)

inst_68634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffe0000000; valaddr_reg:x3; val_offset:205902*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205902*0 + 3*282*FLEN/8, x4, x1, x2)

inst_68635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffff0000000; valaddr_reg:x3; val_offset:205905*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205905*0 + 3*283*FLEN/8, x4, x1, x2)

inst_68636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffff8000000; valaddr_reg:x3; val_offset:205908*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205908*0 + 3*284*FLEN/8, x4, x1, x2)

inst_68637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffc000000; valaddr_reg:x3; val_offset:205911*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205911*0 + 3*285*FLEN/8, x4, x1, x2)

inst_68638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffe000000; valaddr_reg:x3; val_offset:205914*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205914*0 + 3*286*FLEN/8, x4, x1, x2)

inst_68639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffff000000; valaddr_reg:x3; val_offset:205917*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205917*0 + 3*287*FLEN/8, x4, x1, x2)

inst_68640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffff800000; valaddr_reg:x3; val_offset:205920*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205920*0 + 3*288*FLEN/8, x4, x1, x2)

inst_68641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffffc00000; valaddr_reg:x3; val_offset:205923*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205923*0 + 3*289*FLEN/8, x4, x1, x2)

inst_68642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffffe00000; valaddr_reg:x3; val_offset:205926*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205926*0 + 3*290*FLEN/8, x4, x1, x2)

inst_68643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffff00000; valaddr_reg:x3; val_offset:205929*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205929*0 + 3*291*FLEN/8, x4, x1, x2)

inst_68644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffff80000; valaddr_reg:x3; val_offset:205932*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205932*0 + 3*292*FLEN/8, x4, x1, x2)

inst_68645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffffc0000; valaddr_reg:x3; val_offset:205935*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205935*0 + 3*293*FLEN/8, x4, x1, x2)

inst_68646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffffe0000; valaddr_reg:x3; val_offset:205938*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205938*0 + 3*294*FLEN/8, x4, x1, x2)

inst_68647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffffff0000; valaddr_reg:x3; val_offset:205941*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205941*0 + 3*295*FLEN/8, x4, x1, x2)

inst_68648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffffff8000; valaddr_reg:x3; val_offset:205944*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205944*0 + 3*296*FLEN/8, x4, x1, x2)

inst_68649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffffffc000; valaddr_reg:x3; val_offset:205947*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205947*0 + 3*297*FLEN/8, x4, x1, x2)

inst_68650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffffffe000; valaddr_reg:x3; val_offset:205950*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205950*0 + 3*298*FLEN/8, x4, x1, x2)

inst_68651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffffff000; valaddr_reg:x3; val_offset:205953*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205953*0 + 3*299*FLEN/8, x4, x1, x2)

inst_68652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffffff800; valaddr_reg:x3; val_offset:205956*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205956*0 + 3*300*FLEN/8, x4, x1, x2)

inst_68653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffffffc00; valaddr_reg:x3; val_offset:205959*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205959*0 + 3*301*FLEN/8, x4, x1, x2)

inst_68654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffffffe00; valaddr_reg:x3; val_offset:205962*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205962*0 + 3*302*FLEN/8, x4, x1, x2)

inst_68655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffffffff00; valaddr_reg:x3; val_offset:205965*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205965*0 + 3*303*FLEN/8, x4, x1, x2)

inst_68656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffffffff80; valaddr_reg:x3; val_offset:205968*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205968*0 + 3*304*FLEN/8, x4, x1, x2)

inst_68657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffffffffc0; valaddr_reg:x3; val_offset:205971*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205971*0 + 3*305*FLEN/8, x4, x1, x2)

inst_68658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffffffffe0; valaddr_reg:x3; val_offset:205974*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205974*0 + 3*306*FLEN/8, x4, x1, x2)

inst_68659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffffffff0; valaddr_reg:x3; val_offset:205977*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205977*0 + 3*307*FLEN/8, x4, x1, x2)

inst_68660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffffffff8; valaddr_reg:x3; val_offset:205980*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205980*0 + 3*308*FLEN/8, x4, x1, x2)

inst_68661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffffffffc; valaddr_reg:x3; val_offset:205983*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205983*0 + 3*309*FLEN/8, x4, x1, x2)

inst_68662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcffffffffffffe; valaddr_reg:x3; val_offset:205986*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205986*0 + 3*310*FLEN/8, x4, x1, x2)

inst_68663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b930876f3655 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b930876f3655; op2val:0x0;
op3val:0xcfffffffffffff; valaddr_reg:x3; val_offset:205989*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205989*0 + 3*311*FLEN/8, x4, x1, x2)

inst_68664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000000000000; valaddr_reg:x3; val_offset:205992*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205992*0 + 3*312*FLEN/8, x4, x1, x2)

inst_68665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000000000001; valaddr_reg:x3; val_offset:205995*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205995*0 + 3*313*FLEN/8, x4, x1, x2)

inst_68666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000000000003; valaddr_reg:x3; val_offset:205998*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205998*0 + 3*314*FLEN/8, x4, x1, x2)

inst_68667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000000000007; valaddr_reg:x3; val_offset:206001*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206001*0 + 3*315*FLEN/8, x4, x1, x2)

inst_68668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000000000000f; valaddr_reg:x3; val_offset:206004*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206004*0 + 3*316*FLEN/8, x4, x1, x2)

inst_68669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000000000001f; valaddr_reg:x3; val_offset:206007*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206007*0 + 3*317*FLEN/8, x4, x1, x2)

inst_68670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000000000003f; valaddr_reg:x3; val_offset:206010*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206010*0 + 3*318*FLEN/8, x4, x1, x2)

inst_68671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000000000007f; valaddr_reg:x3; val_offset:206013*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206013*0 + 3*319*FLEN/8, x4, x1, x2)

inst_68672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00000000000ff; valaddr_reg:x3; val_offset:206016*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206016*0 + 3*320*FLEN/8, x4, x1, x2)

inst_68673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00000000001ff; valaddr_reg:x3; val_offset:206019*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206019*0 + 3*321*FLEN/8, x4, x1, x2)

inst_68674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00000000003ff; valaddr_reg:x3; val_offset:206022*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206022*0 + 3*322*FLEN/8, x4, x1, x2)

inst_68675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00000000007ff; valaddr_reg:x3; val_offset:206025*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206025*0 + 3*323*FLEN/8, x4, x1, x2)

inst_68676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000000000fff; valaddr_reg:x3; val_offset:206028*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206028*0 + 3*324*FLEN/8, x4, x1, x2)

inst_68677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000000001fff; valaddr_reg:x3; val_offset:206031*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206031*0 + 3*325*FLEN/8, x4, x1, x2)

inst_68678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000000003fff; valaddr_reg:x3; val_offset:206034*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206034*0 + 3*326*FLEN/8, x4, x1, x2)

inst_68679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000000007fff; valaddr_reg:x3; val_offset:206037*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206037*0 + 3*327*FLEN/8, x4, x1, x2)

inst_68680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000000000ffff; valaddr_reg:x3; val_offset:206040*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206040*0 + 3*328*FLEN/8, x4, x1, x2)

inst_68681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000000001ffff; valaddr_reg:x3; val_offset:206043*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206043*0 + 3*329*FLEN/8, x4, x1, x2)

inst_68682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000000003ffff; valaddr_reg:x3; val_offset:206046*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206046*0 + 3*330*FLEN/8, x4, x1, x2)

inst_68683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000000007ffff; valaddr_reg:x3; val_offset:206049*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206049*0 + 3*331*FLEN/8, x4, x1, x2)

inst_68684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00000000fffff; valaddr_reg:x3; val_offset:206052*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206052*0 + 3*332*FLEN/8, x4, x1, x2)

inst_68685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00000001fffff; valaddr_reg:x3; val_offset:206055*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206055*0 + 3*333*FLEN/8, x4, x1, x2)

inst_68686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00000003fffff; valaddr_reg:x3; val_offset:206058*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206058*0 + 3*334*FLEN/8, x4, x1, x2)

inst_68687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00000007fffff; valaddr_reg:x3; val_offset:206061*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206061*0 + 3*335*FLEN/8, x4, x1, x2)

inst_68688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000000ffffff; valaddr_reg:x3; val_offset:206064*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206064*0 + 3*336*FLEN/8, x4, x1, x2)

inst_68689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000001ffffff; valaddr_reg:x3; val_offset:206067*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206067*0 + 3*337*FLEN/8, x4, x1, x2)

inst_68690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000003ffffff; valaddr_reg:x3; val_offset:206070*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206070*0 + 3*338*FLEN/8, x4, x1, x2)

inst_68691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000007ffffff; valaddr_reg:x3; val_offset:206073*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206073*0 + 3*339*FLEN/8, x4, x1, x2)

inst_68692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000000fffffff; valaddr_reg:x3; val_offset:206076*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206076*0 + 3*340*FLEN/8, x4, x1, x2)

inst_68693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000001fffffff; valaddr_reg:x3; val_offset:206079*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206079*0 + 3*341*FLEN/8, x4, x1, x2)

inst_68694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000003fffffff; valaddr_reg:x3; val_offset:206082*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206082*0 + 3*342*FLEN/8, x4, x1, x2)

inst_68695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000007fffffff; valaddr_reg:x3; val_offset:206085*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206085*0 + 3*343*FLEN/8, x4, x1, x2)

inst_68696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00000ffffffff; valaddr_reg:x3; val_offset:206088*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206088*0 + 3*344*FLEN/8, x4, x1, x2)

inst_68697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00001ffffffff; valaddr_reg:x3; val_offset:206091*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206091*0 + 3*345*FLEN/8, x4, x1, x2)

inst_68698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00003ffffffff; valaddr_reg:x3; val_offset:206094*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206094*0 + 3*346*FLEN/8, x4, x1, x2)

inst_68699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00007ffffffff; valaddr_reg:x3; val_offset:206097*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206097*0 + 3*347*FLEN/8, x4, x1, x2)

inst_68700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0000fffffffff; valaddr_reg:x3; val_offset:206100*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206100*0 + 3*348*FLEN/8, x4, x1, x2)

inst_68701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0001fffffffff; valaddr_reg:x3; val_offset:206103*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206103*0 + 3*349*FLEN/8, x4, x1, x2)

inst_68702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0003fffffffff; valaddr_reg:x3; val_offset:206106*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206106*0 + 3*350*FLEN/8, x4, x1, x2)

inst_68703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0007fffffffff; valaddr_reg:x3; val_offset:206109*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206109*0 + 3*351*FLEN/8, x4, x1, x2)

inst_68704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d000ffffffffff; valaddr_reg:x3; val_offset:206112*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206112*0 + 3*352*FLEN/8, x4, x1, x2)

inst_68705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d001ffffffffff; valaddr_reg:x3; val_offset:206115*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206115*0 + 3*353*FLEN/8, x4, x1, x2)

inst_68706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d003ffffffffff; valaddr_reg:x3; val_offset:206118*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206118*0 + 3*354*FLEN/8, x4, x1, x2)

inst_68707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d007ffffffffff; valaddr_reg:x3; val_offset:206121*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206121*0 + 3*355*FLEN/8, x4, x1, x2)

inst_68708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d00fffffffffff; valaddr_reg:x3; val_offset:206124*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206124*0 + 3*356*FLEN/8, x4, x1, x2)

inst_68709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d01fffffffffff; valaddr_reg:x3; val_offset:206127*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206127*0 + 3*357*FLEN/8, x4, x1, x2)

inst_68710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d03fffffffffff; valaddr_reg:x3; val_offset:206130*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206130*0 + 3*358*FLEN/8, x4, x1, x2)

inst_68711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d07fffffffffff; valaddr_reg:x3; val_offset:206133*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206133*0 + 3*359*FLEN/8, x4, x1, x2)

inst_68712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d0ffffffffffff; valaddr_reg:x3; val_offset:206136*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206136*0 + 3*360*FLEN/8, x4, x1, x2)

inst_68713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d1ffffffffffff; valaddr_reg:x3; val_offset:206139*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206139*0 + 3*361*FLEN/8, x4, x1, x2)

inst_68714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d3ffffffffffff; valaddr_reg:x3; val_offset:206142*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206142*0 + 3*362*FLEN/8, x4, x1, x2)

inst_68715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d7ffffffffffff; valaddr_reg:x3; val_offset:206145*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206145*0 + 3*363*FLEN/8, x4, x1, x2)

inst_68716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3d8000000000000; valaddr_reg:x3; val_offset:206148*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206148*0 + 3*364*FLEN/8, x4, x1, x2)

inst_68717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dc000000000000; valaddr_reg:x3; val_offset:206151*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206151*0 + 3*365*FLEN/8, x4, x1, x2)

inst_68718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3de000000000000; valaddr_reg:x3; val_offset:206154*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206154*0 + 3*366*FLEN/8, x4, x1, x2)

inst_68719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3df000000000000; valaddr_reg:x3; val_offset:206157*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206157*0 + 3*367*FLEN/8, x4, x1, x2)

inst_68720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3df800000000000; valaddr_reg:x3; val_offset:206160*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206160*0 + 3*368*FLEN/8, x4, x1, x2)

inst_68721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfc00000000000; valaddr_reg:x3; val_offset:206163*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206163*0 + 3*369*FLEN/8, x4, x1, x2)

inst_68722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfe00000000000; valaddr_reg:x3; val_offset:206166*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206166*0 + 3*370*FLEN/8, x4, x1, x2)

inst_68723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dff00000000000; valaddr_reg:x3; val_offset:206169*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206169*0 + 3*371*FLEN/8, x4, x1, x2)

inst_68724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dff80000000000; valaddr_reg:x3; val_offset:206172*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206172*0 + 3*372*FLEN/8, x4, x1, x2)

inst_68725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffc0000000000; valaddr_reg:x3; val_offset:206175*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206175*0 + 3*373*FLEN/8, x4, x1, x2)

inst_68726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffe0000000000; valaddr_reg:x3; val_offset:206178*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206178*0 + 3*374*FLEN/8, x4, x1, x2)

inst_68727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfff0000000000; valaddr_reg:x3; val_offset:206181*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206181*0 + 3*375*FLEN/8, x4, x1, x2)

inst_68728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfff8000000000; valaddr_reg:x3; val_offset:206184*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206184*0 + 3*376*FLEN/8, x4, x1, x2)

inst_68729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffc000000000; valaddr_reg:x3; val_offset:206187*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206187*0 + 3*377*FLEN/8, x4, x1, x2)

inst_68730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffe000000000; valaddr_reg:x3; val_offset:206190*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206190*0 + 3*378*FLEN/8, x4, x1, x2)

inst_68731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffff000000000; valaddr_reg:x3; val_offset:206193*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206193*0 + 3*379*FLEN/8, x4, x1, x2)

inst_68732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffff800000000; valaddr_reg:x3; val_offset:206196*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206196*0 + 3*380*FLEN/8, x4, x1, x2)

inst_68733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffc00000000; valaddr_reg:x3; val_offset:206199*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206199*0 + 3*381*FLEN/8, x4, x1, x2)

inst_68734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffe00000000; valaddr_reg:x3; val_offset:206202*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206202*0 + 3*382*FLEN/8, x4, x1, x2)

inst_68735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffff00000000; valaddr_reg:x3; val_offset:206205*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206205*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_68736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffff80000000; valaddr_reg:x3; val_offset:206208*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206208*0 + 3*384*FLEN/8, x4, x1, x2)

inst_68737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffc0000000; valaddr_reg:x3; val_offset:206211*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206211*0 + 3*385*FLEN/8, x4, x1, x2)

inst_68738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffe0000000; valaddr_reg:x3; val_offset:206214*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206214*0 + 3*386*FLEN/8, x4, x1, x2)

inst_68739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffff0000000; valaddr_reg:x3; val_offset:206217*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206217*0 + 3*387*FLEN/8, x4, x1, x2)

inst_68740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffff8000000; valaddr_reg:x3; val_offset:206220*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206220*0 + 3*388*FLEN/8, x4, x1, x2)

inst_68741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffc000000; valaddr_reg:x3; val_offset:206223*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206223*0 + 3*389*FLEN/8, x4, x1, x2)

inst_68742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffe000000; valaddr_reg:x3; val_offset:206226*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206226*0 + 3*390*FLEN/8, x4, x1, x2)

inst_68743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffff000000; valaddr_reg:x3; val_offset:206229*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206229*0 + 3*391*FLEN/8, x4, x1, x2)

inst_68744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffff800000; valaddr_reg:x3; val_offset:206232*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206232*0 + 3*392*FLEN/8, x4, x1, x2)

inst_68745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffffc00000; valaddr_reg:x3; val_offset:206235*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206235*0 + 3*393*FLEN/8, x4, x1, x2)

inst_68746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffffe00000; valaddr_reg:x3; val_offset:206238*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206238*0 + 3*394*FLEN/8, x4, x1, x2)

inst_68747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffff00000; valaddr_reg:x3; val_offset:206241*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206241*0 + 3*395*FLEN/8, x4, x1, x2)

inst_68748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffff80000; valaddr_reg:x3; val_offset:206244*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206244*0 + 3*396*FLEN/8, x4, x1, x2)

inst_68749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffffc0000; valaddr_reg:x3; val_offset:206247*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206247*0 + 3*397*FLEN/8, x4, x1, x2)

inst_68750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffffe0000; valaddr_reg:x3; val_offset:206250*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206250*0 + 3*398*FLEN/8, x4, x1, x2)

inst_68751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffffff0000; valaddr_reg:x3; val_offset:206253*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206253*0 + 3*399*FLEN/8, x4, x1, x2)

inst_68752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffffff8000; valaddr_reg:x3; val_offset:206256*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206256*0 + 3*400*FLEN/8, x4, x1, x2)

inst_68753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffffffc000; valaddr_reg:x3; val_offset:206259*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206259*0 + 3*401*FLEN/8, x4, x1, x2)

inst_68754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffffffe000; valaddr_reg:x3; val_offset:206262*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206262*0 + 3*402*FLEN/8, x4, x1, x2)

inst_68755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffffff000; valaddr_reg:x3; val_offset:206265*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206265*0 + 3*403*FLEN/8, x4, x1, x2)

inst_68756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffffff800; valaddr_reg:x3; val_offset:206268*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206268*0 + 3*404*FLEN/8, x4, x1, x2)

inst_68757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffffffc00; valaddr_reg:x3; val_offset:206271*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206271*0 + 3*405*FLEN/8, x4, x1, x2)

inst_68758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffffffe00; valaddr_reg:x3; val_offset:206274*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206274*0 + 3*406*FLEN/8, x4, x1, x2)

inst_68759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffffffff00; valaddr_reg:x3; val_offset:206277*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206277*0 + 3*407*FLEN/8, x4, x1, x2)

inst_68760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffffffff80; valaddr_reg:x3; val_offset:206280*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206280*0 + 3*408*FLEN/8, x4, x1, x2)

inst_68761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffffffffc0; valaddr_reg:x3; val_offset:206283*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206283*0 + 3*409*FLEN/8, x4, x1, x2)

inst_68762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffffffffe0; valaddr_reg:x3; val_offset:206286*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206286*0 + 3*410*FLEN/8, x4, x1, x2)

inst_68763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffffffff0; valaddr_reg:x3; val_offset:206289*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206289*0 + 3*411*FLEN/8, x4, x1, x2)

inst_68764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffffffff8; valaddr_reg:x3; val_offset:206292*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206292*0 + 3*412*FLEN/8, x4, x1, x2)

inst_68765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffffffffc; valaddr_reg:x3; val_offset:206295*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206295*0 + 3*413*FLEN/8, x4, x1, x2)

inst_68766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dffffffffffffe; valaddr_reg:x3; val_offset:206298*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206298*0 + 3*414*FLEN/8, x4, x1, x2)

inst_68767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x33d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xb3dfffffffffffff; valaddr_reg:x3; val_offset:206301*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206301*0 + 3*415*FLEN/8, x4, x1, x2)

inst_68768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:206304*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206304*0 + 3*416*FLEN/8, x4, x1, x2)

inst_68769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:206307*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206307*0 + 3*417*FLEN/8, x4, x1, x2)

inst_68770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:206310*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206310*0 + 3*418*FLEN/8, x4, x1, x2)

inst_68771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:206313*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206313*0 + 3*419*FLEN/8, x4, x1, x2)

inst_68772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:206316*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206316*0 + 3*420*FLEN/8, x4, x1, x2)

inst_68773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:206319*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206319*0 + 3*421*FLEN/8, x4, x1, x2)

inst_68774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:206322*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206322*0 + 3*422*FLEN/8, x4, x1, x2)

inst_68775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:206325*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206325*0 + 3*423*FLEN/8, x4, x1, x2)

inst_68776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:206328*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206328*0 + 3*424*FLEN/8, x4, x1, x2)

inst_68777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:206331*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206331*0 + 3*425*FLEN/8, x4, x1, x2)

inst_68778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:206334*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206334*0 + 3*426*FLEN/8, x4, x1, x2)

inst_68779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:206337*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206337*0 + 3*427*FLEN/8, x4, x1, x2)

inst_68780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:206340*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206340*0 + 3*428*FLEN/8, x4, x1, x2)

inst_68781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:206343*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206343*0 + 3*429*FLEN/8, x4, x1, x2)

inst_68782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:206346*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206346*0 + 3*430*FLEN/8, x4, x1, x2)

inst_68783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:206349*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206349*0 + 3*431*FLEN/8, x4, x1, x2)

inst_68784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:206352*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206352*0 + 3*432*FLEN/8, x4, x1, x2)

inst_68785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:206355*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206355*0 + 3*433*FLEN/8, x4, x1, x2)

inst_68786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:206358*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206358*0 + 3*434*FLEN/8, x4, x1, x2)

inst_68787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:206361*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206361*0 + 3*435*FLEN/8, x4, x1, x2)

inst_68788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:206364*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206364*0 + 3*436*FLEN/8, x4, x1, x2)

inst_68789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4bd16a0267938 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8b02fe706559b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4bd16a0267938; op2val:0x9fc8b02fe706559b;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:206367*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206367*0 + 3*437*FLEN/8, x4, x1, x2)

inst_68790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:206370*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206370*0 + 3*438*FLEN/8, x4, x1, x2)

inst_68791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:206373*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206373*0 + 3*439*FLEN/8, x4, x1, x2)

inst_68792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:206376*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206376*0 + 3*440*FLEN/8, x4, x1, x2)

inst_68793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:206379*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206379*0 + 3*441*FLEN/8, x4, x1, x2)

inst_68794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:206382*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206382*0 + 3*442*FLEN/8, x4, x1, x2)

inst_68795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:206385*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206385*0 + 3*443*FLEN/8, x4, x1, x2)

inst_68796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:206388*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206388*0 + 3*444*FLEN/8, x4, x1, x2)

inst_68797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:206391*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206391*0 + 3*445*FLEN/8, x4, x1, x2)

inst_68798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:206394*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206394*0 + 3*446*FLEN/8, x4, x1, x2)

inst_68799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:206397*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206397*0 + 3*447*FLEN/8, x4, x1, x2)

inst_68800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:206400*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206400*0 + 3*448*FLEN/8, x4, x1, x2)

inst_68801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:206403*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206403*0 + 3*449*FLEN/8, x4, x1, x2)

inst_68802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:206406*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206406*0 + 3*450*FLEN/8, x4, x1, x2)

inst_68803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:206409*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206409*0 + 3*451*FLEN/8, x4, x1, x2)

inst_68804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:206412*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206412*0 + 3*452*FLEN/8, x4, x1, x2)

inst_68805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:206415*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206415*0 + 3*453*FLEN/8, x4, x1, x2)

inst_68806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:206418*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206418*0 + 3*454*FLEN/8, x4, x1, x2)

inst_68807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:206421*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206421*0 + 3*455*FLEN/8, x4, x1, x2)

inst_68808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:206424*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206424*0 + 3*456*FLEN/8, x4, x1, x2)

inst_68809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:206427*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206427*0 + 3*457*FLEN/8, x4, x1, x2)

inst_68810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:206430*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206430*0 + 3*458*FLEN/8, x4, x1, x2)

inst_68811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:206433*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206433*0 + 3*459*FLEN/8, x4, x1, x2)

inst_68812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000000000000; valaddr_reg:x3; val_offset:206436*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206436*0 + 3*460*FLEN/8, x4, x1, x2)

inst_68813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000000000001; valaddr_reg:x3; val_offset:206439*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206439*0 + 3*461*FLEN/8, x4, x1, x2)

inst_68814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000000000003; valaddr_reg:x3; val_offset:206442*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206442*0 + 3*462*FLEN/8, x4, x1, x2)

inst_68815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000000000007; valaddr_reg:x3; val_offset:206445*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206445*0 + 3*463*FLEN/8, x4, x1, x2)

inst_68816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000000000000f; valaddr_reg:x3; val_offset:206448*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206448*0 + 3*464*FLEN/8, x4, x1, x2)

inst_68817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000000000001f; valaddr_reg:x3; val_offset:206451*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206451*0 + 3*465*FLEN/8, x4, x1, x2)

inst_68818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000000000003f; valaddr_reg:x3; val_offset:206454*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206454*0 + 3*466*FLEN/8, x4, x1, x2)

inst_68819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000000000007f; valaddr_reg:x3; val_offset:206457*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206457*0 + 3*467*FLEN/8, x4, x1, x2)

inst_68820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00000000000ff; valaddr_reg:x3; val_offset:206460*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206460*0 + 3*468*FLEN/8, x4, x1, x2)

inst_68821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00000000001ff; valaddr_reg:x3; val_offset:206463*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206463*0 + 3*469*FLEN/8, x4, x1, x2)

inst_68822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00000000003ff; valaddr_reg:x3; val_offset:206466*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206466*0 + 3*470*FLEN/8, x4, x1, x2)

inst_68823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00000000007ff; valaddr_reg:x3; val_offset:206469*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206469*0 + 3*471*FLEN/8, x4, x1, x2)

inst_68824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000000000fff; valaddr_reg:x3; val_offset:206472*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206472*0 + 3*472*FLEN/8, x4, x1, x2)

inst_68825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000000001fff; valaddr_reg:x3; val_offset:206475*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206475*0 + 3*473*FLEN/8, x4, x1, x2)

inst_68826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000000003fff; valaddr_reg:x3; val_offset:206478*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206478*0 + 3*474*FLEN/8, x4, x1, x2)

inst_68827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000000007fff; valaddr_reg:x3; val_offset:206481*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206481*0 + 3*475*FLEN/8, x4, x1, x2)

inst_68828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000000000ffff; valaddr_reg:x3; val_offset:206484*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206484*0 + 3*476*FLEN/8, x4, x1, x2)

inst_68829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000000001ffff; valaddr_reg:x3; val_offset:206487*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206487*0 + 3*477*FLEN/8, x4, x1, x2)

inst_68830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000000003ffff; valaddr_reg:x3; val_offset:206490*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206490*0 + 3*478*FLEN/8, x4, x1, x2)

inst_68831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000000007ffff; valaddr_reg:x3; val_offset:206493*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206493*0 + 3*479*FLEN/8, x4, x1, x2)

inst_68832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00000000fffff; valaddr_reg:x3; val_offset:206496*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206496*0 + 3*480*FLEN/8, x4, x1, x2)

inst_68833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00000001fffff; valaddr_reg:x3; val_offset:206499*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206499*0 + 3*481*FLEN/8, x4, x1, x2)

inst_68834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00000003fffff; valaddr_reg:x3; val_offset:206502*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206502*0 + 3*482*FLEN/8, x4, x1, x2)

inst_68835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00000007fffff; valaddr_reg:x3; val_offset:206505*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206505*0 + 3*483*FLEN/8, x4, x1, x2)

inst_68836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000000ffffff; valaddr_reg:x3; val_offset:206508*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206508*0 + 3*484*FLEN/8, x4, x1, x2)

inst_68837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000001ffffff; valaddr_reg:x3; val_offset:206511*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206511*0 + 3*485*FLEN/8, x4, x1, x2)

inst_68838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000003ffffff; valaddr_reg:x3; val_offset:206514*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206514*0 + 3*486*FLEN/8, x4, x1, x2)

inst_68839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000007ffffff; valaddr_reg:x3; val_offset:206517*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206517*0 + 3*487*FLEN/8, x4, x1, x2)

inst_68840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000000fffffff; valaddr_reg:x3; val_offset:206520*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206520*0 + 3*488*FLEN/8, x4, x1, x2)

inst_68841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000001fffffff; valaddr_reg:x3; val_offset:206523*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206523*0 + 3*489*FLEN/8, x4, x1, x2)

inst_68842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000003fffffff; valaddr_reg:x3; val_offset:206526*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206526*0 + 3*490*FLEN/8, x4, x1, x2)

inst_68843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000007fffffff; valaddr_reg:x3; val_offset:206529*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206529*0 + 3*491*FLEN/8, x4, x1, x2)

inst_68844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00000ffffffff; valaddr_reg:x3; val_offset:206532*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206532*0 + 3*492*FLEN/8, x4, x1, x2)

inst_68845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00001ffffffff; valaddr_reg:x3; val_offset:206535*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206535*0 + 3*493*FLEN/8, x4, x1, x2)

inst_68846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00003ffffffff; valaddr_reg:x3; val_offset:206538*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206538*0 + 3*494*FLEN/8, x4, x1, x2)

inst_68847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00007ffffffff; valaddr_reg:x3; val_offset:206541*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206541*0 + 3*495*FLEN/8, x4, x1, x2)

inst_68848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0000fffffffff; valaddr_reg:x3; val_offset:206544*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206544*0 + 3*496*FLEN/8, x4, x1, x2)

inst_68849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0001fffffffff; valaddr_reg:x3; val_offset:206547*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206547*0 + 3*497*FLEN/8, x4, x1, x2)

inst_68850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0003fffffffff; valaddr_reg:x3; val_offset:206550*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206550*0 + 3*498*FLEN/8, x4, x1, x2)

inst_68851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0007fffffffff; valaddr_reg:x3; val_offset:206553*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206553*0 + 3*499*FLEN/8, x4, x1, x2)

inst_68852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d000ffffffffff; valaddr_reg:x3; val_offset:206556*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206556*0 + 3*500*FLEN/8, x4, x1, x2)

inst_68853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d001ffffffffff; valaddr_reg:x3; val_offset:206559*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206559*0 + 3*501*FLEN/8, x4, x1, x2)

inst_68854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d003ffffffffff; valaddr_reg:x3; val_offset:206562*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206562*0 + 3*502*FLEN/8, x4, x1, x2)

inst_68855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d007ffffffffff; valaddr_reg:x3; val_offset:206565*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206565*0 + 3*503*FLEN/8, x4, x1, x2)

inst_68856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d00fffffffffff; valaddr_reg:x3; val_offset:206568*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206568*0 + 3*504*FLEN/8, x4, x1, x2)

inst_68857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d01fffffffffff; valaddr_reg:x3; val_offset:206571*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206571*0 + 3*505*FLEN/8, x4, x1, x2)

inst_68858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d03fffffffffff; valaddr_reg:x3; val_offset:206574*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206574*0 + 3*506*FLEN/8, x4, x1, x2)

inst_68859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d07fffffffffff; valaddr_reg:x3; val_offset:206577*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206577*0 + 3*507*FLEN/8, x4, x1, x2)

inst_68860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d0ffffffffffff; valaddr_reg:x3; val_offset:206580*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206580*0 + 3*508*FLEN/8, x4, x1, x2)

inst_68861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d1ffffffffffff; valaddr_reg:x3; val_offset:206583*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206583*0 + 3*509*FLEN/8, x4, x1, x2)

inst_68862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d3ffffffffffff; valaddr_reg:x3; val_offset:206586*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206586*0 + 3*510*FLEN/8, x4, x1, x2)

inst_68863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d7ffffffffffff; valaddr_reg:x3; val_offset:206589*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206589*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_68864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2d8000000000000; valaddr_reg:x3; val_offset:206592*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206592*0 + 3*512*FLEN/8, x4, x1, x2)

inst_68865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dc000000000000; valaddr_reg:x3; val_offset:206595*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206595*0 + 3*513*FLEN/8, x4, x1, x2)

inst_68866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2de000000000000; valaddr_reg:x3; val_offset:206598*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206598*0 + 3*514*FLEN/8, x4, x1, x2)

inst_68867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2df000000000000; valaddr_reg:x3; val_offset:206601*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206601*0 + 3*515*FLEN/8, x4, x1, x2)

inst_68868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2df800000000000; valaddr_reg:x3; val_offset:206604*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206604*0 + 3*516*FLEN/8, x4, x1, x2)

inst_68869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfc00000000000; valaddr_reg:x3; val_offset:206607*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206607*0 + 3*517*FLEN/8, x4, x1, x2)

inst_68870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfe00000000000; valaddr_reg:x3; val_offset:206610*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206610*0 + 3*518*FLEN/8, x4, x1, x2)

inst_68871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dff00000000000; valaddr_reg:x3; val_offset:206613*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206613*0 + 3*519*FLEN/8, x4, x1, x2)

inst_68872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dff80000000000; valaddr_reg:x3; val_offset:206616*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206616*0 + 3*520*FLEN/8, x4, x1, x2)

inst_68873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffc0000000000; valaddr_reg:x3; val_offset:206619*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206619*0 + 3*521*FLEN/8, x4, x1, x2)

inst_68874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffe0000000000; valaddr_reg:x3; val_offset:206622*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206622*0 + 3*522*FLEN/8, x4, x1, x2)

inst_68875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfff0000000000; valaddr_reg:x3; val_offset:206625*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206625*0 + 3*523*FLEN/8, x4, x1, x2)

inst_68876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfff8000000000; valaddr_reg:x3; val_offset:206628*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206628*0 + 3*524*FLEN/8, x4, x1, x2)

inst_68877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffc000000000; valaddr_reg:x3; val_offset:206631*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206631*0 + 3*525*FLEN/8, x4, x1, x2)

inst_68878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffe000000000; valaddr_reg:x3; val_offset:206634*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206634*0 + 3*526*FLEN/8, x4, x1, x2)

inst_68879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffff000000000; valaddr_reg:x3; val_offset:206637*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206637*0 + 3*527*FLEN/8, x4, x1, x2)

inst_68880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffff800000000; valaddr_reg:x3; val_offset:206640*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206640*0 + 3*528*FLEN/8, x4, x1, x2)

inst_68881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffc00000000; valaddr_reg:x3; val_offset:206643*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206643*0 + 3*529*FLEN/8, x4, x1, x2)

inst_68882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffe00000000; valaddr_reg:x3; val_offset:206646*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206646*0 + 3*530*FLEN/8, x4, x1, x2)

inst_68883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffff00000000; valaddr_reg:x3; val_offset:206649*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206649*0 + 3*531*FLEN/8, x4, x1, x2)

inst_68884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffff80000000; valaddr_reg:x3; val_offset:206652*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206652*0 + 3*532*FLEN/8, x4, x1, x2)

inst_68885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffc0000000; valaddr_reg:x3; val_offset:206655*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206655*0 + 3*533*FLEN/8, x4, x1, x2)

inst_68886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffe0000000; valaddr_reg:x3; val_offset:206658*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206658*0 + 3*534*FLEN/8, x4, x1, x2)

inst_68887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffff0000000; valaddr_reg:x3; val_offset:206661*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206661*0 + 3*535*FLEN/8, x4, x1, x2)

inst_68888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffff8000000; valaddr_reg:x3; val_offset:206664*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206664*0 + 3*536*FLEN/8, x4, x1, x2)

inst_68889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffc000000; valaddr_reg:x3; val_offset:206667*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206667*0 + 3*537*FLEN/8, x4, x1, x2)

inst_68890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffe000000; valaddr_reg:x3; val_offset:206670*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206670*0 + 3*538*FLEN/8, x4, x1, x2)

inst_68891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffff000000; valaddr_reg:x3; val_offset:206673*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206673*0 + 3*539*FLEN/8, x4, x1, x2)

inst_68892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffff800000; valaddr_reg:x3; val_offset:206676*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206676*0 + 3*540*FLEN/8, x4, x1, x2)

inst_68893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffffc00000; valaddr_reg:x3; val_offset:206679*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206679*0 + 3*541*FLEN/8, x4, x1, x2)

inst_68894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffffe00000; valaddr_reg:x3; val_offset:206682*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206682*0 + 3*542*FLEN/8, x4, x1, x2)

inst_68895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffff00000; valaddr_reg:x3; val_offset:206685*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206685*0 + 3*543*FLEN/8, x4, x1, x2)

inst_68896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffff80000; valaddr_reg:x3; val_offset:206688*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206688*0 + 3*544*FLEN/8, x4, x1, x2)

inst_68897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffffc0000; valaddr_reg:x3; val_offset:206691*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206691*0 + 3*545*FLEN/8, x4, x1, x2)

inst_68898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffffe0000; valaddr_reg:x3; val_offset:206694*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206694*0 + 3*546*FLEN/8, x4, x1, x2)

inst_68899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffffff0000; valaddr_reg:x3; val_offset:206697*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206697*0 + 3*547*FLEN/8, x4, x1, x2)

inst_68900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffffff8000; valaddr_reg:x3; val_offset:206700*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206700*0 + 3*548*FLEN/8, x4, x1, x2)

inst_68901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffffffc000; valaddr_reg:x3; val_offset:206703*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206703*0 + 3*549*FLEN/8, x4, x1, x2)

inst_68902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffffffe000; valaddr_reg:x3; val_offset:206706*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206706*0 + 3*550*FLEN/8, x4, x1, x2)

inst_68903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffffff000; valaddr_reg:x3; val_offset:206709*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206709*0 + 3*551*FLEN/8, x4, x1, x2)

inst_68904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffffff800; valaddr_reg:x3; val_offset:206712*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206712*0 + 3*552*FLEN/8, x4, x1, x2)

inst_68905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffffffc00; valaddr_reg:x3; val_offset:206715*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206715*0 + 3*553*FLEN/8, x4, x1, x2)

inst_68906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffffffe00; valaddr_reg:x3; val_offset:206718*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206718*0 + 3*554*FLEN/8, x4, x1, x2)

inst_68907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffffffff00; valaddr_reg:x3; val_offset:206721*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206721*0 + 3*555*FLEN/8, x4, x1, x2)

inst_68908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffffffff80; valaddr_reg:x3; val_offset:206724*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206724*0 + 3*556*FLEN/8, x4, x1, x2)

inst_68909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffffffffc0; valaddr_reg:x3; val_offset:206727*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206727*0 + 3*557*FLEN/8, x4, x1, x2)

inst_68910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffffffffe0; valaddr_reg:x3; val_offset:206730*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206730*0 + 3*558*FLEN/8, x4, x1, x2)

inst_68911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffffffff0; valaddr_reg:x3; val_offset:206733*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206733*0 + 3*559*FLEN/8, x4, x1, x2)

inst_68912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffffffff8; valaddr_reg:x3; val_offset:206736*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206736*0 + 3*560*FLEN/8, x4, x1, x2)

inst_68913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffffffffc; valaddr_reg:x3; val_offset:206739*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206739*0 + 3*561*FLEN/8, x4, x1, x2)

inst_68914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dffffffffffffe; valaddr_reg:x3; val_offset:206742*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206742*0 + 3*562*FLEN/8, x4, x1, x2)

inst_68915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c3cf00912f15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c3cf00912f15; op2val:0x0;
op3val:0x2dfffffffffffff; valaddr_reg:x3; val_offset:206745*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206745*0 + 3*563*FLEN/8, x4, x1, x2)

inst_68916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000000000000; valaddr_reg:x3; val_offset:206748*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206748*0 + 3*564*FLEN/8, x4, x1, x2)

inst_68917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000000000001; valaddr_reg:x3; val_offset:206751*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206751*0 + 3*565*FLEN/8, x4, x1, x2)

inst_68918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000000000003; valaddr_reg:x3; val_offset:206754*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206754*0 + 3*566*FLEN/8, x4, x1, x2)

inst_68919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000000000007; valaddr_reg:x3; val_offset:206757*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206757*0 + 3*567*FLEN/8, x4, x1, x2)

inst_68920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000000000000f; valaddr_reg:x3; val_offset:206760*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206760*0 + 3*568*FLEN/8, x4, x1, x2)

inst_68921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000000000001f; valaddr_reg:x3; val_offset:206763*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206763*0 + 3*569*FLEN/8, x4, x1, x2)

inst_68922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000000000003f; valaddr_reg:x3; val_offset:206766*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206766*0 + 3*570*FLEN/8, x4, x1, x2)

inst_68923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000000000007f; valaddr_reg:x3; val_offset:206769*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206769*0 + 3*571*FLEN/8, x4, x1, x2)

inst_68924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400000000000ff; valaddr_reg:x3; val_offset:206772*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206772*0 + 3*572*FLEN/8, x4, x1, x2)

inst_68925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400000000001ff; valaddr_reg:x3; val_offset:206775*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206775*0 + 3*573*FLEN/8, x4, x1, x2)

inst_68926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400000000003ff; valaddr_reg:x3; val_offset:206778*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206778*0 + 3*574*FLEN/8, x4, x1, x2)

inst_68927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400000000007ff; valaddr_reg:x3; val_offset:206781*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206781*0 + 3*575*FLEN/8, x4, x1, x2)

inst_68928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000000000fff; valaddr_reg:x3; val_offset:206784*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206784*0 + 3*576*FLEN/8, x4, x1, x2)

inst_68929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000000001fff; valaddr_reg:x3; val_offset:206787*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206787*0 + 3*577*FLEN/8, x4, x1, x2)

inst_68930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000000003fff; valaddr_reg:x3; val_offset:206790*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206790*0 + 3*578*FLEN/8, x4, x1, x2)

inst_68931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000000007fff; valaddr_reg:x3; val_offset:206793*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206793*0 + 3*579*FLEN/8, x4, x1, x2)

inst_68932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000000000ffff; valaddr_reg:x3; val_offset:206796*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206796*0 + 3*580*FLEN/8, x4, x1, x2)

inst_68933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000000001ffff; valaddr_reg:x3; val_offset:206799*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206799*0 + 3*581*FLEN/8, x4, x1, x2)

inst_68934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000000003ffff; valaddr_reg:x3; val_offset:206802*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206802*0 + 3*582*FLEN/8, x4, x1, x2)

inst_68935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000000007ffff; valaddr_reg:x3; val_offset:206805*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206805*0 + 3*583*FLEN/8, x4, x1, x2)

inst_68936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400000000fffff; valaddr_reg:x3; val_offset:206808*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206808*0 + 3*584*FLEN/8, x4, x1, x2)

inst_68937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400000001fffff; valaddr_reg:x3; val_offset:206811*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206811*0 + 3*585*FLEN/8, x4, x1, x2)

inst_68938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400000003fffff; valaddr_reg:x3; val_offset:206814*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206814*0 + 3*586*FLEN/8, x4, x1, x2)

inst_68939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400000007fffff; valaddr_reg:x3; val_offset:206817*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206817*0 + 3*587*FLEN/8, x4, x1, x2)

inst_68940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000000ffffff; valaddr_reg:x3; val_offset:206820*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206820*0 + 3*588*FLEN/8, x4, x1, x2)

inst_68941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000001ffffff; valaddr_reg:x3; val_offset:206823*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206823*0 + 3*589*FLEN/8, x4, x1, x2)

inst_68942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000003ffffff; valaddr_reg:x3; val_offset:206826*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206826*0 + 3*590*FLEN/8, x4, x1, x2)

inst_68943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000007ffffff; valaddr_reg:x3; val_offset:206829*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206829*0 + 3*591*FLEN/8, x4, x1, x2)

inst_68944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000000fffffff; valaddr_reg:x3; val_offset:206832*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206832*0 + 3*592*FLEN/8, x4, x1, x2)

inst_68945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000001fffffff; valaddr_reg:x3; val_offset:206835*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206835*0 + 3*593*FLEN/8, x4, x1, x2)

inst_68946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000003fffffff; valaddr_reg:x3; val_offset:206838*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206838*0 + 3*594*FLEN/8, x4, x1, x2)

inst_68947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000007fffffff; valaddr_reg:x3; val_offset:206841*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206841*0 + 3*595*FLEN/8, x4, x1, x2)

inst_68948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400000ffffffff; valaddr_reg:x3; val_offset:206844*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206844*0 + 3*596*FLEN/8, x4, x1, x2)

inst_68949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400001ffffffff; valaddr_reg:x3; val_offset:206847*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206847*0 + 3*597*FLEN/8, x4, x1, x2)

inst_68950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400003ffffffff; valaddr_reg:x3; val_offset:206850*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206850*0 + 3*598*FLEN/8, x4, x1, x2)

inst_68951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400007ffffffff; valaddr_reg:x3; val_offset:206853*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206853*0 + 3*599*FLEN/8, x4, x1, x2)

inst_68952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40000fffffffff; valaddr_reg:x3; val_offset:206856*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206856*0 + 3*600*FLEN/8, x4, x1, x2)

inst_68953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40001fffffffff; valaddr_reg:x3; val_offset:206859*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206859*0 + 3*601*FLEN/8, x4, x1, x2)

inst_68954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40003fffffffff; valaddr_reg:x3; val_offset:206862*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206862*0 + 3*602*FLEN/8, x4, x1, x2)

inst_68955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40007fffffffff; valaddr_reg:x3; val_offset:206865*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206865*0 + 3*603*FLEN/8, x4, x1, x2)

inst_68956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4000ffffffffff; valaddr_reg:x3; val_offset:206868*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206868*0 + 3*604*FLEN/8, x4, x1, x2)

inst_68957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4001ffffffffff; valaddr_reg:x3; val_offset:206871*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206871*0 + 3*605*FLEN/8, x4, x1, x2)

inst_68958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4003ffffffffff; valaddr_reg:x3; val_offset:206874*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206874*0 + 3*606*FLEN/8, x4, x1, x2)

inst_68959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4007ffffffffff; valaddr_reg:x3; val_offset:206877*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206877*0 + 3*607*FLEN/8, x4, x1, x2)

inst_68960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe400fffffffffff; valaddr_reg:x3; val_offset:206880*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206880*0 + 3*608*FLEN/8, x4, x1, x2)

inst_68961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe401fffffffffff; valaddr_reg:x3; val_offset:206883*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206883*0 + 3*609*FLEN/8, x4, x1, x2)

inst_68962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe403fffffffffff; valaddr_reg:x3; val_offset:206886*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206886*0 + 3*610*FLEN/8, x4, x1, x2)

inst_68963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe407fffffffffff; valaddr_reg:x3; val_offset:206889*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206889*0 + 3*611*FLEN/8, x4, x1, x2)

inst_68964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe40ffffffffffff; valaddr_reg:x3; val_offset:206892*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206892*0 + 3*612*FLEN/8, x4, x1, x2)

inst_68965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe41ffffffffffff; valaddr_reg:x3; val_offset:206895*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206895*0 + 3*613*FLEN/8, x4, x1, x2)

inst_68966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe43ffffffffffff; valaddr_reg:x3; val_offset:206898*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206898*0 + 3*614*FLEN/8, x4, x1, x2)

inst_68967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe47ffffffffffff; valaddr_reg:x3; val_offset:206901*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206901*0 + 3*615*FLEN/8, x4, x1, x2)

inst_68968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe48000000000000; valaddr_reg:x3; val_offset:206904*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206904*0 + 3*616*FLEN/8, x4, x1, x2)

inst_68969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4c000000000000; valaddr_reg:x3; val_offset:206907*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206907*0 + 3*617*FLEN/8, x4, x1, x2)

inst_68970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4e000000000000; valaddr_reg:x3; val_offset:206910*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206910*0 + 3*618*FLEN/8, x4, x1, x2)

inst_68971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4f000000000000; valaddr_reg:x3; val_offset:206913*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206913*0 + 3*619*FLEN/8, x4, x1, x2)

inst_68972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4f800000000000; valaddr_reg:x3; val_offset:206916*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206916*0 + 3*620*FLEN/8, x4, x1, x2)

inst_68973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fc00000000000; valaddr_reg:x3; val_offset:206919*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206919*0 + 3*621*FLEN/8, x4, x1, x2)

inst_68974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fe00000000000; valaddr_reg:x3; val_offset:206922*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206922*0 + 3*622*FLEN/8, x4, x1, x2)

inst_68975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ff00000000000; valaddr_reg:x3; val_offset:206925*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206925*0 + 3*623*FLEN/8, x4, x1, x2)

inst_68976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ff80000000000; valaddr_reg:x3; val_offset:206928*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206928*0 + 3*624*FLEN/8, x4, x1, x2)

inst_68977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffc0000000000; valaddr_reg:x3; val_offset:206931*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206931*0 + 3*625*FLEN/8, x4, x1, x2)

inst_68978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffe0000000000; valaddr_reg:x3; val_offset:206934*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206934*0 + 3*626*FLEN/8, x4, x1, x2)

inst_68979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fff0000000000; valaddr_reg:x3; val_offset:206937*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206937*0 + 3*627*FLEN/8, x4, x1, x2)

inst_68980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fff8000000000; valaddr_reg:x3; val_offset:206940*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206940*0 + 3*628*FLEN/8, x4, x1, x2)

inst_68981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffc000000000; valaddr_reg:x3; val_offset:206943*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206943*0 + 3*629*FLEN/8, x4, x1, x2)

inst_68982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffe000000000; valaddr_reg:x3; val_offset:206946*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206946*0 + 3*630*FLEN/8, x4, x1, x2)

inst_68983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffff000000000; valaddr_reg:x3; val_offset:206949*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206949*0 + 3*631*FLEN/8, x4, x1, x2)

inst_68984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffff800000000; valaddr_reg:x3; val_offset:206952*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206952*0 + 3*632*FLEN/8, x4, x1, x2)

inst_68985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffc00000000; valaddr_reg:x3; val_offset:206955*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206955*0 + 3*633*FLEN/8, x4, x1, x2)

inst_68986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffe00000000; valaddr_reg:x3; val_offset:206958*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206958*0 + 3*634*FLEN/8, x4, x1, x2)

inst_68987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffff00000000; valaddr_reg:x3; val_offset:206961*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206961*0 + 3*635*FLEN/8, x4, x1, x2)

inst_68988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffff80000000; valaddr_reg:x3; val_offset:206964*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206964*0 + 3*636*FLEN/8, x4, x1, x2)

inst_68989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffc0000000; valaddr_reg:x3; val_offset:206967*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206967*0 + 3*637*FLEN/8, x4, x1, x2)

inst_68990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffe0000000; valaddr_reg:x3; val_offset:206970*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206970*0 + 3*638*FLEN/8, x4, x1, x2)

inst_68991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffff0000000; valaddr_reg:x3; val_offset:206973*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206973*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_68992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffff8000000; valaddr_reg:x3; val_offset:206976*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206976*0 + 3*640*FLEN/8, x4, x1, x2)

inst_68993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffc000000; valaddr_reg:x3; val_offset:206979*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206979*0 + 3*641*FLEN/8, x4, x1, x2)

inst_68994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffe000000; valaddr_reg:x3; val_offset:206982*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206982*0 + 3*642*FLEN/8, x4, x1, x2)

inst_68995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffff000000; valaddr_reg:x3; val_offset:206985*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206985*0 + 3*643*FLEN/8, x4, x1, x2)

inst_68996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffff800000; valaddr_reg:x3; val_offset:206988*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206988*0 + 3*644*FLEN/8, x4, x1, x2)

inst_68997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffffc00000; valaddr_reg:x3; val_offset:206991*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206991*0 + 3*645*FLEN/8, x4, x1, x2)

inst_68998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffffe00000; valaddr_reg:x3; val_offset:206994*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206994*0 + 3*646*FLEN/8, x4, x1, x2)

inst_68999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffff00000; valaddr_reg:x3; val_offset:206997*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 206997*0 + 3*647*FLEN/8, x4, x1, x2)

inst_69000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffff80000; valaddr_reg:x3; val_offset:207000*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207000*0 + 3*648*FLEN/8, x4, x1, x2)

inst_69001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffffc0000; valaddr_reg:x3; val_offset:207003*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207003*0 + 3*649*FLEN/8, x4, x1, x2)

inst_69002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffffe0000; valaddr_reg:x3; val_offset:207006*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207006*0 + 3*650*FLEN/8, x4, x1, x2)

inst_69003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffffff0000; valaddr_reg:x3; val_offset:207009*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207009*0 + 3*651*FLEN/8, x4, x1, x2)

inst_69004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffffff8000; valaddr_reg:x3; val_offset:207012*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207012*0 + 3*652*FLEN/8, x4, x1, x2)

inst_69005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffffffc000; valaddr_reg:x3; val_offset:207015*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207015*0 + 3*653*FLEN/8, x4, x1, x2)

inst_69006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffffffe000; valaddr_reg:x3; val_offset:207018*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207018*0 + 3*654*FLEN/8, x4, x1, x2)

inst_69007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffffff000; valaddr_reg:x3; val_offset:207021*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207021*0 + 3*655*FLEN/8, x4, x1, x2)

inst_69008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffffff800; valaddr_reg:x3; val_offset:207024*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207024*0 + 3*656*FLEN/8, x4, x1, x2)

inst_69009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffffffc00; valaddr_reg:x3; val_offset:207027*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207027*0 + 3*657*FLEN/8, x4, x1, x2)

inst_69010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffffffe00; valaddr_reg:x3; val_offset:207030*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207030*0 + 3*658*FLEN/8, x4, x1, x2)

inst_69011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffffffff00; valaddr_reg:x3; val_offset:207033*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207033*0 + 3*659*FLEN/8, x4, x1, x2)

inst_69012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffffffff80; valaddr_reg:x3; val_offset:207036*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207036*0 + 3*660*FLEN/8, x4, x1, x2)

inst_69013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffffffffc0; valaddr_reg:x3; val_offset:207039*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207039*0 + 3*661*FLEN/8, x4, x1, x2)

inst_69014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffffffffe0; valaddr_reg:x3; val_offset:207042*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207042*0 + 3*662*FLEN/8, x4, x1, x2)

inst_69015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffffffff0; valaddr_reg:x3; val_offset:207045*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207045*0 + 3*663*FLEN/8, x4, x1, x2)

inst_69016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffffffff8; valaddr_reg:x3; val_offset:207048*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207048*0 + 3*664*FLEN/8, x4, x1, x2)

inst_69017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffffffffc; valaddr_reg:x3; val_offset:207051*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207051*0 + 3*665*FLEN/8, x4, x1, x2)

inst_69018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4ffffffffffffe; valaddr_reg:x3; val_offset:207054*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207054*0 + 3*666*FLEN/8, x4, x1, x2)

inst_69019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3e4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbe4fffffffffffff; valaddr_reg:x3; val_offset:207057*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207057*0 + 3*667*FLEN/8, x4, x1, x2)

inst_69020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:207060*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207060*0 + 3*668*FLEN/8, x4, x1, x2)

inst_69021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:207063*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207063*0 + 3*669*FLEN/8, x4, x1, x2)

inst_69022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:207066*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207066*0 + 3*670*FLEN/8, x4, x1, x2)

inst_69023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:207069*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207069*0 + 3*671*FLEN/8, x4, x1, x2)

inst_69024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:207072*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207072*0 + 3*672*FLEN/8, x4, x1, x2)

inst_69025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:207075*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207075*0 + 3*673*FLEN/8, x4, x1, x2)

inst_69026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:207078*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207078*0 + 3*674*FLEN/8, x4, x1, x2)

inst_69027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:207081*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207081*0 + 3*675*FLEN/8, x4, x1, x2)

inst_69028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:207084*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207084*0 + 3*676*FLEN/8, x4, x1, x2)

inst_69029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:207087*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207087*0 + 3*677*FLEN/8, x4, x1, x2)

inst_69030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:207090*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207090*0 + 3*678*FLEN/8, x4, x1, x2)

inst_69031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:207093*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207093*0 + 3*679*FLEN/8, x4, x1, x2)

inst_69032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:207096*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207096*0 + 3*680*FLEN/8, x4, x1, x2)

inst_69033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:207099*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207099*0 + 3*681*FLEN/8, x4, x1, x2)

inst_69034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:207102*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207102*0 + 3*682*FLEN/8, x4, x1, x2)

inst_69035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:207105*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207105*0 + 3*683*FLEN/8, x4, x1, x2)

inst_69036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:207108*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207108*0 + 3*684*FLEN/8, x4, x1, x2)

inst_69037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:207111*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207111*0 + 3*685*FLEN/8, x4, x1, x2)

inst_69038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:207114*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207114*0 + 3*686*FLEN/8, x4, x1, x2)

inst_69039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:207117*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207117*0 + 3*687*FLEN/8, x4, x1, x2)

inst_69040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:207120*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207120*0 + 3*688*FLEN/8, x4, x1, x2)

inst_69041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c524788895e4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a69d1a76e8c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c524788895e4; op2val:0x9fc8a69d1a76e8c5;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:207123*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207123*0 + 3*689*FLEN/8, x4, x1, x2)

inst_69042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:207126*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207126*0 + 3*690*FLEN/8, x4, x1, x2)

inst_69043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:207129*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207129*0 + 3*691*FLEN/8, x4, x1, x2)

inst_69044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:207132*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207132*0 + 3*692*FLEN/8, x4, x1, x2)

inst_69045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:207135*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207135*0 + 3*693*FLEN/8, x4, x1, x2)

inst_69046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:207138*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207138*0 + 3*694*FLEN/8, x4, x1, x2)

inst_69047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:207141*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207141*0 + 3*695*FLEN/8, x4, x1, x2)

inst_69048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:207144*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207144*0 + 3*696*FLEN/8, x4, x1, x2)

inst_69049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:207147*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207147*0 + 3*697*FLEN/8, x4, x1, x2)

inst_69050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:207150*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207150*0 + 3*698*FLEN/8, x4, x1, x2)

inst_69051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:207153*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207153*0 + 3*699*FLEN/8, x4, x1, x2)

inst_69052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:207156*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207156*0 + 3*700*FLEN/8, x4, x1, x2)

inst_69053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:207159*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207159*0 + 3*701*FLEN/8, x4, x1, x2)

inst_69054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:207162*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207162*0 + 3*702*FLEN/8, x4, x1, x2)

inst_69055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:207165*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207165*0 + 3*703*FLEN/8, x4, x1, x2)

inst_69056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:207168*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207168*0 + 3*704*FLEN/8, x4, x1, x2)

inst_69057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:207171*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207171*0 + 3*705*FLEN/8, x4, x1, x2)

inst_69058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:207174*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207174*0 + 3*706*FLEN/8, x4, x1, x2)

inst_69059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:207177*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207177*0 + 3*707*FLEN/8, x4, x1, x2)

inst_69060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:207180*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207180*0 + 3*708*FLEN/8, x4, x1, x2)

inst_69061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:207183*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207183*0 + 3*709*FLEN/8, x4, x1, x2)

inst_69062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:207186*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207186*0 + 3*710*FLEN/8, x4, x1, x2)

inst_69063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:207189*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207189*0 + 3*711*FLEN/8, x4, x1, x2)

inst_69064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000000000000; valaddr_reg:x3; val_offset:207192*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207192*0 + 3*712*FLEN/8, x4, x1, x2)

inst_69065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000000000001; valaddr_reg:x3; val_offset:207195*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207195*0 + 3*713*FLEN/8, x4, x1, x2)

inst_69066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000000000003; valaddr_reg:x3; val_offset:207198*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207198*0 + 3*714*FLEN/8, x4, x1, x2)

inst_69067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000000000007; valaddr_reg:x3; val_offset:207201*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207201*0 + 3*715*FLEN/8, x4, x1, x2)

inst_69068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000000000000f; valaddr_reg:x3; val_offset:207204*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207204*0 + 3*716*FLEN/8, x4, x1, x2)

inst_69069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000000000001f; valaddr_reg:x3; val_offset:207207*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207207*0 + 3*717*FLEN/8, x4, x1, x2)

inst_69070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000000000003f; valaddr_reg:x3; val_offset:207210*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207210*0 + 3*718*FLEN/8, x4, x1, x2)

inst_69071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000000000007f; valaddr_reg:x3; val_offset:207213*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207213*0 + 3*719*FLEN/8, x4, x1, x2)

inst_69072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700000000000ff; valaddr_reg:x3; val_offset:207216*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207216*0 + 3*720*FLEN/8, x4, x1, x2)

inst_69073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700000000001ff; valaddr_reg:x3; val_offset:207219*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207219*0 + 3*721*FLEN/8, x4, x1, x2)

inst_69074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700000000003ff; valaddr_reg:x3; val_offset:207222*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207222*0 + 3*722*FLEN/8, x4, x1, x2)

inst_69075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700000000007ff; valaddr_reg:x3; val_offset:207225*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207225*0 + 3*723*FLEN/8, x4, x1, x2)

inst_69076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000000000fff; valaddr_reg:x3; val_offset:207228*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207228*0 + 3*724*FLEN/8, x4, x1, x2)

inst_69077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000000001fff; valaddr_reg:x3; val_offset:207231*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207231*0 + 3*725*FLEN/8, x4, x1, x2)

inst_69078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000000003fff; valaddr_reg:x3; val_offset:207234*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207234*0 + 3*726*FLEN/8, x4, x1, x2)

inst_69079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000000007fff; valaddr_reg:x3; val_offset:207237*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207237*0 + 3*727*FLEN/8, x4, x1, x2)

inst_69080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000000000ffff; valaddr_reg:x3; val_offset:207240*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207240*0 + 3*728*FLEN/8, x4, x1, x2)

inst_69081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000000001ffff; valaddr_reg:x3; val_offset:207243*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207243*0 + 3*729*FLEN/8, x4, x1, x2)

inst_69082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000000003ffff; valaddr_reg:x3; val_offset:207246*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207246*0 + 3*730*FLEN/8, x4, x1, x2)

inst_69083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000000007ffff; valaddr_reg:x3; val_offset:207249*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207249*0 + 3*731*FLEN/8, x4, x1, x2)

inst_69084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700000000fffff; valaddr_reg:x3; val_offset:207252*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207252*0 + 3*732*FLEN/8, x4, x1, x2)

inst_69085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700000001fffff; valaddr_reg:x3; val_offset:207255*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207255*0 + 3*733*FLEN/8, x4, x1, x2)

inst_69086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700000003fffff; valaddr_reg:x3; val_offset:207258*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207258*0 + 3*734*FLEN/8, x4, x1, x2)

inst_69087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700000007fffff; valaddr_reg:x3; val_offset:207261*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207261*0 + 3*735*FLEN/8, x4, x1, x2)

inst_69088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000000ffffff; valaddr_reg:x3; val_offset:207264*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207264*0 + 3*736*FLEN/8, x4, x1, x2)

inst_69089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000001ffffff; valaddr_reg:x3; val_offset:207267*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207267*0 + 3*737*FLEN/8, x4, x1, x2)

inst_69090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000003ffffff; valaddr_reg:x3; val_offset:207270*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207270*0 + 3*738*FLEN/8, x4, x1, x2)

inst_69091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000007ffffff; valaddr_reg:x3; val_offset:207273*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207273*0 + 3*739*FLEN/8, x4, x1, x2)

inst_69092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000000fffffff; valaddr_reg:x3; val_offset:207276*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207276*0 + 3*740*FLEN/8, x4, x1, x2)

inst_69093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000001fffffff; valaddr_reg:x3; val_offset:207279*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207279*0 + 3*741*FLEN/8, x4, x1, x2)

inst_69094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000003fffffff; valaddr_reg:x3; val_offset:207282*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207282*0 + 3*742*FLEN/8, x4, x1, x2)

inst_69095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000007fffffff; valaddr_reg:x3; val_offset:207285*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207285*0 + 3*743*FLEN/8, x4, x1, x2)

inst_69096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700000ffffffff; valaddr_reg:x3; val_offset:207288*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207288*0 + 3*744*FLEN/8, x4, x1, x2)

inst_69097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700001ffffffff; valaddr_reg:x3; val_offset:207291*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207291*0 + 3*745*FLEN/8, x4, x1, x2)

inst_69098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700003ffffffff; valaddr_reg:x3; val_offset:207294*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207294*0 + 3*746*FLEN/8, x4, x1, x2)

inst_69099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700007ffffffff; valaddr_reg:x3; val_offset:207297*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207297*0 + 3*747*FLEN/8, x4, x1, x2)

inst_69100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370000fffffffff; valaddr_reg:x3; val_offset:207300*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207300*0 + 3*748*FLEN/8, x4, x1, x2)

inst_69101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370001fffffffff; valaddr_reg:x3; val_offset:207303*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207303*0 + 3*749*FLEN/8, x4, x1, x2)

inst_69102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370003fffffffff; valaddr_reg:x3; val_offset:207306*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207306*0 + 3*750*FLEN/8, x4, x1, x2)

inst_69103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370007fffffffff; valaddr_reg:x3; val_offset:207309*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207309*0 + 3*751*FLEN/8, x4, x1, x2)

inst_69104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837000ffffffffff; valaddr_reg:x3; val_offset:207312*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207312*0 + 3*752*FLEN/8, x4, x1, x2)

inst_69105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837001ffffffffff; valaddr_reg:x3; val_offset:207315*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207315*0 + 3*753*FLEN/8, x4, x1, x2)

inst_69106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837003ffffffffff; valaddr_reg:x3; val_offset:207318*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207318*0 + 3*754*FLEN/8, x4, x1, x2)

inst_69107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837007ffffffffff; valaddr_reg:x3; val_offset:207321*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207321*0 + 3*755*FLEN/8, x4, x1, x2)

inst_69108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83700fffffffffff; valaddr_reg:x3; val_offset:207324*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207324*0 + 3*756*FLEN/8, x4, x1, x2)

inst_69109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83701fffffffffff; valaddr_reg:x3; val_offset:207327*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207327*0 + 3*757*FLEN/8, x4, x1, x2)

inst_69110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83703fffffffffff; valaddr_reg:x3; val_offset:207330*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207330*0 + 3*758*FLEN/8, x4, x1, x2)

inst_69111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x83707fffffffffff; valaddr_reg:x3; val_offset:207333*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207333*0 + 3*759*FLEN/8, x4, x1, x2)

inst_69112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8370ffffffffffff; valaddr_reg:x3; val_offset:207336*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207336*0 + 3*760*FLEN/8, x4, x1, x2)

inst_69113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8371ffffffffffff; valaddr_reg:x3; val_offset:207339*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207339*0 + 3*761*FLEN/8, x4, x1, x2)

inst_69114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8373ffffffffffff; valaddr_reg:x3; val_offset:207342*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207342*0 + 3*762*FLEN/8, x4, x1, x2)

inst_69115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8377ffffffffffff; valaddr_reg:x3; val_offset:207345*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207345*0 + 3*763*FLEN/8, x4, x1, x2)

inst_69116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x8378000000000000; valaddr_reg:x3; val_offset:207348*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207348*0 + 3*764*FLEN/8, x4, x1, x2)

inst_69117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837c000000000000; valaddr_reg:x3; val_offset:207351*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207351*0 + 3*765*FLEN/8, x4, x1, x2)

inst_69118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837e000000000000; valaddr_reg:x3; val_offset:207354*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207354*0 + 3*766*FLEN/8, x4, x1, x2)

inst_69119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c791addc9912; op2val:0x8000;
op3val:0x837f000000000000; valaddr_reg:x3; val_offset:207357*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207357*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744985925295800320,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744985994015277056,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986028375015424,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986045554884608,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986054144819200,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986058439786496,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986060587270144,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986061661011968,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062197882880,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062466318336,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062600536064,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062667644928,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062701199360,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062717976576,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062726365184,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062730559488,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062732656640,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062733705216,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734229504,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734491648,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734622720,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734688256,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734721024,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734737408,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734745600,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734749696,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734751744,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734752768,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734753280,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734753536,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734753664,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734753728,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734753760,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734753776,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734753784,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734753788,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734753790,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13744986062734753791,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891825257641617874,64,FLEN)
NAN_BOXED(11513665239145707927,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005568,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005569,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005571,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005575,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005583,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005599,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005631,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005695,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005823,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006079,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006591,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497007615,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497009663,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497013759,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497021951,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497038335,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497071103,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497136639,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497267711,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497529855,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014498054143,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014499102719,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014501199871,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014505394175,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014513782783,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014530559999,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014564114431,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014631223295,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014765441023,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015033876479,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015570747391,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588016644489215,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588018791972863,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588023086940159,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588031676874751,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588048856743935,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588083216482303,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588151935959039,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588289374912511,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588564252819455,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493589114008633343,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493590213520261119,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493592412543516671,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493596810590027775,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493605606683049983,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493623198869094399,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493658383241183231,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493728751985360895,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493869489473716223,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494150964450426879,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494713914403848191,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690815,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690816,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9496965714217533440,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497528664170954752,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497810139147665408,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497950876636020736,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498021245380198400,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498056429752287232,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498074021938331648,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498082818031353856,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498087216077864960,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498089415101120512,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498090514612748288,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091064368562176,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091339246469120,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091476685422592,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091545404899328,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091579764637696,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091596944506880,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091605534441472,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091609829408768,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091611976892416,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613050634240,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613587505152,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613855940608,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613990158336,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614057267200,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614090821632,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614107598848,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614115987456,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614120181760,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614122278912,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123327488,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123851776,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124113920,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124244992,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124310528,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124343296,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124359680,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124367872,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124371968,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124374016,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375040,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375552,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375808,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375936,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376000,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376032,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376048,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376056,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376060,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376062,64,FLEN)
NAN_BOXED(6891836568605598228,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376063,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445952,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445953,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445955,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445959,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445967,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445983,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446015,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446079,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446207,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446463,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446975,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528447999,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528450047,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528454143,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528462335,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528478719,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528511487,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528577023,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528708095,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528970239,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195529494527,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195530543103,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195532640255,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195536834559,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195545223167,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195562000383,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195595554815,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195662663679,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195796881407,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196065316863,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196602187775,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043197675929599,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043199823413247,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043204118380543,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043212708315135,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043229888184319,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043264247922687,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043332967399423,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043470406352895,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043745284259839,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54044295040073727,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54045394551701503,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54047593574957055,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54051991621468159,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54060787714490367,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54078379900534783,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54113564272623615,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54183933016801279,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54324670505156607,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54606145481867263,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(55169095435288575,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131199,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131200,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57420895248973824,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57983845202395136,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58265320179105792,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58406057667461120,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58476426411638784,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58511610783727616,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58529202969772032,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58537999062794240,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58542397109305344,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58544596132560896,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58545695644188672,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546245400002560,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546520277909504,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546657716862976,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546726436339712,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546760796078080,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546777975947264,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546786565881856,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546790860849152,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546793008332800,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794082074624,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794618945536,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794887380992,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795021598720,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795088707584,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795122262016,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795139039232,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795147427840,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795151622144,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795153719296,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795154767872,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155292160,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155554304,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155685376,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155750912,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155783680,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155800064,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155808256,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155812352,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155814400,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815424,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815936,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816192,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816320,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816384,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816416,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816432,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816440,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816444,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816446,64,FLEN)
NAN_BOXED(6891836947865482837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816447,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944916992,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944916993,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944916995,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944916999,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944917007,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944917023,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944917055,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944917119,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944917247,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944917503,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944918015,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944919039,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944921087,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944925183,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944933375,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944949759,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127944982527,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127945048063,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127945179135,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127945441279,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127945965567,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127947014143,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127949111295,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127953305599,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127961694207,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856127978471423,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856128012025855,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856128079134719,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856128213352447,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856128481787903,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856129018658815,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856130092400639,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856132239884287,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856136534851583,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856145124786175,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856162304655359,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856196664393727,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856265383870463,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856402822823935,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956856677700730879,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956857227456544767,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956858326968172543,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956860525991428095,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956864924037939199,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956873720130961407,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956891312317005823,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956926496689094655,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12956996865433272319,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12957137602921627647,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12957419077898338303,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12957982027851759615,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12959107927758602239,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12959107927758602240,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12960233827665444864,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12960796777618866176,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961078252595576832,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961218990083932160,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961289358828109824,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961324543200198656,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961342135386243072,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961350931479265280,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961355329525776384,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961357528549031936,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961358628060659712,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359177816473600,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359452694380544,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359590133334016,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359658852810752,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359693212549120,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359710392418304,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359718982352896,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359723277320192,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359725424803840,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359726498545664,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727035416576,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727303852032,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727438069760,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727505178624,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727538733056,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727555510272,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727563898880,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727568093184,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727570190336,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727571238912,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727571763200,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572025344,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572156416,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572221952,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572254720,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572271104,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572279296,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572283392,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572285440,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572286464,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572286976,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572287232,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572287360,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572287424,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572287456,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572287472,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572287480,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572287484,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572287486,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(12961359727572287487,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891841234657507640,64,FLEN)
NAN_BOXED(11513646167158576539,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672320,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672321,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672323,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672327,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672335,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672351,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672383,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672447,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672575,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672831,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231673343,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231674367,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231676415,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231680511,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231688703,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231705087,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231737855,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231803391,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231934463,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232196607,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232720895,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983233769471,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983235866623,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983240060927,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983248449535,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983265226751,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983298781183,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983365890047,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983500107775,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983768543231,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661984305414143,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661985379155967,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661987526639615,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661991821606911,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662000411541503,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662017591410687,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662051951149055,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662120670625791,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662258109579263,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662532987486207,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202663082743300095,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202664182254927871,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202666381278183423,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202670779324694527,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202679575417716735,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202697167603761151,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202732351975849983,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202802720720027647,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202943458208382975,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203224933185093631,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203787883138514943,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357567,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357568,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206039682952200192,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206602632905621504,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206884107882332160,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207024845370687488,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207095214114865152,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207130398486953984,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207147990672998400,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207156786766020608,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207161184812531712,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207163383835787264,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207164483347415040,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165033103228928,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165307981135872,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165445420089344,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165514139566080,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165548499304448,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165565679173632,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165574269108224,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165578564075520,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165580711559168,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165581785300992,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582322171904,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582590607360,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582724825088,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582791933952,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582825488384,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582842265600,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582850654208,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582854848512,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582856945664,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582857994240,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858518528,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858780672,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858911744,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858977280,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859010048,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859026432,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859034624,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859038720,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859040768,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859041792,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042304,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042560,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042688,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042752,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042784,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042800,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042808,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042812,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042814,64,FLEN)
NAN_BOXED(6891848623618862869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042815,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715789824,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715789825,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715789827,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715789831,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715789839,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715789855,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715789887,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715789951,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715790079,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715790335,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715790847,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715791871,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715793919,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715798015,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715806207,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715822591,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715855359,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265715920895,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265716051967,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265716314111,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265716838399,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265717886975,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265719984127,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265724178431,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265732567039,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265749344255,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265782898687,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265850007551,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957265984225279,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957266252660735,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957266789531647,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957267863273471,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957270010757119,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957274305724415,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957282895659007,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957300075528191,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957334435266559,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957403154743295,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957540593696767,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708957815471603711,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708958365227417599,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708959464739045375,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708961663762300927,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708966061808812031,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708974857901834239,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13708992450087878655,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13709027634459967487,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13709098003204145151,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13709238740692500479,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13709520215669211135,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13710083165622632447,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13711209065529475071,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13711209065529475072,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13712334965436317696,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13712897915389739008,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713179390366449664,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713320127854804992,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713390496598982656,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713425680971071488,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713443273157115904,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713452069250138112,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713456467296649216,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713458666319904768,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713459765831532544,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460315587346432,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460590465253376,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460727904206848,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460796623683584,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460830983421952,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460848163291136,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460856753225728,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460861048193024,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460863195676672,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460864269418496,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460864806289408,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865074724864,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865208942592,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865276051456,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865309605888,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865326383104,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865334771712,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865338966016,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865341063168,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865342111744,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865342636032,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865342898176,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343029248,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343094784,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343127552,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343143936,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343152128,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343156224,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343158272,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343159296,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343159808,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343160064,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343160192,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343160256,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343160288,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343160304,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343160312,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343160316,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343160318,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13713460865343160319,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891850090215413220,64,FLEN)
NAN_BOXED(11513635641056749765,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153088,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153089,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153091,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153095,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153103,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153119,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153151,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153215,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153343,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153599,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360154111,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360155135,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360157183,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360161279,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360169471,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360185855,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360218623,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360284159,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360415231,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360677375,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016361201663,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016362250239,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016364347391,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016368541695,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016376930303,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016393707519,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016427261951,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016494370815,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016628588543,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016897023999,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070017433894911,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070018507636735,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070020655120383,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070024950087679,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070033540022271,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070050719891455,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070085079629823,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070153799106559,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070291238060031,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070566115966975,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471071115871780863,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471072215383408639,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471074414406664191,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471078812453175295,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471087608546197503,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471105200732241919,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471140385104330751,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471210753848508415,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471351491336863743,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471632966313574399,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9472195916266995711,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9473321816173838335,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9473321816173838336,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9474447716080680960,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475010666034102272,64,FLEN)
NAN_BOXED(6891852758284802322,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475292141010812928,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
