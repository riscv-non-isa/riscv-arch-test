
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b18 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b18)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f20, rs2==f18, rs3==f8, rd==f20,fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f20; op2:f18; op3:f8; dest:f20; op1val:0x7f52b954e52a4bff; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f20, f20, f18, f8, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f18, rs2==f5, rs3==f10, rd==f0,fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x8f90cc1b18bff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f18; op2:f5; op3:f10; dest:f0; op1val:0x7f58f90cc1b18bff; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f0, f18, f5, f10, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==f22, rs2==f22, rs3==f14, rd==f22,fs1 == 0 and fe1 == 0x7f6 and fm1 == 0x3502bebc53fff and fs2 == 0 and fe2 == 0x407 and fm2 == 0xa82aa06c96745 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f22; op2:f22; op3:f14; dest:f22; op1val:0x7f63502bebc53fff; op2val:0x7f63502bebc53fff;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f22, f22, f22, f14, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rs2 == rs3 == rd, rs1==f26, rs2==f26, rs3==f26, rd==f26,fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x238a22371e9ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f26; op2:f26; op3:f26; dest:f26; op1val:0x7f8238a22371e9ff; op2val:0x7f8238a22371e9ff;
op3val:0x7f8238a22371e9ff; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f26, f26, f26, f26, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f24, rs2==f24, rs3==f2, rd==f7,fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x97836753c7c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f24; op2:f24; op3:f2; dest:f7; op1val:0x7f897836753c7c7f; op2val:0x7f897836753c7c7f;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f7, f24, f24, f2, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f4, rs2==f15, rs3==f6, rd==f15,fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xcc1e517e0a9ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f4; op2:f15; op3:f6; dest:f15; op1val:0x7f8cc1e517e0a9ff; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f15, f4, f15, f6, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f28, rs2==f0, rs3==f0, rd==f21,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x30526056a01ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f28; op2:f0; op3:f0; dest:f21; op1val:0x7f930526056a01ff; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f21, f28, f0, f0, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f31, rs2==f13, rs3==f31, rd==f17,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x627e198e85b1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f31; op2:f13; op3:f31; dest:f17; op1val:0x7f9627e198e85b1f; op2val:0x8000;
op3val:0x7f9627e198e85b1f; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f17, f31, f13, f31, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f15, rs2==f19, rs3==f1, rd==f1,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x75450c5a9817f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f15; op2:f19; op3:f1; dest:f1; op1val:0x7f975450c5a9817f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f1, f15, f19, f1, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rd == rs2 == rs3 != rs1, rs1==f29, rs2==f28, rs3==f28, rd==f28,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xb56678fedc57f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f29; op2:f28; op3:f28; dest:f28; op1val:0x7f9b56678fedc57f; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f28, f29, f28, f28, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==f5, rs2==f11, rs3==f5, rd==f5,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2a1fa26c0948f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f5; op2:f11; op3:f5; dest:f5; op1val:0x7fa2a1fa26c0948f; op2val:0x8000;
op3val:0x7fa2a1fa26c0948f; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f5, f5, f11, f5, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 == rs3 != rd, rs1==f9, rs2==f9, rs3==f9, rd==f25,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x42972262ccf0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f9; op2:f9; op3:f9; dest:f25; op1val:0x7fa42972262ccf0f; op2val:0x7fa42972262ccf0f;
op3val:0x7fa42972262ccf0f; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f25, f9, f9, f9, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f14, rs2==f29, rs3==f20, rd==f3,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x4d1d10d2ac62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f14; op2:f29; op3:f20; dest:f3; op1val:0x7fa4d1d10d2ac62f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f3, f14, f29, f20, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f10, rs2==f3, rs3==f12, rd==f11,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x5819e362ac2bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f10; op2:f3; op3:f12; dest:f11; op1val:0x7fa5819e362ac2bf; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f11, f10, f3, f12, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f17, rs2==f12, rs3==f23, rd==f8,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x728eb744bb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f17; op2:f12; op3:f23; dest:f8; op1val:0x7fa728eb744bb2ef; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f8, f17, f12, f23, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f19, rs2==f8, rs3==f11, rd==f16,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x76587e2d6216f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f19; op2:f8; op3:f11; dest:f16; op1val:0x7fa76587e2d6216f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f16, f19, f8, f11, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f6, rs2==f21, rs3==f16, rd==f27,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x7f381ca9a6b2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f6; op2:f21; op3:f16; dest:f27; op1val:0x7fa7f381ca9a6b2f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f27, f6, f21, f16, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f2, rs2==f10, rs3==f3, rd==f31,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xdb8da7279369f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f2; op2:f10; op3:f3; dest:f31; op1val:0x7fadb8da7279369f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f2, f10, f3, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f12, rs2==f25, rs3==f21, rd==f2,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f12; op2:f25; op3:f21; dest:f2; op1val:0x7fb49818dfc8788f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f2, f12, f25, f21, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f7, rs2==f1, rs3==f27, rd==f23,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x4d30da0b2f54f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8962598ff75fb and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f7; op2:f1; op3:f27; dest:f23; op1val:0x7fb4d30da0b2f54f; op2val:0x4028962598ff75fb;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f23, f7, f1, f27, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f1, rs2==f27, rs3==f13, rd==f24,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x516656a60de77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f1; op2:f27; op3:f13; dest:f24; op1val:0x7fb516656a60de77; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f24, f1, f27, f13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f30, rs2==f4, rs3==f25, rd==f6,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x55e18bacc608f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f4; op3:f25; dest:f6; op1val:0x7fb55e18bacc608f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f6, f30, f4, f25, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f13, rs2==f20, rs3==f19, rd==f12,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6febab5b81b47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f13; op2:f20; op3:f19; dest:f12; op1val:0x7fb6febab5b81b47; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f12, f13, f20, f19, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f16, rs2==f30, rs3==f24, rd==f13,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9086506183f67 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x474031b174347 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f16; op2:f30; op3:f24; dest:f13; op1val:0x7fb9086506183f67; op2val:0x402474031b174347;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f13, f16, f30, f24, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f11, rs2==f6, rs3==f29, rd==f14,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a5710f3828f7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3f6c3f1a31a35 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f11; op2:f6; op3:f29; dest:f14; op1val:0x7fb9a5710f3828f7; op2val:0x4023f6c3f1a31a35;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f14, f11, f6, f29, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f8, rs2==f16, rs3==f17, rd==f30,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9c16a190f4e87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f8; op2:f16; op3:f17; dest:f30; op1val:0x7fb9c16a190f4e87; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f30, f8, f16, f17, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f27, rs2==f17, rs3==f22, rd==f10,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9c78deb52422f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f27; op2:f17; op3:f22; dest:f10; op1val:0x7fb9c78deb52422f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f10, f27, f17, f22, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f23, rs2==f31, rs3==f18, rd==f9,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9d5f97660dadf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f23; op2:f31; op3:f18; dest:f9; op1val:0x7fb9d5f97660dadf; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f9, f23, f31, f18, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f3, rs2==f23, rs3==f7, rd==f19,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9fbeb1abfb6e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f3; op2:f23; op3:f7; dest:f19; op1val:0x7fb9fbeb1abfb6e7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f19, f3, f23, f7, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f25, rs2==f7, rs3==f30, rd==f18,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f25; op2:f7; op3:f30; dest:f18; op1val:0x7fbbeb3709a573b7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f18, f25, f7, f30, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f21, rs2==f14, rs3==f4, rd==f29,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xdfc83569216bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f21; op2:f14; op3:f4; dest:f29; op1val:0x7fbdfc83569216bf; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f29, f21, f14, f4, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f0, rs2==f2, rs3==f15, rd==f4,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xe707c5377ae9f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x0d1ffa1c81aa1 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f0; op2:f2; op3:f15; dest:f4; op1val:0x7fbe707c5377ae9f; op2val:0x4020d1ffa1c81aa1;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f4, f0, f2, f15, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb797ef55e1cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fbfb797ef55e1cf; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x113ecba7502a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc113ecba7502a7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2bbdffdaf66c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc2bbdffdaf66c3; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x354ba34578ba7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc354ba34578ba7; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x42f12d7244f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc42f12d7244f4f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5afb49b29c463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc5afb49b29c463; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6607c20361523 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc6607c20361523; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x714a830fa079f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc714a830fa079f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7ad291b7d6463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc7ad291b7d6463; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7e6c0d0870e13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc7e6c0d0870e13; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8106d28c6e8ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc8106d28c6e8ff; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x83df99d24bacb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc83df99d24bacb; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc874e2eeac1c13; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x89d995b2d6507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc89d995b2d6507; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9847d9429817b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fc9847d9429817b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa9aa2b6025f07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fca9aa2b6025f07; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcaf42bcba26d83; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xb54c6b03a8983 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcb54c6b03a8983; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc380d05f3f55f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcc380d05f3f55f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc44223126cbc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcc44223126cbc7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fce8af77cda8053; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xea52ea391cf03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcea52ea391cf03; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xebc97dc31d5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcebc97dc31d5a7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf1bca90426463 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcf1bca90426463; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf3878bbaf3893 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fcf3878bbaf3893; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0084bbfe5e825 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd0084bbfe5e825; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00b42e8f00d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd00b42e8f00d47; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00f47e13a3077 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd00f47e13a3077; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x092178fb945a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd092178fb945a5; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0972c859cb481 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd0972c859cb481; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0a287088f5e69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd0a287088f5e69; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd0abe7f07f8c6f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x194e95f4fa0e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd194e95f4fa0e5; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1a3fd4c2ca047 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd1a3fd4c2ca047; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1d17766cf56c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd1d17766cf56c7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1eb3cbd822141 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xc92bc8d23f80a and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd1eb3cbd822141; op2val:0x400c92bc8d23f80a;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1f9fd611425bb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd1f9fd611425bb; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd209a1991e3307; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x26c977d632159 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd26c977d632159; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd294c231789029; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x36979c7be0deb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd36979c7be0deb; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd3d97530ca446d; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3eebb35310409 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd3eebb35310409; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3f8c326b3af5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd3f8c326b3af5d; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x43c3f0806f2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd43c3f0806f2cd; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x47bc64f002dc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd47bc64f002dc1; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd4d025f5a10f55; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54845b368b76f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd54845b368b76f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5569022b338ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd5569022b338ff; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x566d65947d7e7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd566d65947d7e7; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x57fa825e98147 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd57fa825e98147; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5e872dc3c5cf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd5e872dc3c5cf9; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6361dd8ebbe71 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd6361dd8ebbe71; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x66b37637d118d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd66b37637d118d; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x68add14e18ecb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd68add14e18ecb; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6db92bb1bf075 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd6db92bb1bf075; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6f291ef3c3557 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd6f291ef3c3557; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6fd2704b8e37f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd6fd2704b8e37f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7b05f6eabb69f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd7b05f6eabb69f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7d6356ef8a62f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd7d6356ef8a62f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x83bc51daecbf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd83bc51daecbf5; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8a2386a894fd9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd8a2386a894fd9; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8d5463dfce629 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd8d5463dfce629; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd9099330bb750b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd90afe96b3f2ad; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x963785d0567a5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x42aa420e5a55c and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd963785d0567a5; op2val:0x40042aa420e5a55c;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x986532dae9957 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd986532dae9957; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9b75de798ac5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd9b75de798ac5f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9bebe66f937a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd9bebe66f937a7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9ea70df588b3b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fd9ea70df588b3b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa3be3d7336699 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fda3be3d7336699; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa85a268409ae9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fda85a268409ae9; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa85d306a197c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fda85d306a197c5; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac4394e2d6fb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdac4394e2d6fb3; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaeaa51052e977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdaeaa51052e977; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb3d56c4f6fd1d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdb3d56c4f6fd1d; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdbc978aa879221; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc4edf85532923 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdc4edf85532923; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc7ab340bba999 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdc7ab340bba999; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc80a67882d6d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdc80a67882d6d1; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcab8890bacf6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdcab8890bacf6d; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcd606a3f0f54d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdcd606a3f0f54d; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcfd9836660a69 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdcfd9836660a69; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xde18ff8661b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdde18ff8661b6b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe2f1c5d734347 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde2f1c5d734347; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde3796147a7f97; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde7f7bd88d7c8f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde809082dd48fb; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fde8754038aa2cf; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf21e6dcb25437 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdf21e6dcb25437; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf2f5c0f43aa65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdf2f5c0f43aa65; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf96c79e9fdfa1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdf96c79e9fdfa1; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfa73e129b8879 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fdfa73e129b8879; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x01dca4dde57a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe01dca4dde57a5; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x026650c8e9dc3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe026650c8e9dc3; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0410cbbfdec45; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x04673c7ab8808 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe04673c7ab8808; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe05c5ccdf19706; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0aaee2f44e344 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0aaee2f44e344; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0e1e10b8a2f26 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0e1e10b8a2f26; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0e835d272c05e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe487ef0e5cb47 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe0e835d272c05e; op2val:0x3ffe487ef0e5cb47;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1182656689f60 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe1182656689f60; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x136b66cb69135 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe136b66cb69135; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x14a00d8d01424 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe14a00d8d01424; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x14c9836bbe6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe14c9836bbe6ff; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x184a2cd54bc8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe184a2cd54bc8b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe18ef1d7a9fa74; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1a3fb352a13ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe1a3fb352a13ab; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1de0cd942442e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe1de0cd942442e; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1f06fdec36709 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe1f06fdec36709; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1f707766a790b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe1f707766a790b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2290c48e30657 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2290c48e30657; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22e4be37f86cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe22e4be37f86cb; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2362beb7fcccc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2362beb7fcccc; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x25d1c4e896d66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe25d1c4e896d66; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe26bbbacf7eaef; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26e34e07a9172 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe26e34e07a9172; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28cdc8d19d0dc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe28cdc8d19d0dc; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2ab10cf910f7c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2ab10cf910f7c; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2c9bb6d2a0534 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2c9bb6d2a0534; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2cdc24d268f9f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2dfa6bb4d11d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe2dfa6bb4d11d1; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe314c82f3115df; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x318ea43af884c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe318ea43af884c; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x34d4bf2305d15 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe34d4bf2305d15; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe3671fd3520218; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x38c62d68fcb25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe38c62d68fcb25; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39bd67fecd9d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe39bd67fecd9d5; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39beb50761e3d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe39beb50761e3d; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe3c9adc7329695; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3dfdc8c878541 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe3dfdc8c878541; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x42a2ac1575123 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe42a2ac1575123; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x442435bea0eb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe442435bea0eb5; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x447a9936a43d3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe447a9936a43d3; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe451eb54c10b8b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x465936dcae3fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe465936dcae3fb; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x47c0965bde424 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe47c0965bde424; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b39d91344978 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4b39d91344978; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4c6c848cb47df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8a4ab01158b82 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4c6c848cb47df; op2val:0x3ff8a4ab01158b82;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d3375e946b52 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4d3375e946b52; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 513*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d39f7052a913 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4d39f7052a913; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 516*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4f8b971fa5a72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe4f8b971fa5a72; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 519*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5035a8d0a4c2b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5035a8d0a4c2b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 522*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe520baea9095e5; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 525*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x530b56ed605ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe530b56ed605ac; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 528*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x56182d28045ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe56182d28045ae; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 531*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5864580d04bef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5864580d04bef; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 534*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5a371eca20170 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5a371eca20170; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 537*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5b66519ab8134 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5b66519ab8134; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 540*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c762dc4bc5d6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5c762dc4bc5d6; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 543*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5cab9bd09e6c4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5cab9bd09e6c4; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 546*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5e33245521f37 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe5e33245521f37; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 549*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6535160e0062c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6535160e0062c; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 552*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x67140be6e2dc5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe67140be6e2dc5; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 555*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6756366451777 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6756366451777; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 558*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe691ae7e1929e8; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 561*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe69c26ac7fce60; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 564*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6cba246939a56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6cba246939a56; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 567*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6e65a8d3dbea5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6e65a8d3dbea5; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 570*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6f451c304de2e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x64e1c3e865dbd and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe6f451c304de2e; op2val:0x3ff64e1c3e865dbd;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 573*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe707d21f5c40de; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 576*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x737bdc485a77d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe737bdc485a77d; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 579*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ac81c4b8321 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe75ac81c4b8321; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 582*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7685c15158af8; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 585*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x76940d9e18057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe76940d9e18057; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 588*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7bafa3050f8b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7bafa3050f8b7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 591*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7f8e997d84592 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe7f8e997d84592; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 594*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x82cee64001220 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe82cee64001220; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 597*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x82f8c4c611b4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe82f8c4c611b4f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 600*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x83e4a9485598d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe83e4a9485598d; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 603*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x84129978f9c19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe84129978f9c19; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 606*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x914e0c751c4f4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe914e0c751c4f4; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 609*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94497c97803a8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe94497c97803a8; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 612*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x95adca0768ede and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe95adca0768ede; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 615*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x962eb496df1c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe962eb496df1c1; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 618*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96d3944ae92c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe96d3944ae92c5; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 621*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x99fb7503e8d08 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe99fb7503e8d08; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 624*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9b3a56e2c058e; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 627*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c2c9b7ac820e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9c2c9b7ac820e; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 630*FLEN/8, x4, x1, x2)

inst_211:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9e3b4234a7716 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9e3b4234a7716; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 633*FLEN/8, x4, x1, x2)

inst_212:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9ed4cb2685903; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 636*FLEN/8, x4, x1, x2)

inst_213:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9f8dcc4f1275c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9f8dcc4f1275c; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 639*FLEN/8, x4, x1, x2)

inst_214:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ff4d99a919c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fe9ff4d99a919c7; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 642*FLEN/8, x4, x1, x2)

inst_215:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fea101ccfb0623a; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 645*FLEN/8, x4, x1, x2)

inst_216:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa1bf5c83faf60 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fea1bf5c83faf60; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 648*FLEN/8, x4, x1, x2)

inst_217:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa53d0d2b3faec and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x37289daf00a60 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fea53d0d2b3faec; op2val:0x3ff37289daf00a60;
op3val:0xffefffffffffffff; valaddr_reg:x3; val_offset:651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 651*FLEN/8, x4, x1, x2)

inst_218:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fea65214b23e38e; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 654*FLEN/8, x4, x1, x2)

inst_219:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xace1ecea16623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feace1ecea16623; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 657*FLEN/8, x4, x1, x2)

inst_220:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad3923b9bf5a2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fead3923b9bf5a2; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 660*FLEN/8, x4, x1, x2)

inst_221:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaf56f24522c9c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feaf56f24522c9c; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 663*FLEN/8, x4, x1, x2)

inst_222:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb0580f98a7dbd; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 666*FLEN/8, x4, x1, x2)

inst_223:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0ae020c2f2ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb0ae020c2f2ab; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 669*FLEN/8, x4, x1, x2)

inst_224:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0db7e0a5d748 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb0db7e0a5d748; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 672*FLEN/8, x4, x1, x2)

inst_225:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb2efd30dc5db9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb2efd30dc5db9; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 675*FLEN/8, x4, x1, x2)

inst_226:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb537603b0ea8b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2bc99bd2c087f and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb537603b0ea8b; op2val:0x3ff2bc99bd2c087f;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 678*FLEN/8, x4, x1, x2)

inst_227:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9042a506a4fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feb9042a506a4fd; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 681*FLEN/8, x4, x1, x2)

inst_228:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbb09e7215ddb9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7febb09e7215ddb9; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 684*FLEN/8, x4, x1, x2)

inst_229:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7febc366e555215f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 687*FLEN/8, x4, x1, x2)

inst_230:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbdae67c407ef2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7febdae67c407ef2; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 690*FLEN/8, x4, x1, x2)

inst_231:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbe64efc9e258d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7febe64efc9e258d; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 693*FLEN/8, x4, x1, x2)

inst_232:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbf4f8dd35ac8c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2505b17c605c8 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7febf4f8dd35ac8c; op2val:0x3ff2505b17c605c8;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 696*FLEN/8, x4, x1, x2)

inst_233:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc00223fe58e9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec00223fe58e9e; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 699*FLEN/8, x4, x1, x2)

inst_234:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc0377eab1f21f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec0377eab1f21f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 702*FLEN/8, x4, x1, x2)

inst_235:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc0e80bc9923b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec0e80bc9923b7; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 705*FLEN/8, x4, x1, x2)

inst_236:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc48b48c27d811 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fec48b48c27d811; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 708*FLEN/8, x4, x1, x2)

inst_237:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca428c2b7c81f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feca428c2b7c81f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 711*FLEN/8, x4, x1, x2)

inst_238:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcbdd58ecc1b45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fecbdd58ecc1b45; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 714*FLEN/8, x4, x1, x2)

inst_239:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fecc3488366e29b; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 717*FLEN/8, x4, x1, x2)

inst_240:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcde8b20967d0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fecde8b20967d0b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 720*FLEN/8, x4, x1, x2)

inst_241:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xce30065d5ac1b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fece30065d5ac1b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 723*FLEN/8, x4, x1, x2)

inst_242:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0f42c0dfaf72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed0f42c0dfaf72; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 726*FLEN/8, x4, x1, x2)

inst_243:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed1ca42e21585b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 729*FLEN/8, x4, x1, x2)

inst_244:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1d803765d304 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed1d803765d304; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 732*FLEN/8, x4, x1, x2)

inst_245:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ed9e7beff05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed1ed9e7beff05; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 735*FLEN/8, x4, x1, x2)

inst_246:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed3762f4d1629c; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 738*FLEN/8, x4, x1, x2)

inst_247:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd57951bee0a17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed57951bee0a17; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 741*FLEN/8, x4, x1, x2)

inst_248:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd64347e477166 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed64347e477166; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 744*FLEN/8, x4, x1, x2)

inst_249:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed89e42f5143f8; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 747*FLEN/8, x4, x1, x2)

inst_250:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd8c56582791a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fed8c56582791a6; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 750*FLEN/8, x4, x1, x2)

inst_251:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdd9c651f50797 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fedd9c651f50797; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 753*FLEN/8, x4, x1, x2)

inst_252:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdfba6beb7a6c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fedfba6beb7a6c9; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 756*FLEN/8, x4, x1, x2)

inst_253:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe07b0ce451645 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee07b0ce451645; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 759*FLEN/8, x4, x1, x2)

inst_254:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe49bfb977b300 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee49bfb977b300; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 762*FLEN/8, x4, x1, x2)

inst_255:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe4d0d779159a4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee4d0d779159a4; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 765*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_256:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee64794dad7d48; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:768*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 768*FLEN/8, x4, x1, x2)

inst_257:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe800919ed6413 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fee800919ed6413; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:771*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 771*FLEN/8, x4, x1, x2)

inst_258:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec0c4abe1fd0e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feec0c4abe1fd0e; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:774*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 774*FLEN/8, x4, x1, x2)

inst_259:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feed7c3ef329d04; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:777*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 777*FLEN/8, x4, x1, x2)

inst_260:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeedf7f711c3c2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feeedf7f711c3c2; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:780*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 780*FLEN/8, x4, x1, x2)

inst_261:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeee707a35c8c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feeee707a35c8c3; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:783*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 783*FLEN/8, x4, x1, x2)

inst_262:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xef616f891ea0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feef616f891ea0b; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:786*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 786*FLEN/8, x4, x1, x2)

inst_263:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf4fff14ba982d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x059ef1b4e186f and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef4fff14ba982d; op2val:0x3ff059ef1b4e186f;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:789*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 789*FLEN/8, x4, x1, x2)

inst_264:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf60647476d4cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef60647476d4cb; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:792*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 792*FLEN/8, x4, x1, x2)

inst_265:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf72fa86d218ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef72fa86d218ab; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:795*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 795*FLEN/8, x4, x1, x2)

inst_266:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf940aa40f1530 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef940aa40f1530; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:798*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 798*FLEN/8, x4, x1, x2)

inst_267:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf9f9f5190aab4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fef9f9f5190aab4; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:801*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 801*FLEN/8, x4, x1, x2)

inst_268:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfe1581ecd07ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fefe1581ecd07ea; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:804*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 804*FLEN/8, x4, x1, x2)

inst_269:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xffb4067da2691 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7feffb4067da2691; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:807*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 807*FLEN/8, x4, x1, x2)

inst_270:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f52b954e52a4bff; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:810*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 810*FLEN/8, x4, x1, x2)

inst_271:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0x3502bebc53fff and fs2 == 0 and fe2 == 0x407 and fm2 == 0xa82aa06c96745 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f63502bebc53fff; op2val:0x407a82aa06c96745;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:813*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 813*FLEN/8, x4, x1, x2)

inst_272:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x238a22371e9ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f8238a22371e9ff; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:816*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 816*FLEN/8, x4, x1, x2)

inst_273:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x97836753c7c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f897836753c7c7f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:819*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 819*FLEN/8, x4, x1, x2)

inst_274:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xcc1e517e0a9ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f8cc1e517e0a9ff; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:822*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 822*FLEN/8, x4, x1, x2)

inst_275:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x30526056a01ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f930526056a01ff; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:825*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 825*FLEN/8, x4, x1, x2)

inst_276:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x627e198e85b1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f9627e198e85b1f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:828*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 828*FLEN/8, x4, x1, x2)

inst_277:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x75450c5a9817f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f975450c5a9817f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:831*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 831*FLEN/8, x4, x1, x2)

inst_278:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xb56678fedc57f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f9b56678fedc57f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:834*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 834*FLEN/8, x4, x1, x2)

inst_279:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2a1fa26c0948f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fa2a1fa26c0948f; op2val:0x8000;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:837*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 837*FLEN/8, x4, x1, x2)

inst_280:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x42972262ccf0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7fa42972262ccf0f; op2val:0x0;
op3val:0x4637ffff00000000; valaddr_reg:x3; val_offset:840*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 840*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(9174599165180267519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9176358073951947775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9179268615080591359,64,FLEN)
NAN_BOXED(9179268615080591359,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9187968458819758591,64,FLEN)
NAN_BOXED(9187968458819758591,64,FLEN)
NAN_BOXED(9187968458819758591,64,FLEN)
NAN_BOXED(9190008689916673151,64,FLEN)
NAN_BOXED(9190008689916673151,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9190934129248610815,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9192696925251043839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9193579539209935647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9193579539209935647,64,FLEN)
NAN_BOXED(9193909870190494079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9195038067003344255,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9197091484808025231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9197091484808025231,64,FLEN)
NAN_BOXED(9197521909240876815,64,FLEN)
NAN_BOXED(9197521909240876815,64,FLEN)
NAN_BOXED(9197521909240876815,64,FLEN)
NAN_BOXED(9197707034796672559,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9197900330487694015,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9198365755661071087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9198432398228201839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9198588502702975791,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9200212862150719135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9202147171225860239,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9202211994108884303,64,FLEN)
NAN_BOXED(4623110105720649211,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9202286038433717879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9202364873907658895,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9202822966444301127,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9203396543495290727,64,FLEN)
NAN_BOXED(4621946674277204807,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9203569218513545463,64,FLEN)
NAN_BOXED(4621808964045314613,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9203599974939446919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9203606725860672047,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9203622580917951199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9203664300692977383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9204208885079307191,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9204790854438491839,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9204918367670480543,64,FLEN)
NAN_BOXED(4620924113543240353,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9205278026551910863,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9205661020783444647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9206127159006947011,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9206295221994228647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9206535296217534287,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9206958203461026915,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207152574438184227,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207350675791021983,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207518355248735331,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207581678988889619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207627499180583167,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207677580451560139,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207737956174666771,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9207782720144237831,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9208036588027216251,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9208342411741388551,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9208440857049591171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9208547075425995139,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9208796966651426143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9208810251710024647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209451083575492691,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209479907750563587,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209505648439580071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209610319813567587,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209641854192007315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209870359407749157,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209873619976457543,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9209878039368446071,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210021867865851301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210027455448659073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210039938820562537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210050250633350255,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210306442996719845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210323021249421383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210373023705552583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210401359059362113,64,FLEN)
NAN_BOXED(4615225056667367434,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9210417579600127419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210434777589363463,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210543585825595737,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210587749700636713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210821634665876971,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210944760255759469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210968150721496073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9210979179954417501,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211053379294786253,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211123229538659777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211215999332847445,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211348077056145263,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211363789913667839,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211381683663132647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211408973023510855,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211524192875076857,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211609589654208113,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211667973469442445,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211702769975660235,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211791511083806837,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211816796430808407,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9211828431857705855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212025486734767775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212067087793038895,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212178755578940405,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212291400975601625,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212347535450760745,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212405040545494283,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212406601329406637,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212503881370920869,64,FLEN)
NAN_BOXED(4612858802749154652,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9212542204569885015,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212596126708444255,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212604237743732647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212652283267418939,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212741837493855897,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212822920320031465,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212823129135617989,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212891738143551411,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9212933982404143479,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213024905597484317,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213178982810751521,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213325659614685475,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213373847996967321,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213380390167959249,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213427540725256045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213474261701817677,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213517767882705513,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213768421133917035,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213853686520038215,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213863005374807959,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213942057537469583,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213943245805799675,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9213950682553033423,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214120638052193335,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214135435062913637,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214249146727260065,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214267247665318009,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214397592327051173,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214407053044260291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214436360549428293,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214442300685125640,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214466391261943558,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214552777572016964,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214613194277531430,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214620155461681246,64,FLEN)
NAN_BOXED(4611202778518637383,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9214672865514266464,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214706469712597301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214727680074716196,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214730529213769471,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214792147341196427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214803481933249140,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214826611900814251,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214890459342717998,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214910675846129417,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214917924000266507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214972920292640343,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214978691027666635,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9214987349815971020,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215030163711552870,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215046241358441199,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215048960936939890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215082666441429212,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215115876243672956,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215149594380993844,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215154021955178399,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215173694753411537,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215232112547927519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215236656967157836,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215294251111308565,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215322648917180952,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215363618664598309,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215380608101702101,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215380697499704893,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215431010738673301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215455400873657665,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215537100627595555,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215563594579185333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215569531155137491,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215580808687979403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215602421383488507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215627117310370852,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215688226834237816,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215709301023918047,64,FLEN)
NAN_BOXED(4609615272978254722,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9215722972270324562,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215723419244603667,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215764212871748210,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215775899931790379,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215808199654938085,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215825768290321836,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215879426988852654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215919845555588079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215951922180260208,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215972757822210356,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215991439900263894,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9215995111572891332,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216022017534467895,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216145296443049516,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216178210347036101,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216182757238314871,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216213866086214120,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216225377377046112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216277585289517654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216306964051377829,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216322319461703214,64,FLEN)
NAN_BOXED(4608957151875325373,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9216343761487675614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216396450622449533,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216434977951679265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216449907137022712,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216450889691267159,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216540746152212663,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216608844595611026,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216666039805284896,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216668917037079375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216685127453989261,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216688284305955865,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216921068039685364,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216973531101266856,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9216998016021860062,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217006875079209409,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217018205123285701,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217073722064538888,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217095635489785230,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217112284016181774,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217148475216131862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217159026056911107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217171739471062876,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217178821145991623,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217197303296713274,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217210329807695712,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217271743720454892,64,FLEN)
NAN_BOXED(4608152780139399776,64,FLEN)
NAN_BOXED(18442240474082181119,64,FLEN)
NAN_BOXED(9217290781036110734,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217406219078166051,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217412212385904034,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217449445066681500,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217467113844407741,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217473020082451115,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217476145742993224,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217512727325203897,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217552828677024395,64,FLEN)
NAN_BOXED(4607952737243236479,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9217619678254769405,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217655256909209017,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217675909045494111,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217701745805786866,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217714289263912333,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217730412044201100,64,FLEN)
NAN_BOXED(4607833720924538312,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9217742684421459614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217746350894084639,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217758483403318199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217822477603297297,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217923032293034015,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217951262241987397,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217957253530182299,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217987226449116427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9217992128168569883,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218040791675416434,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218055503771424859,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218056448819712772,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218057933542063877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218084910450959004,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218120310227601943,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218134188916961638,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218175625436677112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218178314771337638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218263458099038103,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218300705880123081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218313943230256709,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218386575073194752,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218390207509911972,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218415959431019848,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218446263852033043,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218517438203821326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218542723805650180,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218567136531825602,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218567654128076995,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218576065794009611,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218674919233722413,64,FLEN)
NAN_BOXED(4607281302290176111,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9218692946817635531,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218713382580000939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218749735673730352,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218762468867746484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218834730840819690,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9218863216289523345,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9174599165180267519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9179268615080591359,64,FLEN)
NAN_BOXED(4646169632356001605,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(9187968458819758591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9190008689916673151,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9190934129248610815,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9192696925251043839,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9193579539209935647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9193909870190494079,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9195038067003344255,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9197091484808025231,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
NAN_BOXED(9197521909240876815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5059794177055784960,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 50*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

RVMODEL_DATA_END
