
#include "compliance_model.h"
#include "compliance_test.h"

RVTEST_ISA("RV64IC")

RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1
RVTEST_CASE(1,"//check ISA:=regex(.*RV64.*I.*C.*);def TEST_CASE_1=True;",csdsp)
la x1,signature_x1_1
TEST_STORE(x1,x3,0,x2,x31,-1,504,0,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x30,-1,0,8,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x29,-9223372036854775808,504,16,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x28,0,504,24,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x27,9223372036854775807,504,32,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x26,1,504,40,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x25,-1,8,48,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x24,-1,16,56,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x23,-1,32,64,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x22,-1,64,72,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x21,-1,128,80,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x20,-1,256,88,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x19,-1,496,96,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x18,-1,488,104,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x17,-1,472,112,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x16,-1,440,120,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x15,-1,376,128,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x14,-1,248,136,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x13,-1,168,144,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x12,-1,336,152,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x11,2,504,160,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x10,4,504,168,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x9,8,504,176,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x8,16,504,184,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x7,32,504,192,c.sdsp,0)
TEST_STORE(x1,x3,0,x2,x6,64,504,200,c.sdsp,0)
TEST_STORE(x1,x6,0,x2,x5,128,504,208,c.sdsp,0)
la x5,signature_x5_0
TEST_STORE(x5,x6,0,x2,x4,256,504,0,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x3,512,504,8,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x2,1024,504,16,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x1,2048,504,24,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x0,4096,504,32,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,8192,504,40,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,16384,504,48,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,32768,504,56,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,65536,504,64,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,131072,504,72,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,262144,504,80,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,524288,504,88,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,1048576,504,96,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,2097152,504,104,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,4194304,504,112,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,8388608,504,120,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,16777216,504,128,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,33554432,504,136,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,67108864,504,144,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,134217728,504,152,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,268435456,504,160,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,536870912,504,168,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,1073741824,504,176,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,2147483648,504,184,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,4294967296,504,192,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,8589934592,504,200,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,17179869184,504,208,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,34359738368,504,216,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,68719476736,504,224,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,137438953472,504,232,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,274877906944,504,240,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,549755813888,504,248,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,1099511627776,504,256,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,2199023255552,504,264,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,4398046511104,504,272,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,8796093022208,504,280,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,17592186044416,504,288,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,35184372088832,504,296,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,70368744177664,504,304,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,140737488355328,504,312,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,281474976710656,504,320,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,562949953421312,504,328,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,1125899906842624,504,336,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,2251799813685248,504,344,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,4503599627370496,504,352,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,9007199254740992,504,360,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,18014398509481984,504,368,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,36028797018963968,504,376,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,72057594037927936,504,384,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,144115188075855872,504,392,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,288230376151711744,504,400,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,576460752303423488,504,408,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,1152921504606846976,504,416,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,2305843009213693952,504,424,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,4611686018427387904,504,432,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-2,504,440,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-3,504,448,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-35184372088833,504,456,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-70368744177665,504,464,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-140737488355329,504,472,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-281474976710657,504,480,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-562949953421313,504,488,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-1125899906842625,504,496,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-2251799813685249,504,504,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-4503599627370497,504,512,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-9007199254740993,504,520,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-18014398509481985,504,528,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-36028797018963969,504,536,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-72057594037927937,504,544,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-144115188075855873,504,552,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-288230376151711745,504,560,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-576460752303423489,504,568,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-1152921504606846977,504,576,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-2305843009213693953,504,584,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-4611686018427387905,504,592,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,6148914691236517205,504,600,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-6148914691236517206,504,608,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-5,504,616,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-9,504,624,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-17,504,632,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-33,504,640,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-65,504,648,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-129,504,656,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-257,504,664,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-513,504,672,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-1025,504,680,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-2049,504,688,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-4097,504,696,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-8193,504,704,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-16385,504,712,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-32769,504,720,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-65537,504,728,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-131073,504,736,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-262145,504,744,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-524289,504,752,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-1048577,504,760,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-2097153,504,768,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-4194305,504,776,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-8388609,504,784,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-16777217,504,792,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-33554433,504,800,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-67108865,504,808,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-134217729,504,816,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-268435457,504,824,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-536870913,504,832,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-1073741825,504,840,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-2147483649,504,848,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-4294967297,504,856,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-8589934593,504,864,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-17179869185,504,872,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-34359738369,504,880,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-68719476737,504,888,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-137438953473,504,896,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-274877906945,504,904,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-549755813889,504,912,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-1099511627777,504,920,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-2199023255553,504,928,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-4398046511105,504,936,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-8796093022209,504,944,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,-17592186044417,504,952,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,1024,504,960,c.sdsp,0)
TEST_STORE(x5,x6,0,x2,x10,4096,504,968,c.sdsp,0)
#endif


RVMODEL_HALT
RVTEST_CODE_END

RVTEST_DATA_BEGIN
.align 4
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
.align 4

signature_x1_0:
    .fill 0*(XLEN/32),4,0xafacadee


signature_x1_1:
    .fill 27*(XLEN/32),4,0xafacadee


signature_x5_0:
    .fill 122*(XLEN/32),4,0xafacadee

RVMODEL_DATA_END
