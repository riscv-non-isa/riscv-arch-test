
#include "compliance_model.h"
#include "compliance_test.h"

RVTEST_ISA("RV64IC")

RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1
RVTEST_CASE(1,"//check ISA:=regex(.*I.*C.*);def TEST_CASE_1=True;",cadd)
la x1,signature_x1_1
TEST_CR_OP( c.add, x30, x31, 0, -1, 6148914691236517205, x1, 0, x2)
TEST_CR_OP( c.add, x31, x30, 0, -1, -1, x1, 8, x2)
TEST_CR_OP( c.add, x28, x29, 0, -9223372036854775808, -1, x1, 16, x2)
TEST_CR_OP( c.add, x29, x28, 0, 0, -1, x1, 24, x2)
TEST_CR_OP( c.add, x26, x27, 0, 9223372036854775807, -1, x1, 32, x2)
TEST_CR_OP( c.add, x27, x26, 0, 1, -1, x1, 40, x2)
TEST_CR_OP( c.add, x24, x25, 0, -1, -9223372036854775808, x1, 48, x2)
TEST_CR_OP( c.add, x25, x24, 0, -1, 0, x1, 56, x2)
TEST_CR_OP( c.add, x22, x23, 0, -1, 9223372036854775807, x1, 64, x2)
TEST_CR_OP( c.add, x23, x22, 0, -1, 1, x1, 72, x2)
TEST_CR_OP( c.add, x20, x21, 0, 2, -1, x1, 80, x2)
TEST_CR_OP( c.add, x21, x20, 0, 4, -1, x1, 88, x2)
TEST_CR_OP( c.add, x18, x19, 0, 8, -1, x1, 96, x2)
TEST_CR_OP( c.add, x19, x18, 0, 16, -1, x1, 104, x2)
TEST_CR_OP( c.add, x16, x17, 0, 32, -1, x1, 112, x2)
TEST_CR_OP( c.add, x17, x16, 0, 64, -1, x1, 120, x2)
TEST_CR_OP( c.add, x14, x15, 0, 128, -1, x1, 128, x2)
TEST_CR_OP( c.add, x15, x14, 0, 256, -1, x1, 136, x2)
TEST_CR_OP( c.add, x12, x13, 0, 512, -1, x1, 144, x2)
TEST_CR_OP( c.add, x13, x12, 0, 1024, -1, x1, 152, x2)
TEST_CR_OP( c.add, x10, x11, 0, 2048, -1, x1, 160, x2)
TEST_CR_OP( c.add, x11, x10, 0, 4096, -1, x1, 168, x2)
TEST_CR_OP( c.add, x8, x9, 0, 8192, -1, x1, 176, x2)
TEST_CR_OP( c.add, x9, x8, 0, 16384, -1, x1, 184, x2)
TEST_CR_OP( c.add, x6, x7, 0, 32768, -1, x1, 192, x2)
TEST_CR_OP( c.add, x7, x6, 0, 65536, -1, x1, 200, x2)
TEST_CR_OP( c.add, x4, x5, 0, 131072, -1, x1, 208, x2)
la x6,signature_x6_0
TEST_CR_OP( c.add, x5, x4, 0, 262144, -1, x6, 0, x7)
TEST_CR_OP( c.add, x2, x3, 0, 524288, -1, x6, 8, x7)
TEST_CR_OP( c.add, x3, x2, 0, 1048576, -1, x6, 16, x7)
TEST_CR_OP( c.add, x0, x1, 0, 2097152, -1, x6, 24, x7)
TEST_CR_OP( c.add, x1, x31, 0, 4194304, -1, x6, 32, x7)
TEST_CR_OP( c.add, x31, x31, 0, 8388608, -1, x6, 40, x7)
TEST_CR_OP( c.add, x10, x11, 0, 16777216, -1, x6, 48, x7)
TEST_CR_OP( c.add, x10, x11, 0, 33554432, -1, x6, 56, x7)
TEST_CR_OP( c.add, x10, x11, 0, 67108864, -1, x6, 64, x7)
TEST_CR_OP( c.add, x10, x11, 0, 134217728, -1, x6, 72, x7)
TEST_CR_OP( c.add, x10, x11, 0, 268435456, -1, x6, 80, x7)
TEST_CR_OP( c.add, x10, x11, 0, 536870912, -1, x6, 88, x7)
TEST_CR_OP( c.add, x10, x11, 0, 1073741824, -1, x6, 96, x7)
TEST_CR_OP( c.add, x10, x11, 0, 2147483648, -1, x6, 104, x7)
TEST_CR_OP( c.add, x10, x11, 0, 4294967296, -1, x6, 112, x7)
TEST_CR_OP( c.add, x10, x11, 0, 8589934592, -1, x6, 120, x7)
TEST_CR_OP( c.add, x10, x11, 0, 17179869184, -1, x6, 128, x7)
TEST_CR_OP( c.add, x10, x11, 0, 34359738368, -1, x6, 136, x7)
TEST_CR_OP( c.add, x10, x11, 0, 68719476736, -1, x6, 144, x7)
TEST_CR_OP( c.add, x10, x11, 0, 137438953472, -1, x6, 152, x7)
TEST_CR_OP( c.add, x10, x11, 0, 274877906944, -1, x6, 160, x7)
TEST_CR_OP( c.add, x10, x11, 0, 549755813888, -1, x6, 168, x7)
TEST_CR_OP( c.add, x10, x11, 0, 1099511627776, -1, x6, 176, x7)
TEST_CR_OP( c.add, x10, x11, 0, 2199023255552, -1, x6, 184, x7)
TEST_CR_OP( c.add, x10, x11, 0, 4398046511104, -1, x6, 192, x7)
TEST_CR_OP( c.add, x10, x11, 0, 8796093022208, -1, x6, 200, x7)
TEST_CR_OP( c.add, x10, x11, 0, 17592186044416, -1, x6, 208, x7)
TEST_CR_OP( c.add, x10, x11, 0, 35184372088832, -1, x6, 216, x7)
TEST_CR_OP( c.add, x10, x11, 0, 70368744177664, -1, x6, 224, x7)
TEST_CR_OP( c.add, x10, x11, 0, 140737488355328, -1, x6, 232, x7)
TEST_CR_OP( c.add, x10, x11, 0, 281474976710656, -1, x6, 240, x7)
TEST_CR_OP( c.add, x10, x11, 0, 562949953421312, -1, x6, 248, x7)
TEST_CR_OP( c.add, x10, x11, 0, 1125899906842624, -1, x6, 256, x7)
TEST_CR_OP( c.add, x10, x11, 0, 2251799813685248, -1, x6, 264, x7)
TEST_CR_OP( c.add, x10, x11, 0, 4503599627370496, -1, x6, 272, x7)
TEST_CR_OP( c.add, x10, x11, 0, 9007199254740992, -1, x6, 280, x7)
TEST_CR_OP( c.add, x10, x11, 0, 18014398509481984, -1, x6, 288, x7)
TEST_CR_OP( c.add, x10, x11, 0, 36028797018963968, -1, x6, 296, x7)
TEST_CR_OP( c.add, x10, x11, 0, 72057594037927936, -1, x6, 304, x7)
TEST_CR_OP( c.add, x10, x11, 0, 144115188075855872, -1, x6, 312, x7)
TEST_CR_OP( c.add, x10, x11, 0, 288230376151711744, -1, x6, 320, x7)
TEST_CR_OP( c.add, x10, x11, 0, 576460752303423488, -1, x6, 328, x7)
TEST_CR_OP( c.add, x10, x11, 0, 1152921504606846976, -1, x6, 336, x7)
TEST_CR_OP( c.add, x10, x11, 0, 2305843009213693952, -1, x6, 344, x7)
TEST_CR_OP( c.add, x10, x11, 0, 4611686018427387904, -1, x6, 352, x7)
TEST_CR_OP( c.add, x10, x11, 0, -2, -1, x6, 360, x7)
TEST_CR_OP( c.add, x10, x11, 0, -3, -1, x6, 368, x7)
TEST_CR_OP( c.add, x10, x11, 0, -5, -1, x6, 376, x7)
TEST_CR_OP( c.add, x10, x11, 0, -9, -1, x6, 384, x7)
TEST_CR_OP( c.add, x10, x11, 0, -17, -1, x6, 392, x7)
TEST_CR_OP( c.add, x10, x11, 0, -33, -1, x6, 400, x7)
TEST_CR_OP( c.add, x10, x11, 0, -65, -1, x6, 408, x7)
TEST_CR_OP( c.add, x10, x11, 0, -129, -1, x6, 416, x7)
TEST_CR_OP( c.add, x10, x11, 0, -257, -1, x6, 424, x7)
TEST_CR_OP( c.add, x10, x11, 0, -513, -1, x6, 432, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1025, -1, x6, 440, x7)
TEST_CR_OP( c.add, x10, x11, 0, -2049, -1, x6, 448, x7)
TEST_CR_OP( c.add, x10, x11, 0, -4097, -1, x6, 456, x7)
TEST_CR_OP( c.add, x10, x11, 0, -8193, -1, x6, 464, x7)
TEST_CR_OP( c.add, x10, x11, 0, -16385, -1, x6, 472, x7)
TEST_CR_OP( c.add, x10, x11, 0, -32769, -1, x6, 480, x7)
TEST_CR_OP( c.add, x10, x11, 0, -65537, -1, x6, 488, x7)
TEST_CR_OP( c.add, x10, x11, 0, -131073, -1, x6, 496, x7)
TEST_CR_OP( c.add, x10, x11, 0, -262145, -1, x6, 504, x7)
TEST_CR_OP( c.add, x10, x11, 0, -524289, -1, x6, 512, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1048577, -1, x6, 520, x7)
TEST_CR_OP( c.add, x10, x11, 0, -2097153, -1, x6, 528, x7)
TEST_CR_OP( c.add, x10, x11, 0, -4194305, -1, x6, 536, x7)
TEST_CR_OP( c.add, x10, x11, 0, -8388609, -1, x6, 544, x7)
TEST_CR_OP( c.add, x10, x11, 0, -16777217, -1, x6, 552, x7)
TEST_CR_OP( c.add, x10, x11, 0, -33554433, -1, x6, 560, x7)
TEST_CR_OP( c.add, x10, x11, 0, -67108865, -1, x6, 568, x7)
TEST_CR_OP( c.add, x10, x11, 0, -134217729, -1, x6, 576, x7)
TEST_CR_OP( c.add, x10, x11, 0, -268435457, -1, x6, 584, x7)
TEST_CR_OP( c.add, x10, x11, 0, -536870913, -1, x6, 592, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1073741825, -1, x6, 600, x7)
TEST_CR_OP( c.add, x10, x11, 0, -2147483649, -1, x6, 608, x7)
TEST_CR_OP( c.add, x10, x11, 0, -4294967297, -1, x6, 616, x7)
TEST_CR_OP( c.add, x10, x11, 0, -8589934593, -1, x6, 624, x7)
TEST_CR_OP( c.add, x10, x11, 0, -17179869185, -1, x6, 632, x7)
TEST_CR_OP( c.add, x10, x11, 0, -34359738369, -1, x6, 640, x7)
TEST_CR_OP( c.add, x10, x11, 0, -68719476737, -1, x6, 648, x7)
TEST_CR_OP( c.add, x10, x11, 0, -137438953473, -1, x6, 656, x7)
TEST_CR_OP( c.add, x10, x11, 0, -274877906945, -1, x6, 664, x7)
TEST_CR_OP( c.add, x10, x11, 0, -549755813889, -1, x6, 672, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1099511627777, -1, x6, 680, x7)
TEST_CR_OP( c.add, x10, x11, 0, -2199023255553, -1, x6, 688, x7)
TEST_CR_OP( c.add, x10, x11, 0, -4398046511105, -1, x6, 696, x7)
TEST_CR_OP( c.add, x10, x11, 0, -8796093022209, -1, x6, 704, x7)
TEST_CR_OP( c.add, x10, x11, 0, -17592186044417, -1, x6, 712, x7)
TEST_CR_OP( c.add, x10, x11, 0, -35184372088833, -1, x6, 720, x7)
TEST_CR_OP( c.add, x10, x11, 0, -70368744177665, -1, x6, 728, x7)
TEST_CR_OP( c.add, x10, x11, 0, -140737488355329, -1, x6, 736, x7)
TEST_CR_OP( c.add, x10, x11, 0, -281474976710657, -1, x6, 744, x7)
TEST_CR_OP( c.add, x10, x11, 0, -562949953421313, -1, x6, 752, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1125899906842625, -1, x6, 760, x7)
TEST_CR_OP( c.add, x10, x11, 0, -2251799813685249, -1, x6, 768, x7)
TEST_CR_OP( c.add, x10, x11, 0, -4503599627370497, -1, x6, 776, x7)
TEST_CR_OP( c.add, x10, x11, 0, -9007199254740993, -1, x6, 784, x7)
TEST_CR_OP( c.add, x10, x11, 0, -18014398509481985, -1, x6, 792, x7)
TEST_CR_OP( c.add, x10, x11, 0, -36028797018963969, -1, x6, 800, x7)
TEST_CR_OP( c.add, x10, x11, 0, -72057594037927937, -1, x6, 808, x7)
TEST_CR_OP( c.add, x10, x11, 0, -144115188075855873, -1, x6, 816, x7)
TEST_CR_OP( c.add, x10, x11, 0, -288230376151711745, -1, x6, 824, x7)
TEST_CR_OP( c.add, x10, x11, 0, -576460752303423489, -1, x6, 832, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1152921504606846977, -1, x6, 840, x7)
TEST_CR_OP( c.add, x10, x11, 0, -2305843009213693953, -1, x6, 848, x7)
TEST_CR_OP( c.add, x10, x11, 0, -4611686018427387905, -1, x6, 856, x7)
TEST_CR_OP( c.add, x10, x11, 0, 6148914691236517205, -1, x6, 864, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -18014398509481985, x6, 872, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -36028797018963969, x6, 880, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -72057594037927937, x6, 888, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -144115188075855873, x6, 896, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -288230376151711745, x6, 904, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -576460752303423489, x6, 912, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -1152921504606846977, x6, 920, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -2305843009213693953, x6, 928, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -4611686018427387905, x6, 936, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -6148914691236517206, x6, 944, x7)
TEST_CR_OP( c.add, x10, x11, 0, -6148914691236517206, -1, x6, 952, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 2, x6, 960, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 4, x6, 968, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 8, x6, 976, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 16, x6, 984, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 32, x6, 992, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 64, x6, 1000, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 128, x6, 1008, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 256, x6, 1016, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 512, x6, 1024, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 1024, x6, 1032, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 2048, x6, 1040, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 4096, x6, 1048, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 8192, x6, 1056, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 16384, x6, 1064, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 32768, x6, 1072, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 65536, x6, 1080, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 131072, x6, 1088, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 262144, x6, 1096, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 524288, x6, 1104, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 1048576, x6, 1112, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 2097152, x6, 1120, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 4194304, x6, 1128, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 8388608, x6, 1136, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 16777216, x6, 1144, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 33554432, x6, 1152, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 67108864, x6, 1160, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 134217728, x6, 1168, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 268435456, x6, 1176, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 536870912, x6, 1184, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 1073741824, x6, 1192, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 2147483648, x6, 1200, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 4294967296, x6, 1208, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 8589934592, x6, 1216, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 17179869184, x6, 1224, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 34359738368, x6, 1232, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 68719476736, x6, 1240, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 137438953472, x6, 1248, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 274877906944, x6, 1256, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 549755813888, x6, 1264, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 1099511627776, x6, 1272, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 2199023255552, x6, 1280, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 4398046511104, x6, 1288, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 8796093022208, x6, 1296, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 17592186044416, x6, 1304, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 35184372088832, x6, 1312, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 70368744177664, x6, 1320, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 140737488355328, x6, 1328, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 281474976710656, x6, 1336, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 562949953421312, x6, 1344, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 1125899906842624, x6, 1352, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 2251799813685248, x6, 1360, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 4503599627370496, x6, 1368, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 9007199254740992, x6, 1376, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 18014398509481984, x6, 1384, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 36028797018963968, x6, 1392, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 72057594037927936, x6, 1400, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 144115188075855872, x6, 1408, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 288230376151711744, x6, 1416, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 576460752303423488, x6, 1424, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 1152921504606846976, x6, 1432, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 2305843009213693952, x6, 1440, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, 4611686018427387904, x6, 1448, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -2, x6, 1456, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -3, x6, 1464, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -5, x6, 1472, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -9, x6, 1480, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -17, x6, 1488, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -33, x6, 1496, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -65, x6, 1504, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -129, x6, 1512, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -257, x6, 1520, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -513, x6, 1528, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -1025, x6, 1536, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -2049, x6, 1544, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -4097, x6, 1552, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -8193, x6, 1560, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -16385, x6, 1568, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -32769, x6, 1576, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -65537, x6, 1584, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -131073, x6, 1592, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -262145, x6, 1600, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -524289, x6, 1608, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -1048577, x6, 1616, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -2097153, x6, 1624, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -4194305, x6, 1632, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -8388609, x6, 1640, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -16777217, x6, 1648, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -33554433, x6, 1656, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -67108865, x6, 1664, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -134217729, x6, 1672, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -268435457, x6, 1680, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -536870913, x6, 1688, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -1073741825, x6, 1696, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -2147483649, x6, 1704, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -4294967297, x6, 1712, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -8589934593, x6, 1720, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -17179869185, x6, 1728, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -34359738369, x6, 1736, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -68719476737, x6, 1744, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -137438953473, x6, 1752, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -274877906945, x6, 1760, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -549755813889, x6, 1768, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -1099511627777, x6, 1776, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -2199023255553, x6, 1784, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -4398046511105, x6, 1792, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -8796093022209, x6, 1800, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -17592186044417, x6, 1808, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -35184372088833, x6, 1816, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -70368744177665, x6, 1824, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -140737488355329, x6, 1832, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -281474976710657, x6, 1840, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -562949953421313, x6, 1848, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -1125899906842625, x6, 1856, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -2251799813685249, x6, 1864, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -4503599627370497, x6, 1872, x7)
TEST_CR_OP( c.add, x10, x11, 0, -1, -9007199254740993, x6, 1880, x7)
TEST_CR_OP( c.add, x10, x11, 0, 2097152, -1, x6, 1888, x7)
TEST_CR_OP( c.add, x10, x11, 0, 8388608, -1, x6, 1896, x7)
#endif


RVMODEL_HALT
RVTEST_CODE_END

RVTEST_DATA_BEGIN
.align 4
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
.align 4

signature_x1_0:
    .fill 0*(XLEN/32),4,0xafacadee


signature_x1_1:
    .fill 27*(XLEN/32),4,0xafacadee


signature_x6_0:
    .fill 238*(XLEN/32),4,0xafacadee

RVMODEL_DATA_END
