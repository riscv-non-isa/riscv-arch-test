
#include "compliance_model.h"
#include "compliance_test.h"

RVTEST_ISA("RV64IC")

RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1
RVTEST_CASE(1,"//check ISA:=regex(.*RV64.*I.*C.*);def TEST_CASE_1=True;",csd)
la x1,signature_x1_1
TEST_STORE(x1,x2,0,x15,x14,-1,248,0,c.sd,0)
TEST_STORE(x1,x2,0,x14,x15,-1,0,8,c.sd,0)
TEST_STORE(x1,x2,0,x13,x12,-9223372036854775808,248,16,c.sd,0)
TEST_STORE(x1,x2,0,x12,x13,0,248,24,c.sd,0)
TEST_STORE(x1,x2,0,x11,x10,9223372036854775807,248,32,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,1,248,40,c.sd,0)
TEST_STORE(x1,x2,0,x9,x8,-1,8,48,c.sd,0)
TEST_STORE(x1,x2,0,x8,x9,-1,16,56,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1,32,64,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1,64,72,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1,128,80,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1,240,88,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1,232,96,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1,216,104,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1,184,112,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1,120,120,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1,168,128,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1,80,136,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,2,248,144,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,4,248,152,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,8,248,160,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,16,248,168,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,32,248,176,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,64,248,184,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,128,248,192,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,256,248,200,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,512,248,208,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,1024,248,216,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,2048,248,224,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,4096,248,232,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,8192,248,240,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,16384,248,248,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,32768,248,256,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,65536,248,264,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,131072,248,272,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,262144,248,280,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,524288,248,288,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,1048576,248,296,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,2097152,248,304,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,4194304,248,312,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,8388608,248,320,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,16777216,248,328,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,33554432,248,336,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,67108864,248,344,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,134217728,248,352,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,268435456,248,360,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,536870912,248,368,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,1073741824,248,376,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,2147483648,248,384,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,4294967296,248,392,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,8589934592,248,400,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,17179869184,248,408,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,34359738368,248,416,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,68719476736,248,424,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,137438953472,248,432,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,274877906944,248,440,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,549755813888,248,448,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,1099511627776,248,456,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,2199023255552,248,464,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,4398046511104,248,472,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,8796093022208,248,480,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,17592186044416,248,488,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,35184372088832,248,496,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,70368744177664,248,504,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,140737488355328,248,512,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,281474976710656,248,520,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,562949953421312,248,528,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,1125899906842624,248,536,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,2251799813685248,248,544,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,4503599627370496,248,552,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,9007199254740992,248,560,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,18014398509481984,248,568,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,36028797018963968,248,576,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,72057594037927936,248,584,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,144115188075855872,248,592,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,288230376151711744,248,600,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,576460752303423488,248,608,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,1152921504606846976,248,616,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,2305843009213693952,248,624,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,4611686018427387904,248,632,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-2,248,640,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-3,248,648,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-140737488355329,248,656,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-281474976710657,248,664,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-562949953421313,248,672,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1125899906842625,248,680,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-2251799813685249,248,688,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-4503599627370497,248,696,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-9007199254740993,248,704,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-18014398509481985,248,712,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-36028797018963969,248,720,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-72057594037927937,248,728,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-144115188075855873,248,736,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-288230376151711745,248,744,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-576460752303423489,248,752,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1152921504606846977,248,760,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-2305843009213693953,248,768,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-4611686018427387905,248,776,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,6148914691236517205,248,784,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-6148914691236517206,248,792,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-5,248,800,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-9,248,808,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-17,248,816,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-33,248,824,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-65,248,832,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-129,248,840,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-257,248,848,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-513,248,856,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1025,248,864,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-2049,248,872,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-4097,248,880,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-8193,248,888,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-16385,248,896,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-32769,248,904,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-65537,248,912,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-131073,248,920,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-262145,248,928,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-524289,248,936,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1048577,248,944,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-2097153,248,952,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-4194305,248,960,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-8388609,248,968,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-16777217,248,976,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-33554433,248,984,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-67108865,248,992,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-134217729,248,1000,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-268435457,248,1008,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-536870913,248,1016,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1073741825,248,1024,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-2147483649,248,1032,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-4294967297,248,1040,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-8589934593,248,1048,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-17179869185,248,1056,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-34359738369,248,1064,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-68719476737,248,1072,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-137438953473,248,1080,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-274877906945,248,1088,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-549755813889,248,1096,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-1099511627777,248,1104,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-2199023255553,248,1112,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-4398046511105,248,1120,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-8796093022209,248,1128,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-17592186044417,248,1136,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-35184372088833,248,1144,c.sd,0)
TEST_STORE(x1,x2,0,x10,x11,-70368744177665,248,1152,c.sd,0)
#endif


RVMODEL_HALT
RVTEST_CODE_END

RVTEST_DATA_BEGIN
.align 4
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
.align 4

signature_x1_0:
    .fill 0*(XLEN/32),4,0xafacadee


signature_x1_1:
    .fill 145*(XLEN/32),4,0xafacadee

RVMODEL_DATA_END
