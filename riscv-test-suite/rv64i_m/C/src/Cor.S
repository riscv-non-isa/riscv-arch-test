
#include "compliance_model.h"
#include "compliance_test.h"

RVTEST_ISA("RV64IC")

RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1
RVTEST_CASE(1,"//check ISA:=regex(.*I.*C.*);def TEST_CASE_1=True;",cor)
la x1,signature_x1_1
TEST_CR_OP( c.or, x15, x14, 0, -1, 6148914691236517205, x1, 0, x2)
TEST_CR_OP( c.or, x14, x15, 0, -1, -1, x1, 8, x2)
TEST_CR_OP( c.or, x13, x12, 0, -9223372036854775808, -1, x1, 16, x2)
TEST_CR_OP( c.or, x12, x13, 0, 0, -1, x1, 24, x2)
TEST_CR_OP( c.or, x11, x10, 0, 9223372036854775807, -1, x1, 32, x2)
TEST_CR_OP( c.or, x10, x11, 0, 1, -1, x1, 40, x2)
TEST_CR_OP( c.or, x9, x8, 0, -1, -9223372036854775808, x1, 48, x2)
TEST_CR_OP( c.or, x8, x9, 0, -1, 0, x1, 56, x2)
TEST_CR_OP( c.or, x15, x15, 0, -1, 9223372036854775807, x1, 64, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 1, x1, 72, x2)
TEST_CR_OP( c.or, x10, x11, 0, 2, -1, x1, 80, x2)
TEST_CR_OP( c.or, x10, x11, 0, 4, -1, x1, 88, x2)
TEST_CR_OP( c.or, x10, x11, 0, 8, -1, x1, 96, x2)
TEST_CR_OP( c.or, x10, x11, 0, 16, -1, x1, 104, x2)
TEST_CR_OP( c.or, x10, x11, 0, 32, -1, x1, 112, x2)
TEST_CR_OP( c.or, x10, x11, 0, 64, -1, x1, 120, x2)
TEST_CR_OP( c.or, x10, x11, 0, 128, -1, x1, 128, x2)
TEST_CR_OP( c.or, x10, x11, 0, 256, -1, x1, 136, x2)
TEST_CR_OP( c.or, x10, x11, 0, 512, -1, x1, 144, x2)
TEST_CR_OP( c.or, x10, x11, 0, 1024, -1, x1, 152, x2)
TEST_CR_OP( c.or, x10, x11, 0, 2048, -1, x1, 160, x2)
TEST_CR_OP( c.or, x10, x11, 0, 4096, -1, x1, 168, x2)
TEST_CR_OP( c.or, x10, x11, 0, 8192, -1, x1, 176, x2)
TEST_CR_OP( c.or, x10, x11, 0, 16384, -1, x1, 184, x2)
TEST_CR_OP( c.or, x10, x11, 0, 32768, -1, x1, 192, x2)
TEST_CR_OP( c.or, x10, x11, 0, 65536, -1, x1, 200, x2)
TEST_CR_OP( c.or, x10, x11, 0, 131072, -1, x1, 208, x2)
TEST_CR_OP( c.or, x10, x11, 0, 262144, -1, x1, 216, x2)
TEST_CR_OP( c.or, x10, x11, 0, 524288, -1, x1, 224, x2)
TEST_CR_OP( c.or, x10, x11, 0, 1048576, -1, x1, 232, x2)
TEST_CR_OP( c.or, x10, x11, 0, 2097152, -1, x1, 240, x2)
TEST_CR_OP( c.or, x10, x11, 0, 4194304, -1, x1, 248, x2)
TEST_CR_OP( c.or, x10, x11, 0, 8388608, -1, x1, 256, x2)
TEST_CR_OP( c.or, x10, x11, 0, 16777216, -1, x1, 264, x2)
TEST_CR_OP( c.or, x10, x11, 0, 33554432, -1, x1, 272, x2)
TEST_CR_OP( c.or, x10, x11, 0, 67108864, -1, x1, 280, x2)
TEST_CR_OP( c.or, x10, x11, 0, 134217728, -1, x1, 288, x2)
TEST_CR_OP( c.or, x10, x11, 0, 268435456, -1, x1, 296, x2)
TEST_CR_OP( c.or, x10, x11, 0, 536870912, -1, x1, 304, x2)
TEST_CR_OP( c.or, x10, x11, 0, 1073741824, -1, x1, 312, x2)
TEST_CR_OP( c.or, x10, x11, 0, 2147483648, -1, x1, 320, x2)
TEST_CR_OP( c.or, x10, x11, 0, 4294967296, -1, x1, 328, x2)
TEST_CR_OP( c.or, x10, x11, 0, 8589934592, -1, x1, 336, x2)
TEST_CR_OP( c.or, x10, x11, 0, 17179869184, -1, x1, 344, x2)
TEST_CR_OP( c.or, x10, x11, 0, 34359738368, -1, x1, 352, x2)
TEST_CR_OP( c.or, x10, x11, 0, 68719476736, -1, x1, 360, x2)
TEST_CR_OP( c.or, x10, x11, 0, 137438953472, -1, x1, 368, x2)
TEST_CR_OP( c.or, x10, x11, 0, 274877906944, -1, x1, 376, x2)
TEST_CR_OP( c.or, x10, x11, 0, 549755813888, -1, x1, 384, x2)
TEST_CR_OP( c.or, x10, x11, 0, 1099511627776, -1, x1, 392, x2)
TEST_CR_OP( c.or, x10, x11, 0, 2199023255552, -1, x1, 400, x2)
TEST_CR_OP( c.or, x10, x11, 0, 4398046511104, -1, x1, 408, x2)
TEST_CR_OP( c.or, x10, x11, 0, 8796093022208, -1, x1, 416, x2)
TEST_CR_OP( c.or, x10, x11, 0, 17592186044416, -1, x1, 424, x2)
TEST_CR_OP( c.or, x10, x11, 0, 35184372088832, -1, x1, 432, x2)
TEST_CR_OP( c.or, x10, x11, 0, 70368744177664, -1, x1, 440, x2)
TEST_CR_OP( c.or, x10, x11, 0, 140737488355328, -1, x1, 448, x2)
TEST_CR_OP( c.or, x10, x11, 0, 281474976710656, -1, x1, 456, x2)
TEST_CR_OP( c.or, x10, x11, 0, 562949953421312, -1, x1, 464, x2)
TEST_CR_OP( c.or, x10, x11, 0, 1125899906842624, -1, x1, 472, x2)
TEST_CR_OP( c.or, x10, x11, 0, 2251799813685248, -1, x1, 480, x2)
TEST_CR_OP( c.or, x10, x11, 0, 4503599627370496, -1, x1, 488, x2)
TEST_CR_OP( c.or, x10, x11, 0, 9007199254740992, -1, x1, 496, x2)
TEST_CR_OP( c.or, x10, x11, 0, 18014398509481984, -1, x1, 504, x2)
TEST_CR_OP( c.or, x10, x11, 0, 36028797018963968, -1, x1, 512, x2)
TEST_CR_OP( c.or, x10, x11, 0, 72057594037927936, -1, x1, 520, x2)
TEST_CR_OP( c.or, x10, x11, 0, 144115188075855872, -1, x1, 528, x2)
TEST_CR_OP( c.or, x10, x11, 0, 288230376151711744, -1, x1, 536, x2)
TEST_CR_OP( c.or, x10, x11, 0, 576460752303423488, -1, x1, 544, x2)
TEST_CR_OP( c.or, x10, x11, 0, 1152921504606846976, -1, x1, 552, x2)
TEST_CR_OP( c.or, x10, x11, 0, 2305843009213693952, -1, x1, 560, x2)
TEST_CR_OP( c.or, x10, x11, 0, 4611686018427387904, -1, x1, 568, x2)
TEST_CR_OP( c.or, x10, x11, 0, -2, -1, x1, 576, x2)
TEST_CR_OP( c.or, x10, x11, 0, -3, -1, x1, 584, x2)
TEST_CR_OP( c.or, x10, x11, 0, -5, -1, x1, 592, x2)
TEST_CR_OP( c.or, x10, x11, 0, -9, -1, x1, 600, x2)
TEST_CR_OP( c.or, x10, x11, 0, -17, -1, x1, 608, x2)
TEST_CR_OP( c.or, x10, x11, 0, -33, -1, x1, 616, x2)
TEST_CR_OP( c.or, x10, x11, 0, -65, -1, x1, 624, x2)
TEST_CR_OP( c.or, x10, x11, 0, -129, -1, x1, 632, x2)
TEST_CR_OP( c.or, x10, x11, 0, -257, -1, x1, 640, x2)
TEST_CR_OP( c.or, x10, x11, 0, -513, -1, x1, 648, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1025, -1, x1, 656, x2)
TEST_CR_OP( c.or, x10, x11, 0, -2049, -1, x1, 664, x2)
TEST_CR_OP( c.or, x10, x11, 0, -4097, -1, x1, 672, x2)
TEST_CR_OP( c.or, x10, x11, 0, -8193, -1, x1, 680, x2)
TEST_CR_OP( c.or, x10, x11, 0, -16385, -1, x1, 688, x2)
TEST_CR_OP( c.or, x10, x11, 0, -32769, -1, x1, 696, x2)
TEST_CR_OP( c.or, x10, x11, 0, -65537, -1, x1, 704, x2)
TEST_CR_OP( c.or, x10, x11, 0, -131073, -1, x1, 712, x2)
TEST_CR_OP( c.or, x10, x11, 0, -262145, -1, x1, 720, x2)
TEST_CR_OP( c.or, x10, x11, 0, -524289, -1, x1, 728, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1048577, -1, x1, 736, x2)
TEST_CR_OP( c.or, x10, x11, 0, -2097153, -1, x1, 744, x2)
TEST_CR_OP( c.or, x10, x11, 0, -4194305, -1, x1, 752, x2)
TEST_CR_OP( c.or, x10, x11, 0, -8388609, -1, x1, 760, x2)
TEST_CR_OP( c.or, x10, x11, 0, -16777217, -1, x1, 768, x2)
TEST_CR_OP( c.or, x10, x11, 0, -33554433, -1, x1, 776, x2)
TEST_CR_OP( c.or, x10, x11, 0, -67108865, -1, x1, 784, x2)
TEST_CR_OP( c.or, x10, x11, 0, -134217729, -1, x1, 792, x2)
TEST_CR_OP( c.or, x10, x11, 0, -268435457, -1, x1, 800, x2)
TEST_CR_OP( c.or, x10, x11, 0, -536870913, -1, x1, 808, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1073741825, -1, x1, 816, x2)
TEST_CR_OP( c.or, x10, x11, 0, -2147483649, -1, x1, 824, x2)
TEST_CR_OP( c.or, x10, x11, 0, -4294967297, -1, x1, 832, x2)
TEST_CR_OP( c.or, x10, x11, 0, -8589934593, -1, x1, 840, x2)
TEST_CR_OP( c.or, x10, x11, 0, -17179869185, -1, x1, 848, x2)
TEST_CR_OP( c.or, x10, x11, 0, -34359738369, -1, x1, 856, x2)
TEST_CR_OP( c.or, x10, x11, 0, -68719476737, -1, x1, 864, x2)
TEST_CR_OP( c.or, x10, x11, 0, -137438953473, -1, x1, 872, x2)
TEST_CR_OP( c.or, x10, x11, 0, -274877906945, -1, x1, 880, x2)
TEST_CR_OP( c.or, x10, x11, 0, -549755813889, -1, x1, 888, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1099511627777, -1, x1, 896, x2)
TEST_CR_OP( c.or, x10, x11, 0, -2199023255553, -1, x1, 904, x2)
TEST_CR_OP( c.or, x10, x11, 0, -4398046511105, -1, x1, 912, x2)
TEST_CR_OP( c.or, x10, x11, 0, -8796093022209, -1, x1, 920, x2)
TEST_CR_OP( c.or, x10, x11, 0, -17592186044417, -1, x1, 928, x2)
TEST_CR_OP( c.or, x10, x11, 0, -35184372088833, -1, x1, 936, x2)
TEST_CR_OP( c.or, x10, x11, 0, -70368744177665, -1, x1, 944, x2)
TEST_CR_OP( c.or, x10, x11, 0, -140737488355329, -1, x1, 952, x2)
TEST_CR_OP( c.or, x10, x11, 0, -281474976710657, -1, x1, 960, x2)
TEST_CR_OP( c.or, x10, x11, 0, -562949953421313, -1, x1, 968, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1125899906842625, -1, x1, 976, x2)
TEST_CR_OP( c.or, x10, x11, 0, -2251799813685249, -1, x1, 984, x2)
TEST_CR_OP( c.or, x10, x11, 0, -4503599627370497, -1, x1, 992, x2)
TEST_CR_OP( c.or, x10, x11, 0, -9007199254740993, -1, x1, 1000, x2)
TEST_CR_OP( c.or, x10, x11, 0, -18014398509481985, -1, x1, 1008, x2)
TEST_CR_OP( c.or, x10, x11, 0, -36028797018963969, -1, x1, 1016, x2)
TEST_CR_OP( c.or, x10, x11, 0, -72057594037927937, -1, x1, 1024, x2)
TEST_CR_OP( c.or, x10, x11, 0, -144115188075855873, -1, x1, 1032, x2)
TEST_CR_OP( c.or, x10, x11, 0, -288230376151711745, -1, x1, 1040, x2)
TEST_CR_OP( c.or, x10, x11, 0, -576460752303423489, -1, x1, 1048, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1152921504606846977, -1, x1, 1056, x2)
TEST_CR_OP( c.or, x10, x11, 0, -2305843009213693953, -1, x1, 1064, x2)
TEST_CR_OP( c.or, x10, x11, 0, -4611686018427387905, -1, x1, 1072, x2)
TEST_CR_OP( c.or, x10, x11, 0, 6148914691236517205, -1, x1, 1080, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -18014398509481985, x1, 1088, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -36028797018963969, x1, 1096, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -72057594037927937, x1, 1104, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -144115188075855873, x1, 1112, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -288230376151711745, x1, 1120, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -576460752303423489, x1, 1128, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -1152921504606846977, x1, 1136, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -2305843009213693953, x1, 1144, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -4611686018427387905, x1, 1152, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -6148914691236517206, x1, 1160, x2)
TEST_CR_OP( c.or, x10, x11, 0, -6148914691236517206, -1, x1, 1168, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 2, x1, 1176, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 4, x1, 1184, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 8, x1, 1192, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 16, x1, 1200, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 32, x1, 1208, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 64, x1, 1216, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 128, x1, 1224, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 256, x1, 1232, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 512, x1, 1240, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 1024, x1, 1248, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 2048, x1, 1256, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 4096, x1, 1264, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 8192, x1, 1272, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 16384, x1, 1280, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 32768, x1, 1288, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 65536, x1, 1296, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 131072, x1, 1304, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 262144, x1, 1312, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 524288, x1, 1320, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 1048576, x1, 1328, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 2097152, x1, 1336, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 4194304, x1, 1344, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 8388608, x1, 1352, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 16777216, x1, 1360, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 33554432, x1, 1368, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 67108864, x1, 1376, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 134217728, x1, 1384, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 268435456, x1, 1392, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 536870912, x1, 1400, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 1073741824, x1, 1408, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 2147483648, x1, 1416, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 4294967296, x1, 1424, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 8589934592, x1, 1432, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 17179869184, x1, 1440, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 34359738368, x1, 1448, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 68719476736, x1, 1456, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 137438953472, x1, 1464, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 274877906944, x1, 1472, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 549755813888, x1, 1480, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 1099511627776, x1, 1488, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 2199023255552, x1, 1496, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 4398046511104, x1, 1504, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 8796093022208, x1, 1512, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 17592186044416, x1, 1520, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 35184372088832, x1, 1528, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 70368744177664, x1, 1536, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 140737488355328, x1, 1544, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 281474976710656, x1, 1552, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 562949953421312, x1, 1560, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 1125899906842624, x1, 1568, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 2251799813685248, x1, 1576, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 4503599627370496, x1, 1584, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 9007199254740992, x1, 1592, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 18014398509481984, x1, 1600, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 36028797018963968, x1, 1608, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 72057594037927936, x1, 1616, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 144115188075855872, x1, 1624, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 288230376151711744, x1, 1632, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 576460752303423488, x1, 1640, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 1152921504606846976, x1, 1648, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 2305843009213693952, x1, 1656, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 4611686018427387904, x1, 1664, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -2, x1, 1672, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -3, x1, 1680, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -5, x1, 1688, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -9, x1, 1696, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -17, x1, 1704, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -33, x1, 1712, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -65, x1, 1720, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -129, x1, 1728, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -257, x1, 1736, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -513, x1, 1744, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -1025, x1, 1752, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -2049, x1, 1760, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -4097, x1, 1768, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -8193, x1, 1776, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -16385, x1, 1784, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -32769, x1, 1792, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -65537, x1, 1800, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -131073, x1, 1808, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -262145, x1, 1816, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -524289, x1, 1824, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -1048577, x1, 1832, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -2097153, x1, 1840, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -4194305, x1, 1848, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -8388609, x1, 1856, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -16777217, x1, 1864, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -33554433, x1, 1872, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -67108865, x1, 1880, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -134217729, x1, 1888, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -268435457, x1, 1896, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -536870913, x1, 1904, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -1073741825, x1, 1912, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -2147483649, x1, 1920, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -4294967297, x1, 1928, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -8589934593, x1, 1936, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -17179869185, x1, 1944, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -34359738369, x1, 1952, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -68719476737, x1, 1960, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -137438953473, x1, 1968, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -274877906945, x1, 1976, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -549755813889, x1, 1984, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -1099511627777, x1, 1992, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -2199023255553, x1, 2000, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -4398046511105, x1, 2008, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -8796093022209, x1, 2016, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -17592186044417, x1, 2024, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -35184372088833, x1, 2032, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -70368744177665, x1, 2040, x2)
la x1,signature_x1_2
TEST_CR_OP( c.or, x10, x11, 0, -1, -140737488355329, x1, 0, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -281474976710657, x1, 8, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -562949953421313, x1, 16, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -1125899906842625, x1, 24, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -2251799813685249, x1, 32, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -4503599627370497, x1, 40, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, -9007199254740993, x1, 48, x2)
TEST_CR_OP( c.or, x10, x11, 0, -1, 9223372036854775807, x1, 56, x2)
#endif


RVMODEL_HALT
RVTEST_CODE_END

RVTEST_DATA_BEGIN
.align 4
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
.align 4

signature_x1_0:
    .fill 0*(XLEN/32),4,0xafacadee


signature_x1_1:
    .fill 256*(XLEN/32),4,0xafacadee


signature_x1_2:
    .fill 8*(XLEN/32),4,0xafacadee

RVMODEL_DATA_END
