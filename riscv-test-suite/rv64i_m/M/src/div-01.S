
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.2.0
// timestamp : Wed Nov 18 07:49:41 2020 GMT
// usage     : riscv_ctg \
//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv64im.cgf') \
//                  -- xlen 64 \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the div instruction of the RISC-V M extension for the div covergroup.
// 
#include "compliance_model.h"
#include "arch_test.h"
RVTEST_ISA("RV64IM")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*M.*);def TEST_CASE_1=True;",div)

RVTEST_SIGBASE( x4,signature_x4_1)

inst_0:
// rs1 == rs2 == rd, rs1==x14, rs2==x14, rd==x14, rs1_val > 0 and rs2_val > 0, rs2_val == 4194304, rs1_val != rs2_val, rs1_val == 2147483648
// opcode: div ; op1:x14; op2:x14; dest:x14; op1val:2147483648;  op2val:4194304
TEST_RR_OP(div, x14, x14, x14, 0x0000000000000000, 2147483648, 4194304, x4, 0, x12)

inst_1:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x21, rs2==x19, rd==x0, rs1_val > 0 and rs2_val < 0, rs2_val == -1048577, rs1_val == 536870912
// opcode: div ; op1:x21; op2:x19; dest:x0; op1val:536870912;  op2val:-1048577
TEST_RR_OP(div, x0, x21, x19, 0x0000000000000000, 536870912, -1048577, x4, 8, x12)

inst_2:
// rs1 == rd != rs2, rs1==x3, rs2==x10, rd==x3, rs1_val < 0 and rs2_val < 0, rs2_val == -33, rs1_val == -9007199254740993
// opcode: div ; op1:x3; op2:x10; dest:x3; op1val:-9007199254740993;  op2val:-33
TEST_RR_OP(div, x3, x3, x10, 0x0000000000000000, -9007199254740993, -33, x4, 16, x12)

inst_3:
// rs1 == rs2 != rd, rs1==x29, rs2==x29, rd==x18, rs1_val < 0 and rs2_val > 0, rs2_val == 562949953421312, rs1_val == -72057594037927937
// opcode: div ; op1:x29; op2:x29; dest:x18; op1val:-72057594037927937;  op2val:562949953421312
TEST_RR_OP(div, x18, x29, x29, 0x0000000000000000, -72057594037927937, 562949953421312, x4, 24, x12)

inst_4:
// rs2 == rd != rs1, rs1==x13, rs2==x2, rd==x2, rs1_val == rs2_val, rs2_val == -2097153, rs1_val == -2097153
// opcode: div ; op1:x13; op2:x2; dest:x2; op1val:-2097153;  op2val:-2097153
TEST_RR_OP(div, x2, x13, x2, 0x0000000000000000, -2097153, -2097153, x4, 32, x12)

inst_5:
// rs1==x1, rs2==x15, rd==x23, rs2_val == (-2**(xlen-1)), rs1_val == 70368744177664, rs2_val == -9223372036854775808
// opcode: div ; op1:x1; op2:x15; dest:x23; op1val:70368744177664;  op2val:-9223372036854775808
TEST_RR_OP(div, x23, x1, x15, 0x0000000000000000, 70368744177664, -9223372036854775808, x4, 40, x12)

inst_6:
// rs1==x9, rs2==x7, rd==x15, rs2_val == 0, rs1_val == 8796093022208
// opcode: div ; op1:x9; op2:x7; dest:x15; op1val:8796093022208;  op2val:0
TEST_RR_OP(div, x15, x9, x7, 0x0000000000000000, 8796093022208, 0, x4, 48, x12)

inst_7:
// rs1==x18, rs2==x26, rd==x21, rs2_val == (2**(xlen-1)-1), rs1_val == 2048, rs2_val == 9223372036854775807
// opcode: div ; op1:x18; op2:x26; dest:x21; op1val:2048;  op2val:9223372036854775807
TEST_RR_OP(div, x21, x18, x26, 0x0000000000000000, 2048, 9223372036854775807, x4, 56, x12)

inst_8:
// rs1==x11, rs2==x20, rd==x9, rs2_val == 1, rs1_val == -1025
// opcode: div ; op1:x11; op2:x20; dest:x9; op1val:-1025;  op2val:1
TEST_RR_OP(div, x9, x11, x20, 0x0000000000000000, -1025, 1, x4, 64, x12)

inst_9:
// rs1==x6, rs2==x21, rd==x22, rs1_val == (-2**(xlen-1)), rs1_val == -9223372036854775808
// opcode: div ; op1:x6; op2:x21; dest:x22; op1val:-9223372036854775808;  op2val:-4611686018427387904
TEST_RR_OP(div, x22, x6, x21, 0x0000000000000000, -9223372036854775808, -4611686018427387904, x4, 72, x12)

inst_10:
// rs1==x17, rs2==x8, rd==x28, rs1_val == 0, 
// opcode: div ; op1:x17; op2:x8; dest:x28; op1val:0;  op2val:9223372036854775807
TEST_RR_OP(div, x28, x17, x8, 0x0000000000000000, 0, 9223372036854775807, x4, 80, x12)

inst_11:
// rs1==x2, rs2==x23, rd==x17, rs1_val == (2**(xlen-1)-1), rs1_val == 9223372036854775807, rs2_val == 1024
// opcode: div ; op1:x2; op2:x23; dest:x17; op1val:9223372036854775807;  op2val:1024
TEST_RR_OP(div, x17, x2, x23, 0x0000000000000000, 9223372036854775807, 1024, x4, 88, x12)

inst_12:
// rs1==x15, rs2==x5, rd==x31, rs1_val == 1, rs2_val == 16384
// opcode: div ; op1:x15; op2:x5; dest:x31; op1val:1;  op2val:16384
TEST_RR_OP(div, x31, x15, x5, 0x0000000000000000, 1, 16384, x4, 96, x12)

inst_13:
// rs1==x0, rs2==x3, rd==x27, rs2_val == 2, rs1_val == 512
// opcode: div ; op1:x0; op2:x3; dest:x27; op1val:512;  op2val:2
TEST_RR_OP(div, x27, x0, x3, 0x0000000000000000, 512, 2, x4, 104, x12)

inst_14:
// rs1==x24, rs2==x22, rd==x10, rs2_val == 4, rs1_val == 67108864
// opcode: div ; op1:x24; op2:x22; dest:x10; op1val:67108864;  op2val:4
TEST_RR_OP(div, x10, x24, x22, 0x0000000000000000, 67108864, 4, x4, 112, x12)

inst_15:
// rs1==x27, rs2==x17, rd==x19, rs2_val == 8, rs1_val == 576460752303423488
// opcode: div ; op1:x27; op2:x17; dest:x19; op1val:576460752303423488;  op2val:8
TEST_RR_OP(div, x19, x27, x17, 0x0000000000000000, 576460752303423488, 8, x4, 120, x12)

inst_16:
// rs1==x30, rs2==x9, rd==x11, rs2_val == 16, 
// opcode: div ; op1:x30; op2:x9; dest:x11; op1val:9;  op2val:16
TEST_RR_OP(div, x11, x30, x9, 0x0000000000000000, 9, 16, x4, 128, x12)

inst_17:
// rs1==x8, rs2==x12, rd==x30, rs2_val == 32, 
// opcode: div ; op1:x8; op2:x12; dest:x30; op1val:5;  op2val:32
TEST_RR_OP(div, x30, x8, x12, 0x0000000000000000, 5, 32, x4, 136, x3)
RVTEST_SIGBASE( x2,signature_x2_0)

inst_18:
// rs1==x19, rs2==x11, rd==x26, rs2_val == 64, rs1_val == -8796093022209
// opcode: div ; op1:x19; op2:x11; dest:x26; op1val:-8796093022209;  op2val:64
TEST_RR_OP(div, x26, x19, x11, 0x0000000000000000, -8796093022209, 64, x2, 0, x3)

inst_19:
// rs1==x25, rs2==x6, rd==x4, rs2_val == 128, 
// opcode: div ; op1:x25; op2:x6; dest:x4; op1val:0;  op2val:128
TEST_RR_OP(div, x4, x25, x6, 0x0000000000000000, 0, 128, x2, 8, x3)

inst_20:
// rs1==x7, rs2==x28, rd==x13, rs2_val == 256, rs1_val == 288230376151711744
// opcode: div ; op1:x7; op2:x28; dest:x13; op1val:288230376151711744;  op2val:256
TEST_RR_OP(div, x13, x7, x28, 0x0000000000000000, 288230376151711744, 256, x2, 16, x3)

inst_21:
// rs1==x26, rs2==x0, rd==x8, rs2_val == 512, rs1_val == 268435456
// opcode: div ; op1:x26; op2:x0; dest:x8; op1val:268435456;  op2val:512
TEST_RR_OP(div, x8, x26, x0, 0x0000000000000000, 268435456, 512, x2, 24, x3)

inst_22:
// rs1==x23, rs2==x1, rd==x7, rs2_val == 2048, rs1_val == -8388609
// opcode: div ; op1:x23; op2:x1; dest:x7; op1val:-8388609;  op2val:2048
TEST_RR_OP(div, x7, x23, x1, 0x0000000000000000, -8388609, 2048, x2, 32, x3)

inst_23:
// rs1==x12, rs2==x31, rd==x20, rs2_val == 4096, rs1_val == 4194304
// opcode: div ; op1:x12; op2:x31; dest:x20; op1val:4194304;  op2val:4096
TEST_RR_OP(div, x20, x12, x31, 0x0000000000000000, 4194304, 4096, x2, 40, x3)

inst_24:
// rs1==x20, rs2==x13, rd==x5, rs2_val == 8192, rs1_val == 137438953472
// opcode: div ; op1:x20; op2:x13; dest:x5; op1val:137438953472;  op2val:8192
TEST_RR_OP(div, x5, x20, x13, 0x0000000000000000, 137438953472, 8192, x2, 48, x3)

inst_25:
// rs1==x5, rs2==x30, rd==x25, rs2_val == 32768, rs1_val == 6148914691236517205
// opcode: div ; op1:x5; op2:x30; dest:x25; op1val:6148914691236517205;  op2val:32768
TEST_RR_OP(div, x25, x5, x30, 0x0000000000000000, 6148914691236517205, 32768, x2, 56, x3)

inst_26:
// rs1==x16, rs2==x18, rd==x29, rs2_val == 65536, rs1_val == -35184372088833
// opcode: div ; op1:x16; op2:x18; dest:x29; op1val:-35184372088833;  op2val:65536
TEST_RR_OP(div, x29, x16, x18, 0x0000000000000000, -35184372088833, 65536, x2, 64, x3)

inst_27:
// rs1==x28, rs2==x24, rd==x6, rs2_val == 131072, 
// opcode: div ; op1:x28; op2:x24; dest:x6; op1val:-35184372088833;  op2val:131072
TEST_RR_OP(div, x6, x28, x24, 0x0000000000000000, -35184372088833, 131072, x2, 72, x3)

inst_28:
// rs1==x4, rs2==x25, rd==x1, rs2_val == 262144, rs1_val == -17
// opcode: div ; op1:x4; op2:x25; dest:x1; op1val:-17;  op2val:262144
TEST_RR_OP(div, x1, x4, x25, 0x0000000000000000, -17, 262144, x2, 80, x3)

inst_29:
// rs1==x22, rs2==x16, rd==x12, rs2_val == 524288, rs1_val == 1099511627776
// opcode: div ; op1:x22; op2:x16; dest:x12; op1val:1099511627776;  op2val:524288
TEST_RR_OP(div, x12, x22, x16, 0x0000000000000000, 1099511627776, 524288, x2, 88, x3)

inst_30:
// rs1==x10, rs2==x27, rd==x24, rs2_val == 1048576, 
// opcode: div ; op1:x10; op2:x27; dest:x24; op1val:6148914691236517204;  op2val:1048576
TEST_RR_OP(div, x24, x10, x27, 0x0000000000000000, 6148914691236517204, 1048576, x2, 96, x3)

inst_31:
// rs1==x31, rs2==x4, rd==x16, rs2_val == 2097152, 
// opcode: div ; op1:x31; op2:x4; dest:x16; op1val:6148914691236517204;  op2val:2097152
TEST_RR_OP(div, x16, x31, x4, 0x0000000000000000, 6148914691236517204, 2097152, x2, 104, x3)

inst_32:
// rs2_val == 8388608, rs1_val == 8192
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:8192;  op2val:8388608
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 8192, 8388608, x2, 112, x3)

inst_33:
// rs2_val == 16777216, rs1_val == -4611686018427387905
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-4611686018427387905;  op2val:16777216
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -4611686018427387905, 16777216, x2, 120, x3)

inst_34:
// rs2_val == 33554432, rs1_val == -274877906945
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-274877906945;  op2val:33554432
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -274877906945, 33554432, x2, 128, x3)

inst_35:
// rs2_val == 67108864, rs1_val == -129
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-129;  op2val:67108864
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -129, 67108864, x2, 136, x3)

inst_36:
// rs2_val == 134217728, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:8192;  op2val:134217728
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 8192, 134217728, x2, 144, x3)

inst_37:
// rs2_val == 268435456, rs1_val == 274877906944
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:274877906944;  op2val:268435456
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 274877906944, 268435456, x2, 152, x3)

inst_38:
// rs2_val == 536870912, rs1_val == -562949953421313
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-562949953421313;  op2val:536870912
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -562949953421313, 536870912, x2, 160, x3)

inst_39:
// rs2_val == 1073741824, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:512;  op2val:1073741824
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 512, 1073741824, x2, 168, x3)

inst_40:
// rs2_val == 2147483648, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:2147483648
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 2147483648, x2, 176, x3)

inst_41:
// rs2_val == 4294967296, rs1_val == -36028797018963969
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-36028797018963969;  op2val:4294967296
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -36028797018963969, 4294967296, x2, 184, x3)

inst_42:
// rs2_val == 8589934592, rs1_val == 65536
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:8589934592
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 65536, 8589934592, x2, 192, x3)

inst_43:
// rs2_val == 17179869184, rs1_val == 1048576
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:1048576;  op2val:17179869184
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 1048576, 17179869184, x2, 200, x3)

inst_44:
// rs2_val == 34359738368, rs1_val == 1024
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:1024;  op2val:34359738368
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 1024, 34359738368, x2, 208, x3)

inst_45:
// rs2_val == 68719476736, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:68719476736
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 68719476736, x2, 216, x3)

inst_46:
// rs2_val == 137438953472, rs1_val == -33554433
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-33554433;  op2val:137438953472
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -33554433, 137438953472, x2, 224, x3)

inst_47:
// rs2_val == 274877906944, rs1_val == -2147483649
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-2147483649;  op2val:274877906944
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -2147483649, 274877906944, x2, 232, x3)

inst_48:
// rs2_val == 549755813888, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-4611686018427387905;  op2val:549755813888
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -4611686018427387905, 549755813888, x2, 240, x3)

inst_49:
// rs2_val == 1099511627776, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:1048576;  op2val:1099511627776
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 1048576, 1099511627776, x2, 248, x3)

inst_50:
// rs2_val == 2199023255552, rs1_val == 144115188075855872
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:144115188075855872;  op2val:2199023255552
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 144115188075855872, 2199023255552, x2, 256, x3)

inst_51:
// rs2_val == 4398046511104, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:4398046511104
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 65536, 4398046511104, x2, 264, x3)

inst_52:
// rs2_val == 8796093022208, rs1_val == -65537
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-65537;  op2val:8796093022208
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -65537, 8796093022208, x2, 272, x3)

inst_53:
// rs2_val == 17592186044416, rs1_val == 2305843009213693952
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2305843009213693952;  op2val:17592186044416
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2305843009213693952, 17592186044416, x2, 280, x3)

inst_54:
// rs2_val == 35184372088832, rs1_val == 4
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:35184372088832
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 35184372088832, x2, 288, x3)

inst_55:
// rs2_val == 70368744177664, rs1_val == 33554432
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:33554432;  op2val:70368744177664
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 33554432, 70368744177664, x2, 296, x3)

inst_56:
// rs2_val == 140737488355328, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:140737488355328
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 140737488355328, x2, 304, x3)

inst_57:
// rs2_val == 281474976710656, rs1_val == 8
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:8;  op2val:281474976710656
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 8, 281474976710656, x2, 312, x3)

inst_58:
// rs2_val == 1125899906842624, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:1125899906842624
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 1125899906842624, x2, 320, x3)

inst_59:
// rs2_val == 2251799813685248, rs1_val == -67108865
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-67108865;  op2val:2251799813685248
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -67108865, 2251799813685248, x2, 328, x3)

inst_60:
// rs2_val == 4503599627370496, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:4503599627370496
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 4503599627370496, x2, 336, x3)

inst_61:
// rs2_val == 9007199254740992, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:9007199254740992
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 9007199254740992, x2, 344, x3)

inst_62:
// rs2_val == 18014398509481984, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-10;  op2val:18014398509481984
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -10, 18014398509481984, x2, 352, x3)

inst_63:
// rs2_val == 36028797018963968, rs1_val == -16777217
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-16777217;  op2val:36028797018963968
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -16777217, 36028797018963968, x2, 360, x3)

inst_64:
// rs2_val == 72057594037927936, rs1_val == 2
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:72057594037927936
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 72057594037927936, x2, 368, x3)

inst_65:
// rs2_val == 144115188075855872, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:144115188075855872
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 144115188075855872, x2, 376, x3)

inst_66:
// rs2_val == 288230376151711744, rs1_val == -9
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-9;  op2val:288230376151711744
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -9, 288230376151711744, x2, 384, x3)

inst_67:
// rs2_val == 576460752303423488, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-72057594037927937;  op2val:576460752303423488
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -72057594037927937, 576460752303423488, x2, 392, x3)

inst_68:
// rs2_val == 1152921504606846976, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:1152921504606846976
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 1152921504606846976, x2, 400, x3)

inst_69:
// rs2_val == 2305843009213693952, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:2305843009213693952
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 2305843009213693952, x2, 408, x3)

inst_70:
// rs2_val == 4611686018427387904, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-35184372088833;  op2val:4611686018427387904
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -35184372088833, 4611686018427387904, x2, 416, x3)

inst_71:
// rs2_val == -2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:268435456;  op2val:-2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 268435456, -2, x2, 424, x3)

inst_72:
// rs2_val == -3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:1099511627776;  op2val:-3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 1099511627776, -3, x2, 432, x3)

inst_73:
// rs2_val == -5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:1024;  op2val:-5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 1024, -5, x2, 440, x3)

inst_74:
// rs2_val == -9, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2147483648;  op2val:-9
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2147483648, -9, x2, 448, x3)

inst_75:
// rs2_val == -17, rs1_val == 4096
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4096;  op2val:-17
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4096, -17, x2, 456, x3)

inst_76:
// rs2_val == -65, rs1_val == 256
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:256;  op2val:-65
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 256, -65, x2, 464, x3)

inst_77:
// rs2_val == -129, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:-129
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, -129, x2, 472, x3)

inst_78:
// rs2_val == -257, rs1_val == 32
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:32;  op2val:-257
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 32, -257, x2, 480, x3)

inst_79:
// rs2_val == -513, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:-513
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, -513, x2, 488, x3)

inst_80:
// rs2_val == -1025, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-2147483649;  op2val:-1025
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -2147483649, -1025, x2, 496, x3)

inst_81:
// rs2_val == -2049, rs1_val == 2251799813685248
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2251799813685248;  op2val:-2049
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2251799813685248, -2049, x2, 504, x3)

inst_82:
// rs2_val == -4097, rs1_val == 134217728
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:134217728;  op2val:-4097
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 134217728, -4097, x2, 512, x3)

inst_83:
// rs2_val == -8193, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-562949953421313;  op2val:-8193
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -562949953421313, -8193, x2, 520, x3)

inst_84:
// rs2_val == -16385, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-1025;  op2val:-16385
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -1025, -16385, x2, 528, x3)

inst_85:
// rs2_val == -32769, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:1048576;  op2val:-32769
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 1048576, -32769, x2, 536, x3)

inst_86:
// rs2_val == -65537, rs1_val == -281474976710657
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-281474976710657;  op2val:-65537
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -281474976710657, -65537, x2, 544, x3)

inst_87:
// rs2_val == -131073, rs1_val == -5
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-5;  op2val:-131073
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -5, -131073, x2, 552, x3)

inst_88:
// rs2_val == -262145, rs1_val == -131073
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-131073;  op2val:-262145
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -131073, -262145, x2, 560, x3)

inst_89:
// rs2_val == -524289, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:8796093022208;  op2val:-524289
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 8796093022208, -524289, x2, 568, x3)

inst_90:
// rs2_val == -4194305, rs1_val == 64
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:64;  op2val:-4194305
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 64, -4194305, x2, 576, x3)

inst_91:
// rs2_val == -8388609, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:-8388609
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, -8388609, x2, 584, x3)

inst_92:
// rs2_val == -16777217, rs1_val == 549755813888
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:549755813888;  op2val:-16777217
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 549755813888, -16777217, x2, 592, x3)

inst_93:
// rs2_val == -33554433, rs1_val == -6148914691236517206
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:-33554433
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, -33554433, x2, 600, x3)

inst_94:
// rs2_val == -67108865, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:536870912;  op2val:-67108865
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 536870912, -67108865, x2, 608, x3)

inst_95:
// rs2_val == -134217729, rs1_val == 4611686018427387904
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4611686018427387904;  op2val:-134217729
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4611686018427387904, -134217729, x2, 616, x3)

inst_96:
// rs2_val == -268435457, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:1024;  op2val:-268435457
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 1024, -268435457, x2, 624, x3)

inst_97:
// rs2_val == -536870913, rs1_val == -33
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-33;  op2val:-536870913
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -33, -536870913, x2, 632, x3)

inst_98:
// rs2_val == -1073741825, rs1_val == -32769
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-32769;  op2val:-1073741825
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -32769, -1073741825, x2, 640, x3)

inst_99:
// rs2_val == -2147483649, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-65537;  op2val:-2147483649
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -65537, -2147483649, x2, 648, x3)

inst_100:
// rs2_val == -4294967297, rs1_val == -137438953473
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-137438953473;  op2val:-4294967297
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -137438953473, -4294967297, x2, 656, x3)

inst_101:
// rs2_val == -8589934593, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:64;  op2val:-8589934593
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 64, -8589934593, x2, 664, x3)

inst_102:
// rs2_val == -17179869185, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:134217728;  op2val:-17179869185
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 134217728, -17179869185, x2, 672, x3)

inst_103:
// rs2_val == -34359738369, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:-34359738369
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, -34359738369, x2, 680, x3)

inst_104:
// rs2_val == -68719476737, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:274877906944;  op2val:-68719476737
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 274877906944, -68719476737, x2, 688, x3)

inst_105:
// rs2_val == -137438953473, rs1_val == -4097
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-4097;  op2val:-137438953473
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -4097, -137438953473, x2, 696, x3)

inst_106:
// rs2_val == -274877906945, rs1_val == -2251799813685249
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-2251799813685249;  op2val:-274877906945
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -2251799813685249, -274877906945, x2, 704, x3)

inst_107:
// rs2_val == -549755813889, rs1_val == -140737488355329
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-140737488355329;  op2val:-549755813889
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -140737488355329, -549755813889, x2, 712, x3)

inst_108:
// rs2_val == -1099511627777, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:-1099511627777
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, -1099511627777, x2, 720, x3)

inst_109:
// rs2_val == -2199023255553, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-2147483649;  op2val:-2199023255553
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -2147483649, -2199023255553, x2, 728, x3)

inst_110:
// rs2_val == -4398046511105, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-7;  op2val:-4398046511105
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -7, -4398046511105, x2, 736, x3)

inst_111:
// rs2_val == -8796093022209, rs1_val == -4503599627370497
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-4503599627370497;  op2val:-8796093022209
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -4503599627370497, -8796093022209, x2, 744, x3)

inst_112:
// rs2_val == -17592186044417, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-4;  op2val:-17592186044417
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -4, -17592186044417, x2, 752, x3)

inst_113:
// rs2_val == -35184372088833, rs1_val == -68719476737
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-68719476737;  op2val:-35184372088833
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -68719476737, -35184372088833, x2, 760, x3)

inst_114:
// rs2_val == -70368744177665, rs1_val == 524288
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:524288;  op2val:-70368744177665
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 524288, -70368744177665, x2, 768, x3)

inst_115:
// rs2_val == -140737488355329, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-36028797018963969;  op2val:-140737488355329
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -36028797018963969, -140737488355329, x2, 776, x3)

inst_116:
// rs2_val == -281474976710657, rs1_val == -524289
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-524289;  op2val:-281474976710657
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -524289, -281474976710657, x2, 784, x3)

inst_117:
// rs2_val == -562949953421313, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-35184372088833;  op2val:-562949953421313
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -35184372088833, -562949953421313, x2, 792, x3)

inst_118:
// rs2_val == -1125899906842625, rs1_val == 4294967296
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4294967296;  op2val:-1125899906842625
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4294967296, -1125899906842625, x2, 800, x3)

inst_119:
// rs2_val == -2251799813685249, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:288230376151711744;  op2val:-2251799813685249
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 288230376151711744, -2251799813685249, x2, 808, x3)

inst_120:
// rs2_val == -4503599627370497, rs1_val == -70368744177665
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-70368744177665;  op2val:-4503599627370497
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -70368744177665, -4503599627370497, x2, 816, x3)

inst_121:
// rs2_val == -9007199254740993, rs1_val == -134217729
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-134217729;  op2val:-9007199254740993
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -134217729, -9007199254740993, x2, 824, x3)

inst_122:
// rs2_val == -18014398509481985, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:-18014398509481985
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, -18014398509481985, x2, 832, x3)

inst_123:
// rs2_val == -36028797018963969, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-1025;  op2val:-36028797018963969
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -1025, -36028797018963969, x2, 840, x3)

inst_124:
// rs2_val == -72057594037927937, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:65536;  op2val:-72057594037927937
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 65536, -72057594037927937, x2, 848, x3)

inst_125:
// rs2_val == -144115188075855873, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:8;  op2val:-144115188075855873
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 8, -144115188075855873, x2, 856, x3)

inst_126:
// rs2_val == -288230376151711745, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-9223372036854775808;  op2val:-288230376151711745
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -9223372036854775808, -288230376151711745, x2, 864, x3)

inst_127:
// rs2_val == -576460752303423489, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:-576460752303423489
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, -576460752303423489, x2, 872, x3)

inst_128:
// rs2_val == -1152921504606846977, rs1_val == 72057594037927936
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:72057594037927936;  op2val:-1152921504606846977
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 72057594037927936, -1152921504606846977, x2, 880, x3)

inst_129:
// rs2_val == -2305843009213693953, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-35184372088833;  op2val:-2305843009213693953
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -35184372088833, -2305843009213693953, x2, 888, x3)

inst_130:
// rs2_val == -4611686018427387905, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:-4611686018427387905
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, -4611686018427387905, x2, 896, x3)

inst_131:
// rs2_val == 6148914691236517205, rs1_val == 1073741824
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:1073741824;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 1073741824, 6148914691236517205, x2, 904, x3)

inst_132:
// rs2_val == -6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-33;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -33, -6148914691236517206, x2, 912, x3)

inst_133:
// rs1_val == 16, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:16;  op2val:-4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 16, -4, x2, 920, x3)

inst_134:
// rs1_val == 128, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:128;  op2val:-67108865
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 128, -67108865, x2, 928, x3)

inst_135:
// rs1_val == 16384, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:16384;  op2val:2147483648
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 16384, 2147483648, x2, 936, x3)

inst_136:
// rs1_val == 32768, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:32768;  op2val:-2251799813685249
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 32768, -2251799813685249, x2, 944, x3)

inst_137:
// rs1_val == 131072, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:131072;  op2val:-1025
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 131072, -1025, x2, 952, x3)

inst_138:
// rs1_val == 262144, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:262144;  op2val:4294967296
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 262144, 4294967296, x2, 960, x3)

inst_139:
// rs1_val == 2097152, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2097152;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2097152, 3689348814741910323, x2, 968, x3)

inst_140:
// rs1_val == 8388608, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:8388608;  op2val:-549755813889
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 8388608, -549755813889, x2, 976, x3)

inst_141:
// rs1_val == 16777216, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:16777216;  op2val:-2251799813685249
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 16777216, -2251799813685249, x2, 984, x3)

inst_142:
// rs1_val == 8589934592, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:8589934592;  op2val:1048576
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 8589934592, 1048576, x2, 992, x3)

inst_143:
// rs1_val == 17179869184, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:17179869184;  op2val:-513
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 17179869184, -513, x2, 1000, x3)

inst_144:
// rs1_val == 34359738368, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:34359738368;  op2val:-1048577
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 34359738368, -1048577, x2, 1008, x3)

inst_145:
// rs1_val == 68719476736, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:68719476736;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 68719476736, -3037000499, x2, 1016, x3)

inst_146:
// rs1_val == 2199023255552, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2199023255552;  op2val:-4294967297
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2199023255552, -4294967297, x2, 1024, x3)

inst_147:
// rs1_val == 4398046511104, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4398046511104;  op2val:-65537
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4398046511104, -65537, x2, 1032, x3)

inst_148:
// rs1_val == 17592186044416, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:17592186044416;  op2val:137438953472
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 17592186044416, 137438953472, x2, 1040, x3)

inst_149:
// rs1_val == 35184372088832, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:35184372088832;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 35184372088832, -3037000498, x2, 1048, x3)

inst_150:
// rs1_val == 140737488355328, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:140737488355328;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 140737488355328, 4, x2, 1056, x3)

inst_151:
// rs1_val == 281474976710656, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:281474976710656;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 281474976710656, 3, x2, 1064, x3)

inst_152:
// rs1_val == 562949953421312, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:562949953421312;  op2val:-32769
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 562949953421312, -32769, x2, 1072, x3)

inst_153:
// rs1_val == 1125899906842624, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:1125899906842624;  op2val:68719476736
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 1125899906842624, 68719476736, x2, 1080, x3)

inst_154:
// rs1_val == 4503599627370496, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4503599627370496;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4503599627370496, 0, x2, 1088, x3)

inst_155:
// rs1_val == 9007199254740992, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:9007199254740992;  op2val:576460752303423488
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 9007199254740992, 576460752303423488, x2, 1096, x3)

inst_156:
// rs1_val == 18014398509481984, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:18014398509481984;  op2val:524288
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 18014398509481984, 524288, x2, 1104, x3)

inst_157:
// rs1_val == 36028797018963968, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:36028797018963968;  op2val:34359738368
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 36028797018963968, 34359738368, x2, 1112, x3)

inst_158:
// rs1_val == 1152921504606846976, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:1152921504606846976;  op2val:-9223372036854775808
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 1152921504606846976, -9223372036854775808, x2, 1120, x3)

inst_159:
// rs1_val == -2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-2;  op2val:-1025
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -2, -1025, x2, 1128, x3)

inst_160:
// rs1_val == -3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3;  op2val:-65
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3, -65, x2, 1136, x3)

inst_161:
// rs1_val == -65, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-65;  op2val:-16385
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -65, -16385, x2, 1144, x3)

inst_162:
// rs1_val == -257, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-257;  op2val:33554432
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -257, 33554432, x2, 1152, x3)

inst_163:
// rs1_val == -513, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-513;  op2val:8192
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -513, 8192, x2, 1160, x3)

inst_164:
// rs1_val == -2049, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-2049;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -2049, 6, x2, 1168, x3)

inst_165:
// rs1_val == -8193, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-8193;  op2val:2251799813685248
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -8193, 2251799813685248, x2, 1176, x3)

inst_166:
// rs1_val == -16385, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-16385;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -16385, 7378697629483820647, x2, 1184, x3)

inst_167:
// rs1_val == -262145, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-262145;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -262145, 3037000499, x2, 1192, x3)

inst_168:
// rs1_val == -1048577, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-1048577;  op2val:2147483648
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -1048577, 2147483648, x2, 1200, x3)

inst_169:
// rs1_val == -4194305, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-4194305;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -4194305, 7378697629483820647, x2, 1208, x3)

inst_170:
// rs1_val == -268435457, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-268435457;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -268435457, -6148914691236517206, x2, 1216, x3)

inst_171:
// rs1_val == -536870913, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-536870913;  op2val:68719476736
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -536870913, 68719476736, x2, 1224, x3)

inst_172:
// rs1_val == -1073741825, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-1073741825;  op2val:-4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -1073741825, -4, x2, 1232, x3)

inst_173:
// rs1_val == -4294967297, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-4294967297;  op2val:-68719476737
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -4294967297, -68719476737, x2, 1240, x3)

inst_174:
// rs1_val == -8589934593, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-8589934593;  op2val:-72057594037927937
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -8589934593, -72057594037927937, x2, 1248, x3)

inst_175:
// rs1_val == -17179869185, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-17179869185;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -17179869185, 7378697629483820647, x2, 1256, x3)

inst_176:
// rs1_val == -34359738369, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-34359738369;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -34359738369, 5, x2, 1264, x3)

inst_177:
// rs1_val == -549755813889, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-549755813889;  op2val:-68719476737
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -549755813889, -68719476737, x2, 1272, x3)

inst_178:
// rs1_val == -1099511627777, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-1099511627777;  op2val:-18014398509481985
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -1099511627777, -18014398509481985, x2, 1280, x3)

inst_179:
// rs1_val == -2199023255553, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-2199023255553;  op2val:32768
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -2199023255553, 32768, x2, 1288, x3)

inst_180:
// rs1_val == -4398046511105, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-4398046511105;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -4398046511105, 3689348814741910323, x2, 1296, x3)

inst_181:
// rs1_val == -17592186044417, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-17592186044417;  op2val:-4611686018427387904
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -17592186044417, -4611686018427387904, x2, 1304, x3)

inst_182:
// rs1_val == -1125899906842625, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-1125899906842625;  op2val:1073741824
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -1125899906842625, 1073741824, x2, 1312, x3)

inst_183:
// rs1_val == -18014398509481985, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-18014398509481985;  op2val:8
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -18014398509481985, 8, x2, 1320, x3)

inst_184:
// rs1_val == -144115188075855873, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-144115188075855873;  op2val:-1152921504606846977
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -144115188075855873, -1152921504606846977, x2, 1328, x3)

inst_185:
// rs1_val == -288230376151711745, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-288230376151711745;  op2val:-4194305
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -288230376151711745, -4194305, x2, 1336, x3)

inst_186:
// rs1_val == -576460752303423489, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-576460752303423489;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -576460752303423489, 3037000498, x2, 1344, x3)

inst_187:
// rs1_val == -1152921504606846977, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-1152921504606846977;  op2val:32768
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -1152921504606846977, 32768, x2, 1352, x3)

inst_188:
// rs1_val == -2305843009213693953, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-2305843009213693953;  op2val:-4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -2305843009213693953, -4, x2, 1360, x3)

inst_189:
// rs1_val==3 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 3, x2, 1368, x3)

inst_190:
// rs1_val==3 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 6148914691236517205, x2, 1376, x3)

inst_191:
// rs1_val==3 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, -6148914691236517206, x2, 1384, x3)

inst_192:
// rs1_val==3 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 5, x2, 1392, x3)

inst_193:
// rs1_val==3 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 3689348814741910323, x2, 1400, x3)

inst_194:
// rs1_val==3 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 7378697629483820646, x2, 1408, x3)

inst_195:
// rs1_val==3 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, -3037000499, x2, 1416, x3)

inst_196:
// rs1_val==3 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 3037000499, x2, 1424, x3)

inst_197:
// rs1_val==3 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 2, x2, 1432, x3)

inst_198:
// rs1_val==3 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 6148914691236517204, x2, 1440, x3)

inst_199:
// rs1_val==3 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 0, x2, 1448, x3)

inst_200:
// rs1_val==3 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 4, x2, 1456, x3)

inst_201:
// rs1_val==3 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 3689348814741910322, x2, 1464, x3)

inst_202:
// rs1_val==3 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 7378697629483820645, x2, 1472, x3)

inst_203:
// rs1_val==3 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 3037000498, x2, 1480, x3)

inst_204:
// rs1_val==3 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 6148914691236517206, x2, 1488, x3)

inst_205:
// rs1_val==3 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, -6148914691236517205, x2, 1496, x3)

inst_206:
// rs1_val==3 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 6, x2, 1504, x3)

inst_207:
// rs1_val==3 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 3689348814741910324, x2, 1512, x3)

inst_208:
// rs1_val==3 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 7378697629483820647, x2, 1520, x3)

inst_209:
// rs1_val==3 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, -3037000498, x2, 1528, x3)

inst_210:
// rs1_val==3 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3, 3037000500, x2, 1536, x3)

inst_211:
// rs1_val==6148914691236517205 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 3, x2, 1544, x3)

inst_212:
// rs1_val==6148914691236517205 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 6148914691236517205, x2, 1552, x3)

inst_213:
// rs1_val==6148914691236517205 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, -6148914691236517206, x2, 1560, x3)

inst_214:
// rs1_val==6148914691236517205 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 5, x2, 1568, x3)

inst_215:
// rs1_val==6148914691236517205 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 3689348814741910323, x2, 1576, x3)

inst_216:
// rs1_val==6148914691236517205 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 7378697629483820646, x2, 1584, x3)

inst_217:
// rs1_val==6148914691236517205 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, -3037000499, x2, 1592, x3)

inst_218:
// rs1_val==6148914691236517205 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 3037000499, x2, 1600, x3)

inst_219:
// rs1_val==6148914691236517205 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 2, x2, 1608, x3)

inst_220:
// rs1_val==6148914691236517205 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 6148914691236517204, x2, 1616, x3)

inst_221:
// rs1_val==6148914691236517205 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 0, x2, 1624, x3)

inst_222:
// rs1_val==6148914691236517205 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 4, x2, 1632, x3)

inst_223:
// rs1_val==6148914691236517205 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 3689348814741910322, x2, 1640, x3)

inst_224:
// rs1_val==6148914691236517205 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 7378697629483820645, x2, 1648, x3)

inst_225:
// rs1_val==6148914691236517205 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 3037000498, x2, 1656, x3)

inst_226:
// rs1_val==6148914691236517205 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 6148914691236517206, x2, 1664, x3)

inst_227:
// rs1_val==6148914691236517205 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, -6148914691236517205, x2, 1672, x3)

inst_228:
// rs1_val==6148914691236517205 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 6, x2, 1680, x3)

inst_229:
// rs1_val==6148914691236517205 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 3689348814741910324, x2, 1688, x3)

inst_230:
// rs1_val==6148914691236517205 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 7378697629483820647, x2, 1696, x3)

inst_231:
// rs1_val==6148914691236517205 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, -3037000498, x2, 1704, x3)

inst_232:
// rs1_val==6148914691236517205 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517205;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517205, 3037000500, x2, 1712, x3)

inst_233:
// rs1_val==-6148914691236517206 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 3, x2, 1720, x3)

inst_234:
// rs1_val==-6148914691236517206 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 6148914691236517205, x2, 1728, x3)

inst_235:
// rs1_val==-6148914691236517206 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, -6148914691236517206, x2, 1736, x3)

inst_236:
// rs1_val==-6148914691236517206 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 5, x2, 1744, x3)

inst_237:
// rs1_val==-6148914691236517206 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 3689348814741910323, x2, 1752, x3)

inst_238:
// rs1_val==-6148914691236517206 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 7378697629483820646, x2, 1760, x3)

inst_239:
// rs1_val==-6148914691236517206 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, -3037000499, x2, 1768, x3)

inst_240:
// rs1_val==-6148914691236517206 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 3037000499, x2, 1776, x3)

inst_241:
// rs1_val==-6148914691236517206 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 2, x2, 1784, x3)

inst_242:
// rs1_val==-6148914691236517206 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 6148914691236517204, x2, 1792, x3)

inst_243:
// rs1_val==-6148914691236517206 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 0, x2, 1800, x3)

inst_244:
// rs1_val==-6148914691236517206 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 4, x2, 1808, x3)

inst_245:
// rs1_val==-6148914691236517206 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 3689348814741910322, x2, 1816, x3)

inst_246:
// rs1_val==-6148914691236517206 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 7378697629483820645, x2, 1824, x3)

inst_247:
// rs1_val==-6148914691236517206 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 3037000498, x2, 1832, x3)

inst_248:
// rs1_val==-6148914691236517206 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 6148914691236517206, x2, 1840, x3)

inst_249:
// rs1_val==-6148914691236517206 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, -6148914691236517205, x2, 1848, x3)

inst_250:
// rs1_val==-6148914691236517206 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 6, x2, 1856, x3)

inst_251:
// rs1_val==-6148914691236517206 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 3689348814741910324, x2, 1864, x3)

inst_252:
// rs1_val==-6148914691236517206 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 7378697629483820647, x2, 1872, x3)

inst_253:
// rs1_val==-6148914691236517206 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, -3037000498, x2, 1880, x3)

inst_254:
// rs1_val==-6148914691236517206 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517206;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517206, 3037000500, x2, 1888, x3)

inst_255:
// rs1_val==5 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 3, x2, 1896, x3)

inst_256:
// rs1_val==5 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 6148914691236517205, x2, 1904, x3)

inst_257:
// rs1_val==5 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, -6148914691236517206, x2, 1912, x3)

inst_258:
// rs1_val==5 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 5, x2, 1920, x3)

inst_259:
// rs1_val==5 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 3689348814741910323, x2, 1928, x3)

inst_260:
// rs1_val==5 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 7378697629483820646, x2, 1936, x3)

inst_261:
// rs1_val==5 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, -3037000499, x2, 1944, x3)

inst_262:
// rs1_val==5 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 3037000499, x2, 1952, x3)

inst_263:
// rs1_val==5 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 2, x2, 1960, x3)

inst_264:
// rs1_val==5 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 6148914691236517204, x2, 1968, x3)

inst_265:
// rs1_val==5 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 0, x2, 1976, x3)

inst_266:
// rs1_val==5 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 4, x2, 1984, x3)

inst_267:
// rs1_val==5 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 3689348814741910322, x2, 1992, x3)

inst_268:
// rs1_val==5 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 7378697629483820645, x2, 2000, x3)

inst_269:
// rs1_val==5 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 3037000498, x2, 2008, x3)

inst_270:
// rs1_val==5 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 6148914691236517206, x2, 2016, x3)

inst_271:
// rs1_val==5 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, -6148914691236517205, x2, 2024, x3)

inst_272:
// rs1_val==5 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 6, x2, 2032, x3)

inst_273:
// rs1_val==5 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 3689348814741910324, x2, 2040, x3)
RVTEST_SIGBASE( x2,signature_x2_1)

inst_274:
// rs1_val==5 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 7378697629483820647, x2, 0, x3)

inst_275:
// rs1_val==5 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, -3037000498, x2, 8, x3)

inst_276:
// rs1_val==5 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:5;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 5, 3037000500, x2, 16, x3)

inst_277:
// rs1_val==3689348814741910323 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 3, x2, 24, x3)

inst_278:
// rs1_val==3689348814741910323 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 6148914691236517205, x2, 32, x3)

inst_279:
// rs1_val==3689348814741910323 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, -6148914691236517206, x2, 40, x3)

inst_280:
// rs1_val==3689348814741910323 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 5, x2, 48, x3)

inst_281:
// rs1_val==3689348814741910323 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 3689348814741910323, x2, 56, x3)

inst_282:
// rs1_val==3689348814741910323 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 7378697629483820646, x2, 64, x3)

inst_283:
// rs1_val==3689348814741910323 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, -3037000499, x2, 72, x3)

inst_284:
// rs1_val==3689348814741910323 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 3037000499, x2, 80, x3)

inst_285:
// rs1_val==3689348814741910323 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 2, x2, 88, x3)

inst_286:
// rs1_val==3689348814741910323 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 6148914691236517204, x2, 96, x3)

inst_287:
// rs1_val==3689348814741910323 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 0, x2, 104, x3)

inst_288:
// rs1_val==3689348814741910323 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 4, x2, 112, x3)

inst_289:
// rs1_val==3689348814741910323 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 3689348814741910322, x2, 120, x3)

inst_290:
// rs1_val==3689348814741910323 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 7378697629483820645, x2, 128, x3)

inst_291:
// rs1_val==3689348814741910323 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 3037000498, x2, 136, x3)

inst_292:
// rs1_val==3689348814741910323 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 6148914691236517206, x2, 144, x3)

inst_293:
// rs1_val==3689348814741910323 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, -6148914691236517205, x2, 152, x3)

inst_294:
// rs1_val==3689348814741910323 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 6, x2, 160, x3)

inst_295:
// rs1_val==3689348814741910323 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 3689348814741910324, x2, 168, x3)

inst_296:
// rs1_val==3689348814741910323 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 7378697629483820647, x2, 176, x3)

inst_297:
// rs1_val==3689348814741910323 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, -3037000498, x2, 184, x3)

inst_298:
// rs1_val==3689348814741910323 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910323;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910323, 3037000500, x2, 192, x3)

inst_299:
// rs1_val==7378697629483820646 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 3, x2, 200, x3)

inst_300:
// rs1_val==7378697629483820646 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 6148914691236517205, x2, 208, x3)

inst_301:
// rs1_val==7378697629483820646 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, -6148914691236517206, x2, 216, x3)

inst_302:
// rs1_val==7378697629483820646 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 5, x2, 224, x3)

inst_303:
// rs1_val==7378697629483820646 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 3689348814741910323, x2, 232, x3)

inst_304:
// rs1_val==7378697629483820646 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 7378697629483820646, x2, 240, x3)

inst_305:
// rs1_val==7378697629483820646 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, -3037000499, x2, 248, x3)

inst_306:
// rs1_val==7378697629483820646 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 3037000499, x2, 256, x3)

inst_307:
// rs1_val==7378697629483820646 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 2, x2, 264, x3)

inst_308:
// rs1_val==7378697629483820646 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 6148914691236517204, x2, 272, x3)

inst_309:
// rs1_val==7378697629483820646 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 0, x2, 280, x3)

inst_310:
// rs1_val==7378697629483820646 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 4, x2, 288, x3)

inst_311:
// rs1_val==7378697629483820646 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 3689348814741910322, x2, 296, x3)

inst_312:
// rs1_val==7378697629483820646 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 7378697629483820645, x2, 304, x3)

inst_313:
// rs1_val==7378697629483820646 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 3037000498, x2, 312, x3)

inst_314:
// rs1_val==7378697629483820646 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 6148914691236517206, x2, 320, x3)

inst_315:
// rs1_val==7378697629483820646 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, -6148914691236517205, x2, 328, x3)

inst_316:
// rs1_val==7378697629483820646 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 6, x2, 336, x3)

inst_317:
// rs1_val==7378697629483820646 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 3689348814741910324, x2, 344, x3)

inst_318:
// rs1_val==7378697629483820646 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 7378697629483820647, x2, 352, x3)

inst_319:
// rs1_val==7378697629483820646 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, -3037000498, x2, 360, x3)

inst_320:
// rs1_val==7378697629483820646 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820646;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820646, 3037000500, x2, 368, x3)

inst_321:
// rs1_val==-3037000499 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 3, x2, 376, x3)

inst_322:
// rs1_val==-3037000499 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 6148914691236517205, x2, 384, x3)

inst_323:
// rs1_val==-3037000499 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, -6148914691236517206, x2, 392, x3)

inst_324:
// rs1_val==-3037000499 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 5, x2, 400, x3)

inst_325:
// rs1_val==-3037000499 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 3689348814741910323, x2, 408, x3)

inst_326:
// rs1_val==-3037000499 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 7378697629483820646, x2, 416, x3)

inst_327:
// rs1_val==-3037000499 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, -3037000499, x2, 424, x3)

inst_328:
// rs1_val==-3037000499 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 3037000499, x2, 432, x3)

inst_329:
// rs1_val==-3037000499 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 2, x2, 440, x3)

inst_330:
// rs1_val==-3037000499 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 6148914691236517204, x2, 448, x3)

inst_331:
// rs1_val==-3037000499 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 0, x2, 456, x3)

inst_332:
// rs1_val==-3037000499 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 4, x2, 464, x3)

inst_333:
// rs1_val==-3037000499 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 3689348814741910322, x2, 472, x3)

inst_334:
// rs1_val==-3037000499 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 7378697629483820645, x2, 480, x3)

inst_335:
// rs1_val==-3037000499 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 3037000498, x2, 488, x3)

inst_336:
// rs1_val==-3037000499 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 6148914691236517206, x2, 496, x3)

inst_337:
// rs1_val==-3037000499 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, -6148914691236517205, x2, 504, x3)

inst_338:
// rs1_val==-3037000499 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 6, x2, 512, x3)

inst_339:
// rs1_val==-3037000499 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 3689348814741910324, x2, 520, x3)

inst_340:
// rs1_val==-3037000499 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 7378697629483820647, x2, 528, x3)

inst_341:
// rs1_val==-3037000499 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, -3037000498, x2, 536, x3)

inst_342:
// rs1_val==-3037000499 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000499;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000499, 3037000500, x2, 544, x3)

inst_343:
// rs1_val==3037000499 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 3, x2, 552, x3)

inst_344:
// rs1_val==3037000499 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 6148914691236517205, x2, 560, x3)

inst_345:
// rs1_val==3037000499 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, -6148914691236517206, x2, 568, x3)

inst_346:
// rs1_val==3037000499 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 5, x2, 576, x3)

inst_347:
// rs1_val==3037000499 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 3689348814741910323, x2, 584, x3)

inst_348:
// rs1_val==3037000499 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 7378697629483820646, x2, 592, x3)

inst_349:
// rs1_val==3037000499 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, -3037000499, x2, 600, x3)

inst_350:
// rs1_val==3037000499 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 3037000499, x2, 608, x3)

inst_351:
// rs1_val==3037000499 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 2, x2, 616, x3)

inst_352:
// rs1_val==3037000499 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 6148914691236517204, x2, 624, x3)

inst_353:
// rs1_val==3037000499 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 0, x2, 632, x3)

inst_354:
// rs1_val==3037000499 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 4, x2, 640, x3)

inst_355:
// rs1_val==3037000499 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 3689348814741910322, x2, 648, x3)

inst_356:
// rs1_val==3037000499 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 7378697629483820645, x2, 656, x3)

inst_357:
// rs1_val==3037000499 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 3037000498, x2, 664, x3)

inst_358:
// rs1_val==3037000499 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 6148914691236517206, x2, 672, x3)

inst_359:
// rs1_val==3037000499 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, -6148914691236517205, x2, 680, x3)

inst_360:
// rs1_val==3037000499 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 6, x2, 688, x3)

inst_361:
// rs1_val==3037000499 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 3689348814741910324, x2, 696, x3)

inst_362:
// rs1_val==3037000499 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 7378697629483820647, x2, 704, x3)

inst_363:
// rs1_val==3037000499 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, -3037000498, x2, 712, x3)

inst_364:
// rs1_val==3037000499 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000499;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000499, 3037000500, x2, 720, x3)

inst_365:
// rs1_val==2 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 3, x2, 728, x3)

inst_366:
// rs1_val==2 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 6148914691236517205, x2, 736, x3)

inst_367:
// rs1_val==2 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, -6148914691236517206, x2, 744, x3)

inst_368:
// rs1_val==2 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 5, x2, 752, x3)

inst_369:
// rs1_val==2 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 3689348814741910323, x2, 760, x3)

inst_370:
// rs1_val==2 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 7378697629483820646, x2, 768, x3)

inst_371:
// rs1_val==2 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, -3037000499, x2, 776, x3)

inst_372:
// rs1_val==2 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 3037000499, x2, 784, x3)

inst_373:
// rs1_val==2 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 2, x2, 792, x3)

inst_374:
// rs1_val==2 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 6148914691236517204, x2, 800, x3)

inst_375:
// rs1_val==2 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 0, x2, 808, x3)

inst_376:
// rs1_val==2 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 4, x2, 816, x3)

inst_377:
// rs1_val==2 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 3689348814741910322, x2, 824, x3)

inst_378:
// rs1_val==2 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 7378697629483820645, x2, 832, x3)

inst_379:
// rs1_val==2 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 3037000498, x2, 840, x3)

inst_380:
// rs1_val==2 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 6148914691236517206, x2, 848, x3)

inst_381:
// rs1_val==2 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, -6148914691236517205, x2, 856, x3)

inst_382:
// rs1_val==2 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 6, x2, 864, x3)

inst_383:
// rs1_val==2 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 3689348814741910324, x2, 872, x3)

inst_384:
// rs1_val==2 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 7378697629483820647, x2, 880, x3)

inst_385:
// rs1_val==2 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, -3037000498, x2, 888, x3)

inst_386:
// rs1_val==2 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2, 3037000500, x2, 896, x3)

inst_387:
// rs1_val==6148914691236517204 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 3, x2, 904, x3)

inst_388:
// rs1_val==6148914691236517204 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 6148914691236517205, x2, 912, x3)

inst_389:
// rs1_val==6148914691236517204 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, -6148914691236517206, x2, 920, x3)

inst_390:
// rs1_val==6148914691236517204 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 5, x2, 928, x3)

inst_391:
// rs1_val==6148914691236517204 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 3689348814741910323, x2, 936, x3)

inst_392:
// rs1_val==6148914691236517204 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 7378697629483820646, x2, 944, x3)

inst_393:
// rs1_val==6148914691236517204 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, -3037000499, x2, 952, x3)

inst_394:
// rs1_val==6148914691236517204 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 3037000499, x2, 960, x3)

inst_395:
// rs1_val==6148914691236517204 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 2, x2, 968, x3)

inst_396:
// rs1_val==6148914691236517204 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 6148914691236517204, x2, 976, x3)

inst_397:
// rs1_val==6148914691236517204 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 0, x2, 984, x3)

inst_398:
// rs1_val==6148914691236517204 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 4, x2, 992, x3)

inst_399:
// rs1_val==6148914691236517204 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 3689348814741910322, x2, 1000, x3)

inst_400:
// rs1_val==6148914691236517204 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 7378697629483820645, x2, 1008, x3)

inst_401:
// rs1_val==6148914691236517204 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 3037000498, x2, 1016, x3)

inst_402:
// rs1_val==6148914691236517204 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 6148914691236517206, x2, 1024, x3)

inst_403:
// rs1_val==6148914691236517204 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, -6148914691236517205, x2, 1032, x3)

inst_404:
// rs1_val==6148914691236517204 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 6, x2, 1040, x3)

inst_405:
// rs1_val==6148914691236517204 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 3689348814741910324, x2, 1048, x3)

inst_406:
// rs1_val==6148914691236517204 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 7378697629483820647, x2, 1056, x3)

inst_407:
// rs1_val==6148914691236517204 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, -3037000498, x2, 1064, x3)

inst_408:
// rs1_val==6148914691236517204 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517204;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517204, 3037000500, x2, 1072, x3)

inst_409:
// rs1_val==0 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 3, x2, 1080, x3)

inst_410:
// rs1_val==0 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 6148914691236517205, x2, 1088, x3)

inst_411:
// rs1_val==0 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, -6148914691236517206, x2, 1096, x3)

inst_412:
// rs1_val==0 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 5, x2, 1104, x3)

inst_413:
// rs1_val==0 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 3689348814741910323, x2, 1112, x3)

inst_414:
// rs1_val==0 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 7378697629483820646, x2, 1120, x3)

inst_415:
// rs1_val==0 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, -3037000499, x2, 1128, x3)

inst_416:
// rs1_val==0 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 3037000499, x2, 1136, x3)

inst_417:
// rs1_val==0 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 2, x2, 1144, x3)

inst_418:
// rs1_val==0 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, -3037000498, x2, 1152, x3)

inst_419:
// rs1_val==0 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 3037000500, x2, 1160, x3)

inst_420:
// rs1_val==4 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 3, x2, 1168, x3)

inst_421:
// rs1_val==4 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 6148914691236517205, x2, 1176, x3)

inst_422:
// rs1_val==4 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, -6148914691236517206, x2, 1184, x3)

inst_423:
// rs1_val==4 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 5, x2, 1192, x3)

inst_424:
// rs1_val==4 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 3689348814741910323, x2, 1200, x3)

inst_425:
// rs1_val==4 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 7378697629483820646, x2, 1208, x3)

inst_426:
// rs1_val==4 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, -3037000499, x2, 1216, x3)

inst_427:
// rs1_val==4 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 3037000499, x2, 1224, x3)

inst_428:
// rs1_val==4 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 2, x2, 1232, x3)

inst_429:
// rs1_val==4 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 6148914691236517204, x2, 1240, x3)

inst_430:
// rs1_val==4 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 0, x2, 1248, x3)

inst_431:
// rs1_val==4 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 4, x2, 1256, x3)

inst_432:
// rs1_val==4 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 3689348814741910322, x2, 1264, x3)

inst_433:
// rs1_val==4 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 7378697629483820645, x2, 1272, x3)

inst_434:
// rs1_val==4 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 3037000498, x2, 1280, x3)

inst_435:
// rs1_val==4 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 6148914691236517206, x2, 1288, x3)

inst_436:
// rs1_val==4 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, -6148914691236517205, x2, 1296, x3)

inst_437:
// rs1_val==4 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 6, x2, 1304, x3)

inst_438:
// rs1_val==4 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 3689348814741910324, x2, 1312, x3)

inst_439:
// rs1_val==4 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 7378697629483820647, x2, 1320, x3)

inst_440:
// rs1_val==4 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, -3037000498, x2, 1328, x3)

inst_441:
// rs1_val==4 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:4;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 4, 3037000500, x2, 1336, x3)

inst_442:
// rs1_val==3689348814741910322 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 3, x2, 1344, x3)

inst_443:
// rs1_val==3689348814741910322 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 6148914691236517205, x2, 1352, x3)

inst_444:
// rs1_val==3689348814741910322 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, -6148914691236517206, x2, 1360, x3)

inst_445:
// rs1_val==3689348814741910322 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 5, x2, 1368, x3)

inst_446:
// rs1_val==3689348814741910322 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 3689348814741910323, x2, 1376, x3)

inst_447:
// rs1_val==3689348814741910322 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 7378697629483820646, x2, 1384, x3)

inst_448:
// rs1_val==3689348814741910322 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, -3037000499, x2, 1392, x3)

inst_449:
// rs1_val==3689348814741910322 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 3037000499, x2, 1400, x3)

inst_450:
// rs1_val==3689348814741910322 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 2, x2, 1408, x3)

inst_451:
// rs1_val==3689348814741910322 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 6148914691236517204, x2, 1416, x3)

inst_452:
// rs1_val==3689348814741910322 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 0, x2, 1424, x3)

inst_453:
// rs1_val==3689348814741910322 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 4, x2, 1432, x3)

inst_454:
// rs1_val==3689348814741910322 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 3689348814741910322, x2, 1440, x3)

inst_455:
// rs1_val==3689348814741910322 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 7378697629483820645, x2, 1448, x3)

inst_456:
// rs1_val==3689348814741910322 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 3037000498, x2, 1456, x3)

inst_457:
// rs1_val==3689348814741910322 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 6148914691236517206, x2, 1464, x3)

inst_458:
// rs1_val==3689348814741910322 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, -6148914691236517205, x2, 1472, x3)

inst_459:
// rs1_val==3689348814741910322 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 6, x2, 1480, x3)

inst_460:
// rs1_val==3689348814741910322 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 3689348814741910324, x2, 1488, x3)

inst_461:
// rs1_val==3689348814741910322 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 7378697629483820647, x2, 1496, x3)

inst_462:
// rs1_val==3689348814741910322 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, -3037000498, x2, 1504, x3)

inst_463:
// rs1_val==3689348814741910322 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910322;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910322, 3037000500, x2, 1512, x3)

inst_464:
// rs1_val==7378697629483820645 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 3, x2, 1520, x3)

inst_465:
// rs1_val==7378697629483820645 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 6148914691236517205, x2, 1528, x3)

inst_466:
// rs1_val==7378697629483820645 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, -6148914691236517206, x2, 1536, x3)

inst_467:
// rs1_val==7378697629483820645 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 5, x2, 1544, x3)

inst_468:
// rs1_val==7378697629483820645 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 3689348814741910323, x2, 1552, x3)

inst_469:
// rs1_val==7378697629483820645 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 7378697629483820646, x2, 1560, x3)

inst_470:
// rs1_val==7378697629483820645 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, -3037000499, x2, 1568, x3)

inst_471:
// rs1_val==7378697629483820645 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 3037000499, x2, 1576, x3)

inst_472:
// rs1_val==7378697629483820645 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 2, x2, 1584, x3)

inst_473:
// rs1_val==7378697629483820645 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 6148914691236517204, x2, 1592, x3)

inst_474:
// rs1_val==7378697629483820645 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 0, x2, 1600, x3)

inst_475:
// rs1_val==7378697629483820645 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 4, x2, 1608, x3)

inst_476:
// rs1_val==7378697629483820645 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 3689348814741910322, x2, 1616, x3)

inst_477:
// rs1_val==7378697629483820645 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 7378697629483820645, x2, 1624, x3)

inst_478:
// rs1_val==7378697629483820645 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 3037000498, x2, 1632, x3)

inst_479:
// rs1_val==7378697629483820645 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 6148914691236517206, x2, 1640, x3)

inst_480:
// rs1_val==7378697629483820645 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, -6148914691236517205, x2, 1648, x3)

inst_481:
// rs1_val==7378697629483820645 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 6, x2, 1656, x3)

inst_482:
// rs1_val==7378697629483820645 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 3689348814741910324, x2, 1664, x3)

inst_483:
// rs1_val==7378697629483820645 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 7378697629483820647, x2, 1672, x3)

inst_484:
// rs1_val==7378697629483820645 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, -3037000498, x2, 1680, x3)

inst_485:
// rs1_val==7378697629483820645 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820645;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820645, 3037000500, x2, 1688, x3)

inst_486:
// rs1_val==3037000498 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 3, x2, 1696, x3)

inst_487:
// rs1_val==3037000498 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 6148914691236517205, x2, 1704, x3)

inst_488:
// rs1_val==3037000498 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, -6148914691236517206, x2, 1712, x3)

inst_489:
// rs1_val==3037000498 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 5, x2, 1720, x3)

inst_490:
// rs1_val==3037000498 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 3689348814741910323, x2, 1728, x3)

inst_491:
// rs1_val==3037000498 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 7378697629483820646, x2, 1736, x3)

inst_492:
// rs1_val==3037000498 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, -3037000499, x2, 1744, x3)

inst_493:
// rs1_val==3037000498 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 3037000499, x2, 1752, x3)

inst_494:
// rs1_val==3037000498 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 2, x2, 1760, x3)

inst_495:
// rs1_val==3037000498 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 6148914691236517204, x2, 1768, x3)

inst_496:
// rs1_val==3037000498 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 0, x2, 1776, x3)

inst_497:
// rs1_val==3037000498 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 4, x2, 1784, x3)

inst_498:
// rs1_val==3037000498 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 3689348814741910322, x2, 1792, x3)

inst_499:
// rs1_val==3037000498 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 7378697629483820645, x2, 1800, x3)

inst_500:
// rs1_val==3037000498 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 3037000498, x2, 1808, x3)

inst_501:
// rs1_val==3037000498 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 6148914691236517206, x2, 1816, x3)

inst_502:
// rs1_val==3037000498 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, -6148914691236517205, x2, 1824, x3)

inst_503:
// rs1_val==3037000498 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 6, x2, 1832, x3)

inst_504:
// rs1_val==3037000498 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 3689348814741910324, x2, 1840, x3)

inst_505:
// rs1_val==3037000498 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 7378697629483820647, x2, 1848, x3)

inst_506:
// rs1_val==3037000498 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, -3037000498, x2, 1856, x3)

inst_507:
// rs1_val==3037000498 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000498;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000498, 3037000500, x2, 1864, x3)

inst_508:
// rs1_val==6148914691236517206 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 3, x2, 1872, x3)

inst_509:
// rs1_val==6148914691236517206 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 6148914691236517205, x2, 1880, x3)

inst_510:
// rs1_val==6148914691236517206 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, -6148914691236517206, x2, 1888, x3)

inst_511:
// rs1_val==6148914691236517206 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 5, x2, 1896, x3)

inst_512:
// rs1_val==6148914691236517206 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 3689348814741910323, x2, 1904, x3)

inst_513:
// rs1_val==6148914691236517206 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 7378697629483820646, x2, 1912, x3)

inst_514:
// rs1_val==6148914691236517206 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, -3037000499, x2, 1920, x3)

inst_515:
// rs1_val==6148914691236517206 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 3037000499, x2, 1928, x3)

inst_516:
// rs1_val==6148914691236517206 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 2, x2, 1936, x3)

inst_517:
// rs1_val==6148914691236517206 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 6148914691236517204, x2, 1944, x3)

inst_518:
// rs1_val==6148914691236517206 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 0, x2, 1952, x3)

inst_519:
// rs1_val==6148914691236517206 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 4, x2, 1960, x3)

inst_520:
// rs1_val==6148914691236517206 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 3689348814741910322, x2, 1968, x3)

inst_521:
// rs1_val==6148914691236517206 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 7378697629483820645, x2, 1976, x3)

inst_522:
// rs1_val==6148914691236517206 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 3037000498, x2, 1984, x3)

inst_523:
// rs1_val==6148914691236517206 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 6148914691236517206, x2, 1992, x3)

inst_524:
// rs1_val==6148914691236517206 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, -6148914691236517205, x2, 2000, x3)

inst_525:
// rs1_val==6148914691236517206 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 6, x2, 2008, x3)

inst_526:
// rs1_val==6148914691236517206 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 3689348814741910324, x2, 2016, x3)

inst_527:
// rs1_val==6148914691236517206 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 7378697629483820647, x2, 2024, x3)

inst_528:
// rs1_val==6148914691236517206 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, -3037000498, x2, 2032, x3)

inst_529:
// rs1_val==6148914691236517206 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6148914691236517206;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6148914691236517206, 3037000500, x2, 2040, x3)
RVTEST_SIGBASE( x2,signature_x2_2)

inst_530:
// rs1_val==-6148914691236517205 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 3, x2, 0, x3)

inst_531:
// rs1_val==-6148914691236517205 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 6148914691236517205, x2, 8, x3)

inst_532:
// rs1_val==-6148914691236517205 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, -6148914691236517206, x2, 16, x3)

inst_533:
// rs1_val==-6148914691236517205 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 5, x2, 24, x3)

inst_534:
// rs1_val==-6148914691236517205 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 3689348814741910323, x2, 32, x3)

inst_535:
// rs1_val==-6148914691236517205 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 7378697629483820646, x2, 40, x3)

inst_536:
// rs1_val==-6148914691236517205 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, -3037000499, x2, 48, x3)

inst_537:
// rs1_val==-6148914691236517205 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 3037000499, x2, 56, x3)

inst_538:
// rs1_val==-6148914691236517205 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 2, x2, 64, x3)

inst_539:
// rs1_val==-6148914691236517205 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 6148914691236517204, x2, 72, x3)

inst_540:
// rs1_val==-6148914691236517205 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 0, x2, 80, x3)

inst_541:
// rs1_val==-6148914691236517205 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 4, x2, 88, x3)

inst_542:
// rs1_val==-6148914691236517205 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 3689348814741910322, x2, 96, x3)

inst_543:
// rs1_val==-6148914691236517205 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 7378697629483820645, x2, 104, x3)

inst_544:
// rs1_val==-6148914691236517205 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 3037000498, x2, 112, x3)

inst_545:
// rs1_val==-6148914691236517205 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 6148914691236517206, x2, 120, x3)

inst_546:
// rs1_val==-6148914691236517205 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, -6148914691236517205, x2, 128, x3)

inst_547:
// rs1_val==-6148914691236517205 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 6, x2, 136, x3)

inst_548:
// rs1_val==-6148914691236517205 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 3689348814741910324, x2, 144, x3)

inst_549:
// rs1_val==-6148914691236517205 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 7378697629483820647, x2, 152, x3)

inst_550:
// rs1_val==-6148914691236517205 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, -3037000498, x2, 160, x3)

inst_551:
// rs1_val==-6148914691236517205 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-6148914691236517205;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -6148914691236517205, 3037000500, x2, 168, x3)

inst_552:
// rs1_val==6 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 3, x2, 176, x3)

inst_553:
// rs1_val==6 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 6148914691236517205, x2, 184, x3)

inst_554:
// rs1_val==6 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, -6148914691236517206, x2, 192, x3)

inst_555:
// rs1_val==6 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 5, x2, 200, x3)

inst_556:
// rs1_val==6 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 3689348814741910323, x2, 208, x3)

inst_557:
// rs1_val==6 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 7378697629483820646, x2, 216, x3)

inst_558:
// rs1_val==6 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, -3037000499, x2, 224, x3)

inst_559:
// rs1_val==6 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 3037000499, x2, 232, x3)

inst_560:
// rs1_val==6 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 2, x2, 240, x3)

inst_561:
// rs1_val==6 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 6148914691236517204, x2, 248, x3)

inst_562:
// rs1_val==6 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 0, x2, 256, x3)

inst_563:
// rs1_val==6 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 4, x2, 264, x3)

inst_564:
// rs1_val==6 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 3689348814741910322, x2, 272, x3)

inst_565:
// rs1_val==6 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 7378697629483820645, x2, 280, x3)

inst_566:
// rs1_val==6 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 3037000498, x2, 288, x3)

inst_567:
// rs1_val==6 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 6148914691236517206, x2, 296, x3)

inst_568:
// rs1_val==6 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, -6148914691236517205, x2, 304, x3)

inst_569:
// rs1_val==6 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 6, x2, 312, x3)

inst_570:
// rs1_val==6 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 3689348814741910324, x2, 320, x3)

inst_571:
// rs1_val==6 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 7378697629483820647, x2, 328, x3)

inst_572:
// rs1_val==6 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, -3037000498, x2, 336, x3)

inst_573:
// rs1_val==6 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:6;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 6, 3037000500, x2, 344, x3)

inst_574:
// rs1_val==3689348814741910324 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 3, x2, 352, x3)

inst_575:
// rs1_val==3689348814741910324 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 6148914691236517205, x2, 360, x3)

inst_576:
// rs1_val==3689348814741910324 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, -6148914691236517206, x2, 368, x3)

inst_577:
// rs1_val==3689348814741910324 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 5, x2, 376, x3)

inst_578:
// rs1_val==3689348814741910324 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 3689348814741910323, x2, 384, x3)

inst_579:
// rs1_val==3689348814741910324 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 7378697629483820646, x2, 392, x3)

inst_580:
// rs1_val==3689348814741910324 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, -3037000499, x2, 400, x3)

inst_581:
// rs1_val==3689348814741910324 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 3037000499, x2, 408, x3)

inst_582:
// rs1_val==3689348814741910324 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 2, x2, 416, x3)

inst_583:
// rs1_val==3689348814741910324 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 6148914691236517204, x2, 424, x3)

inst_584:
// rs1_val==3689348814741910324 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 0, x2, 432, x3)

inst_585:
// rs1_val==3689348814741910324 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 4, x2, 440, x3)

inst_586:
// rs1_val==3689348814741910324 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 3689348814741910322, x2, 448, x3)

inst_587:
// rs1_val==3689348814741910324 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 7378697629483820645, x2, 456, x3)

inst_588:
// rs1_val==3689348814741910324 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 3037000498, x2, 464, x3)

inst_589:
// rs1_val==3689348814741910324 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 6148914691236517206, x2, 472, x3)

inst_590:
// rs1_val==3689348814741910324 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, -6148914691236517205, x2, 480, x3)

inst_591:
// rs1_val==3689348814741910324 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 6, x2, 488, x3)

inst_592:
// rs1_val==3689348814741910324 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 3689348814741910324, x2, 496, x3)

inst_593:
// rs1_val==3689348814741910324 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 7378697629483820647, x2, 504, x3)

inst_594:
// rs1_val==3689348814741910324 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, -3037000498, x2, 512, x3)

inst_595:
// rs1_val==3689348814741910324 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3689348814741910324;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3689348814741910324, 3037000500, x2, 520, x3)

inst_596:
// rs1_val==7378697629483820647 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 3, x2, 528, x3)

inst_597:
// rs1_val==7378697629483820647 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 6148914691236517205, x2, 536, x3)

inst_598:
// rs1_val==7378697629483820647 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, -6148914691236517206, x2, 544, x3)

inst_599:
// rs1_val==7378697629483820647 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 5, x2, 552, x3)

inst_600:
// rs1_val==7378697629483820647 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 3689348814741910323, x2, 560, x3)

inst_601:
// rs1_val==7378697629483820647 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 7378697629483820646, x2, 568, x3)

inst_602:
// rs1_val==7378697629483820647 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, -3037000499, x2, 576, x3)

inst_603:
// rs1_val==7378697629483820647 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 3037000499, x2, 584, x3)

inst_604:
// rs1_val==7378697629483820647 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 2, x2, 592, x3)

inst_605:
// rs1_val==7378697629483820647 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 6148914691236517204, x2, 600, x3)

inst_606:
// rs1_val==7378697629483820647 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 0, x2, 608, x3)

inst_607:
// rs1_val==7378697629483820647 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 4, x2, 616, x3)

inst_608:
// rs1_val==7378697629483820647 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 3689348814741910322, x2, 624, x3)

inst_609:
// rs1_val==7378697629483820647 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 7378697629483820645, x2, 632, x3)

inst_610:
// rs1_val==7378697629483820647 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 3037000498, x2, 640, x3)

inst_611:
// rs1_val==7378697629483820647 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 6148914691236517206, x2, 648, x3)

inst_612:
// rs1_val==7378697629483820647 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, -6148914691236517205, x2, 656, x3)

inst_613:
// rs1_val==7378697629483820647 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 6, x2, 664, x3)

inst_614:
// rs1_val==7378697629483820647 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 3689348814741910324, x2, 672, x3)

inst_615:
// rs1_val==7378697629483820647 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 7378697629483820647, x2, 680, x3)

inst_616:
// rs1_val==7378697629483820647 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, -3037000498, x2, 688, x3)

inst_617:
// rs1_val==7378697629483820647 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:7378697629483820647;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 7378697629483820647, 3037000500, x2, 696, x3)

inst_618:
// rs1_val==-3037000498 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 3, x2, 704, x3)

inst_619:
// rs1_val==-3037000498 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 6148914691236517205, x2, 712, x3)

inst_620:
// rs1_val==-3037000498 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, -6148914691236517206, x2, 720, x3)

inst_621:
// rs1_val==-3037000498 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 5, x2, 728, x3)

inst_622:
// rs1_val==-3037000498 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 3689348814741910323, x2, 736, x3)

inst_623:
// rs1_val==-3037000498 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 7378697629483820646, x2, 744, x3)

inst_624:
// rs1_val==-3037000498 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, -3037000499, x2, 752, x3)

inst_625:
// rs1_val==-3037000498 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 3037000499, x2, 760, x3)

inst_626:
// rs1_val==-3037000498 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 2, x2, 768, x3)

inst_627:
// rs1_val==-3037000498 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 6148914691236517204, x2, 776, x3)

inst_628:
// rs1_val==-3037000498 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 0, x2, 784, x3)

inst_629:
// rs1_val==-3037000498 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 4, x2, 792, x3)

inst_630:
// rs1_val==-3037000498 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 3689348814741910322, x2, 800, x3)

inst_631:
// rs1_val==-3037000498 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 7378697629483820645, x2, 808, x3)

inst_632:
// rs1_val==-3037000498 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 3037000498, x2, 816, x3)

inst_633:
// rs1_val==-3037000498 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 6148914691236517206, x2, 824, x3)

inst_634:
// rs1_val==-3037000498 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, -6148914691236517205, x2, 832, x3)

inst_635:
// rs1_val==-3037000498 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 6, x2, 840, x3)

inst_636:
// rs1_val==-3037000498 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 3689348814741910324, x2, 848, x3)

inst_637:
// rs1_val==-3037000498 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 7378697629483820647, x2, 856, x3)

inst_638:
// rs1_val==-3037000498 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, -3037000498, x2, 864, x3)

inst_639:
// rs1_val==-3037000498 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-3037000498;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -3037000498, 3037000500, x2, 872, x3)

inst_640:
// rs1_val==3037000500 and rs2_val==3, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:3
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 3, x2, 880, x3)

inst_641:
// rs1_val==3037000500 and rs2_val==6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 6148914691236517205, x2, 888, x3)

inst_642:
// rs1_val==3037000500 and rs2_val==-6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:-6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, -6148914691236517206, x2, 896, x3)

inst_643:
// rs1_val==3037000500 and rs2_val==5, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:5
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 5, x2, 904, x3)

inst_644:
// rs1_val==3037000500 and rs2_val==3689348814741910323, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:3689348814741910323
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 3689348814741910323, x2, 912, x3)

inst_645:
// rs1_val==3037000500 and rs2_val==7378697629483820646, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:7378697629483820646
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 7378697629483820646, x2, 920, x3)

inst_646:
// rs1_val==3037000500 and rs2_val==-3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:-3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, -3037000499, x2, 928, x3)

inst_647:
// rs1_val==3037000500 and rs2_val==3037000499, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:3037000499
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 3037000499, x2, 936, x3)

inst_648:
// rs1_val==3037000500 and rs2_val==2, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:2
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 2, x2, 944, x3)

inst_649:
// rs1_val==3037000500 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 6148914691236517204, x2, 952, x3)

inst_650:
// rs1_val==3037000500 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 0, x2, 960, x3)

inst_651:
// rs1_val==3037000500 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 4, x2, 968, x3)

inst_652:
// rs1_val==3037000500 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 3689348814741910322, x2, 976, x3)

inst_653:
// rs1_val==3037000500 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 7378697629483820645, x2, 984, x3)

inst_654:
// rs1_val==3037000500 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 3037000498, x2, 992, x3)

inst_655:
// rs1_val==3037000500 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 6148914691236517206, x2, 1000, x3)

inst_656:
// rs1_val==3037000500 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, -6148914691236517205, x2, 1008, x3)

inst_657:
// rs1_val==3037000500 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 6, x2, 1016, x3)

inst_658:
// rs1_val==3037000500 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 3689348814741910324, x2, 1024, x3)

inst_659:
// rs1_val==3037000500 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 7378697629483820647, x2, 1032, x3)

inst_660:
// rs1_val==3037000500 and rs2_val==-3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:-3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, -3037000498, x2, 1040, x3)

inst_661:
// rs1_val==3037000500 and rs2_val==3037000500, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:3037000500;  op2val:3037000500
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 3037000500, 3037000500, x2, 1048, x3)

inst_662:
// rs1_val==0 and rs2_val==6148914691236517204, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:6148914691236517204
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 6148914691236517204, x2, 1056, x3)

inst_663:
// rs1_val==0 and rs2_val==0, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:0
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 0, x2, 1064, x3)

inst_664:
// rs1_val==0 and rs2_val==4, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:4
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 4, x2, 1072, x3)

inst_665:
// rs1_val==0 and rs2_val==3689348814741910322, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:3689348814741910322
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 3689348814741910322, x2, 1080, x3)

inst_666:
// rs1_val==0 and rs2_val==7378697629483820645, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:7378697629483820645
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 7378697629483820645, x2, 1088, x3)

inst_667:
// rs1_val==0 and rs2_val==3037000498, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:3037000498
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 3037000498, x2, 1096, x3)

inst_668:
// rs1_val==0 and rs2_val==6148914691236517206, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:6148914691236517206
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 6148914691236517206, x2, 1104, x3)

inst_669:
// rs1_val==0 and rs2_val==-6148914691236517205, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:-6148914691236517205
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, -6148914691236517205, x2, 1112, x3)

inst_670:
// rs1_val==0 and rs2_val==6, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:6
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 6, x2, 1120, x3)

inst_671:
// rs1_val==0 and rs2_val==3689348814741910324, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:3689348814741910324
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 3689348814741910324, x2, 1128, x3)

inst_672:
// rs1_val==0 and rs2_val==7378697629483820647, 
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:0;  op2val:7378697629483820647
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 0, 7378697629483820647, x2, 1136, x3)

inst_673:
// rs1_val > 0 and rs2_val > 0, rs2_val == 4194304, rs1_val != rs2_val, rs1_val == 2147483648
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:2147483648;  op2val:4194304
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 2147483648, 4194304, x2, 1144, x3)

inst_674:
// rs1_val < 0 and rs2_val > 0, rs2_val == 562949953421312, rs1_val == -72057594037927937
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:-72057594037927937;  op2val:562949953421312
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, -72057594037927937, 562949953421312, x2, 1152, x3)

inst_675:
// rs2_val == 512, rs1_val == 268435456
// opcode: div ; op1:x10; op2:x11; dest:x12; op1val:268435456;  op2val:512
TEST_RR_OP(div, x12, x10, x11, 0x0000000000000000, 268435456, 512, x2, 1160, x3)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x4_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x4_1:
    .fill 18*(XLEN/32),4,0xdeadbeef


signature_x2_0:
    .fill 256*(XLEN/32),4,0xdeadbeef


signature_x2_1:
    .fill 256*(XLEN/32),4,0xdeadbeef


signature_x2_2:
    .fill 146*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
