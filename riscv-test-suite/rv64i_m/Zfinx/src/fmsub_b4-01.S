
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 04:36:02 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fmsub.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fmsub_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fmsub_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rd == rs3 != rs2, rs1==x31, rs2==x30, rs3==x31, rd==x31,fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x31; dest:x31; op1val:0x7e78b41c; op2val:0x40637214;
op3val:0x7e78b41c; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x31, x30, x31, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rd != rs3, rs1==x29, rs2==x29, rs3==x30, rd==x29,fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x29; op2:x29; op3:x30; dest:x29; op1val:0x7e78b41c; op2val:0x7e78b41c;
op3val:0x7de7b44e; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x29, x29, x29, x30, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x30, rs2==x31, rs3==x28, rd==x28,fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x31; op3:x28; dest:x28; op1val:0x7e78b41c; op2val:0x40637214;
op3val:0x7de7b44e; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x28, x30, x31, x28, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==x28, rs2==x27, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x28; op2:x27; op3:x27; dest:x27; op1val:0x7e78b41c; op2val:0x40637214;
op3val:0x40637214; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x27, x28, x27, x27, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x27, rs2==x26, rs3==x29, rd==x26,fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x27; op2:x26; op3:x29; dest:x26; op1val:0x7e78b41c; op2val:0x40637214;
op3val:0x7de7b44e; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x26, x27, x26, x29, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==x25, rs2==x25, rs3==x25, rd==x30,fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x25; op2:x25; op3:x25; dest:x30; op1val:0x7ef9f575; op2val:0x7ef9f575;
op3val:0x7ef9f575; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x30, x25, x25, x25, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x26, rs2==x24, rs3==x24, rd==x25,fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x26; op2:x24; op3:x24; dest:x25; op1val:0x7ef9f575; op2val:0x3fd2e25f;
op3val:0x3fd2e25f; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x25, x26, x24, x24, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x23, rs2==x28, rs3==x26, rd==x24,fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x23; op2:x28; op3:x26; dest:x24; op1val:0x7ef9f575; op2val:0x3fd2e25f;
op3val:0x7d5e8636; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x24, x23, x28, x26, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x22, rs2==x22, rs3==x21, rd==x23,fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x22; op2:x22; op3:x21; dest:x23; op1val:0x7ef9f575; op2val:0x7ef9f575;
op3val:0x7d5e8636; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x23, x22, x22, x21, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x20, rs2==x23, rs3==x20, rd==x22,fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x20; op2:x23; op3:x20; dest:x22; op1val:0x7ef9f575; op2val:0x3fd2e25f;
op3val:0x7ef9f575; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x22, x20, x23, x20, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x21, rs2==x20, rs3==x23, rd==x21,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x231a6d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x21; op2:x20; op3:x23; dest:x21; op1val:0x7ecdc757; op2val:0x40231a6d;
op3val:0x7e8c6cae; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x21, x21, x20, x23, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x231a6d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0x7ecdc757; op2val:0x7ecdc757;
op3val:0x7ecdc757; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x19, x19, x19, x19, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x24, rs2==x21, rs3==x22, rd==x20,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x231a6d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x24; op2:x21; op3:x22; dest:x20; op1val:0x7ecdc757; op2val:0x40231a6d;
op3val:0x7e8c6cae; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x20, x24, x21, x22, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x17, rs2==x16, rs3==x15, rd==x18,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x231a6d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x17; op2:x16; op3:x15; dest:x18; op1val:0x7ecdc757; op2val:0x40231a6d;
op3val:0x7e8c6cae; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x18, x17, x16, x15, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x15, rs2==x18, rs3==x16, rd==x17,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x231a6d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x15; op2:x18; op3:x16; dest:x17; op1val:0x7ecdc757; op2val:0x40231a6d;
op3val:0x7e8c6cae; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x17, x15, x18, x16, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x18, rs2==x15, rs3==x17, rd==x16,fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4fed0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x18; op2:x15; op3:x17; dest:x16; op1val:0x7d322c35; op2val:0x41cfed0f;
op3val:0x7ec2daf5; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x16, x18, x15, x17, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x16, rs2==x17, rs3==x18, rd==x15,fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4fed0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x16; op2:x17; op3:x18; dest:x15; op1val:0x7d322c35; op2val:0x41cfed0f;
op3val:0x7ec2daf5; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x15, x16, x17, x18, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x13, rs2==x12, rs3==x11, rd==x14,fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4fed0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x13; op2:x12; op3:x11; dest:x14; op1val:0x7d322c35; op2val:0x41cfed0f;
op3val:0x7ec2daf5; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x14, x13, x12, x11, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x11, rs2==x14, rs3==x12, rd==x13,fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4fed0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x11; op2:x14; op3:x12; dest:x13; op1val:0x7d322c35; op2val:0x41cfed0f;
op3val:0x7ec2daf5; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x13, x11, x14, x12, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x14, rs2==x11, rs3==x13, rd==x12,fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4fed0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x14; op2:x11; op3:x13; dest:x12; op1val:0x7d322c35; op2val:0x41cfed0f;
op3val:0x7ec2daf5; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x12, x14, x11, x13, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x12, rs2==x13, rs3==x14, rd==x11,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x18f09e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x12; op2:x13; op3:x14; dest:x11; op1val:0x7ce65f91; op2val:0x4218f09e;
op3val:0x7ea6851a; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x11, x12, x13, x14, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x9, rs2==x8, rs3==x7, rd==x10,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x18f09e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x9; op2:x8; op3:x7; dest:x10; op1val:0x7ce65f91; op2val:0x4218f09e;
op3val:0x7ea6851a; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x10, x9, x8, x7, dyn, 32, 0, x3, 63*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x13,test_dataset_1)

inst_22:
// rs1==x7, rs2==x10, rs3==x8, rd==x9,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x18f09e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x7; op2:x10; op3:x8; dest:x9; op1val:0x7ce65f91; op2val:0x4218f09e;
op3val:0x7ea6851a; valaddr_reg:x13; val_offset:0*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x9, x7, x10, x8, dyn, 64, 0, x13, 0*FLEN/8, x14, x1, x12)
RVTEST_SIGBASE(x11,signature_x11_0)

inst_23:
// rs1==x10, rs2==x7, rs3==x9, rd==x8,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x18f09e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x10; op2:x7; op3:x9; dest:x8; op1val:0x7ce65f91; op2val:0x4218f09e;
op3val:0x7ea6851a; valaddr_reg:x13; val_offset:3*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x8, x10, x7, x9, dyn, 96, 0, x13, 3*FLEN/8, x14, x11, x12)

inst_24:
// rs1==x8, rs2==x9, rs3==x10, rd==x7,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x18f09e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x8; op2:x9; op3:x10; dest:x7; op1val:0x7ce65f91; op2val:0x4218f09e;
op3val:0x7ea6851a; valaddr_reg:x13; val_offset:6*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x7, x8, x9, x10, dyn, 128, 0, x13, 6*FLEN/8, x14, x11, x12)

inst_25:
// rs1==x5, rs2==x4, rs3==x3, rd==x6,fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x79d261 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x5; op2:x4; op3:x3; dest:x6; op1val:0x7d569889; op2val:0x4179d261;
op3val:0x7d8b55ce; valaddr_reg:x13; val_offset:9*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x6, x5, x4, x3, dyn, 0, 0, x13, 9*FLEN/8, x14, x11, x12)

inst_26:
// rs1==x3, rs2==x6, rs3==x4, rd==x5,fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x79d261 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x3; op2:x6; op3:x4; dest:x5; op1val:0x7d569889; op2val:0x4179d261;
op3val:0x7d8b55ce; valaddr_reg:x13; val_offset:12*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x5, x3, x6, x4, dyn, 32, 0, x13, 12*FLEN/8, x14, x11, x12)

inst_27:
// rs1==x6, rs2==x3, rs3==x5, rd==x4,fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x79d261 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x6; op2:x3; op3:x5; dest:x4; op1val:0x7d569889; op2val:0x4179d261;
op3val:0x7d8b55ce; valaddr_reg:x13; val_offset:15*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x4, x6, x3, x5, dyn, 64, 0, x13, 15*FLEN/8, x14, x11, x12)

inst_28:
// rs1==x4, rs2==x5, rs3==x6, rd==x3,fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x79d261 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x4; op2:x5; op3:x6; dest:x3; op1val:0x7d569889; op2val:0x4179d261;
op3val:0x7d8b55ce; valaddr_reg:x13; val_offset:18*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x3, x4, x5, x6, dyn, 96, 0, x13, 18*FLEN/8, x14, x11, x12)

inst_29:
// rs1==x2,fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x79d261 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x2; op2:x30; op3:x29; dest:x31; op1val:0x7d569889; op2val:0x4179d261;
op3val:0x7d8b55ce; valaddr_reg:x13; val_offset:21*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x2, x30, x29, dyn, 128, 0, x13, 21*FLEN/8, x14, x11, x12)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x7ea303ee; op2val:0x4089b4fe;
op3val:0x7f1ec16f; valaddr_reg:x13; val_offset:24*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x1, x30, x29, dyn, 0, 0, x13, 24*FLEN/8, x14, x11, x12)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0x4089b4fe;
op3val:0x7f1ec16f; valaddr_reg:x13; val_offset:27*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x0, x30, x29, dyn, 32, 0, x13, 27*FLEN/8, x14, x11, x12)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x7ea303ee; op2val:0x4089b4fe;
op3val:0x7f1ec16f; valaddr_reg:x13; val_offset:30*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x2, x29, dyn, 64, 0, x13, 30*FLEN/8, x14, x11, x12)

inst_33:
// rs2==x1,fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x1; op3:x29; dest:x31; op1val:0x7ea303ee; op2val:0x4089b4fe;
op3val:0x7f1ec16f; valaddr_reg:x13; val_offset:33*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x1, x29, dyn, 96, 0, x13, 33*FLEN/8, x14, x11, x12)

inst_34:
// rs2==x0,fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x7ea303ee; op2val:0x0;
op3val:0x7f1ec16f; valaddr_reg:x13; val_offset:36*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x0, x29, dyn, 128, 0, x13, 36*FLEN/8, x14, x11, x12)

inst_35:
// rs3==x2,fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e16fa and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x2; dest:x31; op1val:0x7dbe28e8; op2val:0x411e16fa;
op3val:0x7e2b7290; valaddr_reg:x13; val_offset:39*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x2, dyn, 0, 0, x13, 39*FLEN/8, x14, x11, x12)

inst_36:
// rs3==x1,fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e16fa and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x7dbe28e8; op2val:0x411e16fa;
op3val:0x7e2b7290; valaddr_reg:x13; val_offset:42*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x1, dyn, 32, 0, x13, 42*FLEN/8, x14, x11, x12)

inst_37:
// rs3==x0,fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e16fa and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x0; dest:x31; op1val:0x7dbe28e8; op2val:0x411e16fa;
op3val:0x0; valaddr_reg:x13; val_offset:45*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x0, dyn, 64, 0, x13, 45*FLEN/8, x14, x11, x12)

inst_38:
// rd==x2,fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e16fa and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x29; dest:x2; op1val:0x7dbe28e8; op2val:0x411e16fa;
op3val:0x7e2b7290; valaddr_reg:x13; val_offset:48*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x2, x31, x30, x29, dyn, 96, 0, x13, 48*FLEN/8, x14, x11, x12)

inst_39:
// rd==x1,fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e16fa and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x7dbe28e8; op2val:0x411e16fa;
op3val:0x7e2b7290; valaddr_reg:x13; val_offset:51*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x1, x31, x30, x29, dyn, 128, 0, x13, 51*FLEN/8, x14, x11, x12)

inst_40:
// rd==x0,fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x46ac03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x7ef0ef31; op2val:0x4046ac03;
op3val:0x7f35f5c9; valaddr_reg:x13; val_offset:54*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x0, x31, x30, x29, dyn, 0, 0, x13, 54*FLEN/8, x14, x11, x12)

inst_41:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x46ac03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef0ef31; op2val:0x4046ac03;
op3val:0x7f35f5c9; valaddr_reg:x13; val_offset:57*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 57*FLEN/8, x14, x11, x12)

inst_42:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x46ac03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef0ef31; op2val:0x4046ac03;
op3val:0x7f35f5c9; valaddr_reg:x13; val_offset:60*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 60*FLEN/8, x14, x11, x12)

inst_43:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x46ac03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef0ef31; op2val:0x4046ac03;
op3val:0x7f35f5c9; valaddr_reg:x13; val_offset:63*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 63*FLEN/8, x14, x11, x12)

inst_44:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x46ac03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef0ef31; op2val:0x4046ac03;
op3val:0x7f35f5c9; valaddr_reg:x13; val_offset:66*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 66*FLEN/8, x14, x11, x12)

inst_45:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1ae3df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edd9b86; op2val:0x401ae3df;
op3val:0x7e985346; valaddr_reg:x13; val_offset:69*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 69*FLEN/8, x14, x11, x12)

inst_46:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1ae3df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edd9b86; op2val:0x401ae3df;
op3val:0x7e985346; valaddr_reg:x13; val_offset:72*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 72*FLEN/8, x14, x11, x12)

inst_47:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1ae3df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edd9b86; op2val:0x401ae3df;
op3val:0x7e985346; valaddr_reg:x13; val_offset:75*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 75*FLEN/8, x14, x11, x12)

inst_48:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1ae3df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edd9b86; op2val:0x401ae3df;
op3val:0x7e985346; valaddr_reg:x13; val_offset:78*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 78*FLEN/8, x14, x11, x12)

inst_49:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1ae3df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edd9b86; op2val:0x401ae3df;
op3val:0x7e985346; valaddr_reg:x13; val_offset:81*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 81*FLEN/8, x14, x11, x12)

inst_50:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x09388b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b70e3; op2val:0x3f89388b;
op3val:0x7d0f1a1b; valaddr_reg:x13; val_offset:84*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 84*FLEN/8, x14, x11, x12)

inst_51:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x09388b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b70e3; op2val:0x3f89388b;
op3val:0x7d0f1a1b; valaddr_reg:x13; val_offset:87*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 87*FLEN/8, x14, x11, x12)

inst_52:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x09388b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b70e3; op2val:0x3f89388b;
op3val:0x7d0f1a1b; valaddr_reg:x13; val_offset:90*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 90*FLEN/8, x14, x11, x12)

inst_53:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x09388b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b70e3; op2val:0x3f89388b;
op3val:0x7d0f1a1b; valaddr_reg:x13; val_offset:93*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 93*FLEN/8, x14, x11, x12)

inst_54:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x09388b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b70e3; op2val:0x3f89388b;
op3val:0x7d0f1a1b; valaddr_reg:x13; val_offset:96*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 96*FLEN/8, x14, x11, x12)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4048c6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24d370; op2val:0x3fc048c6;
op3val:0x7e5e6b80; valaddr_reg:x13; val_offset:99*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 99*FLEN/8, x14, x11, x12)

inst_56:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4048c6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24d370; op2val:0x3fc048c6;
op3val:0x7e5e6b80; valaddr_reg:x13; val_offset:102*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 102*FLEN/8, x14, x11, x12)

inst_57:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4048c6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24d370; op2val:0x3fc048c6;
op3val:0x7e5e6b80; valaddr_reg:x13; val_offset:105*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 105*FLEN/8, x14, x11, x12)

inst_58:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4048c6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24d370; op2val:0x3fc048c6;
op3val:0x7e5e6b80; valaddr_reg:x13; val_offset:108*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 108*FLEN/8, x14, x11, x12)

inst_59:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4048c6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24d370; op2val:0x3fc048c6;
op3val:0x7e5e6b80; valaddr_reg:x13; val_offset:111*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 111*FLEN/8, x14, x11, x12)

inst_60:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77f583 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ddd9367; op2val:0x40f7f583;
op3val:0x7db4edca; valaddr_reg:x13; val_offset:114*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 114*FLEN/8, x14, x11, x12)

inst_61:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77f583 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ddd9367; op2val:0x40f7f583;
op3val:0x7db4edca; valaddr_reg:x13; val_offset:117*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 117*FLEN/8, x14, x11, x12)

inst_62:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77f583 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ddd9367; op2val:0x40f7f583;
op3val:0x7db4edca; valaddr_reg:x13; val_offset:120*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 120*FLEN/8, x14, x11, x12)

inst_63:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77f583 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ddd9367; op2val:0x40f7f583;
op3val:0x7db4edca; valaddr_reg:x13; val_offset:123*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 123*FLEN/8, x14, x11, x12)

inst_64:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77f583 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ddd9367; op2val:0x40f7f583;
op3val:0x7db4edca; valaddr_reg:x13; val_offset:126*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 126*FLEN/8, x14, x11, x12)

inst_65:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c64cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6ce9fd; op2val:0x40bc64cb;
op3val:0x7f1cb23d; valaddr_reg:x13; val_offset:129*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 129*FLEN/8, x14, x11, x12)

inst_66:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c64cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6ce9fd; op2val:0x40bc64cb;
op3val:0x7f1cb23d; valaddr_reg:x13; val_offset:132*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 132*FLEN/8, x14, x11, x12)

inst_67:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c64cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6ce9fd; op2val:0x40bc64cb;
op3val:0x7f1cb23d; valaddr_reg:x13; val_offset:135*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 135*FLEN/8, x14, x11, x12)

inst_68:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c64cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6ce9fd; op2val:0x40bc64cb;
op3val:0x7f1cb23d; valaddr_reg:x13; val_offset:138*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 138*FLEN/8, x14, x11, x12)

inst_69:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c64cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6ce9fd; op2val:0x40bc64cb;
op3val:0x7f1cb23d; valaddr_reg:x13; val_offset:141*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 141*FLEN/8, x14, x11, x12)

inst_70:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7a39d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0acc40; op2val:0x407a39d0;
op3val:0x7edf559e; valaddr_reg:x13; val_offset:144*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 144*FLEN/8, x14, x11, x12)

inst_71:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7a39d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0acc40; op2val:0x407a39d0;
op3val:0x7edf559e; valaddr_reg:x13; val_offset:147*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 147*FLEN/8, x14, x11, x12)

inst_72:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7a39d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0acc40; op2val:0x407a39d0;
op3val:0x7edf559e; valaddr_reg:x13; val_offset:150*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 150*FLEN/8, x14, x11, x12)

inst_73:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7a39d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0acc40; op2val:0x407a39d0;
op3val:0x7edf559e; valaddr_reg:x13; val_offset:153*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 153*FLEN/8, x14, x11, x12)

inst_74:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7a39d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0acc40; op2val:0x407a39d0;
op3val:0x7edf559e; valaddr_reg:x13; val_offset:156*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 156*FLEN/8, x14, x11, x12)

inst_75:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46412e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef557bf; op2val:0x3ec6412e;
op3val:0x7e8f002a; valaddr_reg:x13; val_offset:159*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 159*FLEN/8, x14, x11, x12)

inst_76:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46412e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef557bf; op2val:0x3ec6412e;
op3val:0x7e8f002a; valaddr_reg:x13; val_offset:162*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 162*FLEN/8, x14, x11, x12)

inst_77:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46412e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef557bf; op2val:0x3ec6412e;
op3val:0x7e8f002a; valaddr_reg:x13; val_offset:165*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 165*FLEN/8, x14, x11, x12)

inst_78:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46412e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef557bf; op2val:0x3ec6412e;
op3val:0x7e8f002a; valaddr_reg:x13; val_offset:168*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 168*FLEN/8, x14, x11, x12)

inst_79:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46412e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef557bf; op2val:0x3ec6412e;
op3val:0x7e8f002a; valaddr_reg:x13; val_offset:171*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 171*FLEN/8, x14, x11, x12)

inst_80:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x123045 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed25578; op2val:0x3f123045;
op3val:0x7d40e341; valaddr_reg:x13; val_offset:174*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 174*FLEN/8, x14, x11, x12)

inst_81:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x123045 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed25578; op2val:0x3f123045;
op3val:0x7d40e341; valaddr_reg:x13; val_offset:177*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 177*FLEN/8, x14, x11, x12)

inst_82:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x123045 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed25578; op2val:0x3f123045;
op3val:0x7d40e341; valaddr_reg:x13; val_offset:180*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 180*FLEN/8, x14, x11, x12)

inst_83:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x123045 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed25578; op2val:0x3f123045;
op3val:0x7d40e341; valaddr_reg:x13; val_offset:183*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 183*FLEN/8, x14, x11, x12)

inst_84:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x123045 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed25578; op2val:0x3f123045;
op3val:0x7d40e341; valaddr_reg:x13; val_offset:186*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 186*FLEN/8, x14, x11, x12)

inst_85:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2ab8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d371843; op2val:0xbf3d2ab8;
op3val:0x7e1e2d21; valaddr_reg:x13; val_offset:189*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 189*FLEN/8, x14, x11, x12)

inst_86:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2ab8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d371843; op2val:0xbf3d2ab8;
op3val:0x7e1e2d21; valaddr_reg:x13; val_offset:192*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 192*FLEN/8, x14, x11, x12)

inst_87:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2ab8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d371843; op2val:0xbf3d2ab8;
op3val:0x7e1e2d21; valaddr_reg:x13; val_offset:195*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 195*FLEN/8, x14, x11, x12)

inst_88:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2ab8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d371843; op2val:0xbf3d2ab8;
op3val:0x7e1e2d21; valaddr_reg:x13; val_offset:198*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 198*FLEN/8, x14, x11, x12)

inst_89:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2ab8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d371843; op2val:0xbf3d2ab8;
op3val:0x7e1e2d21; valaddr_reg:x13; val_offset:201*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 201*FLEN/8, x14, x11, x12)

inst_90:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2e80c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f02a304; op2val:0x3fae80c2;
op3val:0x7ea43208; valaddr_reg:x13; val_offset:204*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 204*FLEN/8, x14, x11, x12)

inst_91:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2e80c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f02a304; op2val:0x3fae80c2;
op3val:0x7ea43208; valaddr_reg:x13; val_offset:207*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 207*FLEN/8, x14, x11, x12)

inst_92:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2e80c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f02a304; op2val:0x3fae80c2;
op3val:0x7ea43208; valaddr_reg:x13; val_offset:210*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 210*FLEN/8, x14, x11, x12)

inst_93:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2e80c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f02a304; op2val:0x3fae80c2;
op3val:0x7ea43208; valaddr_reg:x13; val_offset:213*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 213*FLEN/8, x14, x11, x12)

inst_94:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2e80c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f02a304; op2val:0x3fae80c2;
op3val:0x7ea43208; valaddr_reg:x13; val_offset:216*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 216*FLEN/8, x14, x11, x12)

inst_95:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7316 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7143d8; op2val:0x3e8b7316;
op3val:0x7ee0db12; valaddr_reg:x13; val_offset:219*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 219*FLEN/8, x14, x11, x12)

inst_96:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7316 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7143d8; op2val:0x3e8b7316;
op3val:0x7ee0db12; valaddr_reg:x13; val_offset:222*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 222*FLEN/8, x14, x11, x12)

inst_97:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7316 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7143d8; op2val:0x3e8b7316;
op3val:0x7ee0db12; valaddr_reg:x13; val_offset:225*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 225*FLEN/8, x14, x11, x12)

inst_98:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7316 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7143d8; op2val:0x3e8b7316;
op3val:0x7ee0db12; valaddr_reg:x13; val_offset:228*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 228*FLEN/8, x14, x11, x12)

inst_99:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7316 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7143d8; op2val:0x3e8b7316;
op3val:0x7ee0db12; valaddr_reg:x13; val_offset:231*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 231*FLEN/8, x14, x11, x12)

inst_100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x378e8c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eae05d5; op2val:0x40378e8c;
op3val:0x7e663896; valaddr_reg:x13; val_offset:234*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 234*FLEN/8, x14, x11, x12)

inst_101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x378e8c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eae05d5; op2val:0x40378e8c;
op3val:0x7e663896; valaddr_reg:x13; val_offset:237*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 237*FLEN/8, x14, x11, x12)

inst_102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x378e8c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eae05d5; op2val:0x40378e8c;
op3val:0x7e663896; valaddr_reg:x13; val_offset:240*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 240*FLEN/8, x14, x11, x12)

inst_103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x378e8c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eae05d5; op2val:0x40378e8c;
op3val:0x7e663896; valaddr_reg:x13; val_offset:243*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 243*FLEN/8, x14, x11, x12)

inst_104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x378e8c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eae05d5; op2val:0x40378e8c;
op3val:0x7e663896; valaddr_reg:x13; val_offset:246*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 246*FLEN/8, x14, x11, x12)

inst_105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4201ad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f188556; op2val:0xbec201ad;
op3val:0x7f0634f9; valaddr_reg:x13; val_offset:249*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 249*FLEN/8, x14, x11, x12)

inst_106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4201ad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f188556; op2val:0xbec201ad;
op3val:0x7f0634f9; valaddr_reg:x13; val_offset:252*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 252*FLEN/8, x14, x11, x12)

inst_107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4201ad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f188556; op2val:0xbec201ad;
op3val:0x7f0634f9; valaddr_reg:x13; val_offset:255*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 255*FLEN/8, x14, x11, x12)

inst_108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4201ad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f188556; op2val:0xbec201ad;
op3val:0x7f0634f9; valaddr_reg:x13; val_offset:258*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 258*FLEN/8, x14, x11, x12)

inst_109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4201ad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f188556; op2val:0xbec201ad;
op3val:0x7f0634f9; valaddr_reg:x13; val_offset:261*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 261*FLEN/8, x14, x11, x12)

inst_110:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x28bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b7753; op2val:0x4128bf77;
op3val:0x7edc9425; valaddr_reg:x13; val_offset:264*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 264*FLEN/8, x14, x11, x12)

inst_111:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x28bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b7753; op2val:0x4128bf77;
op3val:0x7edc9425; valaddr_reg:x13; val_offset:267*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 267*FLEN/8, x14, x11, x12)

inst_112:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x28bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b7753; op2val:0x4128bf77;
op3val:0x7edc9425; valaddr_reg:x13; val_offset:270*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 270*FLEN/8, x14, x11, x12)

inst_113:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x28bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b7753; op2val:0x4128bf77;
op3val:0x7edc9425; valaddr_reg:x13; val_offset:273*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 273*FLEN/8, x14, x11, x12)

inst_114:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x28bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b7753; op2val:0x4128bf77;
op3val:0x7edc9425; valaddr_reg:x13; val_offset:276*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 276*FLEN/8, x14, x11, x12)

inst_115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x091324 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec9acea; op2val:0xc0091324;
op3val:0x7f2806c1; valaddr_reg:x13; val_offset:279*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 279*FLEN/8, x14, x11, x12)

inst_116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x091324 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec9acea; op2val:0xc0091324;
op3val:0x7f2806c1; valaddr_reg:x13; val_offset:282*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 282*FLEN/8, x14, x11, x12)

inst_117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x091324 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec9acea; op2val:0xc0091324;
op3val:0x7f2806c1; valaddr_reg:x13; val_offset:285*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 285*FLEN/8, x14, x11, x12)

inst_118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x091324 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec9acea; op2val:0xc0091324;
op3val:0x7f2806c1; valaddr_reg:x13; val_offset:288*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 288*FLEN/8, x14, x11, x12)

inst_119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x091324 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec9acea; op2val:0xc0091324;
op3val:0x7f2806c1; valaddr_reg:x13; val_offset:291*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 291*FLEN/8, x14, x11, x12)

inst_120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c1b7a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0db1; op2val:0x40bc1b7a;
op3val:0x7e5d22dd; valaddr_reg:x13; val_offset:294*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 294*FLEN/8, x14, x11, x12)

inst_121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c1b7a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0db1; op2val:0x40bc1b7a;
op3val:0x7e5d22dd; valaddr_reg:x13; val_offset:297*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 297*FLEN/8, x14, x11, x12)

inst_122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c1b7a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0db1; op2val:0x40bc1b7a;
op3val:0x7e5d22dd; valaddr_reg:x13; val_offset:300*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 300*FLEN/8, x14, x11, x12)

inst_123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c1b7a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0db1; op2val:0x40bc1b7a;
op3val:0x7e5d22dd; valaddr_reg:x13; val_offset:303*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 303*FLEN/8, x14, x11, x12)

inst_124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c1b7a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0db1; op2val:0x40bc1b7a;
op3val:0x7e5d22dd; valaddr_reg:x13; val_offset:306*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 306*FLEN/8, x14, x11, x12)

inst_125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7d7805 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c318d; op2val:0xc07d7805;
op3val:0x7db55959; valaddr_reg:x13; val_offset:309*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 309*FLEN/8, x14, x11, x12)

inst_126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7d7805 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c318d; op2val:0xc07d7805;
op3val:0x7db55959; valaddr_reg:x13; val_offset:312*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 312*FLEN/8, x14, x11, x12)

inst_127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7d7805 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c318d; op2val:0xc07d7805;
op3val:0x7db55959; valaddr_reg:x13; val_offset:315*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 315*FLEN/8, x14, x11, x12)

inst_128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7d7805 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c318d; op2val:0xc07d7805;
op3val:0x7db55959; valaddr_reg:x13; val_offset:318*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 318*FLEN/8, x14, x11, x12)

inst_129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7d7805 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c318d; op2val:0xc07d7805;
op3val:0x7db55959; valaddr_reg:x13; val_offset:321*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 321*FLEN/8, x14, x11, x12)

inst_130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea08f24; op2val:0x41a78d32;
op3val:0x7f115efd; valaddr_reg:x13; val_offset:324*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 324*FLEN/8, x14, x11, x12)

inst_131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea08f24; op2val:0x41a78d32;
op3val:0x7f115efd; valaddr_reg:x13; val_offset:327*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 327*FLEN/8, x14, x11, x12)

inst_132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea08f24; op2val:0x41a78d32;
op3val:0x7f115efd; valaddr_reg:x13; val_offset:330*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 330*FLEN/8, x14, x11, x12)

inst_133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea08f24; op2val:0x41a78d32;
op3val:0x7f115efd; valaddr_reg:x13; val_offset:333*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 333*FLEN/8, x14, x11, x12)

inst_134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea08f24; op2val:0x41a78d32;
op3val:0x7f115efd; valaddr_reg:x13; val_offset:336*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 336*FLEN/8, x14, x11, x12)

inst_135:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de972bf; op2val:0xc245add1;
op3val:0x7ebbc306; valaddr_reg:x13; val_offset:339*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 339*FLEN/8, x14, x11, x12)

inst_136:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de972bf; op2val:0xc245add1;
op3val:0x7ebbc306; valaddr_reg:x13; val_offset:342*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 342*FLEN/8, x14, x11, x12)

inst_137:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de972bf; op2val:0xc245add1;
op3val:0x7ebbc306; valaddr_reg:x13; val_offset:345*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 345*FLEN/8, x14, x11, x12)

inst_138:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de972bf; op2val:0xc245add1;
op3val:0x7ebbc306; valaddr_reg:x13; val_offset:348*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 348*FLEN/8, x14, x11, x12)

inst_139:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de972bf; op2val:0xc245add1;
op3val:0x7ebbc306; valaddr_reg:x13; val_offset:351*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 351*FLEN/8, x14, x11, x12)

inst_140:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e78b41c; op2val:0x40637214;
op3val:0x7de7b44e; valaddr_reg:x13; val_offset:354*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 354*FLEN/8, x14, x11, x12)

inst_141:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e78b41c; op2val:0x40637214;
op3val:0x7de7b44e; valaddr_reg:x13; val_offset:357*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 357*FLEN/8, x14, x11, x12)

inst_142:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e78b41c; op2val:0x40637214;
op3val:0x7de7b44e; valaddr_reg:x13; val_offset:360*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 360*FLEN/8, x14, x11, x12)

inst_143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9f575; op2val:0x3fd2e25f;
op3val:0x7d5e8636; valaddr_reg:x13; val_offset:363*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 363*FLEN/8, x14, x11, x12)

inst_144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9f575; op2val:0x3fd2e25f;
op3val:0x7d5e8636; valaddr_reg:x13; val_offset:366*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 366*FLEN/8, x14, x11, x12)

inst_145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9f575; op2val:0x3fd2e25f;
op3val:0x7d5e8636; valaddr_reg:x13; val_offset:369*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 369*FLEN/8, x14, x11, x12)

inst_146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9f575; op2val:0x3fd2e25f;
op3val:0x7d5e8636; valaddr_reg:x13; val_offset:372*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 372*FLEN/8, x14, x11, x12)

inst_147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x231a6d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ecdc757; op2val:0x40231a6d;
op3val:0x7e8c6cae; valaddr_reg:x13; val_offset:375*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 375*FLEN/8, x14, x11, x12)

inst_148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea303ee; op2val:0x4089b4fe;
op3val:0x7f1ec16f; valaddr_reg:x13; val_offset:378*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:32 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 32, 0, x13, 378*FLEN/8, x14, x11, x12)

inst_149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea303ee; op2val:0x4089b4fe;
op3val:0x7f1ec16f; valaddr_reg:x13; val_offset:381*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:128 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 128, 0, x13, 381*FLEN/8, x14, x11, x12)

inst_150:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e16fa and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbe28e8; op2val:0x411e16fa;
op3val:0x7e2b7290; valaddr_reg:x13; val_offset:384*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:64 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 64, 0, x13, 384*FLEN/8, x14, x11, x12)
RVTEST_SIGBASE(x11,signature_x11_1)

inst_151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x46ac03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef0ef31; op2val:0x4046ac03;
op3val:0x7f35f5c9; valaddr_reg:x13; val_offset:387*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 0, 0, x13, 387*FLEN/8, x14, x11, x12)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2121839644,64,FLEN)
NAN_BOXED(1080259092,64,FLEN)
NAN_BOXED(2121839644,64,FLEN)
NAN_BOXED(2121839644,64,FLEN)
NAN_BOXED(2121839644,64,FLEN)
NAN_BOXED(2112336974,64,FLEN)
NAN_BOXED(2121839644,64,FLEN)
NAN_BOXED(1080259092,64,FLEN)
NAN_BOXED(2112336974,64,FLEN)
NAN_BOXED(2121839644,64,FLEN)
NAN_BOXED(1080259092,64,FLEN)
NAN_BOXED(1080259092,64,FLEN)
NAN_BOXED(2121839644,64,FLEN)
NAN_BOXED(1080259092,64,FLEN)
NAN_BOXED(2112336974,64,FLEN)
NAN_BOXED(2130310517,64,FLEN)
NAN_BOXED(2130310517,64,FLEN)
NAN_BOXED(2130310517,64,FLEN)
NAN_BOXED(2130310517,64,FLEN)
NAN_BOXED(1070785119,64,FLEN)
NAN_BOXED(1070785119,64,FLEN)
NAN_BOXED(2130310517,64,FLEN)
NAN_BOXED(1070785119,64,FLEN)
NAN_BOXED(2103346742,64,FLEN)
NAN_BOXED(2130310517,64,FLEN)
NAN_BOXED(2130310517,64,FLEN)
NAN_BOXED(2103346742,64,FLEN)
NAN_BOXED(2130310517,64,FLEN)
NAN_BOXED(1070785119,64,FLEN)
NAN_BOXED(2130310517,64,FLEN)
NAN_BOXED(2127415127,64,FLEN)
NAN_BOXED(1076042349,64,FLEN)
NAN_BOXED(2123132078,64,FLEN)
NAN_BOXED(2127415127,64,FLEN)
NAN_BOXED(2127415127,64,FLEN)
NAN_BOXED(2127415127,64,FLEN)
NAN_BOXED(2127415127,64,FLEN)
NAN_BOXED(1076042349,64,FLEN)
NAN_BOXED(2123132078,64,FLEN)
NAN_BOXED(2127415127,64,FLEN)
NAN_BOXED(1076042349,64,FLEN)
NAN_BOXED(2123132078,64,FLEN)
NAN_BOXED(2127415127,64,FLEN)
NAN_BOXED(1076042349,64,FLEN)
NAN_BOXED(2123132078,64,FLEN)
NAN_BOXED(2100440117,64,FLEN)
NAN_BOXED(1104145679,64,FLEN)
NAN_BOXED(2126699253,64,FLEN)
NAN_BOXED(2100440117,64,FLEN)
NAN_BOXED(1104145679,64,FLEN)
NAN_BOXED(2126699253,64,FLEN)
NAN_BOXED(2100440117,64,FLEN)
NAN_BOXED(1104145679,64,FLEN)
NAN_BOXED(2126699253,64,FLEN)
NAN_BOXED(2100440117,64,FLEN)
NAN_BOXED(1104145679,64,FLEN)
NAN_BOXED(2126699253,64,FLEN)
NAN_BOXED(2100440117,64,FLEN)
NAN_BOXED(1104145679,64,FLEN)
NAN_BOXED(2126699253,64,FLEN)
NAN_BOXED(2095472529,64,FLEN)
NAN_BOXED(1108930718,64,FLEN)
NAN_BOXED(2124842266,64,FLEN)
NAN_BOXED(2095472529,64,FLEN)
NAN_BOXED(1108930718,64,FLEN)
NAN_BOXED(2124842266,64,FLEN)
test_dataset_1:
NAN_BOXED(2095472529,32,FLEN)
NAN_BOXED(1108930718,32,FLEN)
NAN_BOXED(2124842266,32,FLEN)
NAN_BOXED(2095472529,32,FLEN)
NAN_BOXED(1108930718,32,FLEN)
NAN_BOXED(2124842266,32,FLEN)
NAN_BOXED(2095472529,32,FLEN)
NAN_BOXED(1108930718,32,FLEN)
NAN_BOXED(2124842266,32,FLEN)
NAN_BOXED(2102827145,32,FLEN)
NAN_BOXED(1098502753,32,FLEN)
NAN_BOXED(2106283470,32,FLEN)
NAN_BOXED(2102827145,32,FLEN)
NAN_BOXED(1098502753,32,FLEN)
NAN_BOXED(2106283470,32,FLEN)
NAN_BOXED(2102827145,32,FLEN)
NAN_BOXED(1098502753,32,FLEN)
NAN_BOXED(2106283470,32,FLEN)
NAN_BOXED(2102827145,32,FLEN)
NAN_BOXED(1098502753,32,FLEN)
NAN_BOXED(2106283470,32,FLEN)
NAN_BOXED(2102827145,32,FLEN)
NAN_BOXED(1098502753,32,FLEN)
NAN_BOXED(2106283470,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(1082766590,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1082766590,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(1082766590,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(1082766590,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2109614312,32,FLEN)
NAN_BOXED(1092491002,32,FLEN)
NAN_BOXED(2116776592,32,FLEN)
NAN_BOXED(2109614312,32,FLEN)
NAN_BOXED(1092491002,32,FLEN)
NAN_BOXED(2116776592,32,FLEN)
NAN_BOXED(2109614312,32,FLEN)
NAN_BOXED(1092491002,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2109614312,32,FLEN)
NAN_BOXED(1092491002,32,FLEN)
NAN_BOXED(2116776592,32,FLEN)
NAN_BOXED(2109614312,32,FLEN)
NAN_BOXED(1092491002,32,FLEN)
NAN_BOXED(2116776592,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1078373379,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1078373379,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1078373379,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1078373379,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1078373379,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
NAN_BOXED(2128452486,32,FLEN)
NAN_BOXED(1075504095,32,FLEN)
NAN_BOXED(2123912006,32,FLEN)
NAN_BOXED(2128452486,32,FLEN)
NAN_BOXED(1075504095,32,FLEN)
NAN_BOXED(2123912006,32,FLEN)
NAN_BOXED(2128452486,32,FLEN)
NAN_BOXED(1075504095,32,FLEN)
NAN_BOXED(2123912006,32,FLEN)
NAN_BOXED(2128452486,32,FLEN)
NAN_BOXED(1075504095,32,FLEN)
NAN_BOXED(2123912006,32,FLEN)
NAN_BOXED(2128452486,32,FLEN)
NAN_BOXED(1075504095,32,FLEN)
NAN_BOXED(2123912006,32,FLEN)
NAN_BOXED(2134601955,32,FLEN)
NAN_BOXED(1065957515,32,FLEN)
NAN_BOXED(2098141723,32,FLEN)
NAN_BOXED(2134601955,32,FLEN)
NAN_BOXED(1065957515,32,FLEN)
NAN_BOXED(2098141723,32,FLEN)
NAN_BOXED(2134601955,32,FLEN)
NAN_BOXED(1065957515,32,FLEN)
NAN_BOXED(2098141723,32,FLEN)
NAN_BOXED(2134601955,32,FLEN)
NAN_BOXED(1065957515,32,FLEN)
NAN_BOXED(2098141723,32,FLEN)
NAN_BOXED(2134601955,32,FLEN)
NAN_BOXED(1065957515,32,FLEN)
NAN_BOXED(2098141723,32,FLEN)
NAN_BOXED(2133119856,32,FLEN)
NAN_BOXED(1069566150,32,FLEN)
NAN_BOXED(2120117120,32,FLEN)
NAN_BOXED(2133119856,32,FLEN)
NAN_BOXED(1069566150,32,FLEN)
NAN_BOXED(2120117120,32,FLEN)
NAN_BOXED(2133119856,32,FLEN)
NAN_BOXED(1069566150,32,FLEN)
NAN_BOXED(2120117120,32,FLEN)
NAN_BOXED(2133119856,32,FLEN)
NAN_BOXED(1069566150,32,FLEN)
NAN_BOXED(2120117120,32,FLEN)
NAN_BOXED(2133119856,32,FLEN)
NAN_BOXED(1069566150,32,FLEN)
NAN_BOXED(2120117120,32,FLEN)
NAN_BOXED(2111673191,32,FLEN)
NAN_BOXED(1089992067,32,FLEN)
NAN_BOXED(2109009354,32,FLEN)
NAN_BOXED(2111673191,32,FLEN)
NAN_BOXED(1089992067,32,FLEN)
NAN_BOXED(2109009354,32,FLEN)
NAN_BOXED(2111673191,32,FLEN)
NAN_BOXED(1089992067,32,FLEN)
NAN_BOXED(2109009354,32,FLEN)
NAN_BOXED(2111673191,32,FLEN)
NAN_BOXED(1089992067,32,FLEN)
NAN_BOXED(2109009354,32,FLEN)
NAN_BOXED(2111673191,32,FLEN)
NAN_BOXED(1089992067,32,FLEN)
NAN_BOXED(2109009354,32,FLEN)
NAN_BOXED(2121067005,32,FLEN)
NAN_BOXED(1086088395,32,FLEN)
NAN_BOXED(2132587069,32,FLEN)
NAN_BOXED(2121067005,32,FLEN)
NAN_BOXED(1086088395,32,FLEN)
NAN_BOXED(2132587069,32,FLEN)
NAN_BOXED(2121067005,32,FLEN)
NAN_BOXED(1086088395,32,FLEN)
NAN_BOXED(2132587069,32,FLEN)
NAN_BOXED(2121067005,32,FLEN)
NAN_BOXED(1086088395,32,FLEN)
NAN_BOXED(2132587069,32,FLEN)
NAN_BOXED(2121067005,32,FLEN)
NAN_BOXED(1086088395,32,FLEN)
NAN_BOXED(2132587069,32,FLEN)
NAN_BOXED(2114636864,32,FLEN)
NAN_BOXED(1081752016,32,FLEN)
NAN_BOXED(2128565662,32,FLEN)
NAN_BOXED(2114636864,32,FLEN)
NAN_BOXED(1081752016,32,FLEN)
NAN_BOXED(2128565662,32,FLEN)
NAN_BOXED(2114636864,32,FLEN)
NAN_BOXED(1081752016,32,FLEN)
NAN_BOXED(2128565662,32,FLEN)
NAN_BOXED(2114636864,32,FLEN)
NAN_BOXED(1081752016,32,FLEN)
NAN_BOXED(2128565662,32,FLEN)
NAN_BOXED(2114636864,32,FLEN)
NAN_BOXED(1081752016,32,FLEN)
NAN_BOXED(2128565662,32,FLEN)
NAN_BOXED(2130007999,32,FLEN)
NAN_BOXED(1053180206,32,FLEN)
NAN_BOXED(2123300906,32,FLEN)
NAN_BOXED(2130007999,32,FLEN)
NAN_BOXED(1053180206,32,FLEN)
NAN_BOXED(2123300906,32,FLEN)
NAN_BOXED(2130007999,32,FLEN)
NAN_BOXED(1053180206,32,FLEN)
NAN_BOXED(2123300906,32,FLEN)
NAN_BOXED(2130007999,32,FLEN)
NAN_BOXED(1053180206,32,FLEN)
NAN_BOXED(2123300906,32,FLEN)
NAN_BOXED(2130007999,32,FLEN)
NAN_BOXED(1053180206,32,FLEN)
NAN_BOXED(2123300906,32,FLEN)
NAN_BOXED(2127713656,32,FLEN)
NAN_BOXED(1058156613,32,FLEN)
NAN_BOXED(2101404481,32,FLEN)
NAN_BOXED(2127713656,32,FLEN)
NAN_BOXED(1058156613,32,FLEN)
NAN_BOXED(2101404481,32,FLEN)
NAN_BOXED(2127713656,32,FLEN)
NAN_BOXED(1058156613,32,FLEN)
NAN_BOXED(2101404481,32,FLEN)
NAN_BOXED(2127713656,32,FLEN)
NAN_BOXED(1058156613,32,FLEN)
NAN_BOXED(2101404481,32,FLEN)
NAN_BOXED(2127713656,32,FLEN)
NAN_BOXED(1058156613,32,FLEN)
NAN_BOXED(2101404481,32,FLEN)
NAN_BOXED(2100762691,32,FLEN)
NAN_BOXED(3208456888,32,FLEN)
NAN_BOXED(2115906849,32,FLEN)
NAN_BOXED(2100762691,32,FLEN)
NAN_BOXED(3208456888,32,FLEN)
NAN_BOXED(2115906849,32,FLEN)
NAN_BOXED(2100762691,32,FLEN)
NAN_BOXED(3208456888,32,FLEN)
NAN_BOXED(2115906849,32,FLEN)
NAN_BOXED(2100762691,32,FLEN)
NAN_BOXED(3208456888,32,FLEN)
NAN_BOXED(2115906849,32,FLEN)
NAN_BOXED(2100762691,32,FLEN)
NAN_BOXED(3208456888,32,FLEN)
NAN_BOXED(2115906849,32,FLEN)
NAN_BOXED(2130879236,32,FLEN)
NAN_BOXED(1068400834,32,FLEN)
NAN_BOXED(2124689928,32,FLEN)
NAN_BOXED(2130879236,32,FLEN)
NAN_BOXED(1068400834,32,FLEN)
NAN_BOXED(2124689928,32,FLEN)
NAN_BOXED(2130879236,32,FLEN)
NAN_BOXED(1068400834,32,FLEN)
NAN_BOXED(2124689928,32,FLEN)
NAN_BOXED(2130879236,32,FLEN)
NAN_BOXED(1068400834,32,FLEN)
NAN_BOXED(2124689928,32,FLEN)
NAN_BOXED(2130879236,32,FLEN)
NAN_BOXED(1068400834,32,FLEN)
NAN_BOXED(2124689928,32,FLEN)
NAN_BOXED(2121352152,32,FLEN)
NAN_BOXED(1049326358,32,FLEN)
NAN_BOXED(2128665362,32,FLEN)
NAN_BOXED(2121352152,32,FLEN)
NAN_BOXED(1049326358,32,FLEN)
NAN_BOXED(2128665362,32,FLEN)
NAN_BOXED(2121352152,32,FLEN)
NAN_BOXED(1049326358,32,FLEN)
NAN_BOXED(2128665362,32,FLEN)
NAN_BOXED(2121352152,32,FLEN)
NAN_BOXED(1049326358,32,FLEN)
NAN_BOXED(2128665362,32,FLEN)
NAN_BOXED(2121352152,32,FLEN)
NAN_BOXED(1049326358,32,FLEN)
NAN_BOXED(2128665362,32,FLEN)
NAN_BOXED(2125333973,32,FLEN)
NAN_BOXED(1077382796,32,FLEN)
NAN_BOXED(2120628374,32,FLEN)
NAN_BOXED(2125333973,32,FLEN)
NAN_BOXED(1077382796,32,FLEN)
NAN_BOXED(2120628374,32,FLEN)
NAN_BOXED(2125333973,32,FLEN)
NAN_BOXED(1077382796,32,FLEN)
NAN_BOXED(2120628374,32,FLEN)
NAN_BOXED(2125333973,32,FLEN)
NAN_BOXED(1077382796,32,FLEN)
NAN_BOXED(2120628374,32,FLEN)
NAN_BOXED(2125333973,32,FLEN)
NAN_BOXED(1077382796,32,FLEN)
NAN_BOXED(2120628374,32,FLEN)
NAN_BOXED(2132313430,32,FLEN)
NAN_BOXED(3200385453,32,FLEN)
NAN_BOXED(2131113209,32,FLEN)
NAN_BOXED(2132313430,32,FLEN)
NAN_BOXED(3200385453,32,FLEN)
NAN_BOXED(2131113209,32,FLEN)
NAN_BOXED(2132313430,32,FLEN)
NAN_BOXED(3200385453,32,FLEN)
NAN_BOXED(2131113209,32,FLEN)
NAN_BOXED(2132313430,32,FLEN)
NAN_BOXED(3200385453,32,FLEN)
NAN_BOXED(2131113209,32,FLEN)
NAN_BOXED(2132313430,32,FLEN)
NAN_BOXED(3200385453,32,FLEN)
NAN_BOXED(2131113209,32,FLEN)
NAN_BOXED(2117826387,32,FLEN)
NAN_BOXED(1093189495,32,FLEN)
NAN_BOXED(2128385061,32,FLEN)
NAN_BOXED(2117826387,32,FLEN)
NAN_BOXED(1093189495,32,FLEN)
NAN_BOXED(2128385061,32,FLEN)
NAN_BOXED(2117826387,32,FLEN)
NAN_BOXED(1093189495,32,FLEN)
NAN_BOXED(2128385061,32,FLEN)
NAN_BOXED(2117826387,32,FLEN)
NAN_BOXED(1093189495,32,FLEN)
NAN_BOXED(2128385061,32,FLEN)
NAN_BOXED(2117826387,32,FLEN)
NAN_BOXED(1093189495,32,FLEN)
NAN_BOXED(2128385061,32,FLEN)
NAN_BOXED(2127146218,32,FLEN)
NAN_BOXED(3221820196,32,FLEN)
NAN_BOXED(2133329601,32,FLEN)
NAN_BOXED(2127146218,32,FLEN)
NAN_BOXED(3221820196,32,FLEN)
NAN_BOXED(2133329601,32,FLEN)
NAN_BOXED(2127146218,32,FLEN)
NAN_BOXED(3221820196,32,FLEN)
NAN_BOXED(2133329601,32,FLEN)
NAN_BOXED(2127146218,32,FLEN)
NAN_BOXED(3221820196,32,FLEN)
NAN_BOXED(2133329601,32,FLEN)
NAN_BOXED(2127146218,32,FLEN)
NAN_BOXED(3221820196,32,FLEN)
NAN_BOXED(2133329601,32,FLEN)
NAN_BOXED(2131496369,32,FLEN)
NAN_BOXED(1086069626,32,FLEN)
NAN_BOXED(2120032989,32,FLEN)
NAN_BOXED(2131496369,32,FLEN)
NAN_BOXED(1086069626,32,FLEN)
NAN_BOXED(2120032989,32,FLEN)
NAN_BOXED(2131496369,32,FLEN)
NAN_BOXED(1086069626,32,FLEN)
NAN_BOXED(2120032989,32,FLEN)
NAN_BOXED(2131496369,32,FLEN)
NAN_BOXED(1086069626,32,FLEN)
NAN_BOXED(2120032989,32,FLEN)
NAN_BOXED(2131496369,32,FLEN)
NAN_BOXED(1086069626,32,FLEN)
NAN_BOXED(2120032989,32,FLEN)
NAN_BOXED(2134651277,32,FLEN)
NAN_BOXED(3229448197,32,FLEN)
NAN_BOXED(2109036889,32,FLEN)
NAN_BOXED(2134651277,32,FLEN)
NAN_BOXED(3229448197,32,FLEN)
NAN_BOXED(2109036889,32,FLEN)
NAN_BOXED(2134651277,32,FLEN)
NAN_BOXED(3229448197,32,FLEN)
NAN_BOXED(2109036889,32,FLEN)
NAN_BOXED(2134651277,32,FLEN)
NAN_BOXED(3229448197,32,FLEN)
NAN_BOXED(2109036889,32,FLEN)
NAN_BOXED(2134651277,32,FLEN)
NAN_BOXED(3229448197,32,FLEN)
NAN_BOXED(2109036889,32,FLEN)
NAN_BOXED(2124451620,32,FLEN)
NAN_BOXED(1101499698,32,FLEN)
NAN_BOXED(2131844861,32,FLEN)
NAN_BOXED(2124451620,32,FLEN)
NAN_BOXED(1101499698,32,FLEN)
NAN_BOXED(2131844861,32,FLEN)
NAN_BOXED(2124451620,32,FLEN)
NAN_BOXED(1101499698,32,FLEN)
NAN_BOXED(2131844861,32,FLEN)
NAN_BOXED(2124451620,32,FLEN)
NAN_BOXED(1101499698,32,FLEN)
NAN_BOXED(2131844861,32,FLEN)
NAN_BOXED(2124451620,32,FLEN)
NAN_BOXED(1101499698,32,FLEN)
NAN_BOXED(2131844861,32,FLEN)
NAN_BOXED(2112451263,32,FLEN)
NAN_BOXED(3259346385,32,FLEN)
NAN_BOXED(2126234374,32,FLEN)
NAN_BOXED(2112451263,32,FLEN)
NAN_BOXED(3259346385,32,FLEN)
NAN_BOXED(2126234374,32,FLEN)
NAN_BOXED(2112451263,32,FLEN)
NAN_BOXED(3259346385,32,FLEN)
NAN_BOXED(2126234374,32,FLEN)
NAN_BOXED(2112451263,32,FLEN)
NAN_BOXED(3259346385,32,FLEN)
NAN_BOXED(2126234374,32,FLEN)
NAN_BOXED(2112451263,32,FLEN)
NAN_BOXED(3259346385,32,FLEN)
NAN_BOXED(2126234374,32,FLEN)
NAN_BOXED(2121839644,32,FLEN)
NAN_BOXED(1080259092,32,FLEN)
NAN_BOXED(2112336974,32,FLEN)
NAN_BOXED(2121839644,32,FLEN)
NAN_BOXED(1080259092,32,FLEN)
NAN_BOXED(2112336974,32,FLEN)
NAN_BOXED(2121839644,32,FLEN)
NAN_BOXED(1080259092,32,FLEN)
NAN_BOXED(2112336974,32,FLEN)
NAN_BOXED(2130310517,32,FLEN)
NAN_BOXED(1070785119,32,FLEN)
NAN_BOXED(2103346742,32,FLEN)
NAN_BOXED(2130310517,32,FLEN)
NAN_BOXED(1070785119,32,FLEN)
NAN_BOXED(2103346742,32,FLEN)
NAN_BOXED(2130310517,32,FLEN)
NAN_BOXED(1070785119,32,FLEN)
NAN_BOXED(2103346742,32,FLEN)
NAN_BOXED(2130310517,32,FLEN)
NAN_BOXED(1070785119,32,FLEN)
NAN_BOXED(2103346742,32,FLEN)
NAN_BOXED(2127415127,32,FLEN)
NAN_BOXED(1076042349,32,FLEN)
NAN_BOXED(2123132078,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(1082766590,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(1082766590,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2109614312,32,FLEN)
NAN_BOXED(1092491002,32,FLEN)
NAN_BOXED(2116776592,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1078373379,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 46*((SIGALIGN)/4),4,0xdeadbeef


signature_x11_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x11_1:
    .fill 2*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
