
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Wed Jun 21 10:33:04 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/update/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/update/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fdiv.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fdiv.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fdiv_b20 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fdiv_b20)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rd != rs1, rs1==x30, rs2==x31, rd==x31,fs1 == 0 and fe1 == 0xfb and fm1 == 0x60f718 and fs2 == 1 and fe2 == 0xe9 and fm2 == 0x33f8e0 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x31; dest:x31; op1val:0x7de0f718; op2val:0xf4b3f8e0;
   valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x31, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x31, rs2==x29, rd==x30,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a0433 and fs2 == 0 and fe2 == 0xb9 and fm2 == 0x1dbba8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x31; op2:x29; dest:x30; op1val:0x7f0a0433; op2val:0x5c9dbba8;
   valaddr_reg:x3; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x30, x31, x29, dyn, 0, 0, x3, 2*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd, rs1==x28, rs2==x28, rd==x28,fs1 == 0 and fe1 == 0xfb and fm1 == 0x761c0c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x28; op2:x28; dest:x28; op1val:0x7df61c0c; op2val:0x7df61c0c;
   valaddr_reg:x3; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x28, x28, x28, dyn, 0, 0, x3, 4*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rs2 != rd, rs1==x27, rs2==x27, rd==x29,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0748c6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x27; op2:x27; dest:x29; op1val:0x7f0748c6; op2val:0x7f0748c6;
   valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x29, x27, x27, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rd != rs2, rs1==x26, rs2==x30, rd==x26,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0235b2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x26; op2:x30; dest:x26; op1val:0x7f0235b2; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x26, x26, x30, dyn, 0, 0, x3, 8*FLEN/8, x4, x1, x2)

inst_5:
// rs1==x29, rs2==x26, rd==x27,fs1 == 0 and fe1 == 0xfd and fm1 == 0x512a66 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x29; op2:x26; dest:x27; op1val:0x7ed12a66; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x27, x29, x26, dyn, 0, 0, x3, 10*FLEN/8, x4, x1, x2)

inst_6:
// rs1==x24, rs2==x23, rd==x25,fs1 == 0 and fe1 == 0xfc and fm1 == 0x296bac and fs2 == 1 and fe2 == 0x97 and fm2 == 0x169899 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x24; op2:x23; dest:x25; op1val:0x7e296bac; op2val:0xcb969899;
   valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x25, x24, x23, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_7:
// rs1==x23, rs2==x25, rd==x24,fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b506b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x23; op2:x25; dest:x24; op1val:0x7f3b506b; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x24, x23, x25, dyn, 0, 0, x3, 14*FLEN/8, x4, x1, x2)

inst_8:
// rs1==x25, rs2==x24, rd==x23,fs1 == 0 and fe1 == 0xfe and fm1 == 0x192dff and fs2 == 0 and fe2 == 0xb8 and fm2 == 0x236443 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x25; op2:x24; dest:x23; op1val:0x7f192dff; op2val:0x5c236443;
   valaddr_reg:x3; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x23, x25, x24, dyn, 0, 0, x3, 16*FLEN/8, x4, x1, x2)

inst_9:
// rs1==x21, rs2==x20, rd==x22,fs1 == 0 and fe1 == 0xfd and fm1 == 0x465fcc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x21; op2:x20; dest:x22; op1val:0x7ec65fcc; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x22, x21, x20, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_10:
// rs1==x20, rs2==x22, rd==x21,fs1 == 0 and fe1 == 0xfc and fm1 == 0x2b6a13 and fs2 == 0 and fe2 == 0xad and fm2 == 0x4b2862 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x20; op2:x22; dest:x21; op1val:0x7e2b6a13; op2val:0x56cb2862;
   valaddr_reg:x3; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x21, x20, x22, dyn, 0, 0, x3, 20*FLEN/8, x4, x1, x2)

inst_11:
// rs1==x22, rs2==x21, rd==x20,fs1 == 0 and fe1 == 0xfd and fm1 == 0x7906c5 and fs2 == 0 and fe2 == 0x8b and fm2 == 0x1f607e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x22; op2:x21; dest:x20; op1val:0x7ef906c5; op2val:0x459f607e;
   valaddr_reg:x3; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x20, x22, x21, dyn, 0, 0, x3, 22*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x18, rs2==x17, rd==x19,fs1 == 0 and fe1 == 0xfd and fm1 == 0x17a40d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x18; op2:x17; dest:x19; op1val:0x7e97a40d; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x19, x18, x17, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x17, rs2==x19, rd==x18,fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d1ff5 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x17; op2:x19; dest:x18; op1val:0x7edd1ff5; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:26*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x18, x17, x19, dyn, 0, 0, x3, 26*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x19, rs2==x18, rd==x17,fs1 == 0 and fe1 == 0xfc and fm1 == 0x76b77e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x19; op2:x18; dest:x17; op1val:0x7e76b77e; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:28*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x17, x19, x18, dyn, 0, 0, x3, 28*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x15, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0xfd and fm1 == 0x7248b2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x15; op2:x14; dest:x16; op1val:0x7ef248b2; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x16, x15, x14, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rd==x15,fs1 == 0 and fe1 == 0xfa and fm1 == 0x34967e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x142cb6 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x14; op2:x16; dest:x15; op1val:0x7d34967e; op2val:0x40942cb6;
   valaddr_reg:x3; val_offset:32*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x15, x14, x16, dyn, 0, 0, x3, 32*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x16, rs2==x15, rd==x14,fs1 == 0 and fe1 == 0xfc and fm1 == 0x655450 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x16; op2:x15; dest:x14; op1val:0x7e655450; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:34*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x14, x16, x15, dyn, 0, 0, x3, 34*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x11, rd==x13,fs1 == 0 and fe1 == 0xfe and fm1 == 0x39d661 and fs2 == 0 and fe2 == 0xba and fm2 == 0x187b63 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x12; op2:x11; dest:x13; op1val:0x7f39d661; op2val:0x5d187b63;
   valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x13, x12, x11, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x11, rs2==x13, rd==x12,fs1 == 0 and fe1 == 0xfe and fm1 == 0x281a41 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x2ac557 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x11; op2:x13; dest:x12; op1val:0x7f281a41; op2val:0xff2ac557;
   valaddr_reg:x3; val_offset:38*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x12, x11, x13, dyn, 0, 0, x3, 38*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x13, rs2==x12, rd==x11,fs1 == 0 and fe1 == 0xfc and fm1 == 0x6b4e0e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x13; op2:x12; dest:x11; op1val:0x7e6b4e0e; op2val:0x7f7fffff;
   valaddr_reg:x3; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x11, x13, x12, dyn, 0, 0, x3, 40*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x9, rs2==x8, rd==x10,fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d5b2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x9; op2:x8; dest:x10; op1val:0x7f24d5b2; op2val:0xff7fffff;
   valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x10, x9, x8, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x11,test_dataset_1)

inst_22:
// rs1==x8, rs2==x10, rd==x9,fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e5bf8 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x24083c and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x8; op2:x10; dest:x9; op1val:0x7e6e5bf8; op2val:0x4424083c;
   valaddr_reg:x11; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x9, x8, x10, dyn, 0, 0, x11, 0*FLEN/8, x12, x1, x2)

inst_23:
// rs1==x10, rs2==x9, rd==x8,fs1 == 0 and fe1 == 0xfe and fm1 == 0x3457e7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x10; op2:x9; dest:x8; op1val:0x7f3457e7; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:2*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x8, x10, x9, dyn, 0, 0, x11, 2*FLEN/8, x12, x1, x2)

inst_24:
// rs1==x6, rs2==x5, rd==x7,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ed153 and fs2 == 1 and fe2 == 0x92 and fm2 == 0x1c3eb7 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x6; op2:x5; dest:x7; op1val:0x7f0ed153; op2val:0xc91c3eb7;
   valaddr_reg:x11; val_offset:4*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x2
*/
TEST_FPRR_OP(fdiv.s, x7, x6, x5, dyn, 0, 0, x11, 4*FLEN/8, x12, x1, x2)
RVTEST_SIGBASE(x8,signature_x8_0)

inst_25:
// rs1==x5, rs2==x7, rd==x6,fs1 == 0 and fe1 == 0xfd and fm1 == 0x1fcf65 and fs2 == 0 and fe2 == 0xd7 and fm2 == 0x25a218 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x5; op2:x7; dest:x6; op1val:0x7e9fcf65; op2val:0x6ba5a218;
   valaddr_reg:x11; val_offset:6*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x6, x5, x7, dyn, 0, 0, x11, 6*FLEN/8, x12, x8, x9)

inst_26:
// rs1==x7, rs2==x6, rd==x5,fs1 == 0 and fe1 == 0xfc and fm1 == 0x41cf9e and fs2 == 1 and fe2 == 0xda and fm2 == 0x244a46 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x7; op2:x6; dest:x5; op1val:0x7e41cf9e; op2val:0xed244a46;
   valaddr_reg:x11; val_offset:8*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x5, x7, x6, dyn, 0, 0, x11, 8*FLEN/8, x12, x8, x9)

inst_27:
// rs1==x3, rs2==x2, rd==x4,fs1 == 0 and fe1 == 0xf7 and fm1 == 0x506932 and fs2 == 0 and fe2 == 0x99 and fm2 == 0x716acc and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x3; op2:x2; dest:x4; op1val:0x7bd06932; op2val:0x4cf16acc;
   valaddr_reg:x11; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x4, x3, x2, dyn, 0, 0, x11, 10*FLEN/8, x12, x8, x9)

inst_28:
// rs1==x2, rs2==x4, rd==x3,fs1 == 0 and fe1 == 0xfe and fm1 == 0x28b6bd and fs2 == 0 and fe2 == 0xbf and fm2 == 0x17043e and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x2; op2:x4; dest:x3; op1val:0x7f28b6bd; op2val:0x5f97043e;
   valaddr_reg:x11; val_offset:12*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x3, x2, x4, dyn, 0, 0, x11, 12*FLEN/8, x12, x8, x9)

inst_29:
// rs1==x4, rs2==x3, rd==x2,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x68f58b and fs2 == 1 and fe2 == 0xbf and fm2 == 0x756c07 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x4; op2:x3; dest:x2; op1val:0x7ce8f58b; op2val:0xdff56c07;
   valaddr_reg:x11; val_offset:14*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x2, x4, x3, dyn, 0, 0, x11, 14*FLEN/8, x12, x8, x9)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d53d7 and fs2 == 1 and fe2 == 0xfc and fm2 == 0x377d30 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x1; op2:x30; dest:x31; op1val:0x7f1d53d7; op2val:0xfe377d30;
   valaddr_reg:x11; val_offset:16*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x1, x30, dyn, 0, 0, x11, 16*FLEN/8, x12, x8, x9)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x38be1b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x0; op2:x30; dest:x31; op1val:0x0; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:18*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x0, x30, dyn, 0, 0, x11, 18*FLEN/8, x12, x8, x9)

inst_32:
// rs2==x1,fs1 == 0 and fe1 == 0xfd and fm1 == 0x5afcdb and fs2 == 1 and fe2 == 0x92 and fm2 == 0x6f10c4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x1; dest:x31; op1val:0x7edafcdb; op2val:0xc96f10c4;
   valaddr_reg:x11; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x1, dyn, 0, 0, x11, 20*FLEN/8, x12, x8, x9)

inst_33:
// rs2==x0,fs1 == 0 and fe1 == 0xfc and fm1 == 0x03b9a1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x0; dest:x31; op1val:0x7e03b9a1; op2val:0x0;
   valaddr_reg:x11; val_offset:22*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x0, dyn, 0, 0, x11, 22*FLEN/8, x12, x8, x9)

inst_34:
// rd==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x269d2c and fs2 == 1 and fe2 == 0x83 and fm2 == 0x519910 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x31; op2:x30; dest:x1; op1val:0x7f269d2c; op2val:0xc1d19910;
   valaddr_reg:x11; val_offset:24*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x1, x31, x30, dyn, 0, 0, x11, 24*FLEN/8, x12, x8, x9)

inst_35:
// rd==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x3af6ff and fs2 == 1 and fe2 == 0xa4 and fm2 == 0x799c89 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x31; op2:x30; dest:x0; op1val:0x7f3af6ff; op2val:0xd2799c89;
   valaddr_reg:x11; val_offset:26*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x0, x31, x30, dyn, 0, 0, x11, 26*FLEN/8, x12, x8, x9)

inst_36:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x072c24 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f072c24; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:28*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 28*FLEN/8, x12, x8, x9)

inst_37:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x436852 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7ec36852; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 30*FLEN/8, x12, x8, x9)

inst_38:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1123d8 and fs2 == 1 and fe2 == 0xbd and fm2 == 0x695156 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e9123d8; op2val:0xdee95156;
   valaddr_reg:x11; val_offset:32*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 32*FLEN/8, x12, x8, x9)

inst_39:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0538b1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e8538b1; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:34*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 34*FLEN/8, x12, x8, x9)

inst_40:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1e0667 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e1e0667; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:36*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 36*FLEN/8, x12, x8, x9)

inst_41:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x016ff7 and fs2 == 1 and fe2 == 0xc9 and fm2 == 0x0990a3 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f016ff7; op2val:0xe48990a3;
   valaddr_reg:x11; val_offset:38*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 38*FLEN/8, x12, x8, x9)

inst_42:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2640ba and fs2 == 0 and fe2 == 0xbf and fm2 == 0x4688b4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7ea640ba; op2val:0x5fc688b4;
   valaddr_reg:x11; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 40*FLEN/8, x12, x8, x9)

inst_43:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x151546 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e151546; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:42*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 42*FLEN/8, x12, x8, x9)

inst_44:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x206546 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7da06546; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:44*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 44*FLEN/8, x12, x8, x9)

inst_45:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7fba49 and fs2 == 1 and fe2 == 0xf7 and fm2 == 0x5bc718 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7effba49; op2val:0xfbdbc718;
   valaddr_reg:x11; val_offset:46*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 46*FLEN/8, x12, x8, x9)

inst_46:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x636240 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e636240; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:48*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 48*FLEN/8, x12, x8, x9)

inst_47:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fec54 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7ebfec54; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:50*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 50*FLEN/8, x12, x8, x9)

inst_48:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x79dd8e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e79dd8e; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:52*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 52*FLEN/8, x12, x8, x9)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2759f0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x351a1b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f2759f0; op2val:0xc0b51a1b;
   valaddr_reg:x11; val_offset:54*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 54*FLEN/8, x12, x8, x9)

inst_50:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcfc and fs2 == 0 and fe2 == 0xe8 and fm2 == 0x58de83 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f2cbcfc; op2val:0x7458de83;
   valaddr_reg:x11; val_offset:56*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 56*FLEN/8, x12, x8, x9)

inst_51:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e539a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7c5e539a; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:58*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 58*FLEN/8, x12, x8, x9)

inst_52:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a414e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e1a414e; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:60*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 60*FLEN/8, x12, x8, x9)

inst_53:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7bb471 and fs2 == 0 and fe2 == 0xb6 and fm2 == 0x789bff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e7bb471; op2val:0x5b789bff;
   valaddr_reg:x11; val_offset:62*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 62*FLEN/8, x12, x8, x9)

inst_54:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d8377 and fs2 == 1 and fe2 == 0x91 and fm2 == 0x76277d and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f3d8377; op2val:0xc8f6277d;
   valaddr_reg:x11; val_offset:64*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 64*FLEN/8, x12, x8, x9)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x164749 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f164749; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:66*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 66*FLEN/8, x12, x8, x9)

inst_56:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x023675 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e823675; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:68*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 68*FLEN/8, x12, x8, x9)

inst_57:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x239b5c and fs2 == 0 and fe2 == 0xe7 and fm2 == 0x311bbd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e239b5c; op2val:0x73b11bbd;
   valaddr_reg:x11; val_offset:70*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 70*FLEN/8, x12, x8, x9)

inst_58:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x017ed0 and fs2 == 0 and fe2 == 0x94 and fm2 == 0x317fe2 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f017ed0; op2val:0x4a317fe2;
   valaddr_reg:x11; val_offset:72*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 72*FLEN/8, x12, x8, x9)

inst_59:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20d6ae and fs2 == 1 and fe2 == 0xf0 and fm2 == 0x41dcec and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f20d6ae; op2val:0xf841dcec;
   valaddr_reg:x11; val_offset:74*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 74*FLEN/8, x12, x8, x9)

inst_60:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x32fae0 and fs2 == 0 and fe2 == 0xc2 and fm2 == 0x36e76b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f32fae0; op2val:0x6136e76b;
   valaddr_reg:x11; val_offset:76*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 76*FLEN/8, x12, x8, x9)

inst_61:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0409cf and fs2 == 1 and fe2 == 0xb3 and fm2 == 0x3ed825 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e8409cf; op2val:0xd9bed825;
   valaddr_reg:x11; val_offset:78*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 78*FLEN/8, x12, x8, x9)

inst_62:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x296b63 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x3a1fe4 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f296b63; op2val:0xc43a1fe4;
   valaddr_reg:x11; val_offset:80*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 80*FLEN/8, x12, x8, x9)

inst_63:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03ecd6 and fs2 == 1 and fe2 == 0xbf and fm2 == 0x081dd1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f03ecd6; op2val:0xdf881dd1;
   valaddr_reg:x11; val_offset:82*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 82*FLEN/8, x12, x8, x9)

inst_64:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a0c29 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7eba0c29; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:84*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 84*FLEN/8, x12, x8, x9)

inst_65:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d37b2 and fs2 == 0 and fe2 == 0xed and fm2 == 0x54eb08 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f3d37b2; op2val:0x76d4eb08;
   valaddr_reg:x11; val_offset:86*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 86*FLEN/8, x12, x8, x9)

inst_66:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x34342f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x7cb837 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e34342f; op2val:0x43fcb837;
   valaddr_reg:x11; val_offset:88*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 88*FLEN/8, x12, x8, x9)

inst_67:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b4a10 and fs2 == 0 and fe2 == 0x9e and fm2 == 0x3c1678 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f0b4a10; op2val:0x4f3c1678;
   valaddr_reg:x11; val_offset:90*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 90*FLEN/8, x12, x8, x9)

inst_68:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02119e and fs2 == 0 and fe2 == 0xec and fm2 == 0x25b1fa and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7d82119e; op2val:0x7625b1fa;
   valaddr_reg:x11; val_offset:92*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 92*FLEN/8, x12, x8, x9)

inst_69:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x025339 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x064930 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e025339; op2val:0x7c864930;
   valaddr_reg:x11; val_offset:94*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 94*FLEN/8, x12, x8, x9)

inst_70:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ee8de and fs2 == 0 and fe2 == 0xac and fm2 == 0x6b9400 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f2ee8de; op2val:0x566b9400;
   valaddr_reg:x11; val_offset:96*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 96*FLEN/8, x12, x8, x9)

inst_71:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x238f3f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e238f3f; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:98*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 98*FLEN/8, x12, x8, x9)

inst_72:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11c013 and fs2 == 1 and fe2 == 0xf2 and fm2 == 0x3d7983 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f11c013; op2val:0xf93d7983;
   valaddr_reg:x11; val_offset:100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 100*FLEN/8, x12, x8, x9)

inst_73:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x667aed and fs2 == 0 and fe2 == 0xe0 and fm2 == 0x0103f8 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7ee67aed; op2val:0x700103f8;
   valaddr_reg:x11; val_offset:102*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 102*FLEN/8, x12, x8, x9)

inst_74:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x217f53 and fs2 == 0 and fe2 == 0xe3 and fm2 == 0x5d82bd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f217f53; op2val:0x71dd82bd;
   valaddr_reg:x11; val_offset:104*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 104*FLEN/8, x12, x8, x9)

inst_75:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d5a7c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e8d5a7c; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:106*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 106*FLEN/8, x12, x8, x9)

inst_76:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02ab65 and fs2 == 1 and fe2 == 0xef and fm2 == 0x5dffc1 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e82ab65; op2val:0xf7ddffc1;
   valaddr_reg:x11; val_offset:108*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 108*FLEN/8, x12, x8, x9)

inst_77:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5fa740 and fs2 == 0 and fe2 == 0x9f and fm2 == 0x3d6968 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e5fa740; op2val:0x4fbd6968;
   valaddr_reg:x11; val_offset:110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 110*FLEN/8, x12, x8, x9)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x268b6a and fs2 == 1 and fe2 == 0xef and fm2 == 0x3935cd and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f268b6a; op2val:0xf7b935cd;
   valaddr_reg:x11; val_offset:112*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 112*FLEN/8, x12, x8, x9)

inst_79:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x67ede5 and fs2 == 1 and fe2 == 0xaa and fm2 == 0x7a8f9b and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7ee7ede5; op2val:0xd57a8f9b;
   valaddr_reg:x11; val_offset:114*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 114*FLEN/8, x12, x8, x9)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x373a1e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f373a1e; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:116*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 116*FLEN/8, x12, x8, x9)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a5ada and fs2 == 0 and fe2 == 0xd0 and fm2 == 0x2f4d13 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f2a5ada; op2val:0x682f4d13;
   valaddr_reg:x11; val_offset:118*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 118*FLEN/8, x12, x8, x9)

inst_82:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4fe433 and fs2 == 0 and fe2 == 0x9c and fm2 == 0x3feae5 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7dcfe433; op2val:0x4e3feae5;
   valaddr_reg:x11; val_offset:120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 120*FLEN/8, x12, x8, x9)

inst_83:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53a642 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7ed3a642; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:122*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 122*FLEN/8, x12, x8, x9)

inst_84:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x202a98 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7da02a98; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:124*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 124*FLEN/8, x12, x8, x9)

inst_85:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x70766e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7cf0766e; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:126*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 126*FLEN/8, x12, x8, x9)

inst_86:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x60d9a4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7d60d9a4; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:128*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 128*FLEN/8, x12, x8, x9)

inst_87:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x264de7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f264de7; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 130*FLEN/8, x12, x8, x9)

inst_88:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17517f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f17517f; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:132*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 132*FLEN/8, x12, x8, x9)

inst_89:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f12b9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f1f12b9; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:134*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 134*FLEN/8, x12, x8, x9)

inst_90:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02e795 and fs2 == 1 and fe2 == 0xd6 and fm2 == 0x4dad56 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e82e795; op2val:0xeb4dad56;
   valaddr_reg:x11; val_offset:136*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 136*FLEN/8, x12, x8, x9)

inst_91:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c3b3e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7eec3b3e; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:138*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 138*FLEN/8, x12, x8, x9)

inst_92:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16201f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x631e55 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f16201f; op2val:0x7ee31e55;
   valaddr_reg:x11; val_offset:140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 140*FLEN/8, x12, x8, x9)

inst_93:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x112ace and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e912ace; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:142*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 142*FLEN/8, x12, x8, x9)

inst_94:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b2e1a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7edb2e1a; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:144*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 144*FLEN/8, x12, x8, x9)

inst_95:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bcff9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e2bcff9; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:146*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 146*FLEN/8, x12, x8, x9)

inst_96:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7b1d83 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7d7b1d83; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:148*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 148*FLEN/8, x12, x8, x9)

inst_97:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cd7ff and fs2 == 1 and fe2 == 0xf8 and fm2 == 0x6ccaee and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e4cd7ff; op2val:0xfc6ccaee;
   valaddr_reg:x11; val_offset:150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 150*FLEN/8, x12, x8, x9)

inst_98:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b0708 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x0d7389 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f2b0708; op2val:0xc30d7389;
   valaddr_reg:x11; val_offset:152*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 152*FLEN/8, x12, x8, x9)

inst_99:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58bf61 and fs2 == 1 and fe2 == 0xab and fm2 == 0x17657f and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7ed8bf61; op2val:0xd597657f;
   valaddr_reg:x11; val_offset:154*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 154*FLEN/8, x12, x8, x9)

inst_100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x319ce6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f319ce6; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:156*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 156*FLEN/8, x12, x8, x9)

inst_101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2fc88c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7eafc88c; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:158*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 158*FLEN/8, x12, x8, x9)

inst_102:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x761c0c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7df61c0c; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 160*FLEN/8, x12, x8, x9)

inst_103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0748c6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f0748c6; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:162*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 162*FLEN/8, x12, x8, x9)

inst_104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x38be1b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f38be1b; op2val:0xff7fffff;
   valaddr_reg:x11; val_offset:164*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 164*FLEN/8, x12, x8, x9)

inst_105:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x03b9a1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7e03b9a1; op2val:0x7f7fffff;
   valaddr_reg:x11; val_offset:166*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 166*FLEN/8, x12, x8, x9)

inst_106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3af6ff and fs2 == 1 and fe2 == 0xa4 and fm2 == 0x799c89 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff  
/* opcode: fdiv.s ; op1:x30; op2:x29; dest:x31; op1val:0x7f3af6ff; op2val:0xd2799c89;
   valaddr_reg:x11; val_offset:168*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:0; testreg:x9
*/
TEST_FPRR_OP(fdiv.s, x31, x30, x29, dyn, 0, 0, x11, 168*FLEN/8, x12, x8, x9)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2111895320,64,FLEN)
NAN_BOXED(4105435360,32,FLEN)
NAN_BOXED(2131362867,64,FLEN)
NAN_BOXED(1553841064,64,FLEN)
NAN_BOXED(2113281036,64,FLEN)
NAN_BOXED(2113281036,64,FLEN)
NAN_BOXED(2131183814,64,FLEN)
NAN_BOXED(2131183814,64,FLEN)
NAN_BOXED(2130851250,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2127637094,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2116643756,64,FLEN)
NAN_BOXED(3415644313,32,FLEN)
NAN_BOXED(2134593643,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132356607,64,FLEN)
NAN_BOXED(1545823299,64,FLEN)
NAN_BOXED(2126929868,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2116774419,64,FLEN)
NAN_BOXED(1456154722,64,FLEN)
NAN_BOXED(2130249413,64,FLEN)
NAN_BOXED(1168072830,64,FLEN)
NAN_BOXED(2123867149,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2128420853,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2121709438,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2129807538,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2100598398,64,FLEN)
NAN_BOXED(1083452598,64,FLEN)
NAN_BOXED(2120569936,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134496865,64,FLEN)
NAN_BOXED(1561885539,64,FLEN)
NAN_BOXED(2133334593,64,FLEN)
NAN_BOXED(4280993111,32,FLEN)
NAN_BOXED(2120961550,64,FLEN)
NAN_BOXED(2139095039,64,FLEN)
NAN_BOXED(2133120434,64,FLEN)
NAN_BOXED(4286578687,32,FLEN)
test_dataset_1:
NAN_BOXED(2121161720,32,FLEN)
NAN_BOXED(1143212092,32,FLEN)
NAN_BOXED(2134136807,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131677523,32,FLEN)
NAN_BOXED(3374071479,32,FLEN)
NAN_BOXED(2124402533,32,FLEN)
NAN_BOXED(1806017048,32,FLEN)
NAN_BOXED(2118242206,32,FLEN)
NAN_BOXED(3978578502,32,FLEN)
NAN_BOXED(2077255986,32,FLEN)
NAN_BOXED(1290889932,32,FLEN)
NAN_BOXED(2133374653,32,FLEN)
NAN_BOXED(1603732542,32,FLEN)
NAN_BOXED(2095641995,32,FLEN)
NAN_BOXED(3757403143,32,FLEN)
NAN_BOXED(2132628439,32,FLEN)
NAN_BOXED(4265049392,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2128280795,32,FLEN)
NAN_BOXED(3379499204,32,FLEN)
NAN_BOXED(2114173345,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2133237036,32,FLEN)
NAN_BOXED(3251738896,32,FLEN)
NAN_BOXED(2134570751,32,FLEN)
NAN_BOXED(3531185289,32,FLEN)
NAN_BOXED(2131176484,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2126735442,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2123441112,32,FLEN)
NAN_BOXED(3739832662,32,FLEN)
NAN_BOXED(2122660017,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2115896935,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130800631,32,FLEN)
NAN_BOXED(3834220707,32,FLEN)
NAN_BOXED(2124824762,32,FLEN)
NAN_BOXED(1606846644,32,FLEN)
NAN_BOXED(2115310918,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2107663686,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2130688585,32,FLEN)
NAN_BOXED(4225484568,32,FLEN)
NAN_BOXED(2120442432,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2126507092,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2121915790,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133285360,32,FLEN)
NAN_BOXED(3233094171,32,FLEN)
NAN_BOXED(2133638396,32,FLEN)
NAN_BOXED(1951981187,32,FLEN)
NAN_BOXED(2086556570,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2115649870,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122036337,32,FLEN)
NAN_BOXED(1534630911,32,FLEN)
NAN_BOXED(2134737783,32,FLEN)
NAN_BOXED(3371575165,32,FLEN)
NAN_BOXED(2132166473,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2122462837,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2116262748,32,FLEN)
NAN_BOXED(1940986813,32,FLEN)
NAN_BOXED(2130804432,32,FLEN)
NAN_BOXED(1244757986,32,FLEN)
NAN_BOXED(2132858542,32,FLEN)
NAN_BOXED(4165065964,32,FLEN)
NAN_BOXED(2134047456,32,FLEN)
NAN_BOXED(1630988139,32,FLEN)
NAN_BOXED(2122582479,32,FLEN)
NAN_BOXED(3653163045,32,FLEN)
NAN_BOXED(2133420899,32,FLEN)
NAN_BOXED(3292143588,32,FLEN)
NAN_BOXED(2130963670,32,FLEN)
NAN_BOXED(3750239697,32,FLEN)
NAN_BOXED(2126122025,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2134718386,32,FLEN)
NAN_BOXED(1993665288,32,FLEN)
NAN_BOXED(2117350447,32,FLEN)
NAN_BOXED(1140635703,32,FLEN)
NAN_BOXED(2131446288,32,FLEN)
NAN_BOXED(1329337976,32,FLEN)
NAN_BOXED(2105676190,32,FLEN)
NAN_BOXED(1982181882,32,FLEN)
NAN_BOXED(2114081593,32,FLEN)
NAN_BOXED(2089175344,32,FLEN)
NAN_BOXED(2133780702,32,FLEN)
NAN_BOXED(1449890816,32,FLEN)
NAN_BOXED(2116259647,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131869715,32,FLEN)
NAN_BOXED(4181555587,32,FLEN)
NAN_BOXED(2129033965,32,FLEN)
NAN_BOXED(1879114744,32,FLEN)
NAN_BOXED(2132901715,32,FLEN)
NAN_BOXED(1910342333,32,FLEN)
NAN_BOXED(2123192956,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122492773,32,FLEN)
NAN_BOXED(4158521281,32,FLEN)
NAN_BOXED(2120197952,32,FLEN)
NAN_BOXED(1337813352,32,FLEN)
NAN_BOXED(2133232490,32,FLEN)
NAN_BOXED(4156110285,32,FLEN)
NAN_BOXED(2129128933,32,FLEN)
NAN_BOXED(3581579163,32,FLEN)
NAN_BOXED(2134325790,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2133482202,32,FLEN)
NAN_BOXED(1747930387,32,FLEN)
NAN_BOXED(2110776371,32,FLEN)
NAN_BOXED(1312811749,32,FLEN)
NAN_BOXED(2127799874,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2107648664,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2096133742,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2103499172,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2133216743,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2132234623,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132742841,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2122508181,32,FLEN)
NAN_BOXED(3947736406,32,FLEN)
NAN_BOXED(2129410878,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2132156447,32,FLEN)
NAN_BOXED(2128813653,32,FLEN)
NAN_BOXED(2123442894,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2128293402,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2116800505,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2105220483,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2118965247,32,FLEN)
NAN_BOXED(4234988270,32,FLEN)
NAN_BOXED(2133526280,32,FLEN)
NAN_BOXED(3272438665,32,FLEN)
NAN_BOXED(2128133985,32,FLEN)
NAN_BOXED(3583468927,32,FLEN)
NAN_BOXED(2133957862,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2125449356,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2113281036,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2131183814,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134425115,32,FLEN)
NAN_BOXED(4286578687,32,FLEN)
NAN_BOXED(2114173345,32,FLEN)
NAN_BOXED(2139095039,32,FLEN)
NAN_BOXED(2134570751,32,FLEN)
NAN_BOXED(3531185289,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 50*((SIGALIGN)/4),4,0xdeadbeef


signature_x8_0:
    .fill 164*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
