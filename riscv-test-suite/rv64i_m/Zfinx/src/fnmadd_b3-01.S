
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 07:30:48 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fnmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fnmadd_b3 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fnmadd_b3)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x30, rs2==x31, rs3==x29, rd==x31,fs1 == 0 and fe1 == 0xfe and fm1 == 0x185240 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x049ddd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1dd0ae and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x31; op3:x29; dest:x31; op1val:0x7f185240; op2val:0x3f849ddd;
op3val:0x7f1dd0ae; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x31, x29, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x29, rs2==x29, rs3==x31, rd==x30,fs1 == 0 and fe1 == 0xfe and fm1 == 0x185240 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x049ddd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1dd0ae and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x29; op2:x29; op3:x31; dest:x30; op1val:0x7f185240; op2val:0x7f185240;
op3val:0x7f1dd0ae; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x30, x29, x29, x31, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x28, rs2==x28, rs3==x30, rd==x28,fs1 == 0 and fe1 == 0xfe and fm1 == 0x185240 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x049ddd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1dd0ae and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x28; op2:x28; op3:x30; dest:x28; op1val:0x7f185240; op2val:0x7f185240;
op3val:0x7f1dd0ae; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x28, x28, x28, x30, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==x27, rs2==x30, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0xfe and fm1 == 0x185240 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x049ddd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1dd0ae and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x27; op2:x30; op3:x27; dest:x27; op1val:0x7f185240; op2val:0x3f849ddd;
op3val:0x7f185240; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x27, x27, x30, x27, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x26, rs2==x27, rs3==x28, rd==x26,fs1 == 0 and fe1 == 0xfe and fm1 == 0x185240 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x049ddd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1dd0ae and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x26; op2:x27; op3:x28; dest:x26; op1val:0x7f185240; op2val:0x3f849ddd;
op3val:0x7f1dd0ae; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x26, x26, x27, x28, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==x25, rs2==x25, rs3==x25, rd==x29,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a40d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1548 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x48ecdf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x25; op2:x25; op3:x25; dest:x29; op1val:0x7eba40d7; op2val:0x7eba40d7;
op3val:0x7eba40d7; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x29, x25, x25, x25, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rd == rs2 == rs3 != rs1, rs1==x31, rs2==x24, rs3==x24, rd==x24,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a40d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1548 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x48ecdf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x31; op2:x24; op3:x24; dest:x24; op1val:0x7eba40d7; op2val:0x3f0a1548;
op3val:0x3f0a1548; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x24, x31, x24, x24, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x24, rs2==x26, rs3==x26, rd==x25,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a40d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1548 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x48ecdf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x24; op2:x26; op3:x26; dest:x25; op1val:0x7eba40d7; op2val:0x3f0a1548;
op3val:0x3f0a1548; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x25, x24, x26, x26, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x22, rs2==x21, rs3==x20, rd==x23,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a40d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1548 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x48ecdf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x22; op2:x21; op3:x20; dest:x23; op1val:0x7eba40d7; op2val:0x3f0a1548;
op3val:0x7e48ecdf; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x23, x22, x21, x20, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a40d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1548 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x48ecdf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0x7eba40d7; op2val:0x7eba40d7;
op3val:0x7eba40d7; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x19, x19, x19, x19, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x23, rs2==x20, rs3==x22, rd==x22,fs1 == 0 and fe1 == 0xf3 and fm1 == 0x319f1b and fs2 == 0 and fe2 == 0x89 and fm2 == 0x376ad3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e85b6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x23; op2:x20; op3:x22; dest:x22; op1val:0x79b19f1b; op2val:0x44b76ad3;
op3val:0x7efe85b6; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x22, x23, x20, x22, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x18, rs2==x23, rs3==x18, rd==x21,fs1 == 0 and fe1 == 0xf3 and fm1 == 0x319f1b and fs2 == 0 and fe2 == 0x89 and fm2 == 0x376ad3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e85b6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x18; op2:x23; op3:x18; dest:x21; op1val:0x79b19f1b; op2val:0x44b76ad3;
op3val:0x79b19f1b; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x21, x18, x23, x18, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x21, rs2==x22, rs3==x23, rd==x20,fs1 == 0 and fe1 == 0xf3 and fm1 == 0x319f1b and fs2 == 0 and fe2 == 0x89 and fm2 == 0x376ad3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e85b6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x21; op2:x22; op3:x23; dest:x20; op1val:0x79b19f1b; op2val:0x44b76ad3;
op3val:0x7efe85b6; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x20, x21, x22, x23, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x20, rs2==x17, rs3==x21, rd==x18,fs1 == 0 and fe1 == 0xf3 and fm1 == 0x319f1b and fs2 == 0 and fe2 == 0x89 and fm2 == 0x376ad3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e85b6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x20; op2:x17; op3:x21; dest:x18; op1val:0x79b19f1b; op2val:0x44b76ad3;
op3val:0x7efe85b6; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x18, x20, x17, x21, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x18, rs3==x15, rd==x17,fs1 == 0 and fe1 == 0xf3 and fm1 == 0x319f1b and fs2 == 0 and fe2 == 0x89 and fm2 == 0x376ad3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e85b6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x16; op2:x18; op3:x15; dest:x17; op1val:0x79b19f1b; op2val:0x44b76ad3;
op3val:0x7efe85b6; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x17, x16, x18, x15, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x17, rs2==x15, rs3==x14, rd==x16,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3493df and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ecb22 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11de47 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x17; op2:x15; op3:x14; dest:x16; op1val:0x7eb493df; op2val:0x3fcecb22;
op3val:0x7f11de47; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x16, x17, x15, x14, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x14, rs2==x16, rs3==x17, rd==x15,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3493df and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ecb22 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11de47 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x14; op2:x16; op3:x17; dest:x15; op1val:0x7eb493df; op2val:0x3fcecb22;
op3val:0x7f11de47; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x15, x14, x16, x17, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x15, rs2==x13, rs3==x16, rd==x14,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3493df and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ecb22 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11de47 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x15; op2:x13; op3:x16; dest:x14; op1val:0x7eb493df; op2val:0x3fcecb22;
op3val:0x7f11de47; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x14, x15, x13, x16, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x12, rs2==x14, rs3==x11, rd==x13,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3493df and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ecb22 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11de47 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x12; op2:x14; op3:x11; dest:x13; op1val:0x7eb493df; op2val:0x3fcecb22;
op3val:0x7f11de47; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x13, x12, x14, x11, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x13, rs2==x11, rs3==x10, rd==x12,fs1 == 0 and fe1 == 0xfd and fm1 == 0x3493df and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ecb22 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11de47 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x13; op2:x11; op3:x10; dest:x12; op1val:0x7eb493df; op2val:0x3fcecb22;
op3val:0x7f11de47; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x12, x13, x11, x10, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x12, rs3==x13, rd==x11,fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f4b27 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0415cd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x13dde9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x10; op2:x12; op3:x13; dest:x11; op1val:0x7e8f4b27; op2val:0x400415cd;
op3val:0x7f13dde9; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x11, x10, x12, x13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x12,test_dataset_1)

inst_21:
// rs1==x11, rs2==x9, rs3==x12, rd==x10,fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f4b27 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0415cd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x13dde9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x11; op2:x9; op3:x12; dest:x10; op1val:0x7e8f4b27; op2val:0x400415cd;
op3val:0x7f13dde9; valaddr_reg:x12; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x10, x11, x9, x12, dyn, 32, 0, x12, 0*FLEN/8, x13, x1, x2)

inst_22:
// rs1==x8, rs2==x10, rs3==x7, rd==x9,fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f4b27 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0415cd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x13dde9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x8; op2:x10; op3:x7; dest:x9; op1val:0x7e8f4b27; op2val:0x400415cd;
op3val:0x7f13dde9; valaddr_reg:x12; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x9, x8, x10, x7, dyn, 64, 0, x12, 3*FLEN/8, x13, x1, x2)

inst_23:
// rs1==x9, rs2==x7, rs3==x6, rd==x8,fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f4b27 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0415cd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x13dde9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x9; op2:x7; op3:x6; dest:x8; op1val:0x7e8f4b27; op2val:0x400415cd;
op3val:0x7f13dde9; valaddr_reg:x12; val_offset:6*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x8, x9, x7, x6, dyn, 96, 0, x12, 6*FLEN/8, x13, x1, x10)
RVTEST_SIGBASE(x9,signature_x9_0)

inst_24:
// rs1==x6, rs2==x8, rs3==x9, rd==x7,fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f4b27 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0415cd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x13dde9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x6; op2:x8; op3:x9; dest:x7; op1val:0x7e8f4b27; op2val:0x400415cd;
op3val:0x7f13dde9; valaddr_reg:x12; val_offset:9*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x7, x6, x8, x9, dyn, 128, 0, x12, 9*FLEN/8, x13, x9, x10)

inst_25:
// rs1==x7, rs2==x5, rs3==x8, rd==x6,fs1 == 0 and fe1 == 0xfc and fm1 == 0x516e9f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3c33f6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19f7bf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x7; op2:x5; op3:x8; dest:x6; op1val:0x7e516e9f; op2val:0x403c33f6;
op3val:0x7f19f7bf; valaddr_reg:x12; val_offset:12*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x6, x7, x5, x8, dyn, 0, 0, x12, 12*FLEN/8, x13, x9, x10)

inst_26:
// rs1==x4, rs2==x6, rs3==x3, rd==x5,fs1 == 0 and fe1 == 0xfc and fm1 == 0x516e9f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3c33f6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19f7bf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x4; op2:x6; op3:x3; dest:x5; op1val:0x7e516e9f; op2val:0x403c33f6;
op3val:0x7f19f7bf; valaddr_reg:x12; val_offset:15*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x5, x4, x6, x3, dyn, 32, 0, x12, 15*FLEN/8, x13, x9, x10)

inst_27:
// rs1==x5, rs2==x3, rs3==x2, rd==x4,fs1 == 0 and fe1 == 0xfc and fm1 == 0x516e9f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3c33f6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19f7bf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x5; op2:x3; op3:x2; dest:x4; op1val:0x7e516e9f; op2val:0x403c33f6;
op3val:0x7f19f7bf; valaddr_reg:x12; val_offset:18*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x4, x5, x3, x2, dyn, 64, 0, x12, 18*FLEN/8, x13, x9, x10)

inst_28:
// rs1==x2, rs2==x4, rs3==x5, rd==x3,fs1 == 0 and fe1 == 0xfc and fm1 == 0x516e9f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3c33f6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19f7bf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x2; op2:x4; op3:x5; dest:x3; op1val:0x7e516e9f; op2val:0x403c33f6;
op3val:0x7f19f7bf; valaddr_reg:x12; val_offset:21*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x3, x2, x4, x5, dyn, 96, 0, x12, 21*FLEN/8, x13, x9, x10)

inst_29:
// rs1==x3, rs2==x1, rs3==x4, rd==x2,fs1 == 0 and fe1 == 0xfc and fm1 == 0x516e9f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3c33f6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19f7bf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x3; op2:x1; op3:x4; dest:x2; op1val:0x7e516e9f; op2val:0x403c33f6;
op3val:0x7f19f7bf; valaddr_reg:x12; val_offset:24*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x2, x3, x1, x4, dyn, 128, 0, x12, 24*FLEN/8, x13, x9, x10)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c2059 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x11387d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1efa7c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x7f0c2059; op2val:0x3f11387d;
op3val:0x7e9efa7c; valaddr_reg:x12; val_offset:27*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x1, x30, x29, dyn, 0, 0, x12, 27*FLEN/8, x13, x9, x10)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c2059 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x11387d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1efa7c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0x3f11387d;
op3val:0x7e9efa7c; valaddr_reg:x12; val_offset:30*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x0, x30, x29, dyn, 32, 0, x12, 30*FLEN/8, x13, x9, x10)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c2059 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x11387d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1efa7c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x7f0c2059; op2val:0x3f11387d;
op3val:0x7e9efa7c; valaddr_reg:x12; val_offset:33*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x2, x29, dyn, 64, 0, x12, 33*FLEN/8, x13, x9, x10)

inst_33:
// rs2==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c2059 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x11387d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1efa7c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x7f0c2059; op2val:0x0;
op3val:0x7e9efa7c; valaddr_reg:x12; val_offset:36*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x0, x29, dyn, 96, 0, x12, 36*FLEN/8, x13, x9, x10)

inst_34:
// rs3==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c2059 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x11387d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1efa7c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x7f0c2059; op2val:0x3f11387d;
op3val:0x7e9efa7c; valaddr_reg:x12; val_offset:39*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x1, dyn, 128, 0, x12, 39*FLEN/8, x13, x9, x10)

inst_35:
// rs3==x0,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4eb58d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x222e36 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02f434 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x0; dest:x31; op1val:0x7eceb58d; op2val:0x3fa22e36;
op3val:0x0; valaddr_reg:x12; val_offset:42*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x0, dyn, 0, 0, x12, 42*FLEN/8, x13, x9, x10)

inst_36:
// rd==x1,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4eb58d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x222e36 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02f434 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x7eceb58d; op2val:0x3fa22e36;
op3val:0x7f02f434; valaddr_reg:x12; val_offset:45*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x1, x31, x30, x29, dyn, 32, 0, x12, 45*FLEN/8, x13, x9, x10)

inst_37:
// rd==x0,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4eb58d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x222e36 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02f434 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x7eceb58d; op2val:0x3fa22e36;
op3val:0x7f02f434; valaddr_reg:x12; val_offset:48*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x0, x31, x30, x29, dyn, 64, 0, x12, 48*FLEN/8, x13, x9, x10)

inst_38:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4eb58d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x222e36 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02f434 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eceb58d; op2val:0x3fa22e36;
op3val:0x7f02f434; valaddr_reg:x12; val_offset:51*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 51*FLEN/8, x13, x9, x10)

inst_39:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4eb58d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x222e36 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02f434 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eceb58d; op2val:0x3fa22e36;
op3val:0x7f02f434; valaddr_reg:x12; val_offset:54*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 54*FLEN/8, x13, x9, x10)

inst_40:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14365e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3798bb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x549695 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e14365e; op2val:0x403798bb;
op3val:0x7ed49695; valaddr_reg:x12; val_offset:57*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57*FLEN/8, x13, x9, x10)

inst_41:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14365e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3798bb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x549695 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e14365e; op2val:0x403798bb;
op3val:0x7ed49695; valaddr_reg:x12; val_offset:60*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 60*FLEN/8, x13, x9, x10)

inst_42:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14365e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3798bb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x549695 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e14365e; op2val:0x403798bb;
op3val:0x7ed49695; valaddr_reg:x12; val_offset:63*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 63*FLEN/8, x13, x9, x10)

inst_43:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14365e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3798bb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x549695 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e14365e; op2val:0x403798bb;
op3val:0x7ed49695; valaddr_reg:x12; val_offset:66*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 66*FLEN/8, x13, x9, x10)

inst_44:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14365e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3798bb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x549695 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e14365e; op2val:0x403798bb;
op3val:0x7ed49695; valaddr_reg:x12; val_offset:69*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 69*FLEN/8, x13, x9, x10)

inst_45:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a9574 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x28da1a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4beb8f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a9574; op2val:0x3ea8da1a;
op3val:0x7e4beb8f; valaddr_reg:x12; val_offset:72*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 72*FLEN/8, x13, x9, x10)

inst_46:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a9574 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x28da1a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4beb8f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a9574; op2val:0x3ea8da1a;
op3val:0x7e4beb8f; valaddr_reg:x12; val_offset:75*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 75*FLEN/8, x13, x9, x10)

inst_47:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a9574 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x28da1a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4beb8f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a9574; op2val:0x3ea8da1a;
op3val:0x7e4beb8f; valaddr_reg:x12; val_offset:78*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 78*FLEN/8, x13, x9, x10)

inst_48:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a9574 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x28da1a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4beb8f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a9574; op2val:0x3ea8da1a;
op3val:0x7e4beb8f; valaddr_reg:x12; val_offset:81*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 81*FLEN/8, x13, x9, x10)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a9574 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x28da1a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4beb8f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a9574; op2val:0x3ea8da1a;
op3val:0x7e4beb8f; valaddr_reg:x12; val_offset:84*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 84*FLEN/8, x13, x9, x10)

inst_50:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a3f02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a8069 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x03a707 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a3f02; op2val:0x3f5a8069;
op3val:0x7f03a707; valaddr_reg:x12; val_offset:87*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 87*FLEN/8, x13, x9, x10)

inst_51:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a3f02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a8069 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x03a707 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a3f02; op2val:0x3f5a8069;
op3val:0x7f03a707; valaddr_reg:x12; val_offset:90*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 90*FLEN/8, x13, x9, x10)

inst_52:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a3f02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a8069 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x03a707 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a3f02; op2val:0x3f5a8069;
op3val:0x7f03a707; valaddr_reg:x12; val_offset:93*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 93*FLEN/8, x13, x9, x10)

inst_53:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a3f02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a8069 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x03a707 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a3f02; op2val:0x3f5a8069;
op3val:0x7f03a707; valaddr_reg:x12; val_offset:96*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 96*FLEN/8, x13, x9, x10)

inst_54:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a3f02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a8069 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x03a707 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a3f02; op2val:0x3f5a8069;
op3val:0x7f03a707; valaddr_reg:x12; val_offset:99*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 99*FLEN/8, x13, x9, x10)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x221a29 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4b81fb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x00dd0d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f221a29; op2val:0x3ecb81fb;
op3val:0x7e80dd0d; valaddr_reg:x12; val_offset:102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 102*FLEN/8, x13, x9, x10)

inst_56:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x221a29 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4b81fb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x00dd0d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f221a29; op2val:0x3ecb81fb;
op3val:0x7e80dd0d; valaddr_reg:x12; val_offset:105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 105*FLEN/8, x13, x9, x10)

inst_57:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x221a29 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4b81fb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x00dd0d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f221a29; op2val:0x3ecb81fb;
op3val:0x7e80dd0d; valaddr_reg:x12; val_offset:108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 108*FLEN/8, x13, x9, x10)

inst_58:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x221a29 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4b81fb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x00dd0d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f221a29; op2val:0x3ecb81fb;
op3val:0x7e80dd0d; valaddr_reg:x12; val_offset:111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 111*FLEN/8, x13, x9, x10)

inst_59:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x221a29 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4b81fb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x00dd0d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f221a29; op2val:0x3ecb81fb;
op3val:0x7e80dd0d; valaddr_reg:x12; val_offset:114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 114*FLEN/8, x13, x9, x10)

inst_60:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0f0e02 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x097bec and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19a77e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8f0e02; op2val:0x41097bec;
op3val:0x7f19a77e; valaddr_reg:x12; val_offset:117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 117*FLEN/8, x13, x9, x10)

inst_61:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0f0e02 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x097bec and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19a77e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8f0e02; op2val:0x41097bec;
op3val:0x7f19a77e; valaddr_reg:x12; val_offset:120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 120*FLEN/8, x13, x9, x10)

inst_62:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0f0e02 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x097bec and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19a77e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8f0e02; op2val:0x41097bec;
op3val:0x7f19a77e; valaddr_reg:x12; val_offset:123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 123*FLEN/8, x13, x9, x10)

inst_63:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0f0e02 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x097bec and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19a77e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8f0e02; op2val:0x41097bec;
op3val:0x7f19a77e; valaddr_reg:x12; val_offset:126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 126*FLEN/8, x13, x9, x10)

inst_64:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0f0e02 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x097bec and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19a77e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8f0e02; op2val:0x41097bec;
op3val:0x7f19a77e; valaddr_reg:x12; val_offset:129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 129*FLEN/8, x13, x9, x10)

inst_65:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a849e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d9f1b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2af628 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a849e; op2val:0x3f0d9f1b;
op3val:0x7eaaf628; valaddr_reg:x12; val_offset:132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 132*FLEN/8, x13, x9, x10)

inst_66:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a849e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d9f1b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2af628 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a849e; op2val:0x3f0d9f1b;
op3val:0x7eaaf628; valaddr_reg:x12; val_offset:135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 135*FLEN/8, x13, x9, x10)

inst_67:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a849e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d9f1b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2af628 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a849e; op2val:0x3f0d9f1b;
op3val:0x7eaaf628; valaddr_reg:x12; val_offset:138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 138*FLEN/8, x13, x9, x10)

inst_68:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a849e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d9f1b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2af628 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a849e; op2val:0x3f0d9f1b;
op3val:0x7eaaf628; valaddr_reg:x12; val_offset:141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 141*FLEN/8, x13, x9, x10)

inst_69:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a849e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d9f1b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2af628 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a849e; op2val:0x3f0d9f1b;
op3val:0x7eaaf628; valaddr_reg:x12; val_offset:144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 144*FLEN/8, x13, x9, x10)

inst_70:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x100bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x068d67 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x176ba2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d900bf1; op2val:0x40068d67;
op3val:0x7e176ba2; valaddr_reg:x12; val_offset:147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 147*FLEN/8, x13, x9, x10)

inst_71:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x100bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x068d67 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x176ba2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d900bf1; op2val:0x40068d67;
op3val:0x7e176ba2; valaddr_reg:x12; val_offset:150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 150*FLEN/8, x13, x9, x10)

inst_72:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x100bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x068d67 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x176ba2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d900bf1; op2val:0x40068d67;
op3val:0x7e176ba2; valaddr_reg:x12; val_offset:153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 153*FLEN/8, x13, x9, x10)

inst_73:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x100bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x068d67 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x176ba2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d900bf1; op2val:0x40068d67;
op3val:0x7e176ba2; valaddr_reg:x12; val_offset:156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 156*FLEN/8, x13, x9, x10)

inst_74:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x100bf1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x068d67 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x176ba2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d900bf1; op2val:0x40068d67;
op3val:0x7e176ba2; valaddr_reg:x12; val_offset:159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 159*FLEN/8, x13, x9, x10)

inst_75:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73cf0f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6acfa3 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5fa103 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef3cf0f; op2val:0x3eeacfa3;
op3val:0x7e5fa103; valaddr_reg:x12; val_offset:162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 162*FLEN/8, x13, x9, x10)

inst_76:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73cf0f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6acfa3 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5fa103 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef3cf0f; op2val:0x3eeacfa3;
op3val:0x7e5fa103; valaddr_reg:x12; val_offset:165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 165*FLEN/8, x13, x9, x10)

inst_77:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73cf0f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6acfa3 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5fa103 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef3cf0f; op2val:0x3eeacfa3;
op3val:0x7e5fa103; valaddr_reg:x12; val_offset:168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 168*FLEN/8, x13, x9, x10)

inst_78:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73cf0f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6acfa3 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5fa103 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef3cf0f; op2val:0x3eeacfa3;
op3val:0x7e5fa103; valaddr_reg:x12; val_offset:171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 171*FLEN/8, x13, x9, x10)

inst_79:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73cf0f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6acfa3 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5fa103 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef3cf0f; op2val:0x3eeacfa3;
op3val:0x7e5fa103; valaddr_reg:x12; val_offset:174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 174*FLEN/8, x13, x9, x10)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36a9e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e600b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6202c3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f36a9e2; op2val:0x3f1e600b;
op3val:0x7ee202c3; valaddr_reg:x12; val_offset:177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 177*FLEN/8, x13, x9, x10)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36a9e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e600b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6202c3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f36a9e2; op2val:0x3f1e600b;
op3val:0x7ee202c3; valaddr_reg:x12; val_offset:180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 180*FLEN/8, x13, x9, x10)

inst_82:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36a9e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e600b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6202c3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f36a9e2; op2val:0x3f1e600b;
op3val:0x7ee202c3; valaddr_reg:x12; val_offset:183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 183*FLEN/8, x13, x9, x10)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36a9e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e600b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6202c3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f36a9e2; op2val:0x3f1e600b;
op3val:0x7ee202c3; valaddr_reg:x12; val_offset:186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 186*FLEN/8, x13, x9, x10)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36a9e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e600b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6202c3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f36a9e2; op2val:0x3f1e600b;
op3val:0x7ee202c3; valaddr_reg:x12; val_offset:189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 189*FLEN/8, x13, x9, x10)

inst_85:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a457f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x50d100 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7bacd4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1a457f; op2val:0x4050d100;
op3val:0x7efbacd4; valaddr_reg:x12; val_offset:192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 192*FLEN/8, x13, x9, x10)

inst_86:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a457f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x50d100 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7bacd4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1a457f; op2val:0x4050d100;
op3val:0x7efbacd4; valaddr_reg:x12; val_offset:195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 195*FLEN/8, x13, x9, x10)

inst_87:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a457f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x50d100 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7bacd4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1a457f; op2val:0x4050d100;
op3val:0x7efbacd4; valaddr_reg:x12; val_offset:198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 198*FLEN/8, x13, x9, x10)

inst_88:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a457f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x50d100 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7bacd4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1a457f; op2val:0x4050d100;
op3val:0x7efbacd4; valaddr_reg:x12; val_offset:201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 201*FLEN/8, x13, x9, x10)

inst_89:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1a457f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x50d100 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7bacd4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1a457f; op2val:0x4050d100;
op3val:0x7efbacd4; valaddr_reg:x12; val_offset:204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 204*FLEN/8, x13, x9, x10)

inst_90:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a62c0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x25a532 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3315e5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8a62c0; op2val:0x4025a532;
op3val:0x7f3315e5; valaddr_reg:x12; val_offset:207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 207*FLEN/8, x13, x9, x10)

inst_91:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a62c0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x25a532 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3315e5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8a62c0; op2val:0x4025a532;
op3val:0x7f3315e5; valaddr_reg:x12; val_offset:210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 210*FLEN/8, x13, x9, x10)

inst_92:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a62c0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x25a532 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3315e5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8a62c0; op2val:0x4025a532;
op3val:0x7f3315e5; valaddr_reg:x12; val_offset:213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 213*FLEN/8, x13, x9, x10)

inst_93:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a62c0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x25a532 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3315e5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8a62c0; op2val:0x4025a532;
op3val:0x7f3315e5; valaddr_reg:x12; val_offset:216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 216*FLEN/8, x13, x9, x10)

inst_94:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a62c0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x25a532 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3315e5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8a62c0; op2val:0x4025a532;
op3val:0x7f3315e5; valaddr_reg:x12; val_offset:219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 219*FLEN/8, x13, x9, x10)

inst_95:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ea04a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10dbda and fs3 == 0 and fe3 == 0xfd and fm3 == 0x45a044 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ea04a; op2val:0x3f10dbda;
op3val:0x7ec5a044; valaddr_reg:x12; val_offset:222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 222*FLEN/8, x13, x9, x10)

inst_96:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ea04a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10dbda and fs3 == 0 and fe3 == 0xfd and fm3 == 0x45a044 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ea04a; op2val:0x3f10dbda;
op3val:0x7ec5a044; valaddr_reg:x12; val_offset:225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 225*FLEN/8, x13, x9, x10)

inst_97:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ea04a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10dbda and fs3 == 0 and fe3 == 0xfd and fm3 == 0x45a044 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ea04a; op2val:0x3f10dbda;
op3val:0x7ec5a044; valaddr_reg:x12; val_offset:228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 228*FLEN/8, x13, x9, x10)

inst_98:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ea04a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10dbda and fs3 == 0 and fe3 == 0xfd and fm3 == 0x45a044 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ea04a; op2val:0x3f10dbda;
op3val:0x7ec5a044; valaddr_reg:x12; val_offset:231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 231*FLEN/8, x13, x9, x10)

inst_99:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ea04a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10dbda and fs3 == 0 and fe3 == 0xfd and fm3 == 0x45a044 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ea04a; op2val:0x3f10dbda;
op3val:0x7ec5a044; valaddr_reg:x12; val_offset:234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 234*FLEN/8, x13, x9, x10)

inst_100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7783fc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a9790 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05ffb0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef783fc; op2val:0x3f8a9790;
op3val:0x7f05ffb0; valaddr_reg:x12; val_offset:237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 237*FLEN/8, x13, x9, x10)

inst_101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7783fc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a9790 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05ffb0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef783fc; op2val:0x3f8a9790;
op3val:0x7f05ffb0; valaddr_reg:x12; val_offset:240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 240*FLEN/8, x13, x9, x10)

inst_102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7783fc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a9790 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05ffb0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef783fc; op2val:0x3f8a9790;
op3val:0x7f05ffb0; valaddr_reg:x12; val_offset:243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 243*FLEN/8, x13, x9, x10)

inst_103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7783fc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a9790 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05ffb0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef783fc; op2val:0x3f8a9790;
op3val:0x7f05ffb0; valaddr_reg:x12; val_offset:246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 246*FLEN/8, x13, x9, x10)

inst_104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7783fc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a9790 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05ffb0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef783fc; op2val:0x3f8a9790;
op3val:0x7f05ffb0; valaddr_reg:x12; val_offset:249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 249*FLEN/8, x13, x9, x10)

inst_105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1aa82d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b2701 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b76c8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1aa82d; op2val:0x3f9b2701;
op3val:0x7f3b76c8; valaddr_reg:x12; val_offset:252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 252*FLEN/8, x13, x9, x10)

inst_106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1aa82d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b2701 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b76c8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1aa82d; op2val:0x3f9b2701;
op3val:0x7f3b76c8; valaddr_reg:x12; val_offset:255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 255*FLEN/8, x13, x9, x10)

inst_107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1aa82d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b2701 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b76c8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1aa82d; op2val:0x3f9b2701;
op3val:0x7f3b76c8; valaddr_reg:x12; val_offset:258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 258*FLEN/8, x13, x9, x10)

inst_108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1aa82d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b2701 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b76c8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1aa82d; op2val:0x3f9b2701;
op3val:0x7f3b76c8; valaddr_reg:x12; val_offset:261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 261*FLEN/8, x13, x9, x10)

inst_109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1aa82d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b2701 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b76c8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1aa82d; op2val:0x3f9b2701;
op3val:0x7f3b76c8; valaddr_reg:x12; val_offset:264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 264*FLEN/8, x13, x9, x10)

inst_110:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2e9fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4b6f55 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ac4bf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cae9fe8; op2val:0x414b6f55;
op3val:0x7e8ac4bf; valaddr_reg:x12; val_offset:267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 267*FLEN/8, x13, x9, x10)

inst_111:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2e9fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4b6f55 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ac4bf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cae9fe8; op2val:0x414b6f55;
op3val:0x7e8ac4bf; valaddr_reg:x12; val_offset:270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 270*FLEN/8, x13, x9, x10)

inst_112:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2e9fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4b6f55 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ac4bf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cae9fe8; op2val:0x414b6f55;
op3val:0x7e8ac4bf; valaddr_reg:x12; val_offset:273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 273*FLEN/8, x13, x9, x10)

inst_113:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2e9fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4b6f55 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ac4bf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cae9fe8; op2val:0x414b6f55;
op3val:0x7e8ac4bf; valaddr_reg:x12; val_offset:276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 276*FLEN/8, x13, x9, x10)

inst_114:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2e9fe8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4b6f55 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ac4bf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cae9fe8; op2val:0x414b6f55;
op3val:0x7e8ac4bf; valaddr_reg:x12; val_offset:279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 279*FLEN/8, x13, x9, x10)

inst_115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x671228 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0177d2 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x69b89c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee71228; op2val:0x3f0177d2;
op3val:0x7e69b89c; valaddr_reg:x12; val_offset:282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 282*FLEN/8, x13, x9, x10)

inst_116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x671228 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0177d2 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x69b89c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee71228; op2val:0x3f0177d2;
op3val:0x7e69b89c; valaddr_reg:x12; val_offset:285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 285*FLEN/8, x13, x9, x10)

inst_117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x671228 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0177d2 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x69b89c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee71228; op2val:0x3f0177d2;
op3val:0x7e69b89c; valaddr_reg:x12; val_offset:288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 288*FLEN/8, x13, x9, x10)

inst_118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x671228 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0177d2 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x69b89c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee71228; op2val:0x3f0177d2;
op3val:0x7e69b89c; valaddr_reg:x12; val_offset:291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 291*FLEN/8, x13, x9, x10)

inst_119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x671228 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0177d2 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x69b89c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee71228; op2val:0x3f0177d2;
op3val:0x7e69b89c; valaddr_reg:x12; val_offset:294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 294*FLEN/8, x13, x9, x10)

inst_120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x623c76 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1be23d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x09c28b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee23c76; op2val:0x3e1be23d;
op3val:0x7d89c28b; valaddr_reg:x12; val_offset:297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 297*FLEN/8, x13, x9, x10)

inst_121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x623c76 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1be23d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x09c28b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee23c76; op2val:0x3e1be23d;
op3val:0x7d89c28b; valaddr_reg:x12; val_offset:300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 300*FLEN/8, x13, x9, x10)

inst_122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x623c76 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1be23d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x09c28b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee23c76; op2val:0x3e1be23d;
op3val:0x7d89c28b; valaddr_reg:x12; val_offset:303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 303*FLEN/8, x13, x9, x10)

inst_123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x623c76 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1be23d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x09c28b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee23c76; op2val:0x3e1be23d;
op3val:0x7d89c28b; valaddr_reg:x12; val_offset:306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 306*FLEN/8, x13, x9, x10)

inst_124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x623c76 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1be23d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x09c28b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee23c76; op2val:0x3e1be23d;
op3val:0x7d89c28b; valaddr_reg:x12; val_offset:309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 309*FLEN/8, x13, x9, x10)

inst_125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f9a2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x18ca47 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49b378 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f28f9a2; op2val:0x3f18ca47;
op3val:0x7ec9b378; valaddr_reg:x12; val_offset:312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 312*FLEN/8, x13, x9, x10)

inst_126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f9a2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x18ca47 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49b378 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f28f9a2; op2val:0x3f18ca47;
op3val:0x7ec9b378; valaddr_reg:x12; val_offset:315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 315*FLEN/8, x13, x9, x10)

inst_127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f9a2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x18ca47 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49b378 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f28f9a2; op2val:0x3f18ca47;
op3val:0x7ec9b378; valaddr_reg:x12; val_offset:318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 318*FLEN/8, x13, x9, x10)

inst_128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f9a2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x18ca47 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49b378 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f28f9a2; op2val:0x3f18ca47;
op3val:0x7ec9b378; valaddr_reg:x12; val_offset:321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 321*FLEN/8, x13, x9, x10)

inst_129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f9a2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x18ca47 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49b378 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f28f9a2; op2val:0x3f18ca47;
op3val:0x7ec9b378; valaddr_reg:x12; val_offset:324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 324*FLEN/8, x13, x9, x10)

inst_130:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x337137 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3588f6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e7e1b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db37137; op2val:0x40b588f6;
op3val:0x7efe7e1b; valaddr_reg:x12; val_offset:327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 327*FLEN/8, x13, x9, x10)

inst_131:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x337137 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3588f6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e7e1b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db37137; op2val:0x40b588f6;
op3val:0x7efe7e1b; valaddr_reg:x12; val_offset:330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 330*FLEN/8, x13, x9, x10)

inst_132:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x337137 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3588f6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e7e1b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db37137; op2val:0x40b588f6;
op3val:0x7efe7e1b; valaddr_reg:x12; val_offset:333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 333*FLEN/8, x13, x9, x10)

inst_133:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x337137 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3588f6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e7e1b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db37137; op2val:0x40b588f6;
op3val:0x7efe7e1b; valaddr_reg:x12; val_offset:336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 336*FLEN/8, x13, x9, x10)

inst_134:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x337137 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3588f6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e7e1b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db37137; op2val:0x40b588f6;
op3val:0x7efe7e1b; valaddr_reg:x12; val_offset:339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 339*FLEN/8, x13, x9, x10)

inst_135:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6fd4df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20dc16 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x16b33b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6fd4df; op2val:0x3f20dc16;
op3val:0x7e16b33b; valaddr_reg:x12; val_offset:342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 342*FLEN/8, x13, x9, x10)

inst_136:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6fd4df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20dc16 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x16b33b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6fd4df; op2val:0x3f20dc16;
op3val:0x7e16b33b; valaddr_reg:x12; val_offset:345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 345*FLEN/8, x13, x9, x10)

inst_137:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6fd4df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20dc16 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x16b33b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6fd4df; op2val:0x3f20dc16;
op3val:0x7e16b33b; valaddr_reg:x12; val_offset:348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 348*FLEN/8, x13, x9, x10)

inst_138:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6fd4df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20dc16 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x16b33b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6fd4df; op2val:0x3f20dc16;
op3val:0x7e16b33b; valaddr_reg:x12; val_offset:351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 351*FLEN/8, x13, x9, x10)

inst_139:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6fd4df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20dc16 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x16b33b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6fd4df; op2val:0x3f20dc16;
op3val:0x7e16b33b; valaddr_reg:x12; val_offset:354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 354*FLEN/8, x13, x9, x10)

inst_140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39c1fe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x122c1f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x54214e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9c1fe; op2val:0x3e922c1f;
op3val:0x7dd4214e; valaddr_reg:x12; val_offset:357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 357*FLEN/8, x13, x9, x10)

inst_141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39c1fe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x122c1f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x54214e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9c1fe; op2val:0x3e922c1f;
op3val:0x7dd4214e; valaddr_reg:x12; val_offset:360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 360*FLEN/8, x13, x9, x10)

inst_142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39c1fe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x122c1f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x54214e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9c1fe; op2val:0x3e922c1f;
op3val:0x7dd4214e; valaddr_reg:x12; val_offset:363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 363*FLEN/8, x13, x9, x10)

inst_143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39c1fe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x122c1f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x54214e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9c1fe; op2val:0x3e922c1f;
op3val:0x7dd4214e; valaddr_reg:x12; val_offset:366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 366*FLEN/8, x13, x9, x10)

inst_144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39c1fe and fs2 == 0 and fe2 == 0x7d and fm2 == 0x122c1f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x54214e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9c1fe; op2val:0x3e922c1f;
op3val:0x7dd4214e; valaddr_reg:x12; val_offset:369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 369*FLEN/8, x13, x9, x10)

inst_145:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x21311f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x03f6ba and fs3 == 0 and fe3 == 0xfe and fm3 == 0x262efb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e21311f; op2val:0x4083f6ba;
op3val:0x7f262efb; valaddr_reg:x12; val_offset:372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 372*FLEN/8, x13, x9, x10)

inst_146:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x21311f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x03f6ba and fs3 == 0 and fe3 == 0xfe and fm3 == 0x262efb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e21311f; op2val:0x4083f6ba;
op3val:0x7f262efb; valaddr_reg:x12; val_offset:375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 375*FLEN/8, x13, x9, x10)

inst_147:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x21311f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x03f6ba and fs3 == 0 and fe3 == 0xfe and fm3 == 0x262efb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e21311f; op2val:0x4083f6ba;
op3val:0x7f262efb; valaddr_reg:x12; val_offset:378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 378*FLEN/8, x13, x9, x10)

inst_148:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x21311f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x03f6ba and fs3 == 0 and fe3 == 0xfe and fm3 == 0x262efb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e21311f; op2val:0x4083f6ba;
op3val:0x7f262efb; valaddr_reg:x12; val_offset:381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 381*FLEN/8, x13, x9, x10)

inst_149:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x21311f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x03f6ba and fs3 == 0 and fe3 == 0xfe and fm3 == 0x262efb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e21311f; op2val:0x4083f6ba;
op3val:0x7f262efb; valaddr_reg:x12; val_offset:384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 384*FLEN/8, x13, x9, x10)

inst_150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x060f17 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x12ec96 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x19e100 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f060f17; op2val:0x3c92ec96;
op3val:0x7c19e100; valaddr_reg:x12; val_offset:387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 387*FLEN/8, x13, x9, x10)

inst_151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x060f17 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x12ec96 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x19e100 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f060f17; op2val:0x3c92ec96;
op3val:0x7c19e100; valaddr_reg:x12; val_offset:390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 390*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_1)

inst_152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x060f17 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x12ec96 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x19e100 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f060f17; op2val:0x3c92ec96;
op3val:0x7c19e100; valaddr_reg:x12; val_offset:393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 393*FLEN/8, x13, x9, x10)

inst_153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x060f17 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x12ec96 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x19e100 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f060f17; op2val:0x3c92ec96;
op3val:0x7c19e100; valaddr_reg:x12; val_offset:396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 396*FLEN/8, x13, x9, x10)

inst_154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x060f17 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x12ec96 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x19e100 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f060f17; op2val:0x3c92ec96;
op3val:0x7c19e100; valaddr_reg:x12; val_offset:399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 399*FLEN/8, x13, x9, x10)

inst_155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x156314 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x339b9f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x519e2f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f156314; op2val:0x3cb39b9f;
op3val:0x7c519e2f; valaddr_reg:x12; val_offset:402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 402*FLEN/8, x13, x9, x10)

inst_156:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x156314 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x339b9f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x519e2f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f156314; op2val:0x3cb39b9f;
op3val:0x7c519e2f; valaddr_reg:x12; val_offset:405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 405*FLEN/8, x13, x9, x10)

inst_157:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x156314 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x339b9f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x519e2f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f156314; op2val:0x3cb39b9f;
op3val:0x7c519e2f; valaddr_reg:x12; val_offset:408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 408*FLEN/8, x13, x9, x10)

inst_158:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x156314 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x339b9f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x519e2f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f156314; op2val:0x3cb39b9f;
op3val:0x7c519e2f; valaddr_reg:x12; val_offset:411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 411*FLEN/8, x13, x9, x10)

inst_159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x156314 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x339b9f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x519e2f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f156314; op2val:0x3cb39b9f;
op3val:0x7c519e2f; valaddr_reg:x12; val_offset:414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 414*FLEN/8, x13, x9, x10)

inst_160:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fad2c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2ddf2e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2da6ed and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7fad2c; op2val:0x402ddf2e;
op3val:0x7f2da6ed; valaddr_reg:x12; val_offset:417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 417*FLEN/8, x13, x9, x10)

inst_161:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fad2c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2ddf2e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2da6ed and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7fad2c; op2val:0x402ddf2e;
op3val:0x7f2da6ed; valaddr_reg:x12; val_offset:420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 420*FLEN/8, x13, x9, x10)

inst_162:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fad2c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2ddf2e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2da6ed and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7fad2c; op2val:0x402ddf2e;
op3val:0x7f2da6ed; valaddr_reg:x12; val_offset:423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 423*FLEN/8, x13, x9, x10)

inst_163:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fad2c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2ddf2e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2da6ed and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7fad2c; op2val:0x402ddf2e;
op3val:0x7f2da6ed; valaddr_reg:x12; val_offset:426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 426*FLEN/8, x13, x9, x10)

inst_164:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7fad2c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2ddf2e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2da6ed and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7fad2c; op2val:0x402ddf2e;
op3val:0x7f2da6ed; valaddr_reg:x12; val_offset:429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 429*FLEN/8, x13, x9, x10)

inst_165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6e2e8d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7cb106 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6b1a87 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eee2e8d; op2val:0x3efcb106;
op3val:0x7e6b1a87; valaddr_reg:x12; val_offset:432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 432*FLEN/8, x13, x9, x10)

inst_166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6e2e8d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7cb106 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6b1a87 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eee2e8d; op2val:0x3efcb106;
op3val:0x7e6b1a87; valaddr_reg:x12; val_offset:435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 435*FLEN/8, x13, x9, x10)

inst_167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6e2e8d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7cb106 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6b1a87 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eee2e8d; op2val:0x3efcb106;
op3val:0x7e6b1a87; valaddr_reg:x12; val_offset:438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 438*FLEN/8, x13, x9, x10)

inst_168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6e2e8d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7cb106 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6b1a87 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eee2e8d; op2val:0x3efcb106;
op3val:0x7e6b1a87; valaddr_reg:x12; val_offset:441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 441*FLEN/8, x13, x9, x10)

inst_169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6e2e8d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7cb106 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6b1a87 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eee2e8d; op2val:0x3efcb106;
op3val:0x7e6b1a87; valaddr_reg:x12; val_offset:444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 444*FLEN/8, x13, x9, x10)

inst_170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10ec66 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03fd1f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x157088 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90ec66; op2val:0x3f83fd1f;
op3val:0x7e957088; valaddr_reg:x12; val_offset:447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 447*FLEN/8, x13, x9, x10)

inst_171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10ec66 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03fd1f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x157088 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90ec66; op2val:0x3f83fd1f;
op3val:0x7e957088; valaddr_reg:x12; val_offset:450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 450*FLEN/8, x13, x9, x10)

inst_172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10ec66 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03fd1f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x157088 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90ec66; op2val:0x3f83fd1f;
op3val:0x7e957088; valaddr_reg:x12; val_offset:453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 453*FLEN/8, x13, x9, x10)

inst_173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10ec66 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03fd1f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x157088 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90ec66; op2val:0x3f83fd1f;
op3val:0x7e957088; valaddr_reg:x12; val_offset:456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 456*FLEN/8, x13, x9, x10)

inst_174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10ec66 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03fd1f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x157088 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90ec66; op2val:0x3f83fd1f;
op3val:0x7e957088; valaddr_reg:x12; val_offset:459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 459*FLEN/8, x13, x9, x10)

inst_175:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42d171 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7c4426 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ffa07 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2d171; op2val:0x40fc4426;
op3val:0x7f3ffa07; valaddr_reg:x12; val_offset:462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 462*FLEN/8, x13, x9, x10)

inst_176:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42d171 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7c4426 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ffa07 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2d171; op2val:0x40fc4426;
op3val:0x7f3ffa07; valaddr_reg:x12; val_offset:465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 465*FLEN/8, x13, x9, x10)

inst_177:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42d171 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7c4426 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ffa07 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2d171; op2val:0x40fc4426;
op3val:0x7f3ffa07; valaddr_reg:x12; val_offset:468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 468*FLEN/8, x13, x9, x10)

inst_178:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42d171 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7c4426 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ffa07 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2d171; op2val:0x40fc4426;
op3val:0x7f3ffa07; valaddr_reg:x12; val_offset:471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 471*FLEN/8, x13, x9, x10)

inst_179:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42d171 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7c4426 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ffa07 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2d171; op2val:0x40fc4426;
op3val:0x7f3ffa07; valaddr_reg:x12; val_offset:474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 474*FLEN/8, x13, x9, x10)

inst_180:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x255773 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7b6dc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2263a5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d255773; op2val:0x40fb6dc7;
op3val:0x7ea263a5; valaddr_reg:x12; val_offset:477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 477*FLEN/8, x13, x9, x10)

inst_181:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x255773 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7b6dc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2263a5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d255773; op2val:0x40fb6dc7;
op3val:0x7ea263a5; valaddr_reg:x12; val_offset:480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 480*FLEN/8, x13, x9, x10)

inst_182:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x255773 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7b6dc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2263a5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d255773; op2val:0x40fb6dc7;
op3val:0x7ea263a5; valaddr_reg:x12; val_offset:483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 483*FLEN/8, x13, x9, x10)

inst_183:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x255773 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7b6dc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2263a5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d255773; op2val:0x40fb6dc7;
op3val:0x7ea263a5; valaddr_reg:x12; val_offset:486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 486*FLEN/8, x13, x9, x10)

inst_184:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x255773 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7b6dc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2263a5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d255773; op2val:0x40fb6dc7;
op3val:0x7ea263a5; valaddr_reg:x12; val_offset:489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 489*FLEN/8, x13, x9, x10)

inst_185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f4ac6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0870e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x18bdd1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f4ac6; op2val:0x3f0870e2;
op3val:0x7e98bdd1; valaddr_reg:x12; val_offset:492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 492*FLEN/8, x13, x9, x10)

inst_186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f4ac6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0870e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x18bdd1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f4ac6; op2val:0x3f0870e2;
op3val:0x7e98bdd1; valaddr_reg:x12; val_offset:495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 495*FLEN/8, x13, x9, x10)

inst_187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f4ac6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0870e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x18bdd1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f4ac6; op2val:0x3f0870e2;
op3val:0x7e98bdd1; valaddr_reg:x12; val_offset:498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 498*FLEN/8, x13, x9, x10)

inst_188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f4ac6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0870e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x18bdd1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f4ac6; op2val:0x3f0870e2;
op3val:0x7e98bdd1; valaddr_reg:x12; val_offset:501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 501*FLEN/8, x13, x9, x10)

inst_189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f4ac6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0870e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x18bdd1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f4ac6; op2val:0x3f0870e2;
op3val:0x7e98bdd1; valaddr_reg:x12; val_offset:504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 504*FLEN/8, x13, x9, x10)

inst_190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c58cf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x00090a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3c661c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c58cf; op2val:0x3e80090a;
op3val:0x7e3c661c; valaddr_reg:x12; val_offset:507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 507*FLEN/8, x13, x9, x10)

inst_191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c58cf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x00090a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3c661c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c58cf; op2val:0x3e80090a;
op3val:0x7e3c661c; valaddr_reg:x12; val_offset:510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 510*FLEN/8, x13, x9, x10)

inst_192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c58cf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x00090a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3c661c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c58cf; op2val:0x3e80090a;
op3val:0x7e3c661c; valaddr_reg:x12; val_offset:513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 513*FLEN/8, x13, x9, x10)

inst_193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c58cf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x00090a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3c661c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c58cf; op2val:0x3e80090a;
op3val:0x7e3c661c; valaddr_reg:x12; val_offset:516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 516*FLEN/8, x13, x9, x10)

inst_194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c58cf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x00090a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3c661c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c58cf; op2val:0x3e80090a;
op3val:0x7e3c661c; valaddr_reg:x12; val_offset:519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 519*FLEN/8, x13, x9, x10)

inst_195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c0464 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6941a6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2b5036 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c0464; op2val:0x3f6941a6;
op3val:0x7f2b5036; valaddr_reg:x12; val_offset:522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 522*FLEN/8, x13, x9, x10)

inst_196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c0464 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6941a6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2b5036 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c0464; op2val:0x3f6941a6;
op3val:0x7f2b5036; valaddr_reg:x12; val_offset:525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 525*FLEN/8, x13, x9, x10)

inst_197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c0464 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6941a6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2b5036 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c0464; op2val:0x3f6941a6;
op3val:0x7f2b5036; valaddr_reg:x12; val_offset:528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 528*FLEN/8, x13, x9, x10)

inst_198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c0464 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6941a6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2b5036 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c0464; op2val:0x3f6941a6;
op3val:0x7f2b5036; valaddr_reg:x12; val_offset:531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 531*FLEN/8, x13, x9, x10)

inst_199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c0464 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6941a6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2b5036 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c0464; op2val:0x3f6941a6;
op3val:0x7f2b5036; valaddr_reg:x12; val_offset:534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 534*FLEN/8, x13, x9, x10)

inst_200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00ae82 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x29e1b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ac951 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00ae82; op2val:0x3fa9e1b5;
op3val:0x7f2ac951; valaddr_reg:x12; val_offset:537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 537*FLEN/8, x13, x9, x10)

inst_201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00ae82 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x29e1b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ac951 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00ae82; op2val:0x3fa9e1b5;
op3val:0x7f2ac951; valaddr_reg:x12; val_offset:540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 540*FLEN/8, x13, x9, x10)

inst_202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00ae82 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x29e1b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ac951 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00ae82; op2val:0x3fa9e1b5;
op3val:0x7f2ac951; valaddr_reg:x12; val_offset:543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 543*FLEN/8, x13, x9, x10)

inst_203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00ae82 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x29e1b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ac951 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00ae82; op2val:0x3fa9e1b5;
op3val:0x7f2ac951; valaddr_reg:x12; val_offset:546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 546*FLEN/8, x13, x9, x10)

inst_204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00ae82 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x29e1b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ac951 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f00ae82; op2val:0x3fa9e1b5;
op3val:0x7f2ac951; valaddr_reg:x12; val_offset:549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 549*FLEN/8, x13, x9, x10)

inst_205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2bb8f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6dee41 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f9a10 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eabb8f9; op2val:0x3fedee41;
op3val:0x7f1f9a10; valaddr_reg:x12; val_offset:552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 552*FLEN/8, x13, x9, x10)

inst_206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2bb8f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6dee41 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f9a10 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eabb8f9; op2val:0x3fedee41;
op3val:0x7f1f9a10; valaddr_reg:x12; val_offset:555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 555*FLEN/8, x13, x9, x10)

inst_207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2bb8f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6dee41 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f9a10 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eabb8f9; op2val:0x3fedee41;
op3val:0x7f1f9a10; valaddr_reg:x12; val_offset:558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 558*FLEN/8, x13, x9, x10)

inst_208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2bb8f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6dee41 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f9a10 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eabb8f9; op2val:0x3fedee41;
op3val:0x7f1f9a10; valaddr_reg:x12; val_offset:561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 561*FLEN/8, x13, x9, x10)

inst_209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2bb8f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6dee41 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f9a10 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eabb8f9; op2val:0x3fedee41;
op3val:0x7f1f9a10; valaddr_reg:x12; val_offset:564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 564*FLEN/8, x13, x9, x10)

inst_210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18d9d9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x262663 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46685d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18d9d9; op2val:0x3f262663;
op3val:0x7ec6685d; valaddr_reg:x12; val_offset:567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 567*FLEN/8, x13, x9, x10)

inst_211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18d9d9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x262663 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46685d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18d9d9; op2val:0x3f262663;
op3val:0x7ec6685d; valaddr_reg:x12; val_offset:570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 570*FLEN/8, x13, x9, x10)

inst_212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18d9d9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x262663 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46685d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18d9d9; op2val:0x3f262663;
op3val:0x7ec6685d; valaddr_reg:x12; val_offset:573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 573*FLEN/8, x13, x9, x10)

inst_213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18d9d9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x262663 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46685d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18d9d9; op2val:0x3f262663;
op3val:0x7ec6685d; valaddr_reg:x12; val_offset:576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 576*FLEN/8, x13, x9, x10)

inst_214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18d9d9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x262663 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46685d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18d9d9; op2val:0x3f262663;
op3val:0x7ec6685d; valaddr_reg:x12; val_offset:579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 579*FLEN/8, x13, x9, x10)

inst_215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x34d648 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3fcdc7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x077d3c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb4d648; op2val:0x3fbfcdc7;
op3val:0x7f077d3c; valaddr_reg:x12; val_offset:582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 582*FLEN/8, x13, x9, x10)

inst_216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x34d648 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3fcdc7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x077d3c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb4d648; op2val:0x3fbfcdc7;
op3val:0x7f077d3c; valaddr_reg:x12; val_offset:585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 585*FLEN/8, x13, x9, x10)

inst_217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x34d648 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3fcdc7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x077d3c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb4d648; op2val:0x3fbfcdc7;
op3val:0x7f077d3c; valaddr_reg:x12; val_offset:588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 588*FLEN/8, x13, x9, x10)

inst_218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x34d648 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3fcdc7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x077d3c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb4d648; op2val:0x3fbfcdc7;
op3val:0x7f077d3c; valaddr_reg:x12; val_offset:591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 591*FLEN/8, x13, x9, x10)

inst_219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x34d648 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3fcdc7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x077d3c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb4d648; op2val:0x3fbfcdc7;
op3val:0x7f077d3c; valaddr_reg:x12; val_offset:594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 594*FLEN/8, x13, x9, x10)

inst_220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d149a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x571bda and fs3 == 0 and fe3 == 0xfb and fm3 == 0x03fd65 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9d149a; op2val:0x3e571bda;
op3val:0x7d83fd65; valaddr_reg:x12; val_offset:597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 597*FLEN/8, x13, x9, x10)

inst_221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d149a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x571bda and fs3 == 0 and fe3 == 0xfb and fm3 == 0x03fd65 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9d149a; op2val:0x3e571bda;
op3val:0x7d83fd65; valaddr_reg:x12; val_offset:600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 600*FLEN/8, x13, x9, x10)

inst_222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d149a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x571bda and fs3 == 0 and fe3 == 0xfb and fm3 == 0x03fd65 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9d149a; op2val:0x3e571bda;
op3val:0x7d83fd65; valaddr_reg:x12; val_offset:603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 603*FLEN/8, x13, x9, x10)

inst_223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d149a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x571bda and fs3 == 0 and fe3 == 0xfb and fm3 == 0x03fd65 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9d149a; op2val:0x3e571bda;
op3val:0x7d83fd65; valaddr_reg:x12; val_offset:606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 606*FLEN/8, x13, x9, x10)

inst_224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d149a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x571bda and fs3 == 0 and fe3 == 0xfb and fm3 == 0x03fd65 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9d149a; op2val:0x3e571bda;
op3val:0x7d83fd65; valaddr_reg:x12; val_offset:609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 609*FLEN/8, x13, x9, x10)

inst_225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f54bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x36502d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4c2647 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f54bf; op2val:0x3eb6502d;
op3val:0x7e4c2647; valaddr_reg:x12; val_offset:612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 612*FLEN/8, x13, x9, x10)

inst_226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f54bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x36502d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4c2647 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f54bf; op2val:0x3eb6502d;
op3val:0x7e4c2647; valaddr_reg:x12; val_offset:615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 615*FLEN/8, x13, x9, x10)

inst_227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f54bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x36502d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4c2647 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f54bf; op2val:0x3eb6502d;
op3val:0x7e4c2647; valaddr_reg:x12; val_offset:618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 618*FLEN/8, x13, x9, x10)

inst_228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f54bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x36502d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4c2647 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f54bf; op2val:0x3eb6502d;
op3val:0x7e4c2647; valaddr_reg:x12; val_offset:621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 621*FLEN/8, x13, x9, x10)

inst_229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f54bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x36502d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4c2647 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0f54bf; op2val:0x3eb6502d;
op3val:0x7e4c2647; valaddr_reg:x12; val_offset:624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 624*FLEN/8, x13, x9, x10)

inst_230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b4351 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4dc9e9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16889a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebb4351; op2val:0x3fcdc9e9;
op3val:0x7f16889a; valaddr_reg:x12; val_offset:627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 627*FLEN/8, x13, x9, x10)

inst_231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b4351 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4dc9e9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16889a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebb4351; op2val:0x3fcdc9e9;
op3val:0x7f16889a; valaddr_reg:x12; val_offset:630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 630*FLEN/8, x13, x9, x10)

inst_232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b4351 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4dc9e9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16889a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebb4351; op2val:0x3fcdc9e9;
op3val:0x7f16889a; valaddr_reg:x12; val_offset:633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 633*FLEN/8, x13, x9, x10)

inst_233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b4351 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4dc9e9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16889a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebb4351; op2val:0x3fcdc9e9;
op3val:0x7f16889a; valaddr_reg:x12; val_offset:636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 636*FLEN/8, x13, x9, x10)

inst_234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b4351 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4dc9e9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16889a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebb4351; op2val:0x3fcdc9e9;
op3val:0x7f16889a; valaddr_reg:x12; val_offset:639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 639*FLEN/8, x13, x9, x10)

inst_235:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0431c2 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x022039 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0663d1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0431c2; op2val:0x3e022039;
op3val:0x7c8663d1; valaddr_reg:x12; val_offset:642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 642*FLEN/8, x13, x9, x10)

inst_236:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0431c2 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x022039 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0663d1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0431c2; op2val:0x3e022039;
op3val:0x7c8663d1; valaddr_reg:x12; val_offset:645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 645*FLEN/8, x13, x9, x10)

inst_237:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0431c2 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x022039 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0663d1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0431c2; op2val:0x3e022039;
op3val:0x7c8663d1; valaddr_reg:x12; val_offset:648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 648*FLEN/8, x13, x9, x10)

inst_238:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0431c2 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x022039 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0663d1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0431c2; op2val:0x3e022039;
op3val:0x7c8663d1; valaddr_reg:x12; val_offset:651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 651*FLEN/8, x13, x9, x10)

inst_239:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0431c2 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x022039 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0663d1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0431c2; op2val:0x3e022039;
op3val:0x7c8663d1; valaddr_reg:x12; val_offset:654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 654*FLEN/8, x13, x9, x10)

inst_240:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3db054 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x18ba96 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6255e7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbdb054; op2val:0x4098ba96;
op3val:0x7ee255e7; valaddr_reg:x12; val_offset:657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 657*FLEN/8, x13, x9, x10)

inst_241:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3db054 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x18ba96 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6255e7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbdb054; op2val:0x4098ba96;
op3val:0x7ee255e7; valaddr_reg:x12; val_offset:660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 660*FLEN/8, x13, x9, x10)

inst_242:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3db054 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x18ba96 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6255e7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbdb054; op2val:0x4098ba96;
op3val:0x7ee255e7; valaddr_reg:x12; val_offset:663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 663*FLEN/8, x13, x9, x10)

inst_243:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3db054 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x18ba96 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6255e7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbdb054; op2val:0x4098ba96;
op3val:0x7ee255e7; valaddr_reg:x12; val_offset:666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 666*FLEN/8, x13, x9, x10)

inst_244:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3db054 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x18ba96 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6255e7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbdb054; op2val:0x4098ba96;
op3val:0x7ee255e7; valaddr_reg:x12; val_offset:669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 669*FLEN/8, x13, x9, x10)

inst_245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0aa492 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x35bca1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x44d907 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8aa492; op2val:0x3f35bca1;
op3val:0x7e44d907; valaddr_reg:x12; val_offset:672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 672*FLEN/8, x13, x9, x10)

inst_246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0aa492 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x35bca1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x44d907 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8aa492; op2val:0x3f35bca1;
op3val:0x7e44d907; valaddr_reg:x12; val_offset:675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 675*FLEN/8, x13, x9, x10)

inst_247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0aa492 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x35bca1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x44d907 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8aa492; op2val:0x3f35bca1;
op3val:0x7e44d907; valaddr_reg:x12; val_offset:678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 678*FLEN/8, x13, x9, x10)

inst_248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0aa492 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x35bca1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x44d907 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8aa492; op2val:0x3f35bca1;
op3val:0x7e44d907; valaddr_reg:x12; val_offset:681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 681*FLEN/8, x13, x9, x10)

inst_249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0aa492 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x35bca1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x44d907 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8aa492; op2val:0x3f35bca1;
op3val:0x7e44d907; valaddr_reg:x12; val_offset:684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 684*FLEN/8, x13, x9, x10)

inst_250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2d6385 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x037a19 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x321940 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ead6385; op2val:0x40037a19;
op3val:0x7f321940; valaddr_reg:x12; val_offset:687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 687*FLEN/8, x13, x9, x10)

inst_251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2d6385 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x037a19 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x321940 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ead6385; op2val:0x40037a19;
op3val:0x7f321940; valaddr_reg:x12; val_offset:690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 690*FLEN/8, x13, x9, x10)

inst_252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2d6385 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x037a19 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x321940 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ead6385; op2val:0x40037a19;
op3val:0x7f321940; valaddr_reg:x12; val_offset:693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 693*FLEN/8, x13, x9, x10)

inst_253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2d6385 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x037a19 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x321940 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ead6385; op2val:0x40037a19;
op3val:0x7f321940; valaddr_reg:x12; val_offset:696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 696*FLEN/8, x13, x9, x10)

inst_254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2d6385 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x037a19 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x321940 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ead6385; op2val:0x40037a19;
op3val:0x7f321940; valaddr_reg:x12; val_offset:699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 699*FLEN/8, x13, x9, x10)

inst_255:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43a885 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e4840 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1da8d4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e43a885; op2val:0x3fce4840;
op3val:0x7e9da8d4; valaddr_reg:x12; val_offset:702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 702*FLEN/8, x13, x9, x10)

inst_256:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43a885 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e4840 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1da8d4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e43a885; op2val:0x3fce4840;
op3val:0x7e9da8d4; valaddr_reg:x12; val_offset:705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 705*FLEN/8, x13, x9, x10)

inst_257:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43a885 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e4840 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1da8d4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e43a885; op2val:0x3fce4840;
op3val:0x7e9da8d4; valaddr_reg:x12; val_offset:708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 708*FLEN/8, x13, x9, x10)

inst_258:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43a885 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e4840 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1da8d4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e43a885; op2val:0x3fce4840;
op3val:0x7e9da8d4; valaddr_reg:x12; val_offset:711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 711*FLEN/8, x13, x9, x10)

inst_259:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43a885 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e4840 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1da8d4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e43a885; op2val:0x3fce4840;
op3val:0x7e9da8d4; valaddr_reg:x12; val_offset:714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 714*FLEN/8, x13, x9, x10)

inst_260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28d30c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x323b1d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b1376 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f28d30c; op2val:0x3f323b1d;
op3val:0x7eeb1376; valaddr_reg:x12; val_offset:717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 717*FLEN/8, x13, x9, x10)

inst_261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28d30c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x323b1d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b1376 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f28d30c; op2val:0x3f323b1d;
op3val:0x7eeb1376; valaddr_reg:x12; val_offset:720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 720*FLEN/8, x13, x9, x10)

inst_262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28d30c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x323b1d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b1376 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f28d30c; op2val:0x3f323b1d;
op3val:0x7eeb1376; valaddr_reg:x12; val_offset:723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 723*FLEN/8, x13, x9, x10)

inst_263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28d30c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x323b1d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b1376 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f28d30c; op2val:0x3f323b1d;
op3val:0x7eeb1376; valaddr_reg:x12; val_offset:726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 726*FLEN/8, x13, x9, x10)

inst_264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28d30c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x323b1d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b1376 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f28d30c; op2val:0x3f323b1d;
op3val:0x7eeb1376; valaddr_reg:x12; val_offset:729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 729*FLEN/8, x13, x9, x10)

inst_265:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4dc6a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x62c78f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3649c8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4dc6a7; op2val:0x3fe2c78f;
op3val:0x7eb649c8; valaddr_reg:x12; val_offset:732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 732*FLEN/8, x13, x9, x10)

inst_266:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4dc6a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x62c78f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3649c8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4dc6a7; op2val:0x3fe2c78f;
op3val:0x7eb649c8; valaddr_reg:x12; val_offset:735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 735*FLEN/8, x13, x9, x10)

inst_267:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4dc6a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x62c78f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3649c8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4dc6a7; op2val:0x3fe2c78f;
op3val:0x7eb649c8; valaddr_reg:x12; val_offset:738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 738*FLEN/8, x13, x9, x10)

inst_268:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4dc6a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x62c78f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3649c8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4dc6a7; op2val:0x3fe2c78f;
op3val:0x7eb649c8; valaddr_reg:x12; val_offset:741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 741*FLEN/8, x13, x9, x10)

inst_269:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4dc6a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x62c78f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3649c8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4dc6a7; op2val:0x3fe2c78f;
op3val:0x7eb649c8; valaddr_reg:x12; val_offset:744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 744*FLEN/8, x13, x9, x10)

inst_270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37c24b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x182086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5a656b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb7c24b; op2val:0x3e982086;
op3val:0x7dda656b; valaddr_reg:x12; val_offset:747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 747*FLEN/8, x13, x9, x10)

inst_271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37c24b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x182086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5a656b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb7c24b; op2val:0x3e982086;
op3val:0x7dda656b; valaddr_reg:x12; val_offset:750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 750*FLEN/8, x13, x9, x10)

inst_272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37c24b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x182086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5a656b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb7c24b; op2val:0x3e982086;
op3val:0x7dda656b; valaddr_reg:x12; val_offset:753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 753*FLEN/8, x13, x9, x10)

inst_273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37c24b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x182086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5a656b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb7c24b; op2val:0x3e982086;
op3val:0x7dda656b; valaddr_reg:x12; val_offset:756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 756*FLEN/8, x13, x9, x10)

inst_274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37c24b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x182086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5a656b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb7c24b; op2val:0x3e982086;
op3val:0x7dda656b; valaddr_reg:x12; val_offset:759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 759*FLEN/8, x13, x9, x10)

inst_275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10f39b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4f4d9f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6ac1db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90f39b; op2val:0x3f4f4d9f;
op3val:0x7e6ac1db; valaddr_reg:x12; val_offset:762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 762*FLEN/8, x13, x9, x10)

inst_276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10f39b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4f4d9f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6ac1db and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90f39b; op2val:0x3f4f4d9f;
op3val:0x7e6ac1db; valaddr_reg:x12; val_offset:765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 765*FLEN/8, x13, x9, x10)

inst_277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10f39b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4f4d9f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6ac1db and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90f39b; op2val:0x3f4f4d9f;
op3val:0x7e6ac1db; valaddr_reg:x12; val_offset:768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 768*FLEN/8, x13, x9, x10)

inst_278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10f39b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4f4d9f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6ac1db and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90f39b; op2val:0x3f4f4d9f;
op3val:0x7e6ac1db; valaddr_reg:x12; val_offset:771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 771*FLEN/8, x13, x9, x10)

inst_279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10f39b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4f4d9f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6ac1db and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90f39b; op2val:0x3f4f4d9f;
op3val:0x7e6ac1db; valaddr_reg:x12; val_offset:774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 774*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_2)

inst_280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a82a0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4dc01c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x785d1b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a82a0; op2val:0x3ecdc01c;
op3val:0x7e785d1b; valaddr_reg:x12; val_offset:777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 777*FLEN/8, x13, x9, x10)

inst_281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a82a0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4dc01c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x785d1b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a82a0; op2val:0x3ecdc01c;
op3val:0x7e785d1b; valaddr_reg:x12; val_offset:780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 780*FLEN/8, x13, x9, x10)

inst_282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a82a0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4dc01c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x785d1b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a82a0; op2val:0x3ecdc01c;
op3val:0x7e785d1b; valaddr_reg:x12; val_offset:783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 783*FLEN/8, x13, x9, x10)

inst_283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a82a0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4dc01c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x785d1b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a82a0; op2val:0x3ecdc01c;
op3val:0x7e785d1b; valaddr_reg:x12; val_offset:786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 786*FLEN/8, x13, x9, x10)

inst_284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a82a0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4dc01c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x785d1b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a82a0; op2val:0x3ecdc01c;
op3val:0x7e785d1b; valaddr_reg:x12; val_offset:789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 789*FLEN/8, x13, x9, x10)

inst_285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d263c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3c7c65 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a6317 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efd263c; op2val:0x3fbc7c65;
op3val:0x7f3a6317; valaddr_reg:x12; val_offset:792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 792*FLEN/8, x13, x9, x10)

inst_286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d263c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3c7c65 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a6317 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efd263c; op2val:0x3fbc7c65;
op3val:0x7f3a6317; valaddr_reg:x12; val_offset:795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 795*FLEN/8, x13, x9, x10)

inst_287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d263c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3c7c65 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a6317 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efd263c; op2val:0x3fbc7c65;
op3val:0x7f3a6317; valaddr_reg:x12; val_offset:798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 798*FLEN/8, x13, x9, x10)

inst_288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d263c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3c7c65 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a6317 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efd263c; op2val:0x3fbc7c65;
op3val:0x7f3a6317; valaddr_reg:x12; val_offset:801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 801*FLEN/8, x13, x9, x10)

inst_289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d263c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3c7c65 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a6317 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efd263c; op2val:0x3fbc7c65;
op3val:0x7f3a6317; valaddr_reg:x12; val_offset:804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 804*FLEN/8, x13, x9, x10)

inst_290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x313b25 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5093fc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x106682 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f313b25; op2val:0x3ed093fc;
op3val:0x7e906682; valaddr_reg:x12; val_offset:807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 807*FLEN/8, x13, x9, x10)

inst_291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x313b25 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5093fc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x106682 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f313b25; op2val:0x3ed093fc;
op3val:0x7e906682; valaddr_reg:x12; val_offset:810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 810*FLEN/8, x13, x9, x10)

inst_292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x313b25 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5093fc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x106682 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f313b25; op2val:0x3ed093fc;
op3val:0x7e906682; valaddr_reg:x12; val_offset:813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 813*FLEN/8, x13, x9, x10)

inst_293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x313b25 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5093fc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x106682 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f313b25; op2val:0x3ed093fc;
op3val:0x7e906682; valaddr_reg:x12; val_offset:816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 816*FLEN/8, x13, x9, x10)

inst_294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x313b25 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5093fc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x106682 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f313b25; op2val:0x3ed093fc;
op3val:0x7e906682; valaddr_reg:x12; val_offset:819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 819*FLEN/8, x13, x9, x10)

inst_295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x679066 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x07e51c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x75d8c6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee79066; op2val:0x3f07e51c;
op3val:0x7e75d8c6; valaddr_reg:x12; val_offset:822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 822*FLEN/8, x13, x9, x10)

inst_296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x679066 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x07e51c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x75d8c6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee79066; op2val:0x3f07e51c;
op3val:0x7e75d8c6; valaddr_reg:x12; val_offset:825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 825*FLEN/8, x13, x9, x10)

inst_297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x679066 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x07e51c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x75d8c6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee79066; op2val:0x3f07e51c;
op3val:0x7e75d8c6; valaddr_reg:x12; val_offset:828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 828*FLEN/8, x13, x9, x10)

inst_298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x679066 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x07e51c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x75d8c6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee79066; op2val:0x3f07e51c;
op3val:0x7e75d8c6; valaddr_reg:x12; val_offset:831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 831*FLEN/8, x13, x9, x10)

inst_299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x679066 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x07e51c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x75d8c6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee79066; op2val:0x3f07e51c;
op3val:0x7e75d8c6; valaddr_reg:x12; val_offset:834*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 834*FLEN/8, x13, x9, x10)

inst_300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18f0ab and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1cd557 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b643a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98f0ab; op2val:0x3f9cd557;
op3val:0x7ebb643a; valaddr_reg:x12; val_offset:837*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 837*FLEN/8, x13, x9, x10)

inst_301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18f0ab and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1cd557 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b643a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98f0ab; op2val:0x3f9cd557;
op3val:0x7ebb643a; valaddr_reg:x12; val_offset:840*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 840*FLEN/8, x13, x9, x10)

inst_302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18f0ab and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1cd557 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b643a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98f0ab; op2val:0x3f9cd557;
op3val:0x7ebb643a; valaddr_reg:x12; val_offset:843*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 843*FLEN/8, x13, x9, x10)

inst_303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18f0ab and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1cd557 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b643a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98f0ab; op2val:0x3f9cd557;
op3val:0x7ebb643a; valaddr_reg:x12; val_offset:846*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 846*FLEN/8, x13, x9, x10)

inst_304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18f0ab and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1cd557 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b643a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98f0ab; op2val:0x3f9cd557;
op3val:0x7ebb643a; valaddr_reg:x12; val_offset:849*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 849*FLEN/8, x13, x9, x10)

inst_305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18571c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1718df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33d45e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18571c; op2val:0x3f9718df;
op3val:0x7f33d45e; valaddr_reg:x12; val_offset:852*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 852*FLEN/8, x13, x9, x10)

inst_306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18571c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1718df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33d45e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18571c; op2val:0x3f9718df;
op3val:0x7f33d45e; valaddr_reg:x12; val_offset:855*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 855*FLEN/8, x13, x9, x10)

inst_307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18571c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1718df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33d45e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18571c; op2val:0x3f9718df;
op3val:0x7f33d45e; valaddr_reg:x12; val_offset:858*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 858*FLEN/8, x13, x9, x10)

inst_308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18571c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1718df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33d45e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18571c; op2val:0x3f9718df;
op3val:0x7f33d45e; valaddr_reg:x12; val_offset:861*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 861*FLEN/8, x13, x9, x10)

inst_309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18571c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1718df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33d45e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f18571c; op2val:0x3f9718df;
op3val:0x7f33d45e; valaddr_reg:x12; val_offset:864*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 864*FLEN/8, x13, x9, x10)

inst_310:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f5397 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x2e726c and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x182ea3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5f5397; op2val:0x3cae726c;
op3val:0x7b982ea3; valaddr_reg:x12; val_offset:867*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 867*FLEN/8, x13, x9, x10)

inst_311:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f5397 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x2e726c and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x182ea3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5f5397; op2val:0x3cae726c;
op3val:0x7b982ea3; valaddr_reg:x12; val_offset:870*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 870*FLEN/8, x13, x9, x10)

inst_312:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f5397 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x2e726c and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x182ea3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5f5397; op2val:0x3cae726c;
op3val:0x7b982ea3; valaddr_reg:x12; val_offset:873*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 873*FLEN/8, x13, x9, x10)

inst_313:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f5397 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x2e726c and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x182ea3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5f5397; op2val:0x3cae726c;
op3val:0x7b982ea3; valaddr_reg:x12; val_offset:876*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 876*FLEN/8, x13, x9, x10)

inst_314:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f5397 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x2e726c and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x182ea3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5f5397; op2val:0x3cae726c;
op3val:0x7b982ea3; valaddr_reg:x12; val_offset:879*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 879*FLEN/8, x13, x9, x10)

inst_315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c8d9d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0221ad and fs3 == 0 and fe3 == 0xfa and fm3 == 0x2f6d3b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eac8d9d; op2val:0x3e0221ad;
op3val:0x7d2f6d3b; valaddr_reg:x12; val_offset:882*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 882*FLEN/8, x13, x9, x10)

inst_316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c8d9d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0221ad and fs3 == 0 and fe3 == 0xfa and fm3 == 0x2f6d3b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eac8d9d; op2val:0x3e0221ad;
op3val:0x7d2f6d3b; valaddr_reg:x12; val_offset:885*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 885*FLEN/8, x13, x9, x10)

inst_317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c8d9d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0221ad and fs3 == 0 and fe3 == 0xfa and fm3 == 0x2f6d3b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eac8d9d; op2val:0x3e0221ad;
op3val:0x7d2f6d3b; valaddr_reg:x12; val_offset:888*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 888*FLEN/8, x13, x9, x10)

inst_318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c8d9d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0221ad and fs3 == 0 and fe3 == 0xfa and fm3 == 0x2f6d3b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eac8d9d; op2val:0x3e0221ad;
op3val:0x7d2f6d3b; valaddr_reg:x12; val_offset:891*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 891*FLEN/8, x13, x9, x10)

inst_319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c8d9d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0221ad and fs3 == 0 and fe3 == 0xfa and fm3 == 0x2f6d3b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eac8d9d; op2val:0x3e0221ad;
op3val:0x7d2f6d3b; valaddr_reg:x12; val_offset:894*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 894*FLEN/8, x13, x9, x10)

inst_320:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x39031d and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4d83ab and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1486a7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cb9031d; op2val:0x41cd83ab;
op3val:0x7f1486a7; valaddr_reg:x12; val_offset:897*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 897*FLEN/8, x13, x9, x10)

inst_321:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x39031d and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4d83ab and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1486a7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cb9031d; op2val:0x41cd83ab;
op3val:0x7f1486a7; valaddr_reg:x12; val_offset:900*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 900*FLEN/8, x13, x9, x10)

inst_322:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x39031d and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4d83ab and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1486a7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cb9031d; op2val:0x41cd83ab;
op3val:0x7f1486a7; valaddr_reg:x12; val_offset:903*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 903*FLEN/8, x13, x9, x10)

inst_323:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x39031d and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4d83ab and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1486a7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cb9031d; op2val:0x41cd83ab;
op3val:0x7f1486a7; valaddr_reg:x12; val_offset:906*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 906*FLEN/8, x13, x9, x10)

inst_324:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x39031d and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4d83ab and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1486a7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cb9031d; op2val:0x41cd83ab;
op3val:0x7f1486a7; valaddr_reg:x12; val_offset:909*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 909*FLEN/8, x13, x9, x10)

inst_325:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c3fe4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4d0748 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x09f410 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dac3fe4; op2val:0x40cd0748;
op3val:0x7f09f410; valaddr_reg:x12; val_offset:912*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 912*FLEN/8, x13, x9, x10)

inst_326:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c3fe4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4d0748 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x09f410 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dac3fe4; op2val:0x40cd0748;
op3val:0x7f09f410; valaddr_reg:x12; val_offset:915*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 915*FLEN/8, x13, x9, x10)

inst_327:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c3fe4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4d0748 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x09f410 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dac3fe4; op2val:0x40cd0748;
op3val:0x7f09f410; valaddr_reg:x12; val_offset:918*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 918*FLEN/8, x13, x9, x10)

inst_328:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c3fe4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4d0748 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x09f410 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dac3fe4; op2val:0x40cd0748;
op3val:0x7f09f410; valaddr_reg:x12; val_offset:921*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 921*FLEN/8, x13, x9, x10)

inst_329:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2c3fe4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4d0748 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x09f410 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dac3fe4; op2val:0x40cd0748;
op3val:0x7f09f410; valaddr_reg:x12; val_offset:924*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 924*FLEN/8, x13, x9, x10)

inst_330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b0329 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x25e82c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x342e39 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8b0329; op2val:0x4025e82c;
op3val:0x7f342e39; valaddr_reg:x12; val_offset:927*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 927*FLEN/8, x13, x9, x10)

inst_331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b0329 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x25e82c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x342e39 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8b0329; op2val:0x4025e82c;
op3val:0x7f342e39; valaddr_reg:x12; val_offset:930*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 930*FLEN/8, x13, x9, x10)

inst_332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b0329 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x25e82c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x342e39 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8b0329; op2val:0x4025e82c;
op3val:0x7f342e39; valaddr_reg:x12; val_offset:933*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 933*FLEN/8, x13, x9, x10)

inst_333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b0329 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x25e82c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x342e39 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8b0329; op2val:0x4025e82c;
op3val:0x7f342e39; valaddr_reg:x12; val_offset:936*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 936*FLEN/8, x13, x9, x10)

inst_334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b0329 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x25e82c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x342e39 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8b0329; op2val:0x4025e82c;
op3val:0x7f342e39; valaddr_reg:x12; val_offset:939*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 939*FLEN/8, x13, x9, x10)

inst_335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23ded1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x156e92 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3f4eee and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f23ded1; op2val:0x3d956e92;
op3val:0x7d3f4eee; valaddr_reg:x12; val_offset:942*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 942*FLEN/8, x13, x9, x10)

inst_336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23ded1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x156e92 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3f4eee and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f23ded1; op2val:0x3d956e92;
op3val:0x7d3f4eee; valaddr_reg:x12; val_offset:945*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 945*FLEN/8, x13, x9, x10)

inst_337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23ded1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x156e92 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3f4eee and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f23ded1; op2val:0x3d956e92;
op3val:0x7d3f4eee; valaddr_reg:x12; val_offset:948*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 948*FLEN/8, x13, x9, x10)

inst_338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23ded1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x156e92 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3f4eee and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f23ded1; op2val:0x3d956e92;
op3val:0x7d3f4eee; valaddr_reg:x12; val_offset:951*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 951*FLEN/8, x13, x9, x10)

inst_339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23ded1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x156e92 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3f4eee and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f23ded1; op2val:0x3d956e92;
op3val:0x7d3f4eee; valaddr_reg:x12; val_offset:954*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 954*FLEN/8, x13, x9, x10)

inst_340:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13f0eb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1d617d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35e62e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13f0eb; op2val:0x409d617d;
op3val:0x7f35e62e; valaddr_reg:x12; val_offset:957*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 957*FLEN/8, x13, x9, x10)

inst_341:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13f0eb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1d617d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35e62e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13f0eb; op2val:0x409d617d;
op3val:0x7f35e62e; valaddr_reg:x12; val_offset:960*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 960*FLEN/8, x13, x9, x10)

inst_342:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13f0eb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1d617d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35e62e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13f0eb; op2val:0x409d617d;
op3val:0x7f35e62e; valaddr_reg:x12; val_offset:963*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 963*FLEN/8, x13, x9, x10)

inst_343:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13f0eb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1d617d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35e62e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13f0eb; op2val:0x409d617d;
op3val:0x7f35e62e; valaddr_reg:x12; val_offset:966*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 966*FLEN/8, x13, x9, x10)

inst_344:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13f0eb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1d617d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35e62e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13f0eb; op2val:0x409d617d;
op3val:0x7f35e62e; valaddr_reg:x12; val_offset:969*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 969*FLEN/8, x13, x9, x10)

inst_345:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b8edc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x302841 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x221741 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeb8edc; op2val:0x3f302841;
op3val:0x7ea21741; valaddr_reg:x12; val_offset:972*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 972*FLEN/8, x13, x9, x10)

inst_346:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b8edc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x302841 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x221741 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeb8edc; op2val:0x3f302841;
op3val:0x7ea21741; valaddr_reg:x12; val_offset:975*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 975*FLEN/8, x13, x9, x10)

inst_347:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b8edc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x302841 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x221741 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeb8edc; op2val:0x3f302841;
op3val:0x7ea21741; valaddr_reg:x12; val_offset:978*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 978*FLEN/8, x13, x9, x10)

inst_348:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b8edc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x302841 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x221741 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeb8edc; op2val:0x3f302841;
op3val:0x7ea21741; valaddr_reg:x12; val_offset:981*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 981*FLEN/8, x13, x9, x10)

inst_349:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b8edc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x302841 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x221741 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeb8edc; op2val:0x3f302841;
op3val:0x7ea21741; valaddr_reg:x12; val_offset:984*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 984*FLEN/8, x13, x9, x10)

inst_350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16332e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x051bd2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c31d4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16332e; op2val:0x3f851bd2;
op3val:0x7f1c31d4; valaddr_reg:x12; val_offset:987*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 987*FLEN/8, x13, x9, x10)

inst_351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16332e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x051bd2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c31d4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16332e; op2val:0x3f851bd2;
op3val:0x7f1c31d4; valaddr_reg:x12; val_offset:990*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 990*FLEN/8, x13, x9, x10)

inst_352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16332e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x051bd2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c31d4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16332e; op2val:0x3f851bd2;
op3val:0x7f1c31d4; valaddr_reg:x12; val_offset:993*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 993*FLEN/8, x13, x9, x10)

inst_353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16332e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x051bd2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c31d4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16332e; op2val:0x3f851bd2;
op3val:0x7f1c31d4; valaddr_reg:x12; val_offset:996*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 996*FLEN/8, x13, x9, x10)

inst_354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16332e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x051bd2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c31d4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16332e; op2val:0x3f851bd2;
op3val:0x7f1c31d4; valaddr_reg:x12; val_offset:999*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 999*FLEN/8, x13, x9, x10)

inst_355:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ccf7c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7421c1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x340ea8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebccf7c; op2val:0x3f7421c1;
op3val:0x7eb40ea8; valaddr_reg:x12; val_offset:1002*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1002*FLEN/8, x13, x9, x10)

inst_356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ccf7c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7421c1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x340ea8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebccf7c; op2val:0x3f7421c1;
op3val:0x7eb40ea8; valaddr_reg:x12; val_offset:1005*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1005*FLEN/8, x13, x9, x10)

inst_357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ccf7c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7421c1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x340ea8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebccf7c; op2val:0x3f7421c1;
op3val:0x7eb40ea8; valaddr_reg:x12; val_offset:1008*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1008*FLEN/8, x13, x9, x10)

inst_358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ccf7c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7421c1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x340ea8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebccf7c; op2val:0x3f7421c1;
op3val:0x7eb40ea8; valaddr_reg:x12; val_offset:1011*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1011*FLEN/8, x13, x9, x10)

inst_359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3ccf7c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7421c1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x340ea8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebccf7c; op2val:0x3f7421c1;
op3val:0x7eb40ea8; valaddr_reg:x12; val_offset:1014*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1014*FLEN/8, x13, x9, x10)

inst_360:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19d68e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x674db3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0aff4b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d99d68e; op2val:0x40674db3;
op3val:0x7e8aff4b; valaddr_reg:x12; val_offset:1017*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1017*FLEN/8, x13, x9, x10)

inst_361:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19d68e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x674db3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0aff4b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d99d68e; op2val:0x40674db3;
op3val:0x7e8aff4b; valaddr_reg:x12; val_offset:1020*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1020*FLEN/8, x13, x9, x10)

inst_362:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19d68e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x674db3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0aff4b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d99d68e; op2val:0x40674db3;
op3val:0x7e8aff4b; valaddr_reg:x12; val_offset:1023*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1023*FLEN/8, x13, x9, x10)

inst_363:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19d68e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x674db3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0aff4b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d99d68e; op2val:0x40674db3;
op3val:0x7e8aff4b; valaddr_reg:x12; val_offset:1026*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1026*FLEN/8, x13, x9, x10)

inst_364:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19d68e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x674db3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0aff4b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d99d68e; op2val:0x40674db3;
op3val:0x7e8aff4b; valaddr_reg:x12; val_offset:1029*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1029*FLEN/8, x13, x9, x10)

inst_365:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5ea80c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0a19f7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x703a58 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ddea80c; op2val:0x408a19f7;
op3val:0x7ef03a58; valaddr_reg:x12; val_offset:1032*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1032*FLEN/8, x13, x9, x10)

inst_366:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5ea80c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0a19f7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x703a58 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ddea80c; op2val:0x408a19f7;
op3val:0x7ef03a58; valaddr_reg:x12; val_offset:1035*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1035*FLEN/8, x13, x9, x10)

inst_367:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5ea80c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0a19f7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x703a58 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ddea80c; op2val:0x408a19f7;
op3val:0x7ef03a58; valaddr_reg:x12; val_offset:1038*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1038*FLEN/8, x13, x9, x10)

inst_368:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5ea80c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0a19f7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x703a58 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ddea80c; op2val:0x408a19f7;
op3val:0x7ef03a58; valaddr_reg:x12; val_offset:1041*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1041*FLEN/8, x13, x9, x10)

inst_369:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5ea80c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0a19f7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x703a58 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ddea80c; op2val:0x408a19f7;
op3val:0x7ef03a58; valaddr_reg:x12; val_offset:1044*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1044*FLEN/8, x13, x9, x10)

inst_370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68ed41 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x738f77 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5d9bbd and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee8ed41; op2val:0x3e738f77;
op3val:0x7ddd9bbd; valaddr_reg:x12; val_offset:1047*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1047*FLEN/8, x13, x9, x10)

inst_371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68ed41 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x738f77 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5d9bbd and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee8ed41; op2val:0x3e738f77;
op3val:0x7ddd9bbd; valaddr_reg:x12; val_offset:1050*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1050*FLEN/8, x13, x9, x10)

inst_372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68ed41 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x738f77 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5d9bbd and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee8ed41; op2val:0x3e738f77;
op3val:0x7ddd9bbd; valaddr_reg:x12; val_offset:1053*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1053*FLEN/8, x13, x9, x10)

inst_373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68ed41 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x738f77 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5d9bbd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee8ed41; op2val:0x3e738f77;
op3val:0x7ddd9bbd; valaddr_reg:x12; val_offset:1056*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1056*FLEN/8, x13, x9, x10)

inst_374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68ed41 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x738f77 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5d9bbd and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee8ed41; op2val:0x3e738f77;
op3val:0x7ddd9bbd; valaddr_reg:x12; val_offset:1059*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1059*FLEN/8, x13, x9, x10)

inst_375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7127a3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1eb06b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x157ca7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef127a3; op2val:0x3e1eb06b;
op3val:0x7d957ca7; valaddr_reg:x12; val_offset:1062*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1062*FLEN/8, x13, x9, x10)

inst_376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7127a3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1eb06b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x157ca7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef127a3; op2val:0x3e1eb06b;
op3val:0x7d957ca7; valaddr_reg:x12; val_offset:1065*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1065*FLEN/8, x13, x9, x10)

inst_377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7127a3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1eb06b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x157ca7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef127a3; op2val:0x3e1eb06b;
op3val:0x7d957ca7; valaddr_reg:x12; val_offset:1068*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1068*FLEN/8, x13, x9, x10)

inst_378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7127a3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1eb06b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x157ca7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef127a3; op2val:0x3e1eb06b;
op3val:0x7d957ca7; valaddr_reg:x12; val_offset:1071*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1071*FLEN/8, x13, x9, x10)

inst_379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7127a3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1eb06b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x157ca7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef127a3; op2val:0x3e1eb06b;
op3val:0x7d957ca7; valaddr_reg:x12; val_offset:1074*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1074*FLEN/8, x13, x9, x10)

inst_380:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x21f156 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x43f0a5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x77e620 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da1f156; op2val:0x40c3f0a5;
op3val:0x7ef7e620; valaddr_reg:x12; val_offset:1077*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1077*FLEN/8, x13, x9, x10)

inst_381:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x21f156 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x43f0a5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x77e620 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da1f156; op2val:0x40c3f0a5;
op3val:0x7ef7e620; valaddr_reg:x12; val_offset:1080*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1080*FLEN/8, x13, x9, x10)

inst_382:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x21f156 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x43f0a5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x77e620 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da1f156; op2val:0x40c3f0a5;
op3val:0x7ef7e620; valaddr_reg:x12; val_offset:1083*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1083*FLEN/8, x13, x9, x10)

inst_383:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x21f156 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x43f0a5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x77e620 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da1f156; op2val:0x40c3f0a5;
op3val:0x7ef7e620; valaddr_reg:x12; val_offset:1086*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1086*FLEN/8, x13, x9, x10)

inst_384:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x21f156 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x43f0a5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x77e620 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da1f156; op2val:0x40c3f0a5;
op3val:0x7ef7e620; valaddr_reg:x12; val_offset:1089*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1089*FLEN/8, x13, x9, x10)

inst_385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31ae90 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x78da00 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2cb86b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb1ae90; op2val:0x3ff8da00;
op3val:0x7f2cb86b; valaddr_reg:x12; val_offset:1092*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1092*FLEN/8, x13, x9, x10)

inst_386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31ae90 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x78da00 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2cb86b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb1ae90; op2val:0x3ff8da00;
op3val:0x7f2cb86b; valaddr_reg:x12; val_offset:1095*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1095*FLEN/8, x13, x9, x10)

inst_387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31ae90 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x78da00 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2cb86b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb1ae90; op2val:0x3ff8da00;
op3val:0x7f2cb86b; valaddr_reg:x12; val_offset:1098*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1098*FLEN/8, x13, x9, x10)

inst_388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31ae90 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x78da00 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2cb86b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb1ae90; op2val:0x3ff8da00;
op3val:0x7f2cb86b; valaddr_reg:x12; val_offset:1101*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1101*FLEN/8, x13, x9, x10)

inst_389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31ae90 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x78da00 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2cb86b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb1ae90; op2val:0x3ff8da00;
op3val:0x7f2cb86b; valaddr_reg:x12; val_offset:1104*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1104*FLEN/8, x13, x9, x10)

inst_390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x719c9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0eaeb4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a9c2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef19c9d; op2val:0x3f8eaeb4;
op3val:0x7f06a9c2; valaddr_reg:x12; val_offset:1107*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1107*FLEN/8, x13, x9, x10)

inst_391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x719c9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0eaeb4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a9c2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef19c9d; op2val:0x3f8eaeb4;
op3val:0x7f06a9c2; valaddr_reg:x12; val_offset:1110*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1110*FLEN/8, x13, x9, x10)

inst_392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x719c9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0eaeb4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a9c2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef19c9d; op2val:0x3f8eaeb4;
op3val:0x7f06a9c2; valaddr_reg:x12; val_offset:1113*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1113*FLEN/8, x13, x9, x10)

inst_393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x719c9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0eaeb4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a9c2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef19c9d; op2val:0x3f8eaeb4;
op3val:0x7f06a9c2; valaddr_reg:x12; val_offset:1116*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1116*FLEN/8, x13, x9, x10)

inst_394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x719c9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0eaeb4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a9c2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef19c9d; op2val:0x3f8eaeb4;
op3val:0x7f06a9c2; valaddr_reg:x12; val_offset:1119*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1119*FLEN/8, x13, x9, x10)

inst_395:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x431508 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x51cb43 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fdf11 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc31508; op2val:0x40d1cb43;
op3val:0x7f1fdf11; valaddr_reg:x12; val_offset:1122*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1122*FLEN/8, x13, x9, x10)

inst_396:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x431508 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x51cb43 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fdf11 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc31508; op2val:0x40d1cb43;
op3val:0x7f1fdf11; valaddr_reg:x12; val_offset:1125*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1125*FLEN/8, x13, x9, x10)

inst_397:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x431508 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x51cb43 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fdf11 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc31508; op2val:0x40d1cb43;
op3val:0x7f1fdf11; valaddr_reg:x12; val_offset:1128*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1128*FLEN/8, x13, x9, x10)

inst_398:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x431508 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x51cb43 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fdf11 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc31508; op2val:0x40d1cb43;
op3val:0x7f1fdf11; valaddr_reg:x12; val_offset:1131*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1131*FLEN/8, x13, x9, x10)

inst_399:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x431508 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x51cb43 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fdf11 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc31508; op2val:0x40d1cb43;
op3val:0x7f1fdf11; valaddr_reg:x12; val_offset:1134*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1134*FLEN/8, x13, x9, x10)

inst_400:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0052ab and fs2 == 0 and fe2 == 0x81 and fm2 == 0x6cc2eb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6d5bd5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8052ab; op2val:0x40ecc2eb;
op3val:0x7eed5bd5; valaddr_reg:x12; val_offset:1137*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1137*FLEN/8, x13, x9, x10)

inst_401:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0052ab and fs2 == 0 and fe2 == 0x81 and fm2 == 0x6cc2eb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6d5bd5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8052ab; op2val:0x40ecc2eb;
op3val:0x7eed5bd5; valaddr_reg:x12; val_offset:1140*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1140*FLEN/8, x13, x9, x10)

inst_402:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0052ab and fs2 == 0 and fe2 == 0x81 and fm2 == 0x6cc2eb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6d5bd5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8052ab; op2val:0x40ecc2eb;
op3val:0x7eed5bd5; valaddr_reg:x12; val_offset:1143*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1143*FLEN/8, x13, x9, x10)

inst_403:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0052ab and fs2 == 0 and fe2 == 0x81 and fm2 == 0x6cc2eb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6d5bd5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8052ab; op2val:0x40ecc2eb;
op3val:0x7eed5bd5; valaddr_reg:x12; val_offset:1146*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1146*FLEN/8, x13, x9, x10)

inst_404:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0052ab and fs2 == 0 and fe2 == 0x81 and fm2 == 0x6cc2eb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6d5bd5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8052ab; op2val:0x40ecc2eb;
op3val:0x7eed5bd5; valaddr_reg:x12; val_offset:1149*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1149*FLEN/8, x13, x9, x10)

inst_405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2efd0c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ef82d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2e48b6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2efd0c; op2val:0x3f7ef82d;
op3val:0x7f2e48b6; valaddr_reg:x12; val_offset:1152*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1152*FLEN/8, x13, x9, x10)

inst_406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2efd0c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ef82d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2e48b6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2efd0c; op2val:0x3f7ef82d;
op3val:0x7f2e48b6; valaddr_reg:x12; val_offset:1155*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1155*FLEN/8, x13, x9, x10)

inst_407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2efd0c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ef82d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2e48b6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2efd0c; op2val:0x3f7ef82d;
op3val:0x7f2e48b6; valaddr_reg:x12; val_offset:1158*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1158*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_3)

inst_408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2efd0c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ef82d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2e48b6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2efd0c; op2val:0x3f7ef82d;
op3val:0x7f2e48b6; valaddr_reg:x12; val_offset:1161*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1161*FLEN/8, x13, x9, x10)

inst_409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2efd0c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ef82d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2e48b6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2efd0c; op2val:0x3f7ef82d;
op3val:0x7f2e48b6; valaddr_reg:x12; val_offset:1164*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1164*FLEN/8, x13, x9, x10)

inst_410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b8337 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x018782 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2d8fd1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2b8337; op2val:0x3f018782;
op3val:0x7ead8fd1; valaddr_reg:x12; val_offset:1167*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1167*FLEN/8, x13, x9, x10)

inst_411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b8337 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x018782 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2d8fd1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2b8337; op2val:0x3f018782;
op3val:0x7ead8fd1; valaddr_reg:x12; val_offset:1170*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1170*FLEN/8, x13, x9, x10)

inst_412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b8337 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x018782 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2d8fd1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2b8337; op2val:0x3f018782;
op3val:0x7ead8fd1; valaddr_reg:x12; val_offset:1173*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1173*FLEN/8, x13, x9, x10)

inst_413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b8337 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x018782 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2d8fd1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2b8337; op2val:0x3f018782;
op3val:0x7ead8fd1; valaddr_reg:x12; val_offset:1176*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1176*FLEN/8, x13, x9, x10)

inst_414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b8337 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x018782 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2d8fd1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2b8337; op2val:0x3f018782;
op3val:0x7ead8fd1; valaddr_reg:x12; val_offset:1179*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1179*FLEN/8, x13, x9, x10)

inst_415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0535ac and fs2 == 0 and fe2 == 0x7f and fm2 == 0x11fe69 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x17ef92 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0535ac; op2val:0x3f91fe69;
op3val:0x7f17ef92; valaddr_reg:x12; val_offset:1182*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1182*FLEN/8, x13, x9, x10)

inst_416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0535ac and fs2 == 0 and fe2 == 0x7f and fm2 == 0x11fe69 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x17ef92 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0535ac; op2val:0x3f91fe69;
op3val:0x7f17ef92; valaddr_reg:x12; val_offset:1185*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1185*FLEN/8, x13, x9, x10)

inst_417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0535ac and fs2 == 0 and fe2 == 0x7f and fm2 == 0x11fe69 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x17ef92 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0535ac; op2val:0x3f91fe69;
op3val:0x7f17ef92; valaddr_reg:x12; val_offset:1188*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1188*FLEN/8, x13, x9, x10)

inst_418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0535ac and fs2 == 0 and fe2 == 0x7f and fm2 == 0x11fe69 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x17ef92 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0535ac; op2val:0x3f91fe69;
op3val:0x7f17ef92; valaddr_reg:x12; val_offset:1191*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1191*FLEN/8, x13, x9, x10)

inst_419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0535ac and fs2 == 0 and fe2 == 0x7f and fm2 == 0x11fe69 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x17ef92 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0535ac; op2val:0x3f91fe69;
op3val:0x7f17ef92; valaddr_reg:x12; val_offset:1194*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1194*FLEN/8, x13, x9, x10)

inst_420:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x528ae7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x5c3da9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x352215 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd28ae7; op2val:0x40dc3da9;
op3val:0x7f352215; valaddr_reg:x12; val_offset:1197*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1197*FLEN/8, x13, x9, x10)

inst_421:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x528ae7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x5c3da9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x352215 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd28ae7; op2val:0x40dc3da9;
op3val:0x7f352215; valaddr_reg:x12; val_offset:1200*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1200*FLEN/8, x13, x9, x10)

inst_422:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x528ae7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x5c3da9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x352215 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd28ae7; op2val:0x40dc3da9;
op3val:0x7f352215; valaddr_reg:x12; val_offset:1203*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1203*FLEN/8, x13, x9, x10)

inst_423:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x528ae7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x5c3da9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x352215 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd28ae7; op2val:0x40dc3da9;
op3val:0x7f352215; valaddr_reg:x12; val_offset:1206*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1206*FLEN/8, x13, x9, x10)

inst_424:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x528ae7 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x5c3da9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x352215 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd28ae7; op2val:0x40dc3da9;
op3val:0x7f352215; valaddr_reg:x12; val_offset:1209*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1209*FLEN/8, x13, x9, x10)

inst_425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7c12 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7864d3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x294ceb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2e7c12; op2val:0x3ef864d3;
op3val:0x7ea94ceb; valaddr_reg:x12; val_offset:1212*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1212*FLEN/8, x13, x9, x10)

inst_426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7c12 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7864d3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x294ceb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2e7c12; op2val:0x3ef864d3;
op3val:0x7ea94ceb; valaddr_reg:x12; val_offset:1215*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1215*FLEN/8, x13, x9, x10)

inst_427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7c12 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7864d3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x294ceb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2e7c12; op2val:0x3ef864d3;
op3val:0x7ea94ceb; valaddr_reg:x12; val_offset:1218*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1218*FLEN/8, x13, x9, x10)

inst_428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7c12 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7864d3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x294ceb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2e7c12; op2val:0x3ef864d3;
op3val:0x7ea94ceb; valaddr_reg:x12; val_offset:1221*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1221*FLEN/8, x13, x9, x10)

inst_429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7c12 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7864d3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x294ceb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2e7c12; op2val:0x3ef864d3;
op3val:0x7ea94ceb; valaddr_reg:x12; val_offset:1224*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1224*FLEN/8, x13, x9, x10)

inst_430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1578bb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x130440 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bad9e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1578bb; op2val:0x3f130440;
op3val:0x7eabad9e; valaddr_reg:x12; val_offset:1227*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1227*FLEN/8, x13, x9, x10)

inst_431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1578bb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x130440 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bad9e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1578bb; op2val:0x3f130440;
op3val:0x7eabad9e; valaddr_reg:x12; val_offset:1230*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1230*FLEN/8, x13, x9, x10)

inst_432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1578bb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x130440 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bad9e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1578bb; op2val:0x3f130440;
op3val:0x7eabad9e; valaddr_reg:x12; val_offset:1233*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1233*FLEN/8, x13, x9, x10)

inst_433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1578bb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x130440 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bad9e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1578bb; op2val:0x3f130440;
op3val:0x7eabad9e; valaddr_reg:x12; val_offset:1236*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1236*FLEN/8, x13, x9, x10)

inst_434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1578bb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x130440 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bad9e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1578bb; op2val:0x3f130440;
op3val:0x7eabad9e; valaddr_reg:x12; val_offset:1239*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1239*FLEN/8, x13, x9, x10)

inst_435:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5447d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x24f81b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x08cbc1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5447d6; op2val:0x4024f81b;
op3val:0x7f08cbc1; valaddr_reg:x12; val_offset:1242*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1242*FLEN/8, x13, x9, x10)

inst_436:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5447d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x24f81b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x08cbc1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5447d6; op2val:0x4024f81b;
op3val:0x7f08cbc1; valaddr_reg:x12; val_offset:1245*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1245*FLEN/8, x13, x9, x10)

inst_437:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5447d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x24f81b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x08cbc1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5447d6; op2val:0x4024f81b;
op3val:0x7f08cbc1; valaddr_reg:x12; val_offset:1248*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1248*FLEN/8, x13, x9, x10)

inst_438:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5447d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x24f81b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x08cbc1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5447d6; op2val:0x4024f81b;
op3val:0x7f08cbc1; valaddr_reg:x12; val_offset:1251*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1251*FLEN/8, x13, x9, x10)

inst_439:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5447d6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x24f81b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x08cbc1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e5447d6; op2val:0x4024f81b;
op3val:0x7f08cbc1; valaddr_reg:x12; val_offset:1254*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1254*FLEN/8, x13, x9, x10)

inst_440:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x43983d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x491608 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19a35e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d43983d; op2val:0x41491608;
op3val:0x7f19a35e; valaddr_reg:x12; val_offset:1257*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1257*FLEN/8, x13, x9, x10)

inst_441:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x43983d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x491608 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19a35e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d43983d; op2val:0x41491608;
op3val:0x7f19a35e; valaddr_reg:x12; val_offset:1260*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1260*FLEN/8, x13, x9, x10)

inst_442:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x43983d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x491608 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19a35e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d43983d; op2val:0x41491608;
op3val:0x7f19a35e; valaddr_reg:x12; val_offset:1263*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1263*FLEN/8, x13, x9, x10)

inst_443:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x43983d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x491608 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19a35e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d43983d; op2val:0x41491608;
op3val:0x7f19a35e; valaddr_reg:x12; val_offset:1266*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1266*FLEN/8, x13, x9, x10)

inst_444:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x43983d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x491608 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19a35e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d43983d; op2val:0x41491608;
op3val:0x7f19a35e; valaddr_reg:x12; val_offset:1269*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1269*FLEN/8, x13, x9, x10)

inst_445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bca6f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x15c04d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5bb3c7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3bca6f; op2val:0x3e95c04d;
op3val:0x7e5bb3c7; valaddr_reg:x12; val_offset:1272*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1272*FLEN/8, x13, x9, x10)

inst_446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bca6f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x15c04d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5bb3c7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3bca6f; op2val:0x3e95c04d;
op3val:0x7e5bb3c7; valaddr_reg:x12; val_offset:1275*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1275*FLEN/8, x13, x9, x10)

inst_447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bca6f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x15c04d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5bb3c7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3bca6f; op2val:0x3e95c04d;
op3val:0x7e5bb3c7; valaddr_reg:x12; val_offset:1278*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1278*FLEN/8, x13, x9, x10)

inst_448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bca6f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x15c04d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5bb3c7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3bca6f; op2val:0x3e95c04d;
op3val:0x7e5bb3c7; valaddr_reg:x12; val_offset:1281*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1281*FLEN/8, x13, x9, x10)

inst_449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bca6f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x15c04d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5bb3c7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3bca6f; op2val:0x3e95c04d;
op3val:0x7e5bb3c7; valaddr_reg:x12; val_offset:1284*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1284*FLEN/8, x13, x9, x10)

inst_450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x346ab9 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x366217 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x008901 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f346ab9; op2val:0x3db66217;
op3val:0x7d808901; valaddr_reg:x12; val_offset:1287*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1287*FLEN/8, x13, x9, x10)

inst_451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x346ab9 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x366217 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x008901 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f346ab9; op2val:0x3db66217;
op3val:0x7d808901; valaddr_reg:x12; val_offset:1290*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1290*FLEN/8, x13, x9, x10)

inst_452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x346ab9 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x366217 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x008901 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f346ab9; op2val:0x3db66217;
op3val:0x7d808901; valaddr_reg:x12; val_offset:1293*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1293*FLEN/8, x13, x9, x10)

inst_453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x346ab9 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x366217 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x008901 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f346ab9; op2val:0x3db66217;
op3val:0x7d808901; valaddr_reg:x12; val_offset:1296*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1296*FLEN/8, x13, x9, x10)

inst_454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x346ab9 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x366217 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x008901 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f346ab9; op2val:0x3db66217;
op3val:0x7d808901; valaddr_reg:x12; val_offset:1299*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1299*FLEN/8, x13, x9, x10)

inst_455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24c049 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x26f4cf and fs3 == 0 and fe3 == 0xfc and fm3 == 0x56e479 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24c049; op2val:0x3ea6f4cf;
op3val:0x7e56e479; valaddr_reg:x12; val_offset:1302*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1302*FLEN/8, x13, x9, x10)

inst_456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24c049 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x26f4cf and fs3 == 0 and fe3 == 0xfc and fm3 == 0x56e479 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24c049; op2val:0x3ea6f4cf;
op3val:0x7e56e479; valaddr_reg:x12; val_offset:1305*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1305*FLEN/8, x13, x9, x10)

inst_457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24c049 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x26f4cf and fs3 == 0 and fe3 == 0xfc and fm3 == 0x56e479 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24c049; op2val:0x3ea6f4cf;
op3val:0x7e56e479; valaddr_reg:x12; val_offset:1308*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1308*FLEN/8, x13, x9, x10)

inst_458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24c049 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x26f4cf and fs3 == 0 and fe3 == 0xfc and fm3 == 0x56e479 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24c049; op2val:0x3ea6f4cf;
op3val:0x7e56e479; valaddr_reg:x12; val_offset:1311*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1311*FLEN/8, x13, x9, x10)

inst_459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24c049 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x26f4cf and fs3 == 0 and fe3 == 0xfc and fm3 == 0x56e479 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24c049; op2val:0x3ea6f4cf;
op3val:0x7e56e479; valaddr_reg:x12; val_offset:1314*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1314*FLEN/8, x13, x9, x10)

inst_460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3983ab and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6439df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x256335 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3983ab; op2val:0x3ee439df;
op3val:0x7ea56335; valaddr_reg:x12; val_offset:1317*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1317*FLEN/8, x13, x9, x10)

inst_461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3983ab and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6439df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x256335 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3983ab; op2val:0x3ee439df;
op3val:0x7ea56335; valaddr_reg:x12; val_offset:1320*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1320*FLEN/8, x13, x9, x10)

inst_462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3983ab and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6439df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x256335 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3983ab; op2val:0x3ee439df;
op3val:0x7ea56335; valaddr_reg:x12; val_offset:1323*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1323*FLEN/8, x13, x9, x10)

inst_463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3983ab and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6439df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x256335 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3983ab; op2val:0x3ee439df;
op3val:0x7ea56335; valaddr_reg:x12; val_offset:1326*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1326*FLEN/8, x13, x9, x10)

inst_464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3983ab and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6439df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x256335 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3983ab; op2val:0x3ee439df;
op3val:0x7ea56335; valaddr_reg:x12; val_offset:1329*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1329*FLEN/8, x13, x9, x10)

inst_465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x310e27 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x0dbfdf and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4412ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f310e27; op2val:0x3d0dbfdf;
op3val:0x7cc412ff; valaddr_reg:x12; val_offset:1332*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1332*FLEN/8, x13, x9, x10)

inst_466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x310e27 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x0dbfdf and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4412ff and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f310e27; op2val:0x3d0dbfdf;
op3val:0x7cc412ff; valaddr_reg:x12; val_offset:1335*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1335*FLEN/8, x13, x9, x10)

inst_467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x310e27 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x0dbfdf and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4412ff and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f310e27; op2val:0x3d0dbfdf;
op3val:0x7cc412ff; valaddr_reg:x12; val_offset:1338*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1338*FLEN/8, x13, x9, x10)

inst_468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x310e27 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x0dbfdf and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4412ff and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f310e27; op2val:0x3d0dbfdf;
op3val:0x7cc412ff; valaddr_reg:x12; val_offset:1341*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1341*FLEN/8, x13, x9, x10)

inst_469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x310e27 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x0dbfdf and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4412ff and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f310e27; op2val:0x3d0dbfdf;
op3val:0x7cc412ff; valaddr_reg:x12; val_offset:1344*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1344*FLEN/8, x13, x9, x10)

inst_470:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x038c5d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1883f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cbe4b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d838c5d; op2val:0x411883f4;
op3val:0x7f1cbe4b; valaddr_reg:x12; val_offset:1347*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1347*FLEN/8, x13, x9, x10)

inst_471:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x038c5d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1883f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cbe4b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d838c5d; op2val:0x411883f4;
op3val:0x7f1cbe4b; valaddr_reg:x12; val_offset:1350*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1350*FLEN/8, x13, x9, x10)

inst_472:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x038c5d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1883f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cbe4b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d838c5d; op2val:0x411883f4;
op3val:0x7f1cbe4b; valaddr_reg:x12; val_offset:1353*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1353*FLEN/8, x13, x9, x10)

inst_473:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x038c5d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1883f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cbe4b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d838c5d; op2val:0x411883f4;
op3val:0x7f1cbe4b; valaddr_reg:x12; val_offset:1356*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1356*FLEN/8, x13, x9, x10)

inst_474:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x038c5d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1883f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cbe4b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d838c5d; op2val:0x411883f4;
op3val:0x7f1cbe4b; valaddr_reg:x12; val_offset:1359*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1359*FLEN/8, x13, x9, x10)

inst_475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x75363e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56ade2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4da1e6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef5363e; op2val:0x3f56ade2;
op3val:0x7ecda1e6; valaddr_reg:x12; val_offset:1362*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1362*FLEN/8, x13, x9, x10)

inst_476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x75363e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56ade2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4da1e6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef5363e; op2val:0x3f56ade2;
op3val:0x7ecda1e6; valaddr_reg:x12; val_offset:1365*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1365*FLEN/8, x13, x9, x10)

inst_477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x75363e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56ade2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4da1e6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef5363e; op2val:0x3f56ade2;
op3val:0x7ecda1e6; valaddr_reg:x12; val_offset:1368*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1368*FLEN/8, x13, x9, x10)

inst_478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x75363e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56ade2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4da1e6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef5363e; op2val:0x3f56ade2;
op3val:0x7ecda1e6; valaddr_reg:x12; val_offset:1371*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1371*FLEN/8, x13, x9, x10)

inst_479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x75363e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56ade2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4da1e6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef5363e; op2val:0x3f56ade2;
op3val:0x7ecda1e6; valaddr_reg:x12; val_offset:1374*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1374*FLEN/8, x13, x9, x10)

inst_480:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x48fcb3 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x298476 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0516d1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc8fcb3; op2val:0x40a98476;
op3val:0x7e0516d1; valaddr_reg:x12; val_offset:1377*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1377*FLEN/8, x13, x9, x10)

inst_481:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x48fcb3 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x298476 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0516d1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc8fcb3; op2val:0x40a98476;
op3val:0x7e0516d1; valaddr_reg:x12; val_offset:1380*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1380*FLEN/8, x13, x9, x10)

inst_482:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x48fcb3 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x298476 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0516d1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc8fcb3; op2val:0x40a98476;
op3val:0x7e0516d1; valaddr_reg:x12; val_offset:1383*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1383*FLEN/8, x13, x9, x10)

inst_483:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x48fcb3 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x298476 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0516d1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc8fcb3; op2val:0x40a98476;
op3val:0x7e0516d1; valaddr_reg:x12; val_offset:1386*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1386*FLEN/8, x13, x9, x10)

inst_484:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x48fcb3 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x298476 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0516d1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc8fcb3; op2val:0x40a98476;
op3val:0x7e0516d1; valaddr_reg:x12; val_offset:1389*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1389*FLEN/8, x13, x9, x10)

inst_485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e4484 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0fe7df and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1ff244 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e4484; op2val:0x3e0fe7df;
op3val:0x7d1ff244; valaddr_reg:x12; val_offset:1392*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1392*FLEN/8, x13, x9, x10)

inst_486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e4484 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0fe7df and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1ff244 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e4484; op2val:0x3e0fe7df;
op3val:0x7d1ff244; valaddr_reg:x12; val_offset:1395*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1395*FLEN/8, x13, x9, x10)

inst_487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e4484 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0fe7df and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1ff244 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e4484; op2val:0x3e0fe7df;
op3val:0x7d1ff244; valaddr_reg:x12; val_offset:1398*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1398*FLEN/8, x13, x9, x10)

inst_488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e4484 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0fe7df and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1ff244 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e4484; op2val:0x3e0fe7df;
op3val:0x7d1ff244; valaddr_reg:x12; val_offset:1401*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1401*FLEN/8, x13, x9, x10)

inst_489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e4484 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0fe7df and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1ff244 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e4484; op2val:0x3e0fe7df;
op3val:0x7d1ff244; valaddr_reg:x12; val_offset:1404*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1404*FLEN/8, x13, x9, x10)

inst_490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ea9e8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x454378 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12eaff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3ea9e8; op2val:0x3f454378;
op3val:0x7f12eaff; valaddr_reg:x12; val_offset:1407*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1407*FLEN/8, x13, x9, x10)

inst_491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ea9e8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x454378 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12eaff and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3ea9e8; op2val:0x3f454378;
op3val:0x7f12eaff; valaddr_reg:x12; val_offset:1410*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1410*FLEN/8, x13, x9, x10)

inst_492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ea9e8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x454378 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12eaff and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3ea9e8; op2val:0x3f454378;
op3val:0x7f12eaff; valaddr_reg:x12; val_offset:1413*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1413*FLEN/8, x13, x9, x10)

inst_493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ea9e8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x454378 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12eaff and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3ea9e8; op2val:0x3f454378;
op3val:0x7f12eaff; valaddr_reg:x12; val_offset:1416*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1416*FLEN/8, x13, x9, x10)

inst_494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ea9e8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x454378 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12eaff and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3ea9e8; op2val:0x3f454378;
op3val:0x7f12eaff; valaddr_reg:x12; val_offset:1419*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1419*FLEN/8, x13, x9, x10)

inst_495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x365c6a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3cdb59 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06881f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f365c6a; op2val:0x3f3cdb59;
op3val:0x7f06881f; valaddr_reg:x12; val_offset:1422*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1422*FLEN/8, x13, x9, x10)

inst_496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x365c6a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3cdb59 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06881f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f365c6a; op2val:0x3f3cdb59;
op3val:0x7f06881f; valaddr_reg:x12; val_offset:1425*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1425*FLEN/8, x13, x9, x10)

inst_497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x365c6a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3cdb59 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06881f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f365c6a; op2val:0x3f3cdb59;
op3val:0x7f06881f; valaddr_reg:x12; val_offset:1428*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1428*FLEN/8, x13, x9, x10)

inst_498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x365c6a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3cdb59 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06881f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f365c6a; op2val:0x3f3cdb59;
op3val:0x7f06881f; valaddr_reg:x12; val_offset:1431*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1431*FLEN/8, x13, x9, x10)

inst_499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x365c6a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3cdb59 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06881f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f365c6a; op2val:0x3f3cdb59;
op3val:0x7f06881f; valaddr_reg:x12; val_offset:1434*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1434*FLEN/8, x13, x9, x10)

inst_500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03e545 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6754b2 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x6e5f0a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e83e545; op2val:0x3e6754b2;
op3val:0x7d6e5f0a; valaddr_reg:x12; val_offset:1437*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1437*FLEN/8, x13, x9, x10)

inst_501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03e545 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6754b2 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x6e5f0a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e83e545; op2val:0x3e6754b2;
op3val:0x7d6e5f0a; valaddr_reg:x12; val_offset:1440*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1440*FLEN/8, x13, x9, x10)

inst_502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03e545 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6754b2 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x6e5f0a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e83e545; op2val:0x3e6754b2;
op3val:0x7d6e5f0a; valaddr_reg:x12; val_offset:1443*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1443*FLEN/8, x13, x9, x10)

inst_503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03e545 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6754b2 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x6e5f0a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e83e545; op2val:0x3e6754b2;
op3val:0x7d6e5f0a; valaddr_reg:x12; val_offset:1446*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1446*FLEN/8, x13, x9, x10)

inst_504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x03e545 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6754b2 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x6e5f0a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e83e545; op2val:0x3e6754b2;
op3val:0x7d6e5f0a; valaddr_reg:x12; val_offset:1449*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1449*FLEN/8, x13, x9, x10)

inst_505:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c73a9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1fa10c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2f2863 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c73a9; op2val:0x3e1fa10c;
op3val:0x7daf2863; valaddr_reg:x12; val_offset:1452*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1452*FLEN/8, x13, x9, x10)

inst_506:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c73a9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1fa10c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2f2863 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c73a9; op2val:0x3e1fa10c;
op3val:0x7daf2863; valaddr_reg:x12; val_offset:1455*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1455*FLEN/8, x13, x9, x10)

inst_507:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c73a9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1fa10c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2f2863 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c73a9; op2val:0x3e1fa10c;
op3val:0x7daf2863; valaddr_reg:x12; val_offset:1458*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1458*FLEN/8, x13, x9, x10)

inst_508:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c73a9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1fa10c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2f2863 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c73a9; op2val:0x3e1fa10c;
op3val:0x7daf2863; valaddr_reg:x12; val_offset:1461*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1461*FLEN/8, x13, x9, x10)

inst_509:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c73a9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1fa10c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2f2863 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c73a9; op2val:0x3e1fa10c;
op3val:0x7daf2863; valaddr_reg:x12; val_offset:1464*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1464*FLEN/8, x13, x9, x10)

inst_510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5218a0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x592123 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x323212 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed218a0; op2val:0x3f592123;
op3val:0x7eb23212; valaddr_reg:x12; val_offset:1467*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1467*FLEN/8, x13, x9, x10)

inst_511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5218a0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x592123 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x323212 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed218a0; op2val:0x3f592123;
op3val:0x7eb23212; valaddr_reg:x12; val_offset:1470*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1470*FLEN/8, x13, x9, x10)

inst_512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5218a0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x592123 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x323212 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed218a0; op2val:0x3f592123;
op3val:0x7eb23212; valaddr_reg:x12; val_offset:1473*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1473*FLEN/8, x13, x9, x10)

inst_513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5218a0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x592123 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x323212 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed218a0; op2val:0x3f592123;
op3val:0x7eb23212; valaddr_reg:x12; val_offset:1476*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1476*FLEN/8, x13, x9, x10)

inst_514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5218a0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x592123 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x323212 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed218a0; op2val:0x3f592123;
op3val:0x7eb23212; valaddr_reg:x12; val_offset:1479*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1479*FLEN/8, x13, x9, x10)

inst_515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de659 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1bacb3 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x66f527 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebde659; op2val:0x3e1bacb3;
op3val:0x7d66f527; valaddr_reg:x12; val_offset:1482*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1482*FLEN/8, x13, x9, x10)

inst_516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de659 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1bacb3 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x66f527 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebde659; op2val:0x3e1bacb3;
op3val:0x7d66f527; valaddr_reg:x12; val_offset:1485*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1485*FLEN/8, x13, x9, x10)

inst_517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de659 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1bacb3 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x66f527 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebde659; op2val:0x3e1bacb3;
op3val:0x7d66f527; valaddr_reg:x12; val_offset:1488*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1488*FLEN/8, x13, x9, x10)

inst_518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de659 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1bacb3 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x66f527 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebde659; op2val:0x3e1bacb3;
op3val:0x7d66f527; valaddr_reg:x12; val_offset:1491*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1491*FLEN/8, x13, x9, x10)

inst_519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3de659 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1bacb3 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x66f527 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebde659; op2val:0x3e1bacb3;
op3val:0x7d66f527; valaddr_reg:x12; val_offset:1494*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1494*FLEN/8, x13, x9, x10)

inst_520:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x633d35 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x611178 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x47c84e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d633d35; op2val:0x40e11178;
op3val:0x7ec7c84e; valaddr_reg:x12; val_offset:1497*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1497*FLEN/8, x13, x9, x10)

inst_521:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x633d35 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x611178 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x47c84e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d633d35; op2val:0x40e11178;
op3val:0x7ec7c84e; valaddr_reg:x12; val_offset:1500*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1500*FLEN/8, x13, x9, x10)

inst_522:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x633d35 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x611178 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x47c84e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d633d35; op2val:0x40e11178;
op3val:0x7ec7c84e; valaddr_reg:x12; val_offset:1503*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1503*FLEN/8, x13, x9, x10)

inst_523:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x633d35 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x611178 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x47c84e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d633d35; op2val:0x40e11178;
op3val:0x7ec7c84e; valaddr_reg:x12; val_offset:1506*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1506*FLEN/8, x13, x9, x10)

inst_524:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x633d35 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x611178 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x47c84e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d633d35; op2val:0x40e11178;
op3val:0x7ec7c84e; valaddr_reg:x12; val_offset:1509*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1509*FLEN/8, x13, x9, x10)

inst_525:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x3b3e27 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x09ecfa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49c32f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cbb3e27; op2val:0x4189ecfa;
op3val:0x7ec9c32f; valaddr_reg:x12; val_offset:1512*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1512*FLEN/8, x13, x9, x10)

inst_526:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x3b3e27 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x09ecfa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49c32f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cbb3e27; op2val:0x4189ecfa;
op3val:0x7ec9c32f; valaddr_reg:x12; val_offset:1515*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1515*FLEN/8, x13, x9, x10)

inst_527:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x3b3e27 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x09ecfa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49c32f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cbb3e27; op2val:0x4189ecfa;
op3val:0x7ec9c32f; valaddr_reg:x12; val_offset:1518*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1518*FLEN/8, x13, x9, x10)

inst_528:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x3b3e27 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x09ecfa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49c32f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cbb3e27; op2val:0x4189ecfa;
op3val:0x7ec9c32f; valaddr_reg:x12; val_offset:1521*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1521*FLEN/8, x13, x9, x10)

inst_529:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x3b3e27 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x09ecfa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49c32f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cbb3e27; op2val:0x4189ecfa;
op3val:0x7ec9c32f; valaddr_reg:x12; val_offset:1524*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1524*FLEN/8, x13, x9, x10)

inst_530:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x66dc85 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6fe8a0 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5859a9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de6dc85; op2val:0x3fefe8a0;
op3val:0x7e5859a9; valaddr_reg:x12; val_offset:1527*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1527*FLEN/8, x13, x9, x10)

inst_531:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x66dc85 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6fe8a0 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5859a9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de6dc85; op2val:0x3fefe8a0;
op3val:0x7e5859a9; valaddr_reg:x12; val_offset:1530*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1530*FLEN/8, x13, x9, x10)

inst_532:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x66dc85 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6fe8a0 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5859a9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de6dc85; op2val:0x3fefe8a0;
op3val:0x7e5859a9; valaddr_reg:x12; val_offset:1533*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1533*FLEN/8, x13, x9, x10)

inst_533:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x66dc85 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6fe8a0 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5859a9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de6dc85; op2val:0x3fefe8a0;
op3val:0x7e5859a9; valaddr_reg:x12; val_offset:1536*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1536*FLEN/8, x13, x9, x10)

inst_534:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x66dc85 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6fe8a0 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5859a9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de6dc85; op2val:0x3fefe8a0;
op3val:0x7e5859a9; valaddr_reg:x12; val_offset:1539*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1539*FLEN/8, x13, x9, x10)

inst_535:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x67f048 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x70ec94 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5a479c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de7f048; op2val:0x4070ec94;
op3val:0x7eda479c; valaddr_reg:x12; val_offset:1542*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1542*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_4)

inst_536:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x67f048 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x70ec94 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5a479c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de7f048; op2val:0x4070ec94;
op3val:0x7eda479c; valaddr_reg:x12; val_offset:1545*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1545*FLEN/8, x13, x9, x10)

inst_537:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x67f048 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x70ec94 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5a479c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de7f048; op2val:0x4070ec94;
op3val:0x7eda479c; valaddr_reg:x12; val_offset:1548*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1548*FLEN/8, x13, x9, x10)

inst_538:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x67f048 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x70ec94 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5a479c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de7f048; op2val:0x4070ec94;
op3val:0x7eda479c; valaddr_reg:x12; val_offset:1551*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1551*FLEN/8, x13, x9, x10)

inst_539:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x67f048 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x70ec94 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5a479c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de7f048; op2val:0x4070ec94;
op3val:0x7eda479c; valaddr_reg:x12; val_offset:1554*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1554*FLEN/8, x13, x9, x10)

inst_540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x151c59 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x131231 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b53c0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e951c59; op2val:0x3f131231;
op3val:0x7e2b53c0; valaddr_reg:x12; val_offset:1557*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1557*FLEN/8, x13, x9, x10)

inst_541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x151c59 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x131231 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b53c0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e951c59; op2val:0x3f131231;
op3val:0x7e2b53c0; valaddr_reg:x12; val_offset:1560*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1560*FLEN/8, x13, x9, x10)

inst_542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x151c59 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x131231 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b53c0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e951c59; op2val:0x3f131231;
op3val:0x7e2b53c0; valaddr_reg:x12; val_offset:1563*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1563*FLEN/8, x13, x9, x10)

inst_543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x151c59 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x131231 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b53c0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e951c59; op2val:0x3f131231;
op3val:0x7e2b53c0; valaddr_reg:x12; val_offset:1566*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1566*FLEN/8, x13, x9, x10)

inst_544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x151c59 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x131231 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b53c0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e951c59; op2val:0x3f131231;
op3val:0x7e2b53c0; valaddr_reg:x12; val_offset:1569*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1569*FLEN/8, x13, x9, x10)

inst_545:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a2f80 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22e85e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x589913 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2a2f80; op2val:0x4022e85e;
op3val:0x7ed89913; valaddr_reg:x12; val_offset:1572*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1572*FLEN/8, x13, x9, x10)

inst_546:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a2f80 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22e85e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x589913 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2a2f80; op2val:0x4022e85e;
op3val:0x7ed89913; valaddr_reg:x12; val_offset:1575*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1575*FLEN/8, x13, x9, x10)

inst_547:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a2f80 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22e85e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x589913 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2a2f80; op2val:0x4022e85e;
op3val:0x7ed89913; valaddr_reg:x12; val_offset:1578*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1578*FLEN/8, x13, x9, x10)

inst_548:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a2f80 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22e85e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x589913 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2a2f80; op2val:0x4022e85e;
op3val:0x7ed89913; valaddr_reg:x12; val_offset:1581*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1581*FLEN/8, x13, x9, x10)

inst_549:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a2f80 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22e85e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x589913 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2a2f80; op2val:0x4022e85e;
op3val:0x7ed89913; valaddr_reg:x12; val_offset:1584*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1584*FLEN/8, x13, x9, x10)

inst_550:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ed4d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6bab23 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20f242 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ed4d8; op2val:0x3eebab23;
op3val:0x7ea0f242; valaddr_reg:x12; val_offset:1587*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1587*FLEN/8, x13, x9, x10)

inst_551:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ed4d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6bab23 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20f242 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ed4d8; op2val:0x3eebab23;
op3val:0x7ea0f242; valaddr_reg:x12; val_offset:1590*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1590*FLEN/8, x13, x9, x10)

inst_552:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ed4d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6bab23 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20f242 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ed4d8; op2val:0x3eebab23;
op3val:0x7ea0f242; valaddr_reg:x12; val_offset:1593*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1593*FLEN/8, x13, x9, x10)

inst_553:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ed4d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6bab23 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20f242 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ed4d8; op2val:0x3eebab23;
op3val:0x7ea0f242; valaddr_reg:x12; val_offset:1596*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1596*FLEN/8, x13, x9, x10)

inst_554:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ed4d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6bab23 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20f242 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ed4d8; op2val:0x3eebab23;
op3val:0x7ea0f242; valaddr_reg:x12; val_offset:1599*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1599*FLEN/8, x13, x9, x10)

inst_555:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7aa684 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x784242 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x731230 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfaa684; op2val:0x3ff84242;
op3val:0x7e731230; valaddr_reg:x12; val_offset:1602*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1602*FLEN/8, x13, x9, x10)

inst_556:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7aa684 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x784242 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x731230 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfaa684; op2val:0x3ff84242;
op3val:0x7e731230; valaddr_reg:x12; val_offset:1605*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1605*FLEN/8, x13, x9, x10)

inst_557:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7aa684 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x784242 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x731230 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfaa684; op2val:0x3ff84242;
op3val:0x7e731230; valaddr_reg:x12; val_offset:1608*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1608*FLEN/8, x13, x9, x10)

inst_558:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7aa684 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x784242 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x731230 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfaa684; op2val:0x3ff84242;
op3val:0x7e731230; valaddr_reg:x12; val_offset:1611*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1611*FLEN/8, x13, x9, x10)

inst_559:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7aa684 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x784242 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x731230 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfaa684; op2val:0x3ff84242;
op3val:0x7e731230; valaddr_reg:x12; val_offset:1614*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1614*FLEN/8, x13, x9, x10)

inst_560:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x389380 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x186b19 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5bc998 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e389380; op2val:0x40186b19;
op3val:0x7edbc998; valaddr_reg:x12; val_offset:1617*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1617*FLEN/8, x13, x9, x10)

inst_561:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x389380 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x186b19 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5bc998 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e389380; op2val:0x40186b19;
op3val:0x7edbc998; valaddr_reg:x12; val_offset:1620*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1620*FLEN/8, x13, x9, x10)

inst_562:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x389380 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x186b19 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5bc998 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e389380; op2val:0x40186b19;
op3val:0x7edbc998; valaddr_reg:x12; val_offset:1623*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1623*FLEN/8, x13, x9, x10)

inst_563:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x389380 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x186b19 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5bc998 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e389380; op2val:0x40186b19;
op3val:0x7edbc998; valaddr_reg:x12; val_offset:1626*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1626*FLEN/8, x13, x9, x10)

inst_564:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x389380 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x186b19 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5bc998 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e389380; op2val:0x40186b19;
op3val:0x7edbc998; valaddr_reg:x12; val_offset:1629*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1629*FLEN/8, x13, x9, x10)

inst_565:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16fe06 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x393272 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5a76a7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16fe06; op2val:0x3f393272;
op3val:0x7eda76a7; valaddr_reg:x12; val_offset:1632*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1632*FLEN/8, x13, x9, x10)

inst_566:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16fe06 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x393272 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5a76a7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16fe06; op2val:0x3f393272;
op3val:0x7eda76a7; valaddr_reg:x12; val_offset:1635*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1635*FLEN/8, x13, x9, x10)

inst_567:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16fe06 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x393272 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5a76a7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16fe06; op2val:0x3f393272;
op3val:0x7eda76a7; valaddr_reg:x12; val_offset:1638*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1638*FLEN/8, x13, x9, x10)

inst_568:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16fe06 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x393272 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5a76a7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16fe06; op2val:0x3f393272;
op3val:0x7eda76a7; valaddr_reg:x12; val_offset:1641*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1641*FLEN/8, x13, x9, x10)

inst_569:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16fe06 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x393272 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5a76a7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16fe06; op2val:0x3f393272;
op3val:0x7eda76a7; valaddr_reg:x12; val_offset:1644*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1644*FLEN/8, x13, x9, x10)

inst_570:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x107f0d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5d489c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x79cd55 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e107f0d; op2val:0x3fdd489c;
op3val:0x7e79cd55; valaddr_reg:x12; val_offset:1647*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1647*FLEN/8, x13, x9, x10)

inst_571:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x107f0d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5d489c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x79cd55 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e107f0d; op2val:0x3fdd489c;
op3val:0x7e79cd55; valaddr_reg:x12; val_offset:1650*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1650*FLEN/8, x13, x9, x10)

inst_572:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x107f0d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5d489c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x79cd55 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e107f0d; op2val:0x3fdd489c;
op3val:0x7e79cd55; valaddr_reg:x12; val_offset:1653*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1653*FLEN/8, x13, x9, x10)

inst_573:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x107f0d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5d489c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x79cd55 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e107f0d; op2val:0x3fdd489c;
op3val:0x7e79cd55; valaddr_reg:x12; val_offset:1656*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1656*FLEN/8, x13, x9, x10)

inst_574:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x107f0d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5d489c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x79cd55 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e107f0d; op2val:0x3fdd489c;
op3val:0x7e79cd55; valaddr_reg:x12; val_offset:1659*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1659*FLEN/8, x13, x9, x10)

inst_575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1255c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x141b63 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x295281 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9255c9; op2val:0x3f941b63;
op3val:0x7ea95281; valaddr_reg:x12; val_offset:1662*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1662*FLEN/8, x13, x9, x10)

inst_576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1255c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x141b63 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x295281 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9255c9; op2val:0x3f941b63;
op3val:0x7ea95281; valaddr_reg:x12; val_offset:1665*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1665*FLEN/8, x13, x9, x10)

inst_577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1255c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x141b63 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x295281 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9255c9; op2val:0x3f941b63;
op3val:0x7ea95281; valaddr_reg:x12; val_offset:1668*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1668*FLEN/8, x13, x9, x10)

inst_578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1255c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x141b63 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x295281 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9255c9; op2val:0x3f941b63;
op3val:0x7ea95281; valaddr_reg:x12; val_offset:1671*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1671*FLEN/8, x13, x9, x10)

inst_579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1255c9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x141b63 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x295281 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9255c9; op2val:0x3f941b63;
op3val:0x7ea95281; valaddr_reg:x12; val_offset:1674*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1674*FLEN/8, x13, x9, x10)

inst_580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18a4f0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x209a40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3f8620 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98a4f0; op2val:0x40209a40;
op3val:0x7f3f8620; valaddr_reg:x12; val_offset:1677*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1677*FLEN/8, x13, x9, x10)

inst_581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18a4f0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x209a40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3f8620 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98a4f0; op2val:0x40209a40;
op3val:0x7f3f8620; valaddr_reg:x12; val_offset:1680*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1680*FLEN/8, x13, x9, x10)

inst_582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18a4f0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x209a40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3f8620 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98a4f0; op2val:0x40209a40;
op3val:0x7f3f8620; valaddr_reg:x12; val_offset:1683*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1683*FLEN/8, x13, x9, x10)

inst_583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18a4f0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x209a40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3f8620 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98a4f0; op2val:0x40209a40;
op3val:0x7f3f8620; valaddr_reg:x12; val_offset:1686*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1686*FLEN/8, x13, x9, x10)

inst_584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18a4f0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x209a40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3f8620 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98a4f0; op2val:0x40209a40;
op3val:0x7f3f8620; valaddr_reg:x12; val_offset:1689*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1689*FLEN/8, x13, x9, x10)

inst_585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x539b49 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x19c970 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e3ca1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed39b49; op2val:0x3f99c970;
op3val:0x7efe3ca1; valaddr_reg:x12; val_offset:1692*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1692*FLEN/8, x13, x9, x10)

inst_586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x539b49 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x19c970 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e3ca1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed39b49; op2val:0x3f99c970;
op3val:0x7efe3ca1; valaddr_reg:x12; val_offset:1695*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1695*FLEN/8, x13, x9, x10)

inst_587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x539b49 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x19c970 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e3ca1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed39b49; op2val:0x3f99c970;
op3val:0x7efe3ca1; valaddr_reg:x12; val_offset:1698*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1698*FLEN/8, x13, x9, x10)

inst_588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x539b49 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x19c970 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e3ca1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed39b49; op2val:0x3f99c970;
op3val:0x7efe3ca1; valaddr_reg:x12; val_offset:1701*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1701*FLEN/8, x13, x9, x10)

inst_589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x539b49 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x19c970 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e3ca1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed39b49; op2val:0x3f99c970;
op3val:0x7efe3ca1; valaddr_reg:x12; val_offset:1704*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1704*FLEN/8, x13, x9, x10)

inst_590:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098b22 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x668bbe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x77bc2c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f098b22; op2val:0x3f668bbe;
op3val:0x7ef7bc2c; valaddr_reg:x12; val_offset:1707*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1707*FLEN/8, x13, x9, x10)

inst_591:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098b22 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x668bbe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x77bc2c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f098b22; op2val:0x3f668bbe;
op3val:0x7ef7bc2c; valaddr_reg:x12; val_offset:1710*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1710*FLEN/8, x13, x9, x10)

inst_592:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098b22 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x668bbe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x77bc2c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f098b22; op2val:0x3f668bbe;
op3val:0x7ef7bc2c; valaddr_reg:x12; val_offset:1713*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1713*FLEN/8, x13, x9, x10)

inst_593:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098b22 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x668bbe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x77bc2c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f098b22; op2val:0x3f668bbe;
op3val:0x7ef7bc2c; valaddr_reg:x12; val_offset:1716*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1716*FLEN/8, x13, x9, x10)

inst_594:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x098b22 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x668bbe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x77bc2c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f098b22; op2val:0x3f668bbe;
op3val:0x7ef7bc2c; valaddr_reg:x12; val_offset:1719*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1719*FLEN/8, x13, x9, x10)

inst_595:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a9c08 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6caafe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0eef1c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a9c08; op2val:0x3eecaafe;
op3val:0x7e8eef1c; valaddr_reg:x12; val_offset:1722*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1722*FLEN/8, x13, x9, x10)

inst_596:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a9c08 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6caafe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0eef1c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a9c08; op2val:0x3eecaafe;
op3val:0x7e8eef1c; valaddr_reg:x12; val_offset:1725*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1725*FLEN/8, x13, x9, x10)

inst_597:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a9c08 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6caafe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0eef1c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a9c08; op2val:0x3eecaafe;
op3val:0x7e8eef1c; valaddr_reg:x12; val_offset:1728*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1728*FLEN/8, x13, x9, x10)

inst_598:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a9c08 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6caafe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0eef1c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a9c08; op2val:0x3eecaafe;
op3val:0x7e8eef1c; valaddr_reg:x12; val_offset:1731*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1731*FLEN/8, x13, x9, x10)

inst_599:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a9c08 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6caafe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0eef1c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1a9c08; op2val:0x3eecaafe;
op3val:0x7e8eef1c; valaddr_reg:x12; val_offset:1734*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1734*FLEN/8, x13, x9, x10)

inst_600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ff572 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ac415 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3abc62 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efff572; op2val:0x3fbac415;
op3val:0x7f3abc62; valaddr_reg:x12; val_offset:1737*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1737*FLEN/8, x13, x9, x10)

inst_601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ff572 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ac415 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3abc62 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efff572; op2val:0x3fbac415;
op3val:0x7f3abc62; valaddr_reg:x12; val_offset:1740*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1740*FLEN/8, x13, x9, x10)

inst_602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ff572 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ac415 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3abc62 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efff572; op2val:0x3fbac415;
op3val:0x7f3abc62; valaddr_reg:x12; val_offset:1743*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1743*FLEN/8, x13, x9, x10)

inst_603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ff572 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ac415 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3abc62 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efff572; op2val:0x3fbac415;
op3val:0x7f3abc62; valaddr_reg:x12; val_offset:1746*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1746*FLEN/8, x13, x9, x10)

inst_604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ff572 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ac415 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3abc62 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efff572; op2val:0x3fbac415;
op3val:0x7f3abc62; valaddr_reg:x12; val_offset:1749*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1749*FLEN/8, x13, x9, x10)

inst_605:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7c19fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x73e479 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x702da8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfc19fa; op2val:0x4073e479;
op3val:0x7ef02da8; valaddr_reg:x12; val_offset:1752*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1752*FLEN/8, x13, x9, x10)

inst_606:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7c19fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x73e479 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x702da8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfc19fa; op2val:0x4073e479;
op3val:0x7ef02da8; valaddr_reg:x12; val_offset:1755*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1755*FLEN/8, x13, x9, x10)

inst_607:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7c19fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x73e479 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x702da8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfc19fa; op2val:0x4073e479;
op3val:0x7ef02da8; valaddr_reg:x12; val_offset:1758*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1758*FLEN/8, x13, x9, x10)

inst_608:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7c19fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x73e479 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x702da8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfc19fa; op2val:0x4073e479;
op3val:0x7ef02da8; valaddr_reg:x12; val_offset:1761*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1761*FLEN/8, x13, x9, x10)

inst_609:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7c19fa and fs2 == 0 and fe2 == 0x80 and fm2 == 0x73e479 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x702da8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dfc19fa; op2val:0x4073e479;
op3val:0x7ef02da8; valaddr_reg:x12; val_offset:1764*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1764*FLEN/8, x13, x9, x10)

inst_610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x13b96c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x228cd8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3b993a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e93b96c; op2val:0x3e228cd8;
op3val:0x7d3b993a; valaddr_reg:x12; val_offset:1767*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1767*FLEN/8, x13, x9, x10)

inst_611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x13b96c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x228cd8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3b993a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e93b96c; op2val:0x3e228cd8;
op3val:0x7d3b993a; valaddr_reg:x12; val_offset:1770*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1770*FLEN/8, x13, x9, x10)

inst_612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x13b96c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x228cd8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3b993a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e93b96c; op2val:0x3e228cd8;
op3val:0x7d3b993a; valaddr_reg:x12; val_offset:1773*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1773*FLEN/8, x13, x9, x10)

inst_613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x13b96c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x228cd8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3b993a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e93b96c; op2val:0x3e228cd8;
op3val:0x7d3b993a; valaddr_reg:x12; val_offset:1776*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1776*FLEN/8, x13, x9, x10)

inst_614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x13b96c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x228cd8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3b993a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e93b96c; op2val:0x3e228cd8;
op3val:0x7d3b993a; valaddr_reg:x12; val_offset:1779*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1779*FLEN/8, x13, x9, x10)

inst_615:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x74f85a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x184854 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11b8ad and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cf4f85a; op2val:0x41984854;
op3val:0x7f11b8ad; valaddr_reg:x12; val_offset:1782*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1782*FLEN/8, x13, x9, x10)

inst_616:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x74f85a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x184854 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11b8ad and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cf4f85a; op2val:0x41984854;
op3val:0x7f11b8ad; valaddr_reg:x12; val_offset:1785*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1785*FLEN/8, x13, x9, x10)

inst_617:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x74f85a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x184854 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11b8ad and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cf4f85a; op2val:0x41984854;
op3val:0x7f11b8ad; valaddr_reg:x12; val_offset:1788*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1788*FLEN/8, x13, x9, x10)

inst_618:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x74f85a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x184854 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11b8ad and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cf4f85a; op2val:0x41984854;
op3val:0x7f11b8ad; valaddr_reg:x12; val_offset:1791*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1791*FLEN/8, x13, x9, x10)

inst_619:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x74f85a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x184854 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11b8ad and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cf4f85a; op2val:0x41984854;
op3val:0x7f11b8ad; valaddr_reg:x12; val_offset:1794*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1794*FLEN/8, x13, x9, x10)

inst_620:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x300384 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x468f57 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x088546 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db00384; op2val:0x40c68f57;
op3val:0x7f088546; valaddr_reg:x12; val_offset:1797*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1797*FLEN/8, x13, x9, x10)

inst_621:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x300384 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x468f57 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x088546 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db00384; op2val:0x40c68f57;
op3val:0x7f088546; valaddr_reg:x12; val_offset:1800*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1800*FLEN/8, x13, x9, x10)

inst_622:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x300384 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x468f57 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x088546 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db00384; op2val:0x40c68f57;
op3val:0x7f088546; valaddr_reg:x12; val_offset:1803*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1803*FLEN/8, x13, x9, x10)

inst_623:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x300384 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x468f57 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x088546 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db00384; op2val:0x40c68f57;
op3val:0x7f088546; valaddr_reg:x12; val_offset:1806*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1806*FLEN/8, x13, x9, x10)

inst_624:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x300384 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x468f57 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x088546 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db00384; op2val:0x40c68f57;
op3val:0x7f088546; valaddr_reg:x12; val_offset:1809*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1809*FLEN/8, x13, x9, x10)

inst_625:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19d31d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6aee21 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0d2a0f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d99d31d; op2val:0x406aee21;
op3val:0x7e8d2a0f; valaddr_reg:x12; val_offset:1812*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1812*FLEN/8, x13, x9, x10)

inst_626:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19d31d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6aee21 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0d2a0f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d99d31d; op2val:0x406aee21;
op3val:0x7e8d2a0f; valaddr_reg:x12; val_offset:1815*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1815*FLEN/8, x13, x9, x10)

inst_627:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19d31d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6aee21 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0d2a0f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d99d31d; op2val:0x406aee21;
op3val:0x7e8d2a0f; valaddr_reg:x12; val_offset:1818*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1818*FLEN/8, x13, x9, x10)

inst_628:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19d31d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6aee21 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0d2a0f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d99d31d; op2val:0x406aee21;
op3val:0x7e8d2a0f; valaddr_reg:x12; val_offset:1821*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1821*FLEN/8, x13, x9, x10)

inst_629:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19d31d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6aee21 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0d2a0f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d99d31d; op2val:0x406aee21;
op3val:0x7e8d2a0f; valaddr_reg:x12; val_offset:1824*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1824*FLEN/8, x13, x9, x10)

inst_630:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x45b82c and fs2 == 0 and fe2 == 0x83 and fm2 == 0x06ed1d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x506b12 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc5b82c; op2val:0x4186ed1d;
op3val:0x7ed06b12; valaddr_reg:x12; val_offset:1827*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1827*FLEN/8, x13, x9, x10)

inst_631:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x45b82c and fs2 == 0 and fe2 == 0x83 and fm2 == 0x06ed1d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x506b12 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc5b82c; op2val:0x4186ed1d;
op3val:0x7ed06b12; valaddr_reg:x12; val_offset:1830*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1830*FLEN/8, x13, x9, x10)

inst_632:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x45b82c and fs2 == 0 and fe2 == 0x83 and fm2 == 0x06ed1d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x506b12 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc5b82c; op2val:0x4186ed1d;
op3val:0x7ed06b12; valaddr_reg:x12; val_offset:1833*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1833*FLEN/8, x13, x9, x10)

inst_633:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x45b82c and fs2 == 0 and fe2 == 0x83 and fm2 == 0x06ed1d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x506b12 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc5b82c; op2val:0x4186ed1d;
op3val:0x7ed06b12; valaddr_reg:x12; val_offset:1836*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1836*FLEN/8, x13, x9, x10)

inst_634:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x45b82c and fs2 == 0 and fe2 == 0x83 and fm2 == 0x06ed1d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x506b12 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc5b82c; op2val:0x4186ed1d;
op3val:0x7ed06b12; valaddr_reg:x12; val_offset:1839*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1839*FLEN/8, x13, x9, x10)

inst_635:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16fd83 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x12dd89 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2d3e7e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16fd83; op2val:0x3e92dd89;
op3val:0x7e2d3e7e; valaddr_reg:x12; val_offset:1842*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1842*FLEN/8, x13, x9, x10)

inst_636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16fd83 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x12dd89 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2d3e7e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16fd83; op2val:0x3e92dd89;
op3val:0x7e2d3e7e; valaddr_reg:x12; val_offset:1845*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1845*FLEN/8, x13, x9, x10)

inst_637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16fd83 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x12dd89 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2d3e7e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16fd83; op2val:0x3e92dd89;
op3val:0x7e2d3e7e; valaddr_reg:x12; val_offset:1848*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1848*FLEN/8, x13, x9, x10)

inst_638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16fd83 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x12dd89 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2d3e7e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16fd83; op2val:0x3e92dd89;
op3val:0x7e2d3e7e; valaddr_reg:x12; val_offset:1851*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1851*FLEN/8, x13, x9, x10)

inst_639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16fd83 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x12dd89 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2d3e7e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f16fd83; op2val:0x3e92dd89;
op3val:0x7e2d3e7e; valaddr_reg:x12; val_offset:1854*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1854*FLEN/8, x13, x9, x10)

inst_640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5913e5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50d3e6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3113d9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed913e5; op2val:0x3fd0d3e6;
op3val:0x7f3113d9; valaddr_reg:x12; val_offset:1857*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1857*FLEN/8, x13, x9, x10)

inst_641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5913e5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50d3e6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3113d9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed913e5; op2val:0x3fd0d3e6;
op3val:0x7f3113d9; valaddr_reg:x12; val_offset:1860*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1860*FLEN/8, x13, x9, x10)

inst_642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5913e5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50d3e6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3113d9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed913e5; op2val:0x3fd0d3e6;
op3val:0x7f3113d9; valaddr_reg:x12; val_offset:1863*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1863*FLEN/8, x13, x9, x10)

inst_643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5913e5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50d3e6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3113d9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed913e5; op2val:0x3fd0d3e6;
op3val:0x7f3113d9; valaddr_reg:x12; val_offset:1866*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1866*FLEN/8, x13, x9, x10)

inst_644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5913e5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50d3e6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3113d9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed913e5; op2val:0x3fd0d3e6;
op3val:0x7f3113d9; valaddr_reg:x12; val_offset:1869*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1869*FLEN/8, x13, x9, x10)

inst_645:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x616815 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4d6ee4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x34e1fc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e616815; op2val:0x3fcd6ee4;
op3val:0x7eb4e1fc; valaddr_reg:x12; val_offset:1872*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1872*FLEN/8, x13, x9, x10)

inst_646:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x616815 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4d6ee4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x34e1fc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e616815; op2val:0x3fcd6ee4;
op3val:0x7eb4e1fc; valaddr_reg:x12; val_offset:1875*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1875*FLEN/8, x13, x9, x10)

inst_647:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x616815 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4d6ee4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x34e1fc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e616815; op2val:0x3fcd6ee4;
op3val:0x7eb4e1fc; valaddr_reg:x12; val_offset:1878*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1878*FLEN/8, x13, x9, x10)

inst_648:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x616815 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4d6ee4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x34e1fc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e616815; op2val:0x3fcd6ee4;
op3val:0x7eb4e1fc; valaddr_reg:x12; val_offset:1881*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1881*FLEN/8, x13, x9, x10)

inst_649:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x616815 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4d6ee4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x34e1fc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e616815; op2val:0x3fcd6ee4;
op3val:0x7eb4e1fc; valaddr_reg:x12; val_offset:1884*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1884*FLEN/8, x13, x9, x10)

inst_650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b0956 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x18c26e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25ee48 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0b0956; op2val:0x3f98c26e;
op3val:0x7f25ee48; valaddr_reg:x12; val_offset:1887*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1887*FLEN/8, x13, x9, x10)

inst_651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b0956 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x18c26e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25ee48 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0b0956; op2val:0x3f98c26e;
op3val:0x7f25ee48; valaddr_reg:x12; val_offset:1890*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1890*FLEN/8, x13, x9, x10)

inst_652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b0956 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x18c26e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25ee48 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0b0956; op2val:0x3f98c26e;
op3val:0x7f25ee48; valaddr_reg:x12; val_offset:1893*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1893*FLEN/8, x13, x9, x10)

inst_653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b0956 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x18c26e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25ee48 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0b0956; op2val:0x3f98c26e;
op3val:0x7f25ee48; valaddr_reg:x12; val_offset:1896*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1896*FLEN/8, x13, x9, x10)

inst_654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b0956 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x18c26e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25ee48 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0b0956; op2val:0x3f98c26e;
op3val:0x7f25ee48; valaddr_reg:x12; val_offset:1899*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1899*FLEN/8, x13, x9, x10)

inst_655:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x017e79 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7b0813 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7df62e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e017e79; op2val:0x407b0813;
op3val:0x7efdf62e; valaddr_reg:x12; val_offset:1902*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1902*FLEN/8, x13, x9, x10)

inst_656:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x017e79 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7b0813 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7df62e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e017e79; op2val:0x407b0813;
op3val:0x7efdf62e; valaddr_reg:x12; val_offset:1905*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1905*FLEN/8, x13, x9, x10)

inst_657:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x017e79 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7b0813 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7df62e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e017e79; op2val:0x407b0813;
op3val:0x7efdf62e; valaddr_reg:x12; val_offset:1908*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1908*FLEN/8, x13, x9, x10)

inst_658:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x017e79 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7b0813 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7df62e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e017e79; op2val:0x407b0813;
op3val:0x7efdf62e; valaddr_reg:x12; val_offset:1911*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1911*FLEN/8, x13, x9, x10)

inst_659:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x017e79 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7b0813 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7df62e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e017e79; op2val:0x407b0813;
op3val:0x7efdf62e; valaddr_reg:x12; val_offset:1914*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1914*FLEN/8, x13, x9, x10)

inst_660:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3868e1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6f4b41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2c6020 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db868e1; op2val:0x3f6f4b41;
op3val:0x7dac6020; valaddr_reg:x12; val_offset:1917*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1917*FLEN/8, x13, x9, x10)

inst_661:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3868e1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6f4b41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2c6020 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db868e1; op2val:0x3f6f4b41;
op3val:0x7dac6020; valaddr_reg:x12; val_offset:1920*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1920*FLEN/8, x13, x9, x10)

inst_662:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3868e1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6f4b41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2c6020 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db868e1; op2val:0x3f6f4b41;
op3val:0x7dac6020; valaddr_reg:x12; val_offset:1923*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1923*FLEN/8, x13, x9, x10)

inst_663:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3868e1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6f4b41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2c6020 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db868e1; op2val:0x3f6f4b41;
op3val:0x7dac6020; valaddr_reg:x12; val_offset:1926*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1926*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_5)

inst_664:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3868e1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6f4b41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2c6020 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db868e1; op2val:0x3f6f4b41;
op3val:0x7dac6020; valaddr_reg:x12; val_offset:1929*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1929*FLEN/8, x13, x9, x10)

inst_665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cc8a3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5057a9 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x19a3aa and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3cc8a3; op2val:0x3d5057a9;
op3val:0x7d19a3aa; valaddr_reg:x12; val_offset:1932*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1932*FLEN/8, x13, x9, x10)

inst_666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cc8a3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5057a9 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x19a3aa and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3cc8a3; op2val:0x3d5057a9;
op3val:0x7d19a3aa; valaddr_reg:x12; val_offset:1935*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1935*FLEN/8, x13, x9, x10)

inst_667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cc8a3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5057a9 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x19a3aa and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3cc8a3; op2val:0x3d5057a9;
op3val:0x7d19a3aa; valaddr_reg:x12; val_offset:1938*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1938*FLEN/8, x13, x9, x10)

inst_668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cc8a3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5057a9 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x19a3aa and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3cc8a3; op2val:0x3d5057a9;
op3val:0x7d19a3aa; valaddr_reg:x12; val_offset:1941*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1941*FLEN/8, x13, x9, x10)

inst_669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cc8a3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5057a9 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x19a3aa and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3cc8a3; op2val:0x3d5057a9;
op3val:0x7d19a3aa; valaddr_reg:x12; val_offset:1944*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1944*FLEN/8, x13, x9, x10)

inst_670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x309a0c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x50c5b9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x100590 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f309a0c; op2val:0x3f50c5b9;
op3val:0x7f100590; valaddr_reg:x12; val_offset:1947*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1947*FLEN/8, x13, x9, x10)

inst_671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x309a0c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x50c5b9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x100590 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f309a0c; op2val:0x3f50c5b9;
op3val:0x7f100590; valaddr_reg:x12; val_offset:1950*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1950*FLEN/8, x13, x9, x10)

inst_672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x309a0c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x50c5b9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x100590 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f309a0c; op2val:0x3f50c5b9;
op3val:0x7f100590; valaddr_reg:x12; val_offset:1953*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1953*FLEN/8, x13, x9, x10)

inst_673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x309a0c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x50c5b9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x100590 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f309a0c; op2val:0x3f50c5b9;
op3val:0x7f100590; valaddr_reg:x12; val_offset:1956*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1956*FLEN/8, x13, x9, x10)

inst_674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x309a0c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x50c5b9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x100590 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f309a0c; op2val:0x3f50c5b9;
op3val:0x7f100590; valaddr_reg:x12; val_offset:1959*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1959*FLEN/8, x13, x9, x10)

inst_675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01c7a5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a21b9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0c0d70 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f01c7a5; op2val:0x3f8a21b9;
op3val:0x7f0c0d70; valaddr_reg:x12; val_offset:1962*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1962*FLEN/8, x13, x9, x10)

inst_676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01c7a5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a21b9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0c0d70 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f01c7a5; op2val:0x3f8a21b9;
op3val:0x7f0c0d70; valaddr_reg:x12; val_offset:1965*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1965*FLEN/8, x13, x9, x10)

inst_677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01c7a5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a21b9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0c0d70 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f01c7a5; op2val:0x3f8a21b9;
op3val:0x7f0c0d70; valaddr_reg:x12; val_offset:1968*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1968*FLEN/8, x13, x9, x10)

inst_678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01c7a5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a21b9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0c0d70 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f01c7a5; op2val:0x3f8a21b9;
op3val:0x7f0c0d70; valaddr_reg:x12; val_offset:1971*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1971*FLEN/8, x13, x9, x10)

inst_679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01c7a5 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a21b9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0c0d70 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f01c7a5; op2val:0x3f8a21b9;
op3val:0x7f0c0d70; valaddr_reg:x12; val_offset:1974*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1974*FLEN/8, x13, x9, x10)

inst_680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f86d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x61c0e4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5c6fb2 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9f86d; op2val:0x3ee1c0e4;
op3val:0x7e5c6fb2; valaddr_reg:x12; val_offset:1977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1977*FLEN/8, x13, x9, x10)

inst_681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f86d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x61c0e4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5c6fb2 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9f86d; op2val:0x3ee1c0e4;
op3val:0x7e5c6fb2; valaddr_reg:x12; val_offset:1980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1980*FLEN/8, x13, x9, x10)

inst_682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f86d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x61c0e4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5c6fb2 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9f86d; op2val:0x3ee1c0e4;
op3val:0x7e5c6fb2; valaddr_reg:x12; val_offset:1983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1983*FLEN/8, x13, x9, x10)

inst_683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f86d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x61c0e4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5c6fb2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9f86d; op2val:0x3ee1c0e4;
op3val:0x7e5c6fb2; valaddr_reg:x12; val_offset:1986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 1986*FLEN/8, x13, x9, x10)

inst_684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f86d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x61c0e4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5c6fb2 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9f86d; op2val:0x3ee1c0e4;
op3val:0x7e5c6fb2; valaddr_reg:x12; val_offset:1989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 1989*FLEN/8, x13, x9, x10)

inst_685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a4148 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x696e25 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1b3eab and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaa4148; op2val:0x3ee96e25;
op3val:0x7e1b3eab; valaddr_reg:x12; val_offset:1992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 1992*FLEN/8, x13, x9, x10)

inst_686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a4148 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x696e25 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1b3eab and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaa4148; op2val:0x3ee96e25;
op3val:0x7e1b3eab; valaddr_reg:x12; val_offset:1995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 1995*FLEN/8, x13, x9, x10)

inst_687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a4148 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x696e25 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1b3eab and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaa4148; op2val:0x3ee96e25;
op3val:0x7e1b3eab; valaddr_reg:x12; val_offset:1998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 1998*FLEN/8, x13, x9, x10)

inst_688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a4148 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x696e25 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1b3eab and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaa4148; op2val:0x3ee96e25;
op3val:0x7e1b3eab; valaddr_reg:x12; val_offset:2001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2001*FLEN/8, x13, x9, x10)

inst_689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a4148 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x696e25 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1b3eab and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaa4148; op2val:0x3ee96e25;
op3val:0x7e1b3eab; valaddr_reg:x12; val_offset:2004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2004*FLEN/8, x13, x9, x10)

inst_690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24fad5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x680772 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15881d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24fad5; op2val:0x3f680772;
op3val:0x7f15881d; valaddr_reg:x12; val_offset:2007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2007*FLEN/8, x13, x9, x10)

inst_691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24fad5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x680772 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15881d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24fad5; op2val:0x3f680772;
op3val:0x7f15881d; valaddr_reg:x12; val_offset:2010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2010*FLEN/8, x13, x9, x10)

inst_692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24fad5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x680772 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15881d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24fad5; op2val:0x3f680772;
op3val:0x7f15881d; valaddr_reg:x12; val_offset:2013*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2013*FLEN/8, x13, x9, x10)

inst_693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24fad5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x680772 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15881d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24fad5; op2val:0x3f680772;
op3val:0x7f15881d; valaddr_reg:x12; val_offset:2016*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2016*FLEN/8, x13, x9, x10)

inst_694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24fad5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x680772 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15881d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24fad5; op2val:0x3f680772;
op3val:0x7f15881d; valaddr_reg:x12; val_offset:2019*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2019*FLEN/8, x13, x9, x10)

inst_695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x173551 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b1967 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2451e9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f173551; op2val:0x3e8b1967;
op3val:0x7e2451e9; valaddr_reg:x12; val_offset:2022*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2022*FLEN/8, x13, x9, x10)

inst_696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x173551 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b1967 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2451e9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f173551; op2val:0x3e8b1967;
op3val:0x7e2451e9; valaddr_reg:x12; val_offset:2025*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2025*FLEN/8, x13, x9, x10)

inst_697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x173551 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b1967 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2451e9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f173551; op2val:0x3e8b1967;
op3val:0x7e2451e9; valaddr_reg:x12; val_offset:2028*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2028*FLEN/8, x13, x9, x10)

inst_698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x173551 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b1967 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2451e9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f173551; op2val:0x3e8b1967;
op3val:0x7e2451e9; valaddr_reg:x12; val_offset:2031*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2031*FLEN/8, x13, x9, x10)

inst_699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x173551 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b1967 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2451e9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f173551; op2val:0x3e8b1967;
op3val:0x7e2451e9; valaddr_reg:x12; val_offset:2034*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2034*FLEN/8, x13, x9, x10)

inst_700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6368b9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5c69af and fs3 == 0 and fe3 == 0xfc and fm3 == 0x43cbe1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee368b9; op2val:0x3edc69af;
op3val:0x7e43cbe1; valaddr_reg:x12; val_offset:2037*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2037*FLEN/8, x13, x9, x10)

inst_701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6368b9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5c69af and fs3 == 0 and fe3 == 0xfc and fm3 == 0x43cbe1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee368b9; op2val:0x3edc69af;
op3val:0x7e43cbe1; valaddr_reg:x12; val_offset:2040*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2040*FLEN/8, x13, x9, x10)

inst_702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6368b9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5c69af and fs3 == 0 and fe3 == 0xfc and fm3 == 0x43cbe1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee368b9; op2val:0x3edc69af;
op3val:0x7e43cbe1; valaddr_reg:x12; val_offset:2043*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2043*FLEN/8, x13, x9, x10)

inst_703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6368b9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5c69af and fs3 == 0 and fe3 == 0xfc and fm3 == 0x43cbe1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee368b9; op2val:0x3edc69af;
op3val:0x7e43cbe1; valaddr_reg:x12; val_offset:2046*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2046*FLEN/8, x13, x9, x10)

inst_704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6368b9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5c69af and fs3 == 0 and fe3 == 0xfc and fm3 == 0x43cbe1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee368b9; op2val:0x3edc69af;
op3val:0x7e43cbe1; valaddr_reg:x12; val_offset:2049*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2049*FLEN/8, x13, x9, x10)

inst_705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17c861 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x712e6f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0eff2c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f17c861; op2val:0x3f712e6f;
op3val:0x7f0eff2c; valaddr_reg:x12; val_offset:2052*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2052*FLEN/8, x13, x9, x10)

inst_706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17c861 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x712e6f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0eff2c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f17c861; op2val:0x3f712e6f;
op3val:0x7f0eff2c; valaddr_reg:x12; val_offset:2055*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2055*FLEN/8, x13, x9, x10)

inst_707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17c861 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x712e6f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0eff2c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f17c861; op2val:0x3f712e6f;
op3val:0x7f0eff2c; valaddr_reg:x12; val_offset:2058*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2058*FLEN/8, x13, x9, x10)

inst_708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17c861 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x712e6f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0eff2c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f17c861; op2val:0x3f712e6f;
op3val:0x7f0eff2c; valaddr_reg:x12; val_offset:2061*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2061*FLEN/8, x13, x9, x10)

inst_709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17c861 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x712e6f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0eff2c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f17c861; op2val:0x3f712e6f;
op3val:0x7f0eff2c; valaddr_reg:x12; val_offset:2064*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2064*FLEN/8, x13, x9, x10)

inst_710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f0fcc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x363027 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07f92b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3f0fcc; op2val:0x3f363027;
op3val:0x7f07f92b; valaddr_reg:x12; val_offset:2067*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2067*FLEN/8, x13, x9, x10)

inst_711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f0fcc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x363027 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07f92b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3f0fcc; op2val:0x3f363027;
op3val:0x7f07f92b; valaddr_reg:x12; val_offset:2070*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2070*FLEN/8, x13, x9, x10)

inst_712:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f0fcc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x363027 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07f92b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3f0fcc; op2val:0x3f363027;
op3val:0x7f07f92b; valaddr_reg:x12; val_offset:2073*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2073*FLEN/8, x13, x9, x10)

inst_713:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f0fcc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x363027 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07f92b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3f0fcc; op2val:0x3f363027;
op3val:0x7f07f92b; valaddr_reg:x12; val_offset:2076*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2076*FLEN/8, x13, x9, x10)

inst_714:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f0fcc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x363027 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07f92b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3f0fcc; op2val:0x3f363027;
op3val:0x7f07f92b; valaddr_reg:x12; val_offset:2079*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2079*FLEN/8, x13, x9, x10)

inst_715:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x034e7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x116e22 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x152fe4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f034e7c; op2val:0x3f916e22;
op3val:0x7f152fe4; valaddr_reg:x12; val_offset:2082*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2082*FLEN/8, x13, x9, x10)

inst_716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x034e7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x116e22 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x152fe4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f034e7c; op2val:0x3f916e22;
op3val:0x7f152fe4; valaddr_reg:x12; val_offset:2085*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2085*FLEN/8, x13, x9, x10)

inst_717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x034e7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x116e22 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x152fe4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f034e7c; op2val:0x3f916e22;
op3val:0x7f152fe4; valaddr_reg:x12; val_offset:2088*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2088*FLEN/8, x13, x9, x10)

inst_718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x034e7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x116e22 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x152fe4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f034e7c; op2val:0x3f916e22;
op3val:0x7f152fe4; valaddr_reg:x12; val_offset:2091*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2091*FLEN/8, x13, x9, x10)

inst_719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x034e7c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x116e22 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x152fe4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f034e7c; op2val:0x3f916e22;
op3val:0x7f152fe4; valaddr_reg:x12; val_offset:2094*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2094*FLEN/8, x13, x9, x10)

inst_720:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0fe409 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b5f3b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x649eb5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8fe409; op2val:0x40cb5f3b;
op3val:0x7ee49eb5; valaddr_reg:x12; val_offset:2097*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2097*FLEN/8, x13, x9, x10)

inst_721:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0fe409 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b5f3b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x649eb5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8fe409; op2val:0x40cb5f3b;
op3val:0x7ee49eb5; valaddr_reg:x12; val_offset:2100*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2100*FLEN/8, x13, x9, x10)

inst_722:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0fe409 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b5f3b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x649eb5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8fe409; op2val:0x40cb5f3b;
op3val:0x7ee49eb5; valaddr_reg:x12; val_offset:2103*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2103*FLEN/8, x13, x9, x10)

inst_723:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0fe409 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b5f3b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x649eb5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8fe409; op2val:0x40cb5f3b;
op3val:0x7ee49eb5; valaddr_reg:x12; val_offset:2106*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2106*FLEN/8, x13, x9, x10)

inst_724:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0fe409 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b5f3b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x649eb5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8fe409; op2val:0x40cb5f3b;
op3val:0x7ee49eb5; valaddr_reg:x12; val_offset:2109*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2109*FLEN/8, x13, x9, x10)

inst_725:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x49296d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x336a25 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cfb60 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc9296d; op2val:0x41336a25;
op3val:0x7e8cfb60; valaddr_reg:x12; val_offset:2112*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2112*FLEN/8, x13, x9, x10)

inst_726:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x49296d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x336a25 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cfb60 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc9296d; op2val:0x41336a25;
op3val:0x7e8cfb60; valaddr_reg:x12; val_offset:2115*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2115*FLEN/8, x13, x9, x10)

inst_727:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x49296d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x336a25 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cfb60 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc9296d; op2val:0x41336a25;
op3val:0x7e8cfb60; valaddr_reg:x12; val_offset:2118*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2118*FLEN/8, x13, x9, x10)

inst_728:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x49296d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x336a25 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cfb60 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc9296d; op2val:0x41336a25;
op3val:0x7e8cfb60; valaddr_reg:x12; val_offset:2121*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2121*FLEN/8, x13, x9, x10)

inst_729:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x49296d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x336a25 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cfb60 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cc9296d; op2val:0x41336a25;
op3val:0x7e8cfb60; valaddr_reg:x12; val_offset:2124*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2124*FLEN/8, x13, x9, x10)

inst_730:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33e534 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0192c8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x361b4b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db3e534; op2val:0x410192c8;
op3val:0x7f361b4b; valaddr_reg:x12; val_offset:2127*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2127*FLEN/8, x13, x9, x10)

inst_731:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33e534 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0192c8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x361b4b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db3e534; op2val:0x410192c8;
op3val:0x7f361b4b; valaddr_reg:x12; val_offset:2130*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2130*FLEN/8, x13, x9, x10)

inst_732:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33e534 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0192c8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x361b4b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db3e534; op2val:0x410192c8;
op3val:0x7f361b4b; valaddr_reg:x12; val_offset:2133*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2133*FLEN/8, x13, x9, x10)

inst_733:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33e534 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0192c8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x361b4b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db3e534; op2val:0x410192c8;
op3val:0x7f361b4b; valaddr_reg:x12; val_offset:2136*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2136*FLEN/8, x13, x9, x10)

inst_734:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33e534 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0192c8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x361b4b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7db3e534; op2val:0x410192c8;
op3val:0x7f361b4b; valaddr_reg:x12; val_offset:2139*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2139*FLEN/8, x13, x9, x10)

inst_735:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c1d45 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x038dbf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x30e48e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cac1d45; op2val:0x42038dbf;
op3val:0x7f30e48e; valaddr_reg:x12; val_offset:2142*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2142*FLEN/8, x13, x9, x10)

inst_736:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c1d45 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x038dbf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x30e48e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cac1d45; op2val:0x42038dbf;
op3val:0x7f30e48e; valaddr_reg:x12; val_offset:2145*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2145*FLEN/8, x13, x9, x10)

inst_737:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c1d45 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x038dbf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x30e48e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cac1d45; op2val:0x42038dbf;
op3val:0x7f30e48e; valaddr_reg:x12; val_offset:2148*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2148*FLEN/8, x13, x9, x10)

inst_738:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c1d45 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x038dbf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x30e48e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cac1d45; op2val:0x42038dbf;
op3val:0x7f30e48e; valaddr_reg:x12; val_offset:2151*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2151*FLEN/8, x13, x9, x10)

inst_739:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2c1d45 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x038dbf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x30e48e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cac1d45; op2val:0x42038dbf;
op3val:0x7f30e48e; valaddr_reg:x12; val_offset:2154*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2154*FLEN/8, x13, x9, x10)

inst_740:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35fe5b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6b4e05 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2747f5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f35fe5b; op2val:0x3eeb4e05;
op3val:0x7ea747f5; valaddr_reg:x12; val_offset:2157*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2157*FLEN/8, x13, x9, x10)

inst_741:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35fe5b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6b4e05 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2747f5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f35fe5b; op2val:0x3eeb4e05;
op3val:0x7ea747f5; valaddr_reg:x12; val_offset:2160*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2160*FLEN/8, x13, x9, x10)

inst_742:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35fe5b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6b4e05 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2747f5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f35fe5b; op2val:0x3eeb4e05;
op3val:0x7ea747f5; valaddr_reg:x12; val_offset:2163*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2163*FLEN/8, x13, x9, x10)

inst_743:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35fe5b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6b4e05 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2747f5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f35fe5b; op2val:0x3eeb4e05;
op3val:0x7ea747f5; valaddr_reg:x12; val_offset:2166*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2166*FLEN/8, x13, x9, x10)

inst_744:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35fe5b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6b4e05 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2747f5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f35fe5b; op2val:0x3eeb4e05;
op3val:0x7ea747f5; valaddr_reg:x12; val_offset:2169*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2169*FLEN/8, x13, x9, x10)

inst_745:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fd54d and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7ea0e8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1efa19 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1fd54d; op2val:0x3d7ea0e8;
op3val:0x7d1efa19; valaddr_reg:x12; val_offset:2172*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2172*FLEN/8, x13, x9, x10)

inst_746:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fd54d and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7ea0e8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1efa19 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1fd54d; op2val:0x3d7ea0e8;
op3val:0x7d1efa19; valaddr_reg:x12; val_offset:2175*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2175*FLEN/8, x13, x9, x10)

inst_747:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fd54d and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7ea0e8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1efa19 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1fd54d; op2val:0x3d7ea0e8;
op3val:0x7d1efa19; valaddr_reg:x12; val_offset:2178*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2178*FLEN/8, x13, x9, x10)

inst_748:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fd54d and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7ea0e8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1efa19 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1fd54d; op2val:0x3d7ea0e8;
op3val:0x7d1efa19; valaddr_reg:x12; val_offset:2181*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2181*FLEN/8, x13, x9, x10)

inst_749:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fd54d and fs2 == 0 and fe2 == 0x7a and fm2 == 0x7ea0e8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1efa19 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1fd54d; op2val:0x3d7ea0e8;
op3val:0x7d1efa19; valaddr_reg:x12; val_offset:2184*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2184*FLEN/8, x13, x9, x10)

inst_750:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x561e0c and fs2 == 0 and fe2 == 0x7b and fm2 == 0x106484 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7189f3 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd61e0c; op2val:0x3d906484;
op3val:0x7bf189f3; valaddr_reg:x12; val_offset:2187*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2187*FLEN/8, x13, x9, x10)

inst_751:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x561e0c and fs2 == 0 and fe2 == 0x7b and fm2 == 0x106484 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7189f3 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd61e0c; op2val:0x3d906484;
op3val:0x7bf189f3; valaddr_reg:x12; val_offset:2190*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2190*FLEN/8, x13, x9, x10)

inst_752:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x561e0c and fs2 == 0 and fe2 == 0x7b and fm2 == 0x106484 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7189f3 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd61e0c; op2val:0x3d906484;
op3val:0x7bf189f3; valaddr_reg:x12; val_offset:2193*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2193*FLEN/8, x13, x9, x10)

inst_753:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x561e0c and fs2 == 0 and fe2 == 0x7b and fm2 == 0x106484 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7189f3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd61e0c; op2val:0x3d906484;
op3val:0x7bf189f3; valaddr_reg:x12; val_offset:2196*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2196*FLEN/8, x13, x9, x10)

inst_754:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x561e0c and fs2 == 0 and fe2 == 0x7b and fm2 == 0x106484 and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x7189f3 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd61e0c; op2val:0x3d906484;
op3val:0x7bf189f3; valaddr_reg:x12; val_offset:2199*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2199*FLEN/8, x13, x9, x10)

inst_755:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x512a61 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x1b3a11 and fs3 == 0 and fe3 == 0xf5 and fm3 == 0x7da835 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d512a61; op2val:0x3d1b3a11;
op3val:0x7afda835; valaddr_reg:x12; val_offset:2202*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2202*FLEN/8, x13, x9, x10)

inst_756:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x512a61 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x1b3a11 and fs3 == 0 and fe3 == 0xf5 and fm3 == 0x7da835 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d512a61; op2val:0x3d1b3a11;
op3val:0x7afda835; valaddr_reg:x12; val_offset:2205*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2205*FLEN/8, x13, x9, x10)

inst_757:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x512a61 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x1b3a11 and fs3 == 0 and fe3 == 0xf5 and fm3 == 0x7da835 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d512a61; op2val:0x3d1b3a11;
op3val:0x7afda835; valaddr_reg:x12; val_offset:2208*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2208*FLEN/8, x13, x9, x10)

inst_758:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x512a61 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x1b3a11 and fs3 == 0 and fe3 == 0xf5 and fm3 == 0x7da835 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d512a61; op2val:0x3d1b3a11;
op3val:0x7afda835; valaddr_reg:x12; val_offset:2211*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2211*FLEN/8, x13, x9, x10)

inst_759:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x512a61 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x1b3a11 and fs3 == 0 and fe3 == 0xf5 and fm3 == 0x7da835 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d512a61; op2val:0x3d1b3a11;
op3val:0x7afda835; valaddr_reg:x12; val_offset:2214*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2214*FLEN/8, x13, x9, x10)

inst_760:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f0a23 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x586415 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x066eba and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1f0a23; op2val:0x3dd86415;
op3val:0x7d866eba; valaddr_reg:x12; val_offset:2217*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2217*FLEN/8, x13, x9, x10)

inst_761:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f0a23 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x586415 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x066eba and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1f0a23; op2val:0x3dd86415;
op3val:0x7d866eba; valaddr_reg:x12; val_offset:2220*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2220*FLEN/8, x13, x9, x10)

inst_762:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f0a23 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x586415 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x066eba and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1f0a23; op2val:0x3dd86415;
op3val:0x7d866eba; valaddr_reg:x12; val_offset:2223*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2223*FLEN/8, x13, x9, x10)

inst_763:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f0a23 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x586415 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x066eba and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1f0a23; op2val:0x3dd86415;
op3val:0x7d866eba; valaddr_reg:x12; val_offset:2226*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2226*FLEN/8, x13, x9, x10)

inst_764:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f0a23 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x586415 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x066eba and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1f0a23; op2val:0x3dd86415;
op3val:0x7d866eba; valaddr_reg:x12; val_offset:2229*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2229*FLEN/8, x13, x9, x10)

inst_765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62d797 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6ccffe and fs3 == 0 and fe3 == 0xfc and fm3 == 0x51d70d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2d797; op2val:0x3eeccffe;
op3val:0x7e51d70d; valaddr_reg:x12; val_offset:2232*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2232*FLEN/8, x13, x9, x10)

inst_766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62d797 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6ccffe and fs3 == 0 and fe3 == 0xfc and fm3 == 0x51d70d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2d797; op2val:0x3eeccffe;
op3val:0x7e51d70d; valaddr_reg:x12; val_offset:2235*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2235*FLEN/8, x13, x9, x10)

inst_767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62d797 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6ccffe and fs3 == 0 and fe3 == 0xfc and fm3 == 0x51d70d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2d797; op2val:0x3eeccffe;
op3val:0x7e51d70d; valaddr_reg:x12; val_offset:2238*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2238*FLEN/8, x13, x9, x10)

inst_768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62d797 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6ccffe and fs3 == 0 and fe3 == 0xfc and fm3 == 0x51d70d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2d797; op2val:0x3eeccffe;
op3val:0x7e51d70d; valaddr_reg:x12; val_offset:2241*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2241*FLEN/8, x13, x9, x10)

inst_769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62d797 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6ccffe and fs3 == 0 and fe3 == 0xfc and fm3 == 0x51d70d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2d797; op2val:0x3eeccffe;
op3val:0x7e51d70d; valaddr_reg:x12; val_offset:2244*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2244*FLEN/8, x13, x9, x10)

inst_770:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b55e5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4aac55 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20faa9 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dcb55e5; op2val:0x404aac55;
op3val:0x7ea0faa9; valaddr_reg:x12; val_offset:2247*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2247*FLEN/8, x13, x9, x10)

inst_771:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b55e5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4aac55 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20faa9 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dcb55e5; op2val:0x404aac55;
op3val:0x7ea0faa9; valaddr_reg:x12; val_offset:2250*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2250*FLEN/8, x13, x9, x10)

inst_772:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b55e5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4aac55 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20faa9 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dcb55e5; op2val:0x404aac55;
op3val:0x7ea0faa9; valaddr_reg:x12; val_offset:2253*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2253*FLEN/8, x13, x9, x10)

inst_773:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b55e5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4aac55 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20faa9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dcb55e5; op2val:0x404aac55;
op3val:0x7ea0faa9; valaddr_reg:x12; val_offset:2256*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2256*FLEN/8, x13, x9, x10)

inst_774:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4b55e5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4aac55 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20faa9 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dcb55e5; op2val:0x404aac55;
op3val:0x7ea0faa9; valaddr_reg:x12; val_offset:2259*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2259*FLEN/8, x13, x9, x10)

inst_775:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0ba7c1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2bf5fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b9e80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0ba7c1; op2val:0x40abf5fd;
op3val:0x7f3b9e80; valaddr_reg:x12; val_offset:2262*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2262*FLEN/8, x13, x9, x10)

inst_776:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0ba7c1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2bf5fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b9e80 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0ba7c1; op2val:0x40abf5fd;
op3val:0x7f3b9e80; valaddr_reg:x12; val_offset:2265*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2265*FLEN/8, x13, x9, x10)

inst_777:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0ba7c1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2bf5fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b9e80 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0ba7c1; op2val:0x40abf5fd;
op3val:0x7f3b9e80; valaddr_reg:x12; val_offset:2268*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2268*FLEN/8, x13, x9, x10)

inst_778:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0ba7c1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2bf5fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b9e80 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0ba7c1; op2val:0x40abf5fd;
op3val:0x7f3b9e80; valaddr_reg:x12; val_offset:2271*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2271*FLEN/8, x13, x9, x10)

inst_779:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0ba7c1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2bf5fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b9e80 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0ba7c1; op2val:0x40abf5fd;
op3val:0x7f3b9e80; valaddr_reg:x12; val_offset:2274*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2274*FLEN/8, x13, x9, x10)

inst_780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x136b51 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x45fd37 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6406cc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e936b51; op2val:0x3fc5fd37;
op3val:0x7ee406cc; valaddr_reg:x12; val_offset:2277*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2277*FLEN/8, x13, x9, x10)

inst_781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x136b51 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x45fd37 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6406cc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e936b51; op2val:0x3fc5fd37;
op3val:0x7ee406cc; valaddr_reg:x12; val_offset:2280*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2280*FLEN/8, x13, x9, x10)

inst_782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x136b51 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x45fd37 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6406cc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e936b51; op2val:0x3fc5fd37;
op3val:0x7ee406cc; valaddr_reg:x12; val_offset:2283*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2283*FLEN/8, x13, x9, x10)

inst_783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x136b51 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x45fd37 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6406cc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e936b51; op2val:0x3fc5fd37;
op3val:0x7ee406cc; valaddr_reg:x12; val_offset:2286*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2286*FLEN/8, x13, x9, x10)

inst_784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x136b51 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x45fd37 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6406cc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e936b51; op2val:0x3fc5fd37;
op3val:0x7ee406cc; valaddr_reg:x12; val_offset:2289*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2289*FLEN/8, x13, x9, x10)

inst_785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58669e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0e6227 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70b7c8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8669e; op2val:0x3f8e6227;
op3val:0x7ef0b7c8; valaddr_reg:x12; val_offset:2292*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2292*FLEN/8, x13, x9, x10)

inst_786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58669e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0e6227 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70b7c8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8669e; op2val:0x3f8e6227;
op3val:0x7ef0b7c8; valaddr_reg:x12; val_offset:2295*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2295*FLEN/8, x13, x9, x10)

inst_787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58669e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0e6227 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70b7c8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8669e; op2val:0x3f8e6227;
op3val:0x7ef0b7c8; valaddr_reg:x12; val_offset:2298*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2298*FLEN/8, x13, x9, x10)

inst_788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58669e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0e6227 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70b7c8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8669e; op2val:0x3f8e6227;
op3val:0x7ef0b7c8; valaddr_reg:x12; val_offset:2301*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2301*FLEN/8, x13, x9, x10)

inst_789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58669e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0e6227 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70b7c8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8669e; op2val:0x3f8e6227;
op3val:0x7ef0b7c8; valaddr_reg:x12; val_offset:2304*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2304*FLEN/8, x13, x9, x10)

inst_790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x387cb7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0ff35d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4f7a18 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb87cb7; op2val:0x3f0ff35d;
op3val:0x7e4f7a18; valaddr_reg:x12; val_offset:2307*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2307*FLEN/8, x13, x9, x10)

inst_791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x387cb7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0ff35d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4f7a18 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb87cb7; op2val:0x3f0ff35d;
op3val:0x7e4f7a18; valaddr_reg:x12; val_offset:2310*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2310*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_6)

inst_792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x387cb7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0ff35d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4f7a18 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb87cb7; op2val:0x3f0ff35d;
op3val:0x7e4f7a18; valaddr_reg:x12; val_offset:2313*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2313*FLEN/8, x13, x9, x10)

inst_793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x387cb7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0ff35d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4f7a18 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb87cb7; op2val:0x3f0ff35d;
op3val:0x7e4f7a18; valaddr_reg:x12; val_offset:2316*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2316*FLEN/8, x13, x9, x10)

inst_794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x387cb7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0ff35d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4f7a18 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb87cb7; op2val:0x3f0ff35d;
op3val:0x7e4f7a18; valaddr_reg:x12; val_offset:2319*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2319*FLEN/8, x13, x9, x10)

inst_795:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x521565 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4fc576 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2a8159 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd21565; op2val:0x40cfc576;
op3val:0x7f2a8159; valaddr_reg:x12; val_offset:2322*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2322*FLEN/8, x13, x9, x10)

inst_796:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x521565 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4fc576 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2a8159 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd21565; op2val:0x40cfc576;
op3val:0x7f2a8159; valaddr_reg:x12; val_offset:2325*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2325*FLEN/8, x13, x9, x10)

inst_797:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x521565 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4fc576 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2a8159 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd21565; op2val:0x40cfc576;
op3val:0x7f2a8159; valaddr_reg:x12; val_offset:2328*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2328*FLEN/8, x13, x9, x10)

inst_798:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x521565 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4fc576 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2a8159 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd21565; op2val:0x40cfc576;
op3val:0x7f2a8159; valaddr_reg:x12; val_offset:2331*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2331*FLEN/8, x13, x9, x10)

inst_799:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x521565 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4fc576 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2a8159 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dd21565; op2val:0x40cfc576;
op3val:0x7f2a8159; valaddr_reg:x12; val_offset:2334*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2334*FLEN/8, x13, x9, x10)

inst_800:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13dd38 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x150f89 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2c3176 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13dd38; op2val:0x40150f89;
op3val:0x7eac3176; valaddr_reg:x12; val_offset:2337*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2337*FLEN/8, x13, x9, x10)

inst_801:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13dd38 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x150f89 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2c3176 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13dd38; op2val:0x40150f89;
op3val:0x7eac3176; valaddr_reg:x12; val_offset:2340*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2340*FLEN/8, x13, x9, x10)

inst_802:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13dd38 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x150f89 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2c3176 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13dd38; op2val:0x40150f89;
op3val:0x7eac3176; valaddr_reg:x12; val_offset:2343*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2343*FLEN/8, x13, x9, x10)

inst_803:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13dd38 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x150f89 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2c3176 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13dd38; op2val:0x40150f89;
op3val:0x7eac3176; valaddr_reg:x12; val_offset:2346*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2346*FLEN/8, x13, x9, x10)

inst_804:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13dd38 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x150f89 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2c3176 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e13dd38; op2val:0x40150f89;
op3val:0x7eac3176; valaddr_reg:x12; val_offset:2349*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2349*FLEN/8, x13, x9, x10)

inst_805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3506 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x366e13 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5d34de and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b3506; op2val:0x3f366e13;
op3val:0x7edd34de; valaddr_reg:x12; val_offset:2352*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2352*FLEN/8, x13, x9, x10)

inst_806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3506 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x366e13 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5d34de and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b3506; op2val:0x3f366e13;
op3val:0x7edd34de; valaddr_reg:x12; val_offset:2355*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2355*FLEN/8, x13, x9, x10)

inst_807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3506 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x366e13 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5d34de and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b3506; op2val:0x3f366e13;
op3val:0x7edd34de; valaddr_reg:x12; val_offset:2358*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2358*FLEN/8, x13, x9, x10)

inst_808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3506 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x366e13 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5d34de and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b3506; op2val:0x3f366e13;
op3val:0x7edd34de; valaddr_reg:x12; val_offset:2361*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2361*FLEN/8, x13, x9, x10)

inst_809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b3506 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x366e13 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5d34de and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b3506; op2val:0x3f366e13;
op3val:0x7edd34de; valaddr_reg:x12; val_offset:2364*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2364*FLEN/8, x13, x9, x10)

inst_810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3607d2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a9724 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1b6e21 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3607d2; op2val:0x3f5a9724;
op3val:0x7f1b6e21; valaddr_reg:x12; val_offset:2367*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2367*FLEN/8, x13, x9, x10)

inst_811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3607d2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a9724 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1b6e21 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3607d2; op2val:0x3f5a9724;
op3val:0x7f1b6e21; valaddr_reg:x12; val_offset:2370*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2370*FLEN/8, x13, x9, x10)

inst_812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3607d2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a9724 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1b6e21 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3607d2; op2val:0x3f5a9724;
op3val:0x7f1b6e21; valaddr_reg:x12; val_offset:2373*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2373*FLEN/8, x13, x9, x10)

inst_813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3607d2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a9724 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1b6e21 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3607d2; op2val:0x3f5a9724;
op3val:0x7f1b6e21; valaddr_reg:x12; val_offset:2376*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2376*FLEN/8, x13, x9, x10)

inst_814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3607d2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a9724 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1b6e21 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3607d2; op2val:0x3f5a9724;
op3val:0x7f1b6e21; valaddr_reg:x12; val_offset:2379*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2379*FLEN/8, x13, x9, x10)

inst_815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4535cf and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f175d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x382f3c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec535cf; op2val:0x3e6f175d;
op3val:0x7db82f3c; valaddr_reg:x12; val_offset:2382*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2382*FLEN/8, x13, x9, x10)

inst_816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4535cf and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f175d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x382f3c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec535cf; op2val:0x3e6f175d;
op3val:0x7db82f3c; valaddr_reg:x12; val_offset:2385*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2385*FLEN/8, x13, x9, x10)

inst_817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4535cf and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f175d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x382f3c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec535cf; op2val:0x3e6f175d;
op3val:0x7db82f3c; valaddr_reg:x12; val_offset:2388*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2388*FLEN/8, x13, x9, x10)

inst_818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4535cf and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f175d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x382f3c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec535cf; op2val:0x3e6f175d;
op3val:0x7db82f3c; valaddr_reg:x12; val_offset:2391*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2391*FLEN/8, x13, x9, x10)

inst_819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4535cf and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f175d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x382f3c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec535cf; op2val:0x3e6f175d;
op3val:0x7db82f3c; valaddr_reg:x12; val_offset:2394*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2394*FLEN/8, x13, x9, x10)

inst_820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639870 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4c99bd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x35e627 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee39870; op2val:0x3f4c99bd;
op3val:0x7eb5e627; valaddr_reg:x12; val_offset:2397*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2397*FLEN/8, x13, x9, x10)

inst_821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639870 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4c99bd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x35e627 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee39870; op2val:0x3f4c99bd;
op3val:0x7eb5e627; valaddr_reg:x12; val_offset:2400*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2400*FLEN/8, x13, x9, x10)

inst_822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639870 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4c99bd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x35e627 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee39870; op2val:0x3f4c99bd;
op3val:0x7eb5e627; valaddr_reg:x12; val_offset:2403*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2403*FLEN/8, x13, x9, x10)

inst_823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639870 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4c99bd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x35e627 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee39870; op2val:0x3f4c99bd;
op3val:0x7eb5e627; valaddr_reg:x12; val_offset:2406*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2406*FLEN/8, x13, x9, x10)

inst_824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639870 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4c99bd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x35e627 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee39870; op2val:0x3f4c99bd;
op3val:0x7eb5e627; valaddr_reg:x12; val_offset:2409*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2409*FLEN/8, x13, x9, x10)

inst_825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x257510 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1daeab and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4bd35e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f257510; op2val:0x3f1daeab;
op3val:0x7ecbd35e; valaddr_reg:x12; val_offset:2412*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2412*FLEN/8, x13, x9, x10)

inst_826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x257510 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1daeab and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4bd35e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f257510; op2val:0x3f1daeab;
op3val:0x7ecbd35e; valaddr_reg:x12; val_offset:2415*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2415*FLEN/8, x13, x9, x10)

inst_827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x257510 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1daeab and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4bd35e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f257510; op2val:0x3f1daeab;
op3val:0x7ecbd35e; valaddr_reg:x12; val_offset:2418*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2418*FLEN/8, x13, x9, x10)

inst_828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x257510 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1daeab and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4bd35e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f257510; op2val:0x3f1daeab;
op3val:0x7ecbd35e; valaddr_reg:x12; val_offset:2421*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2421*FLEN/8, x13, x9, x10)

inst_829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x257510 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1daeab and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4bd35e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f257510; op2val:0x3f1daeab;
op3val:0x7ecbd35e; valaddr_reg:x12; val_offset:2424*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2424*FLEN/8, x13, x9, x10)

inst_830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x054c46 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15a306 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1bd48f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f054c46; op2val:0x3f95a306;
op3val:0x7f1bd48f; valaddr_reg:x12; val_offset:2427*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2427*FLEN/8, x13, x9, x10)

inst_831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x054c46 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15a306 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1bd48f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f054c46; op2val:0x3f95a306;
op3val:0x7f1bd48f; valaddr_reg:x12; val_offset:2430*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2430*FLEN/8, x13, x9, x10)

inst_832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x054c46 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15a306 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1bd48f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f054c46; op2val:0x3f95a306;
op3val:0x7f1bd48f; valaddr_reg:x12; val_offset:2433*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2433*FLEN/8, x13, x9, x10)

inst_833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x054c46 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15a306 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1bd48f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f054c46; op2val:0x3f95a306;
op3val:0x7f1bd48f; valaddr_reg:x12; val_offset:2436*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2436*FLEN/8, x13, x9, x10)

inst_834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x054c46 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15a306 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1bd48f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f054c46; op2val:0x3f95a306;
op3val:0x7f1bd48f; valaddr_reg:x12; val_offset:2439*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2439*FLEN/8, x13, x9, x10)

inst_835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x34a6ae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x65109e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21a4d4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb4a6ae; op2val:0x3fe5109e;
op3val:0x7f21a4d4; valaddr_reg:x12; val_offset:2442*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2442*FLEN/8, x13, x9, x10)

inst_836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x34a6ae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x65109e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21a4d4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb4a6ae; op2val:0x3fe5109e;
op3val:0x7f21a4d4; valaddr_reg:x12; val_offset:2445*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2445*FLEN/8, x13, x9, x10)

inst_837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x34a6ae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x65109e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21a4d4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb4a6ae; op2val:0x3fe5109e;
op3val:0x7f21a4d4; valaddr_reg:x12; val_offset:2448*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2448*FLEN/8, x13, x9, x10)

inst_838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x34a6ae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x65109e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21a4d4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb4a6ae; op2val:0x3fe5109e;
op3val:0x7f21a4d4; valaddr_reg:x12; val_offset:2451*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2451*FLEN/8, x13, x9, x10)

inst_839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x34a6ae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x65109e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21a4d4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb4a6ae; op2val:0x3fe5109e;
op3val:0x7f21a4d4; valaddr_reg:x12; val_offset:2454*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2454*FLEN/8, x13, x9, x10)

inst_840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cacd1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x2fbe41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6d14ee and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cacd1; op2val:0x3e2fbe41;
op3val:0x7ded14ee; valaddr_reg:x12; val_offset:2457*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2457*FLEN/8, x13, x9, x10)

inst_841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cacd1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x2fbe41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6d14ee and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cacd1; op2val:0x3e2fbe41;
op3val:0x7ded14ee; valaddr_reg:x12; val_offset:2460*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2460*FLEN/8, x13, x9, x10)

inst_842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cacd1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x2fbe41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6d14ee and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cacd1; op2val:0x3e2fbe41;
op3val:0x7ded14ee; valaddr_reg:x12; val_offset:2463*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2463*FLEN/8, x13, x9, x10)

inst_843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cacd1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x2fbe41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6d14ee and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cacd1; op2val:0x3e2fbe41;
op3val:0x7ded14ee; valaddr_reg:x12; val_offset:2466*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2466*FLEN/8, x13, x9, x10)

inst_844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cacd1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x2fbe41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6d14ee and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cacd1; op2val:0x3e2fbe41;
op3val:0x7ded14ee; valaddr_reg:x12; val_offset:2469*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2469*FLEN/8, x13, x9, x10)

inst_845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x307a0a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x723d58 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x26fda7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f307a0a; op2val:0x3f723d58;
op3val:0x7f26fda7; valaddr_reg:x12; val_offset:2472*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2472*FLEN/8, x13, x9, x10)

inst_846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x307a0a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x723d58 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x26fda7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f307a0a; op2val:0x3f723d58;
op3val:0x7f26fda7; valaddr_reg:x12; val_offset:2475*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2475*FLEN/8, x13, x9, x10)

inst_847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x307a0a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x723d58 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x26fda7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f307a0a; op2val:0x3f723d58;
op3val:0x7f26fda7; valaddr_reg:x12; val_offset:2478*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2478*FLEN/8, x13, x9, x10)

inst_848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x307a0a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x723d58 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x26fda7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f307a0a; op2val:0x3f723d58;
op3val:0x7f26fda7; valaddr_reg:x12; val_offset:2481*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2481*FLEN/8, x13, x9, x10)

inst_849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x307a0a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x723d58 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x26fda7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f307a0a; op2val:0x3f723d58;
op3val:0x7f26fda7; valaddr_reg:x12; val_offset:2484*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2484*FLEN/8, x13, x9, x10)

inst_850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2428ca and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4a4396 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x01b386 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2428ca; op2val:0x3eca4396;
op3val:0x7e81b386; valaddr_reg:x12; val_offset:2487*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2487*FLEN/8, x13, x9, x10)

inst_851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2428ca and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4a4396 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x01b386 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2428ca; op2val:0x3eca4396;
op3val:0x7e81b386; valaddr_reg:x12; val_offset:2490*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2490*FLEN/8, x13, x9, x10)

inst_852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2428ca and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4a4396 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x01b386 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2428ca; op2val:0x3eca4396;
op3val:0x7e81b386; valaddr_reg:x12; val_offset:2493*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2493*FLEN/8, x13, x9, x10)

inst_853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2428ca and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4a4396 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x01b386 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2428ca; op2val:0x3eca4396;
op3val:0x7e81b386; valaddr_reg:x12; val_offset:2496*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2496*FLEN/8, x13, x9, x10)

inst_854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2428ca and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4a4396 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x01b386 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2428ca; op2val:0x3eca4396;
op3val:0x7e81b386; valaddr_reg:x12; val_offset:2499*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2499*FLEN/8, x13, x9, x10)

inst_855:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x416656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0708c5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4c072f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e416656; op2val:0x3f0708c5;
op3val:0x7dcc072f; valaddr_reg:x12; val_offset:2502*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2502*FLEN/8, x13, x9, x10)

inst_856:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x416656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0708c5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4c072f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e416656; op2val:0x3f0708c5;
op3val:0x7dcc072f; valaddr_reg:x12; val_offset:2505*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2505*FLEN/8, x13, x9, x10)

inst_857:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x416656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0708c5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4c072f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e416656; op2val:0x3f0708c5;
op3val:0x7dcc072f; valaddr_reg:x12; val_offset:2508*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2508*FLEN/8, x13, x9, x10)

inst_858:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x416656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0708c5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4c072f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e416656; op2val:0x3f0708c5;
op3val:0x7dcc072f; valaddr_reg:x12; val_offset:2511*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2511*FLEN/8, x13, x9, x10)

inst_859:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x416656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0708c5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4c072f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e416656; op2val:0x3f0708c5;
op3val:0x7dcc072f; valaddr_reg:x12; val_offset:2514*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2514*FLEN/8, x13, x9, x10)

inst_860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e7599 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1380c4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x242a5e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e7599; op2val:0x401380c4;
op3val:0x7f242a5e; valaddr_reg:x12; val_offset:2517*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2517*FLEN/8, x13, x9, x10)

inst_861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e7599 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1380c4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x242a5e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e7599; op2val:0x401380c4;
op3val:0x7f242a5e; valaddr_reg:x12; val_offset:2520*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2520*FLEN/8, x13, x9, x10)

inst_862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e7599 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1380c4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x242a5e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e7599; op2val:0x401380c4;
op3val:0x7f242a5e; valaddr_reg:x12; val_offset:2523*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2523*FLEN/8, x13, x9, x10)

inst_863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e7599 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1380c4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x242a5e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e7599; op2val:0x401380c4;
op3val:0x7f242a5e; valaddr_reg:x12; val_offset:2526*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2526*FLEN/8, x13, x9, x10)

inst_864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e7599 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1380c4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x242a5e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8e7599; op2val:0x401380c4;
op3val:0x7f242a5e; valaddr_reg:x12; val_offset:2529*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2529*FLEN/8, x13, x9, x10)

inst_865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b58ef and fs2 == 0 and fe2 == 0x78 and fm2 == 0x71d2ec and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x03a189 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8b58ef; op2val:0x3c71d2ec;
op3val:0x7b83a189; valaddr_reg:x12; val_offset:2532*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2532*FLEN/8, x13, x9, x10)

inst_866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b58ef and fs2 == 0 and fe2 == 0x78 and fm2 == 0x71d2ec and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x03a189 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8b58ef; op2val:0x3c71d2ec;
op3val:0x7b83a189; valaddr_reg:x12; val_offset:2535*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2535*FLEN/8, x13, x9, x10)

inst_867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b58ef and fs2 == 0 and fe2 == 0x78 and fm2 == 0x71d2ec and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x03a189 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8b58ef; op2val:0x3c71d2ec;
op3val:0x7b83a189; valaddr_reg:x12; val_offset:2538*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2538*FLEN/8, x13, x9, x10)

inst_868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b58ef and fs2 == 0 and fe2 == 0x78 and fm2 == 0x71d2ec and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x03a189 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8b58ef; op2val:0x3c71d2ec;
op3val:0x7b83a189; valaddr_reg:x12; val_offset:2541*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2541*FLEN/8, x13, x9, x10)

inst_869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b58ef and fs2 == 0 and fe2 == 0x78 and fm2 == 0x71d2ec and fs3 == 0 and fe3 == 0xf7 and fm3 == 0x03a189 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8b58ef; op2val:0x3c71d2ec;
op3val:0x7b83a189; valaddr_reg:x12; val_offset:2544*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2544*FLEN/8, x13, x9, x10)

inst_870:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a2e5f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0a93e8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7d8898 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a2e5f; op2val:0x3e8a93e8;
op3val:0x7d7d8898; valaddr_reg:x12; val_offset:2547*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2547*FLEN/8, x13, x9, x10)

inst_871:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a2e5f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0a93e8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7d8898 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a2e5f; op2val:0x3e8a93e8;
op3val:0x7d7d8898; valaddr_reg:x12; val_offset:2550*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2550*FLEN/8, x13, x9, x10)

inst_872:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a2e5f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0a93e8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7d8898 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a2e5f; op2val:0x3e8a93e8;
op3val:0x7d7d8898; valaddr_reg:x12; val_offset:2553*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2553*FLEN/8, x13, x9, x10)

inst_873:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a2e5f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0a93e8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7d8898 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a2e5f; op2val:0x3e8a93e8;
op3val:0x7d7d8898; valaddr_reg:x12; val_offset:2556*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2556*FLEN/8, x13, x9, x10)

inst_874:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a2e5f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0a93e8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x7d8898 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a2e5f; op2val:0x3e8a93e8;
op3val:0x7d7d8898; valaddr_reg:x12; val_offset:2559*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2559*FLEN/8, x13, x9, x10)

inst_875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f0a62 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1df75c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x138057 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef0a62; op2val:0x3f9df75c;
op3val:0x7f138057; valaddr_reg:x12; val_offset:2562*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2562*FLEN/8, x13, x9, x10)

inst_876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f0a62 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1df75c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x138057 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef0a62; op2val:0x3f9df75c;
op3val:0x7f138057; valaddr_reg:x12; val_offset:2565*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2565*FLEN/8, x13, x9, x10)

inst_877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f0a62 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1df75c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x138057 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef0a62; op2val:0x3f9df75c;
op3val:0x7f138057; valaddr_reg:x12; val_offset:2568*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2568*FLEN/8, x13, x9, x10)

inst_878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f0a62 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1df75c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x138057 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef0a62; op2val:0x3f9df75c;
op3val:0x7f138057; valaddr_reg:x12; val_offset:2571*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2571*FLEN/8, x13, x9, x10)

inst_879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f0a62 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1df75c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x138057 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef0a62; op2val:0x3f9df75c;
op3val:0x7f138057; valaddr_reg:x12; val_offset:2574*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2574*FLEN/8, x13, x9, x10)

inst_880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31e959 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x453067 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x090a35 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f31e959; op2val:0x3dc53067;
op3val:0x7d890a35; valaddr_reg:x12; val_offset:2577*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2577*FLEN/8, x13, x9, x10)

inst_881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31e959 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x453067 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x090a35 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f31e959; op2val:0x3dc53067;
op3val:0x7d890a35; valaddr_reg:x12; val_offset:2580*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2580*FLEN/8, x13, x9, x10)

inst_882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31e959 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x453067 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x090a35 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f31e959; op2val:0x3dc53067;
op3val:0x7d890a35; valaddr_reg:x12; val_offset:2583*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2583*FLEN/8, x13, x9, x10)

inst_883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31e959 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x453067 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x090a35 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f31e959; op2val:0x3dc53067;
op3val:0x7d890a35; valaddr_reg:x12; val_offset:2586*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2586*FLEN/8, x13, x9, x10)

inst_884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31e959 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x453067 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x090a35 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f31e959; op2val:0x3dc53067;
op3val:0x7d890a35; valaddr_reg:x12; val_offset:2589*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2589*FLEN/8, x13, x9, x10)

inst_885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x12131e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x296684 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x41523c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e92131e; op2val:0x3ea96684;
op3val:0x7dc1523c; valaddr_reg:x12; val_offset:2592*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2592*FLEN/8, x13, x9, x10)

inst_886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x12131e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x296684 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x41523c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e92131e; op2val:0x3ea96684;
op3val:0x7dc1523c; valaddr_reg:x12; val_offset:2595*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2595*FLEN/8, x13, x9, x10)

inst_887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x12131e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x296684 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x41523c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e92131e; op2val:0x3ea96684;
op3val:0x7dc1523c; valaddr_reg:x12; val_offset:2598*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2598*FLEN/8, x13, x9, x10)

inst_888:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x12131e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x296684 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x41523c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e92131e; op2val:0x3ea96684;
op3val:0x7dc1523c; valaddr_reg:x12; val_offset:2601*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2601*FLEN/8, x13, x9, x10)

inst_889:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x12131e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x296684 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x41523c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e92131e; op2val:0x3ea96684;
op3val:0x7dc1523c; valaddr_reg:x12; val_offset:2604*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2604*FLEN/8, x13, x9, x10)

inst_890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2eccce and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6b5891 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20b27b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2eccce; op2val:0x3f6b5891;
op3val:0x7f20b27b; valaddr_reg:x12; val_offset:2607*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2607*FLEN/8, x13, x9, x10)

inst_891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2eccce and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6b5891 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20b27b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2eccce; op2val:0x3f6b5891;
op3val:0x7f20b27b; valaddr_reg:x12; val_offset:2610*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2610*FLEN/8, x13, x9, x10)

inst_892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2eccce and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6b5891 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20b27b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2eccce; op2val:0x3f6b5891;
op3val:0x7f20b27b; valaddr_reg:x12; val_offset:2613*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2613*FLEN/8, x13, x9, x10)

inst_893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2eccce and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6b5891 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20b27b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2eccce; op2val:0x3f6b5891;
op3val:0x7f20b27b; valaddr_reg:x12; val_offset:2616*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2616*FLEN/8, x13, x9, x10)

inst_894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2eccce and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6b5891 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20b27b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2eccce; op2val:0x3f6b5891;
op3val:0x7f20b27b; valaddr_reg:x12; val_offset:2619*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2619*FLEN/8, x13, x9, x10)

inst_895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479ae9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6aedd6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x372d0b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec79ae9; op2val:0x3feaedd6;
op3val:0x7f372d0b; valaddr_reg:x12; val_offset:2622*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2622*FLEN/8, x13, x9, x10)

inst_896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479ae9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6aedd6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x372d0b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec79ae9; op2val:0x3feaedd6;
op3val:0x7f372d0b; valaddr_reg:x12; val_offset:2625*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2625*FLEN/8, x13, x9, x10)

inst_897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479ae9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6aedd6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x372d0b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec79ae9; op2val:0x3feaedd6;
op3val:0x7f372d0b; valaddr_reg:x12; val_offset:2628*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2628*FLEN/8, x13, x9, x10)

inst_898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479ae9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6aedd6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x372d0b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec79ae9; op2val:0x3feaedd6;
op3val:0x7f372d0b; valaddr_reg:x12; val_offset:2631*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2631*FLEN/8, x13, x9, x10)

inst_899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x479ae9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6aedd6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x372d0b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec79ae9; op2val:0x3feaedd6;
op3val:0x7f372d0b; valaddr_reg:x12; val_offset:2634*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2634*FLEN/8, x13, x9, x10)

inst_900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47c980 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f0454 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1512b7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec7c980; op2val:0x3fbf0454;
op3val:0x7f1512b7; valaddr_reg:x12; val_offset:2637*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2637*FLEN/8, x13, x9, x10)

inst_901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47c980 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f0454 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1512b7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec7c980; op2val:0x3fbf0454;
op3val:0x7f1512b7; valaddr_reg:x12; val_offset:2640*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2640*FLEN/8, x13, x9, x10)

inst_902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47c980 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f0454 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1512b7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec7c980; op2val:0x3fbf0454;
op3val:0x7f1512b7; valaddr_reg:x12; val_offset:2643*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2643*FLEN/8, x13, x9, x10)

inst_903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47c980 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f0454 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1512b7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec7c980; op2val:0x3fbf0454;
op3val:0x7f1512b7; valaddr_reg:x12; val_offset:2646*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2646*FLEN/8, x13, x9, x10)

inst_904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47c980 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3f0454 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1512b7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec7c980; op2val:0x3fbf0454;
op3val:0x7f1512b7; valaddr_reg:x12; val_offset:2649*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2649*FLEN/8, x13, x9, x10)

inst_905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b69c6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3f1118 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0be06e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebb69c6; op2val:0x3f3f1118;
op3val:0x7e8be06e; valaddr_reg:x12; val_offset:2652*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2652*FLEN/8, x13, x9, x10)

inst_906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b69c6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3f1118 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0be06e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebb69c6; op2val:0x3f3f1118;
op3val:0x7e8be06e; valaddr_reg:x12; val_offset:2655*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2655*FLEN/8, x13, x9, x10)

inst_907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b69c6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3f1118 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0be06e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebb69c6; op2val:0x3f3f1118;
op3val:0x7e8be06e; valaddr_reg:x12; val_offset:2658*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2658*FLEN/8, x13, x9, x10)

inst_908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b69c6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3f1118 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0be06e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebb69c6; op2val:0x3f3f1118;
op3val:0x7e8be06e; valaddr_reg:x12; val_offset:2661*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2661*FLEN/8, x13, x9, x10)

inst_909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b69c6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3f1118 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0be06e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebb69c6; op2val:0x3f3f1118;
op3val:0x7e8be06e; valaddr_reg:x12; val_offset:2664*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2664*FLEN/8, x13, x9, x10)

inst_910:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3eed5f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x58afb5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x219b54 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3eed5f; op2val:0x3f58afb5;
op3val:0x7f219b54; valaddr_reg:x12; val_offset:2667*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2667*FLEN/8, x13, x9, x10)

inst_911:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3eed5f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x58afb5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x219b54 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3eed5f; op2val:0x3f58afb5;
op3val:0x7f219b54; valaddr_reg:x12; val_offset:2670*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2670*FLEN/8, x13, x9, x10)

inst_912:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3eed5f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x58afb5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x219b54 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3eed5f; op2val:0x3f58afb5;
op3val:0x7f219b54; valaddr_reg:x12; val_offset:2673*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2673*FLEN/8, x13, x9, x10)

inst_913:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3eed5f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x58afb5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x219b54 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3eed5f; op2val:0x3f58afb5;
op3val:0x7f219b54; valaddr_reg:x12; val_offset:2676*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2676*FLEN/8, x13, x9, x10)

inst_914:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3eed5f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x58afb5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x219b54 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3eed5f; op2val:0x3f58afb5;
op3val:0x7f219b54; valaddr_reg:x12; val_offset:2679*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2679*FLEN/8, x13, x9, x10)

inst_915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6334ab and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b9bf9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2681e8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee334ab; op2val:0x3fbb9bf9;
op3val:0x7f2681e8; valaddr_reg:x12; val_offset:2682*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2682*FLEN/8, x13, x9, x10)

inst_916:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6334ab and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b9bf9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2681e8 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee334ab; op2val:0x3fbb9bf9;
op3val:0x7f2681e8; valaddr_reg:x12; val_offset:2685*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2685*FLEN/8, x13, x9, x10)

inst_917:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6334ab and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b9bf9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2681e8 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee334ab; op2val:0x3fbb9bf9;
op3val:0x7f2681e8; valaddr_reg:x12; val_offset:2688*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2688*FLEN/8, x13, x9, x10)

inst_918:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6334ab and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b9bf9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2681e8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee334ab; op2val:0x3fbb9bf9;
op3val:0x7f2681e8; valaddr_reg:x12; val_offset:2691*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2691*FLEN/8, x13, x9, x10)

inst_919:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6334ab and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b9bf9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2681e8 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee334ab; op2val:0x3fbb9bf9;
op3val:0x7f2681e8; valaddr_reg:x12; val_offset:2694*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2694*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_7)

inst_920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7962d0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d3c53 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x192c5e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef962d0; op2val:0x3f9d3c53;
op3val:0x7f192c5e; valaddr_reg:x12; val_offset:2697*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2697*FLEN/8, x13, x9, x10)

inst_921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7962d0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d3c53 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x192c5e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef962d0; op2val:0x3f9d3c53;
op3val:0x7f192c5e; valaddr_reg:x12; val_offset:2700*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2700*FLEN/8, x13, x9, x10)

inst_922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7962d0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d3c53 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x192c5e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef962d0; op2val:0x3f9d3c53;
op3val:0x7f192c5e; valaddr_reg:x12; val_offset:2703*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2703*FLEN/8, x13, x9, x10)

inst_923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7962d0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d3c53 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x192c5e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef962d0; op2val:0x3f9d3c53;
op3val:0x7f192c5e; valaddr_reg:x12; val_offset:2706*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2706*FLEN/8, x13, x9, x10)

inst_924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7962d0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1d3c53 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x192c5e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef962d0; op2val:0x3f9d3c53;
op3val:0x7f192c5e; valaddr_reg:x12; val_offset:2709*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2709*FLEN/8, x13, x9, x10)

inst_925:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4cf955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c4412 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x49fbf1 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d4cf955; op2val:0x3ffc4412;
op3val:0x7dc9fbf1; valaddr_reg:x12; val_offset:2712*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2712*FLEN/8, x13, x9, x10)

inst_926:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4cf955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c4412 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x49fbf1 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d4cf955; op2val:0x3ffc4412;
op3val:0x7dc9fbf1; valaddr_reg:x12; val_offset:2715*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2715*FLEN/8, x13, x9, x10)

inst_927:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4cf955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c4412 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x49fbf1 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d4cf955; op2val:0x3ffc4412;
op3val:0x7dc9fbf1; valaddr_reg:x12; val_offset:2718*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2718*FLEN/8, x13, x9, x10)

inst_928:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4cf955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c4412 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x49fbf1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d4cf955; op2val:0x3ffc4412;
op3val:0x7dc9fbf1; valaddr_reg:x12; val_offset:2721*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2721*FLEN/8, x13, x9, x10)

inst_929:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4cf955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c4412 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x49fbf1 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d4cf955; op2val:0x3ffc4412;
op3val:0x7dc9fbf1; valaddr_reg:x12; val_offset:2724*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2724*FLEN/8, x13, x9, x10)

inst_930:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x280d2c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30665c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x679880 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da80d2c; op2val:0x40b0665c;
op3val:0x7ee79880; valaddr_reg:x12; val_offset:2727*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2727*FLEN/8, x13, x9, x10)

inst_931:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x280d2c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30665c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x679880 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da80d2c; op2val:0x40b0665c;
op3val:0x7ee79880; valaddr_reg:x12; val_offset:2730*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2730*FLEN/8, x13, x9, x10)

inst_932:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x280d2c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30665c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x679880 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da80d2c; op2val:0x40b0665c;
op3val:0x7ee79880; valaddr_reg:x12; val_offset:2733*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2733*FLEN/8, x13, x9, x10)

inst_933:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x280d2c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30665c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x679880 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da80d2c; op2val:0x40b0665c;
op3val:0x7ee79880; valaddr_reg:x12; val_offset:2736*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2736*FLEN/8, x13, x9, x10)

inst_934:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x280d2c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x30665c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x679880 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da80d2c; op2val:0x40b0665c;
op3val:0x7ee79880; valaddr_reg:x12; val_offset:2739*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2739*FLEN/8, x13, x9, x10)

inst_935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5cb7f4 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6e4348 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0a2ca1; op2val:0x3e5cb7f4;
op3val:0x7dee4348; valaddr_reg:x12; val_offset:2742*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2742*FLEN/8, x13, x9, x10)

inst_936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5cb7f4 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6e4348 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0a2ca1; op2val:0x3e5cb7f4;
op3val:0x7dee4348; valaddr_reg:x12; val_offset:2745*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2745*FLEN/8, x13, x9, x10)

inst_937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5cb7f4 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6e4348 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0a2ca1; op2val:0x3e5cb7f4;
op3val:0x7dee4348; valaddr_reg:x12; val_offset:2748*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2748*FLEN/8, x13, x9, x10)

inst_938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5cb7f4 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6e4348 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0a2ca1; op2val:0x3e5cb7f4;
op3val:0x7dee4348; valaddr_reg:x12; val_offset:2751*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2751*FLEN/8, x13, x9, x10)

inst_939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a2ca1 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5cb7f4 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6e4348 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0a2ca1; op2val:0x3e5cb7f4;
op3val:0x7dee4348; valaddr_reg:x12; val_offset:2754*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2754*FLEN/8, x13, x9, x10)

inst_940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41f901 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x664779 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2e7bdf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec1f901; op2val:0x3e664779;
op3val:0x7dae7bdf; valaddr_reg:x12; val_offset:2757*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2757*FLEN/8, x13, x9, x10)

inst_941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41f901 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x664779 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2e7bdf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec1f901; op2val:0x3e664779;
op3val:0x7dae7bdf; valaddr_reg:x12; val_offset:2760*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2760*FLEN/8, x13, x9, x10)

inst_942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41f901 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x664779 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2e7bdf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec1f901; op2val:0x3e664779;
op3val:0x7dae7bdf; valaddr_reg:x12; val_offset:2763*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2763*FLEN/8, x13, x9, x10)

inst_943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41f901 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x664779 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2e7bdf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec1f901; op2val:0x3e664779;
op3val:0x7dae7bdf; valaddr_reg:x12; val_offset:2766*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2766*FLEN/8, x13, x9, x10)

inst_944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41f901 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x664779 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2e7bdf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec1f901; op2val:0x3e664779;
op3val:0x7dae7bdf; valaddr_reg:x12; val_offset:2769*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2769*FLEN/8, x13, x9, x10)

inst_945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x040377 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1106a2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1592c4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f040377; op2val:0x3f9106a2;
op3val:0x7f1592c4; valaddr_reg:x12; val_offset:2772*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2772*FLEN/8, x13, x9, x10)

inst_946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x040377 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1106a2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1592c4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f040377; op2val:0x3f9106a2;
op3val:0x7f1592c4; valaddr_reg:x12; val_offset:2775*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2775*FLEN/8, x13, x9, x10)

inst_947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x040377 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1106a2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1592c4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f040377; op2val:0x3f9106a2;
op3val:0x7f1592c4; valaddr_reg:x12; val_offset:2778*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2778*FLEN/8, x13, x9, x10)

inst_948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x040377 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1106a2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1592c4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f040377; op2val:0x3f9106a2;
op3val:0x7f1592c4; valaddr_reg:x12; val_offset:2781*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2781*FLEN/8, x13, x9, x10)

inst_949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x040377 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1106a2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1592c4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f040377; op2val:0x3f9106a2;
op3val:0x7f1592c4; valaddr_reg:x12; val_offset:2784*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2784*FLEN/8, x13, x9, x10)

inst_950:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x051fb7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x34eb67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c296d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d851fb7; op2val:0x4134eb67;
op3val:0x7f3c296d; valaddr_reg:x12; val_offset:2787*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2787*FLEN/8, x13, x9, x10)

inst_951:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x051fb7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x34eb67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c296d and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d851fb7; op2val:0x4134eb67;
op3val:0x7f3c296d; valaddr_reg:x12; val_offset:2790*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2790*FLEN/8, x13, x9, x10)

inst_952:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x051fb7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x34eb67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c296d and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d851fb7; op2val:0x4134eb67;
op3val:0x7f3c296d; valaddr_reg:x12; val_offset:2793*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2793*FLEN/8, x13, x9, x10)

inst_953:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x051fb7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x34eb67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c296d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d851fb7; op2val:0x4134eb67;
op3val:0x7f3c296d; valaddr_reg:x12; val_offset:2796*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2796*FLEN/8, x13, x9, x10)

inst_954:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x051fb7 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x34eb67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c296d and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d851fb7; op2val:0x4134eb67;
op3val:0x7f3c296d; valaddr_reg:x12; val_offset:2799*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2799*FLEN/8, x13, x9, x10)

inst_955:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f5201 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4052f8 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3fd041 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eff5201; op2val:0x3e4052f8;
op3val:0x7dbfd041; valaddr_reg:x12; val_offset:2802*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2802*FLEN/8, x13, x9, x10)

inst_956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f5201 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4052f8 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3fd041 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eff5201; op2val:0x3e4052f8;
op3val:0x7dbfd041; valaddr_reg:x12; val_offset:2805*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2805*FLEN/8, x13, x9, x10)

inst_957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f5201 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4052f8 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3fd041 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eff5201; op2val:0x3e4052f8;
op3val:0x7dbfd041; valaddr_reg:x12; val_offset:2808*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2808*FLEN/8, x13, x9, x10)

inst_958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f5201 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4052f8 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3fd041 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eff5201; op2val:0x3e4052f8;
op3val:0x7dbfd041; valaddr_reg:x12; val_offset:2811*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2811*FLEN/8, x13, x9, x10)

inst_959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f5201 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4052f8 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3fd041 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eff5201; op2val:0x3e4052f8;
op3val:0x7dbfd041; valaddr_reg:x12; val_offset:2814*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2814*FLEN/8, x13, x9, x10)

inst_960:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06cc9c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x66cf6d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x73121a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e86cc9c; op2val:0x3ee6cf6d;
op3val:0x7df3121a; valaddr_reg:x12; val_offset:2817*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2817*FLEN/8, x13, x9, x10)

inst_961:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06cc9c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x66cf6d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x73121a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e86cc9c; op2val:0x3ee6cf6d;
op3val:0x7df3121a; valaddr_reg:x12; val_offset:2820*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2820*FLEN/8, x13, x9, x10)

inst_962:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06cc9c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x66cf6d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x73121a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e86cc9c; op2val:0x3ee6cf6d;
op3val:0x7df3121a; valaddr_reg:x12; val_offset:2823*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2823*FLEN/8, x13, x9, x10)

inst_963:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06cc9c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x66cf6d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x73121a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e86cc9c; op2val:0x3ee6cf6d;
op3val:0x7df3121a; valaddr_reg:x12; val_offset:2826*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2826*FLEN/8, x13, x9, x10)

inst_964:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06cc9c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x66cf6d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x73121a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e86cc9c; op2val:0x3ee6cf6d;
op3val:0x7df3121a; valaddr_reg:x12; val_offset:2829*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2829*FLEN/8, x13, x9, x10)

inst_965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc4e1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x213184 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3003b5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0bc4e1; op2val:0x3fa13184;
op3val:0x7f3003b5; valaddr_reg:x12; val_offset:2832*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2832*FLEN/8, x13, x9, x10)

inst_966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc4e1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x213184 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3003b5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0bc4e1; op2val:0x3fa13184;
op3val:0x7f3003b5; valaddr_reg:x12; val_offset:2835*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2835*FLEN/8, x13, x9, x10)

inst_967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc4e1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x213184 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3003b5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0bc4e1; op2val:0x3fa13184;
op3val:0x7f3003b5; valaddr_reg:x12; val_offset:2838*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2838*FLEN/8, x13, x9, x10)

inst_968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc4e1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x213184 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3003b5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0bc4e1; op2val:0x3fa13184;
op3val:0x7f3003b5; valaddr_reg:x12; val_offset:2841*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2841*FLEN/8, x13, x9, x10)

inst_969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bc4e1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x213184 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3003b5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0bc4e1; op2val:0x3fa13184;
op3val:0x7f3003b5; valaddr_reg:x12; val_offset:2844*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2844*FLEN/8, x13, x9, x10)

inst_970:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x068091 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x068118 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0d5640 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e068091; op2val:0x3f868118;
op3val:0x7e0d5640; valaddr_reg:x12; val_offset:2847*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2847*FLEN/8, x13, x9, x10)

inst_971:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x068091 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x068118 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0d5640 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e068091; op2val:0x3f868118;
op3val:0x7e0d5640; valaddr_reg:x12; val_offset:2850*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2850*FLEN/8, x13, x9, x10)

inst_972:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x068091 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x068118 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0d5640 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e068091; op2val:0x3f868118;
op3val:0x7e0d5640; valaddr_reg:x12; val_offset:2853*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2853*FLEN/8, x13, x9, x10)

inst_973:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x068091 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x068118 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0d5640 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e068091; op2val:0x3f868118;
op3val:0x7e0d5640; valaddr_reg:x12; val_offset:2856*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2856*FLEN/8, x13, x9, x10)

inst_974:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x068091 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x068118 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0d5640 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e068091; op2val:0x3f868118;
op3val:0x7e0d5640; valaddr_reg:x12; val_offset:2859*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2859*FLEN/8, x13, x9, x10)

inst_975:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x717d9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ef083 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x250642 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef17d9d; op2val:0x3faef083;
op3val:0x7f250642; valaddr_reg:x12; val_offset:2862*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2862*FLEN/8, x13, x9, x10)

inst_976:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x717d9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ef083 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x250642 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef17d9d; op2val:0x3faef083;
op3val:0x7f250642; valaddr_reg:x12; val_offset:2865*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2865*FLEN/8, x13, x9, x10)

inst_977:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x717d9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ef083 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x250642 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef17d9d; op2val:0x3faef083;
op3val:0x7f250642; valaddr_reg:x12; val_offset:2868*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2868*FLEN/8, x13, x9, x10)

inst_978:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x717d9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ef083 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x250642 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef17d9d; op2val:0x3faef083;
op3val:0x7f250642; valaddr_reg:x12; val_offset:2871*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2871*FLEN/8, x13, x9, x10)

inst_979:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x717d9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ef083 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x250642 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef17d9d; op2val:0x3faef083;
op3val:0x7f250642; valaddr_reg:x12; val_offset:2874*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2874*FLEN/8, x13, x9, x10)

inst_980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0de12c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e961e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2fc857 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0de12c; op2val:0x3f1e961e;
op3val:0x7eafc857; valaddr_reg:x12; val_offset:2877*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2877*FLEN/8, x13, x9, x10)

inst_981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0de12c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e961e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2fc857 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0de12c; op2val:0x3f1e961e;
op3val:0x7eafc857; valaddr_reg:x12; val_offset:2880*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2880*FLEN/8, x13, x9, x10)

inst_982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0de12c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e961e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2fc857 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0de12c; op2val:0x3f1e961e;
op3val:0x7eafc857; valaddr_reg:x12; val_offset:2883*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2883*FLEN/8, x13, x9, x10)

inst_983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0de12c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e961e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2fc857 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0de12c; op2val:0x3f1e961e;
op3val:0x7eafc857; valaddr_reg:x12; val_offset:2886*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2886*FLEN/8, x13, x9, x10)

inst_984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0de12c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e961e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2fc857 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0de12c; op2val:0x3f1e961e;
op3val:0x7eafc857; valaddr_reg:x12; val_offset:2889*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2889*FLEN/8, x13, x9, x10)

inst_985:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x29bf15 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x31d38a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6bd2c4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da9bf15; op2val:0x40b1d38a;
op3val:0x7eebd2c4; valaddr_reg:x12; val_offset:2892*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2892*FLEN/8, x13, x9, x10)

inst_986:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x29bf15 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x31d38a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6bd2c4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da9bf15; op2val:0x40b1d38a;
op3val:0x7eebd2c4; valaddr_reg:x12; val_offset:2895*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2895*FLEN/8, x13, x9, x10)

inst_987:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x29bf15 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x31d38a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6bd2c4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da9bf15; op2val:0x40b1d38a;
op3val:0x7eebd2c4; valaddr_reg:x12; val_offset:2898*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2898*FLEN/8, x13, x9, x10)

inst_988:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x29bf15 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x31d38a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6bd2c4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da9bf15; op2val:0x40b1d38a;
op3val:0x7eebd2c4; valaddr_reg:x12; val_offset:2901*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2901*FLEN/8, x13, x9, x10)

inst_989:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x29bf15 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x31d38a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6bd2c4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da9bf15; op2val:0x40b1d38a;
op3val:0x7eebd2c4; valaddr_reg:x12; val_offset:2904*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2904*FLEN/8, x13, x9, x10)

inst_990:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2eef4a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61d6f5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1a5333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaeef4a; op2val:0x3fe1d6f5;
op3val:0x7f1a5333; valaddr_reg:x12; val_offset:2907*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2907*FLEN/8, x13, x9, x10)

inst_991:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2eef4a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61d6f5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1a5333 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaeef4a; op2val:0x3fe1d6f5;
op3val:0x7f1a5333; valaddr_reg:x12; val_offset:2910*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2910*FLEN/8, x13, x9, x10)

inst_992:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2eef4a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61d6f5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1a5333 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaeef4a; op2val:0x3fe1d6f5;
op3val:0x7f1a5333; valaddr_reg:x12; val_offset:2913*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2913*FLEN/8, x13, x9, x10)

inst_993:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2eef4a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61d6f5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1a5333 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaeef4a; op2val:0x3fe1d6f5;
op3val:0x7f1a5333; valaddr_reg:x12; val_offset:2916*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2916*FLEN/8, x13, x9, x10)

inst_994:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2eef4a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x61d6f5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1a5333 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaeef4a; op2val:0x3fe1d6f5;
op3val:0x7f1a5333; valaddr_reg:x12; val_offset:2919*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2919*FLEN/8, x13, x9, x10)

inst_995:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b9c6a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2446a0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0ceccb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edb9c6a; op2val:0x3fa446a0;
op3val:0x7f0ceccb; valaddr_reg:x12; val_offset:2922*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2922*FLEN/8, x13, x9, x10)

inst_996:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b9c6a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2446a0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0ceccb and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edb9c6a; op2val:0x3fa446a0;
op3val:0x7f0ceccb; valaddr_reg:x12; val_offset:2925*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2925*FLEN/8, x13, x9, x10)

inst_997:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b9c6a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2446a0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0ceccb and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edb9c6a; op2val:0x3fa446a0;
op3val:0x7f0ceccb; valaddr_reg:x12; val_offset:2928*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2928*FLEN/8, x13, x9, x10)

inst_998:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b9c6a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2446a0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0ceccb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edb9c6a; op2val:0x3fa446a0;
op3val:0x7f0ceccb; valaddr_reg:x12; val_offset:2931*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2931*FLEN/8, x13, x9, x10)

inst_999:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b9c6a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2446a0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0ceccb and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edb9c6a; op2val:0x3fa446a0;
op3val:0x7f0ceccb; valaddr_reg:x12; val_offset:2934*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2934*FLEN/8, x13, x9, x10)

inst_1000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a7368 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2505b8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70611a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3a7368; op2val:0x3f2505b8;
op3val:0x7ef0611a; valaddr_reg:x12; val_offset:2937*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2937*FLEN/8, x13, x9, x10)

inst_1001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a7368 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2505b8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70611a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3a7368; op2val:0x3f2505b8;
op3val:0x7ef0611a; valaddr_reg:x12; val_offset:2940*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2940*FLEN/8, x13, x9, x10)

inst_1002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a7368 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2505b8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70611a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3a7368; op2val:0x3f2505b8;
op3val:0x7ef0611a; valaddr_reg:x12; val_offset:2943*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2943*FLEN/8, x13, x9, x10)

inst_1003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a7368 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2505b8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70611a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3a7368; op2val:0x3f2505b8;
op3val:0x7ef0611a; valaddr_reg:x12; val_offset:2946*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2946*FLEN/8, x13, x9, x10)

inst_1004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a7368 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2505b8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70611a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3a7368; op2val:0x3f2505b8;
op3val:0x7ef0611a; valaddr_reg:x12; val_offset:2949*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2949*FLEN/8, x13, x9, x10)

inst_1005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f0a94 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x19db73 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5266c0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2f0a94; op2val:0x3e99db73;
op3val:0x7e5266c0; valaddr_reg:x12; val_offset:2952*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2952*FLEN/8, x13, x9, x10)

inst_1006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f0a94 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x19db73 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5266c0 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2f0a94; op2val:0x3e99db73;
op3val:0x7e5266c0; valaddr_reg:x12; val_offset:2955*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2955*FLEN/8, x13, x9, x10)

inst_1007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f0a94 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x19db73 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5266c0 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2f0a94; op2val:0x3e99db73;
op3val:0x7e5266c0; valaddr_reg:x12; val_offset:2958*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2958*FLEN/8, x13, x9, x10)

inst_1008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f0a94 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x19db73 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5266c0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2f0a94; op2val:0x3e99db73;
op3val:0x7e5266c0; valaddr_reg:x12; val_offset:2961*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2961*FLEN/8, x13, x9, x10)

inst_1009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f0a94 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x19db73 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5266c0 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2f0a94; op2val:0x3e99db73;
op3val:0x7e5266c0; valaddr_reg:x12; val_offset:2964*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2964*FLEN/8, x13, x9, x10)

inst_1010:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x16be52 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x0fdc26 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x296be5 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a96be52; op2val:0x440fdc26;
op3val:0x7f296be5; valaddr_reg:x12; val_offset:2967*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2967*FLEN/8, x13, x9, x10)

inst_1011:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x16be52 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x0fdc26 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x296be5 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a96be52; op2val:0x440fdc26;
op3val:0x7f296be5; valaddr_reg:x12; val_offset:2970*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2970*FLEN/8, x13, x9, x10)

inst_1012:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x16be52 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x0fdc26 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x296be5 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a96be52; op2val:0x440fdc26;
op3val:0x7f296be5; valaddr_reg:x12; val_offset:2973*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2973*FLEN/8, x13, x9, x10)

inst_1013:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x16be52 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x0fdc26 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x296be5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a96be52; op2val:0x440fdc26;
op3val:0x7f296be5; valaddr_reg:x12; val_offset:2976*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2976*FLEN/8, x13, x9, x10)

inst_1014:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x16be52 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x0fdc26 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x296be5 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7a96be52; op2val:0x440fdc26;
op3val:0x7f296be5; valaddr_reg:x12; val_offset:2979*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2979*FLEN/8, x13, x9, x10)

inst_1015:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x378e9e and fs2 == 0 and fe2 == 0x84 and fm2 == 0x05090e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ec72e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cb78e9e; op2val:0x4205090e;
op3val:0x7f3ec72e; valaddr_reg:x12; val_offset:2982*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2982*FLEN/8, x13, x9, x10)

inst_1016:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x378e9e and fs2 == 0 and fe2 == 0x84 and fm2 == 0x05090e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ec72e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cb78e9e; op2val:0x4205090e;
op3val:0x7f3ec72e; valaddr_reg:x12; val_offset:2985*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 2985*FLEN/8, x13, x9, x10)

inst_1017:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x378e9e and fs2 == 0 and fe2 == 0x84 and fm2 == 0x05090e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ec72e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cb78e9e; op2val:0x4205090e;
op3val:0x7f3ec72e; valaddr_reg:x12; val_offset:2988*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 2988*FLEN/8, x13, x9, x10)

inst_1018:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x378e9e and fs2 == 0 and fe2 == 0x84 and fm2 == 0x05090e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ec72e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cb78e9e; op2val:0x4205090e;
op3val:0x7f3ec72e; valaddr_reg:x12; val_offset:2991*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 2991*FLEN/8, x13, x9, x10)

inst_1019:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x378e9e and fs2 == 0 and fe2 == 0x84 and fm2 == 0x05090e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ec72e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7cb78e9e; op2val:0x4205090e;
op3val:0x7f3ec72e; valaddr_reg:x12; val_offset:2994*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 2994*FLEN/8, x13, x9, x10)

inst_1020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f0189 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x09b1fd and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3c42ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaf0189; op2val:0x3e09b1fd;
op3val:0x7d3c42ff; valaddr_reg:x12; val_offset:2997*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 2997*FLEN/8, x13, x9, x10)

inst_1021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f0189 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x09b1fd and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3c42ff and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaf0189; op2val:0x3e09b1fd;
op3val:0x7d3c42ff; valaddr_reg:x12; val_offset:3000*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3000*FLEN/8, x13, x9, x10)

inst_1022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f0189 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x09b1fd and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3c42ff and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaf0189; op2val:0x3e09b1fd;
op3val:0x7d3c42ff; valaddr_reg:x12; val_offset:3003*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3003*FLEN/8, x13, x9, x10)

inst_1023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f0189 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x09b1fd and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3c42ff and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaf0189; op2val:0x3e09b1fd;
op3val:0x7d3c42ff; valaddr_reg:x12; val_offset:3006*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3006*FLEN/8, x13, x9, x10)

inst_1024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f0189 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x09b1fd and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3c42ff and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaf0189; op2val:0x3e09b1fd;
op3val:0x7d3c42ff; valaddr_reg:x12; val_offset:3009*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3009*FLEN/8, x13, x9, x10)

inst_1025:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x52effd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2813b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a7dbc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e52effd; op2val:0x402813b5;
op3val:0x7f0a7dbc; valaddr_reg:x12; val_offset:3012*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3012*FLEN/8, x13, x9, x10)

inst_1026:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x52effd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2813b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a7dbc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e52effd; op2val:0x402813b5;
op3val:0x7f0a7dbc; valaddr_reg:x12; val_offset:3015*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3015*FLEN/8, x13, x9, x10)

inst_1027:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x52effd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2813b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a7dbc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e52effd; op2val:0x402813b5;
op3val:0x7f0a7dbc; valaddr_reg:x12; val_offset:3018*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3018*FLEN/8, x13, x9, x10)

inst_1028:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x52effd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2813b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a7dbc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e52effd; op2val:0x402813b5;
op3val:0x7f0a7dbc; valaddr_reg:x12; val_offset:3021*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3021*FLEN/8, x13, x9, x10)

inst_1029:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x52effd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2813b5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a7dbc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e52effd; op2val:0x402813b5;
op3val:0x7f0a7dbc; valaddr_reg:x12; val_offset:3024*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3024*FLEN/8, x13, x9, x10)

inst_1030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x137bbb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4fe828 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6f8d98 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e937bbb; op2val:0x3fcfe828;
op3val:0x7eef8d98; valaddr_reg:x12; val_offset:3027*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3027*FLEN/8, x13, x9, x10)

inst_1031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x137bbb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4fe828 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6f8d98 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e937bbb; op2val:0x3fcfe828;
op3val:0x7eef8d98; valaddr_reg:x12; val_offset:3030*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3030*FLEN/8, x13, x9, x10)

inst_1032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x137bbb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4fe828 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6f8d98 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e937bbb; op2val:0x3fcfe828;
op3val:0x7eef8d98; valaddr_reg:x12; val_offset:3033*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3033*FLEN/8, x13, x9, x10)

inst_1033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x137bbb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4fe828 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6f8d98 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e937bbb; op2val:0x3fcfe828;
op3val:0x7eef8d98; valaddr_reg:x12; val_offset:3036*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3036*FLEN/8, x13, x9, x10)

inst_1034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x137bbb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4fe828 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6f8d98 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e937bbb; op2val:0x3fcfe828;
op3val:0x7eef8d98; valaddr_reg:x12; val_offset:3039*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3039*FLEN/8, x13, x9, x10)

inst_1035:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c90a0 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x032bc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20718c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9c90a0; op2val:0x41032bc4;
op3val:0x7f20718c; valaddr_reg:x12; val_offset:3042*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3042*FLEN/8, x13, x9, x10)

inst_1036:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c90a0 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x032bc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20718c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9c90a0; op2val:0x41032bc4;
op3val:0x7f20718c; valaddr_reg:x12; val_offset:3045*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3045*FLEN/8, x13, x9, x10)

inst_1037:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c90a0 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x032bc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20718c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9c90a0; op2val:0x41032bc4;
op3val:0x7f20718c; valaddr_reg:x12; val_offset:3048*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3048*FLEN/8, x13, x9, x10)

inst_1038:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c90a0 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x032bc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20718c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9c90a0; op2val:0x41032bc4;
op3val:0x7f20718c; valaddr_reg:x12; val_offset:3051*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3051*FLEN/8, x13, x9, x10)

inst_1039:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c90a0 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x032bc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20718c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9c90a0; op2val:0x41032bc4;
op3val:0x7f20718c; valaddr_reg:x12; val_offset:3054*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3054*FLEN/8, x13, x9, x10)

inst_1040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f4a69 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ed4a6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fe49a and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8f4a69; op2val:0x400ed4a6;
op3val:0x7f1fe49a; valaddr_reg:x12; val_offset:3057*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3057*FLEN/8, x13, x9, x10)

inst_1041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f4a69 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ed4a6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fe49a and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8f4a69; op2val:0x400ed4a6;
op3val:0x7f1fe49a; valaddr_reg:x12; val_offset:3060*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3060*FLEN/8, x13, x9, x10)

inst_1042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f4a69 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ed4a6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fe49a and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8f4a69; op2val:0x400ed4a6;
op3val:0x7f1fe49a; valaddr_reg:x12; val_offset:3063*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3063*FLEN/8, x13, x9, x10)

inst_1043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f4a69 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ed4a6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fe49a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8f4a69; op2val:0x400ed4a6;
op3val:0x7f1fe49a; valaddr_reg:x12; val_offset:3066*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3066*FLEN/8, x13, x9, x10)

inst_1044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f4a69 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ed4a6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fe49a and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8f4a69; op2val:0x400ed4a6;
op3val:0x7f1fe49a; valaddr_reg:x12; val_offset:3069*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3069*FLEN/8, x13, x9, x10)

inst_1045:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x624363 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x10f5b7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x001f14 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de24363; op2val:0x4090f5b7;
op3val:0x7f001f14; valaddr_reg:x12; val_offset:3072*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3072*FLEN/8, x13, x9, x10)

inst_1046:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x624363 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x10f5b7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x001f14 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de24363; op2val:0x4090f5b7;
op3val:0x7f001f14; valaddr_reg:x12; val_offset:3075*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3075*FLEN/8, x13, x9, x10)

inst_1047:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x624363 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x10f5b7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x001f14 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de24363; op2val:0x4090f5b7;
op3val:0x7f001f14; valaddr_reg:x12; val_offset:3078*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3078*FLEN/8, x13, x9, x10)
RVTEST_SIGBASE(x9,signature_x9_8)

inst_1048:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x624363 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x10f5b7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x001f14 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de24363; op2val:0x4090f5b7;
op3val:0x7f001f14; valaddr_reg:x12; val_offset:3081*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3081*FLEN/8, x13, x9, x10)

inst_1049:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x624363 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x10f5b7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x001f14 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de24363; op2val:0x4090f5b7;
op3val:0x7f001f14; valaddr_reg:x12; val_offset:3084*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3084*FLEN/8, x13, x9, x10)

inst_1050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3419f9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5cbe2f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1b4c1e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb419f9; op2val:0x3f5cbe2f;
op3val:0x7e9b4c1e; valaddr_reg:x12; val_offset:3087*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3087*FLEN/8, x13, x9, x10)

inst_1051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3419f9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5cbe2f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1b4c1e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb419f9; op2val:0x3f5cbe2f;
op3val:0x7e9b4c1e; valaddr_reg:x12; val_offset:3090*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3090*FLEN/8, x13, x9, x10)

inst_1052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3419f9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5cbe2f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1b4c1e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb419f9; op2val:0x3f5cbe2f;
op3val:0x7e9b4c1e; valaddr_reg:x12; val_offset:3093*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3093*FLEN/8, x13, x9, x10)

inst_1053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3419f9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5cbe2f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1b4c1e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb419f9; op2val:0x3f5cbe2f;
op3val:0x7e9b4c1e; valaddr_reg:x12; val_offset:3096*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3096*FLEN/8, x13, x9, x10)

inst_1054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3419f9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5cbe2f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1b4c1e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb419f9; op2val:0x3f5cbe2f;
op3val:0x7e9b4c1e; valaddr_reg:x12; val_offset:3099*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3099*FLEN/8, x13, x9, x10)

inst_1055:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6d92ab and fs2 == 0 and fe2 == 0x83 and fm2 == 0x5c039b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c2d63 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c6d92ab; op2val:0x41dc039b;
op3val:0x7ecc2d63; valaddr_reg:x12; val_offset:3102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3102*FLEN/8, x13, x9, x10)

inst_1056:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6d92ab and fs2 == 0 and fe2 == 0x83 and fm2 == 0x5c039b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c2d63 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c6d92ab; op2val:0x41dc039b;
op3val:0x7ecc2d63; valaddr_reg:x12; val_offset:3105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3105*FLEN/8, x13, x9, x10)

inst_1057:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6d92ab and fs2 == 0 and fe2 == 0x83 and fm2 == 0x5c039b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c2d63 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c6d92ab; op2val:0x41dc039b;
op3val:0x7ecc2d63; valaddr_reg:x12; val_offset:3108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3108*FLEN/8, x13, x9, x10)

inst_1058:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6d92ab and fs2 == 0 and fe2 == 0x83 and fm2 == 0x5c039b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c2d63 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c6d92ab; op2val:0x41dc039b;
op3val:0x7ecc2d63; valaddr_reg:x12; val_offset:3111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3111*FLEN/8, x13, x9, x10)

inst_1059:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6d92ab and fs2 == 0 and fe2 == 0x83 and fm2 == 0x5c039b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c2d63 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c6d92ab; op2val:0x41dc039b;
op3val:0x7ecc2d63; valaddr_reg:x12; val_offset:3114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3114*FLEN/8, x13, x9, x10)

inst_1060:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20e7b1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7dd916 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x1f8d6c and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f20e7b1; op2val:0x3dfdd916;
op3val:0x7d9f8d6c; valaddr_reg:x12; val_offset:3117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3117*FLEN/8, x13, x9, x10)

inst_1061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20e7b1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7dd916 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x1f8d6c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f20e7b1; op2val:0x3dfdd916;
op3val:0x7d9f8d6c; valaddr_reg:x12; val_offset:3120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3120*FLEN/8, x13, x9, x10)

inst_1062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20e7b1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7dd916 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x1f8d6c and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f20e7b1; op2val:0x3dfdd916;
op3val:0x7d9f8d6c; valaddr_reg:x12; val_offset:3123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3123*FLEN/8, x13, x9, x10)

inst_1063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20e7b1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7dd916 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x1f8d6c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f20e7b1; op2val:0x3dfdd916;
op3val:0x7d9f8d6c; valaddr_reg:x12; val_offset:3126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3126*FLEN/8, x13, x9, x10)

inst_1064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20e7b1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x7dd916 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x1f8d6c and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f20e7b1; op2val:0x3dfdd916;
op3val:0x7d9f8d6c; valaddr_reg:x12; val_offset:3129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3129*FLEN/8, x13, x9, x10)

inst_1065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b2c70 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x64e6ed and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x190dfc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eab2c70; op2val:0x3ce4e6ed;
op3val:0x7c190dfc; valaddr_reg:x12; val_offset:3132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3132*FLEN/8, x13, x9, x10)

inst_1066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b2c70 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x64e6ed and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x190dfc and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eab2c70; op2val:0x3ce4e6ed;
op3val:0x7c190dfc; valaddr_reg:x12; val_offset:3135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3135*FLEN/8, x13, x9, x10)

inst_1067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b2c70 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x64e6ed and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x190dfc and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eab2c70; op2val:0x3ce4e6ed;
op3val:0x7c190dfc; valaddr_reg:x12; val_offset:3138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3138*FLEN/8, x13, x9, x10)

inst_1068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b2c70 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x64e6ed and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x190dfc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eab2c70; op2val:0x3ce4e6ed;
op3val:0x7c190dfc; valaddr_reg:x12; val_offset:3141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3141*FLEN/8, x13, x9, x10)

inst_1069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b2c70 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x64e6ed and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x190dfc and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eab2c70; op2val:0x3ce4e6ed;
op3val:0x7c190dfc; valaddr_reg:x12; val_offset:3144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3144*FLEN/8, x13, x9, x10)

inst_1070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3edebd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x79a9e2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a2550 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3edebd; op2val:0x3f79a9e2;
op3val:0x7f3a2550; valaddr_reg:x12; val_offset:3147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3147*FLEN/8, x13, x9, x10)

inst_1071:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3edebd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x79a9e2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a2550 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3edebd; op2val:0x3f79a9e2;
op3val:0x7f3a2550; valaddr_reg:x12; val_offset:3150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3150*FLEN/8, x13, x9, x10)

inst_1072:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3edebd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x79a9e2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a2550 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3edebd; op2val:0x3f79a9e2;
op3val:0x7f3a2550; valaddr_reg:x12; val_offset:3153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3153*FLEN/8, x13, x9, x10)

inst_1073:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3edebd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x79a9e2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a2550 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3edebd; op2val:0x3f79a9e2;
op3val:0x7f3a2550; valaddr_reg:x12; val_offset:3156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3156*FLEN/8, x13, x9, x10)

inst_1074:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3edebd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x79a9e2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a2550 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3edebd; op2val:0x3f79a9e2;
op3val:0x7f3a2550; valaddr_reg:x12; val_offset:3159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3159*FLEN/8, x13, x9, x10)

inst_1075:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024167 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x352b4f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x385c8f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f024167; op2val:0x3f352b4f;
op3val:0x7eb85c8f; valaddr_reg:x12; val_offset:3162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3162*FLEN/8, x13, x9, x10)

inst_1076:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024167 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x352b4f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x385c8f and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f024167; op2val:0x3f352b4f;
op3val:0x7eb85c8f; valaddr_reg:x12; val_offset:3165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3165*FLEN/8, x13, x9, x10)

inst_1077:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024167 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x352b4f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x385c8f and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f024167; op2val:0x3f352b4f;
op3val:0x7eb85c8f; valaddr_reg:x12; val_offset:3168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3168*FLEN/8, x13, x9, x10)

inst_1078:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024167 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x352b4f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x385c8f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f024167; op2val:0x3f352b4f;
op3val:0x7eb85c8f; valaddr_reg:x12; val_offset:3171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3171*FLEN/8, x13, x9, x10)

inst_1079:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x024167 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x352b4f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x385c8f and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f024167; op2val:0x3f352b4f;
op3val:0x7eb85c8f; valaddr_reg:x12; val_offset:3174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3174*FLEN/8, x13, x9, x10)

inst_1080:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x583349 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5c315d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x39f5c4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d583349; op2val:0x3fdc315d;
op3val:0x7db9f5c4; valaddr_reg:x12; val_offset:3177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3177*FLEN/8, x13, x9, x10)

inst_1081:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x583349 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5c315d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x39f5c4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d583349; op2val:0x3fdc315d;
op3val:0x7db9f5c4; valaddr_reg:x12; val_offset:3180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3180*FLEN/8, x13, x9, x10)

inst_1082:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x583349 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5c315d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x39f5c4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d583349; op2val:0x3fdc315d;
op3val:0x7db9f5c4; valaddr_reg:x12; val_offset:3183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3183*FLEN/8, x13, x9, x10)

inst_1083:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x583349 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5c315d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x39f5c4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d583349; op2val:0x3fdc315d;
op3val:0x7db9f5c4; valaddr_reg:x12; val_offset:3186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3186*FLEN/8, x13, x9, x10)

inst_1084:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x583349 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5c315d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x39f5c4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d583349; op2val:0x3fdc315d;
op3val:0x7db9f5c4; valaddr_reg:x12; val_offset:3189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3189*FLEN/8, x13, x9, x10)

inst_1085:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x075c57 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x103fcc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x188b59 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f075c57; op2val:0x3f903fcc;
op3val:0x7f188b59; valaddr_reg:x12; val_offset:3192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3192*FLEN/8, x13, x9, x10)

inst_1086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x075c57 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x103fcc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x188b59 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f075c57; op2val:0x3f903fcc;
op3val:0x7f188b59; valaddr_reg:x12; val_offset:3195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3195*FLEN/8, x13, x9, x10)

inst_1087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x075c57 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x103fcc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x188b59 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f075c57; op2val:0x3f903fcc;
op3val:0x7f188b59; valaddr_reg:x12; val_offset:3198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3198*FLEN/8, x13, x9, x10)

inst_1088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x075c57 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x103fcc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x188b59 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f075c57; op2val:0x3f903fcc;
op3val:0x7f188b59; valaddr_reg:x12; val_offset:3201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3201*FLEN/8, x13, x9, x10)

inst_1089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x075c57 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x103fcc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x188b59 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f075c57; op2val:0x3f903fcc;
op3val:0x7f188b59; valaddr_reg:x12; val_offset:3204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3204*FLEN/8, x13, x9, x10)

inst_1090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3de754 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5f097a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25738b and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3de754; op2val:0x3f5f097a;
op3val:0x7f25738b; valaddr_reg:x12; val_offset:3207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3207*FLEN/8, x13, x9, x10)

inst_1091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3de754 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5f097a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25738b and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3de754; op2val:0x3f5f097a;
op3val:0x7f25738b; valaddr_reg:x12; val_offset:3210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3210*FLEN/8, x13, x9, x10)

inst_1092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3de754 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5f097a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25738b and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3de754; op2val:0x3f5f097a;
op3val:0x7f25738b; valaddr_reg:x12; val_offset:3213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3213*FLEN/8, x13, x9, x10)

inst_1093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3de754 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5f097a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25738b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3de754; op2val:0x3f5f097a;
op3val:0x7f25738b; valaddr_reg:x12; val_offset:3216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3216*FLEN/8, x13, x9, x10)

inst_1094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3de754 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5f097a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25738b and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3de754; op2val:0x3f5f097a;
op3val:0x7f25738b; valaddr_reg:x12; val_offset:3219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3219*FLEN/8, x13, x9, x10)

inst_1095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2828cf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x153dda and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4410c4 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea828cf; op2val:0x3f153dda;
op3val:0x7e4410c4; valaddr_reg:x12; val_offset:3222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3222*FLEN/8, x13, x9, x10)

inst_1096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2828cf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x153dda and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4410c4 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea828cf; op2val:0x3f153dda;
op3val:0x7e4410c4; valaddr_reg:x12; val_offset:3225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3225*FLEN/8, x13, x9, x10)

inst_1097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2828cf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x153dda and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4410c4 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea828cf; op2val:0x3f153dda;
op3val:0x7e4410c4; valaddr_reg:x12; val_offset:3228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3228*FLEN/8, x13, x9, x10)

inst_1098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2828cf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x153dda and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4410c4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea828cf; op2val:0x3f153dda;
op3val:0x7e4410c4; valaddr_reg:x12; val_offset:3231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3231*FLEN/8, x13, x9, x10)

inst_1099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2828cf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x153dda and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4410c4 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea828cf; op2val:0x3f153dda;
op3val:0x7e4410c4; valaddr_reg:x12; val_offset:3234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3234*FLEN/8, x13, x9, x10)

inst_1100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50110c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x236d8e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x04d3e6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed0110c; op2val:0x3f236d8e;
op3val:0x7e84d3e6; valaddr_reg:x12; val_offset:3237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3237*FLEN/8, x13, x9, x10)

inst_1101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50110c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x236d8e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x04d3e6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed0110c; op2val:0x3f236d8e;
op3val:0x7e84d3e6; valaddr_reg:x12; val_offset:3240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3240*FLEN/8, x13, x9, x10)

inst_1102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50110c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x236d8e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x04d3e6 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed0110c; op2val:0x3f236d8e;
op3val:0x7e84d3e6; valaddr_reg:x12; val_offset:3243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3243*FLEN/8, x13, x9, x10)

inst_1103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50110c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x236d8e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x04d3e6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed0110c; op2val:0x3f236d8e;
op3val:0x7e84d3e6; valaddr_reg:x12; val_offset:3246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3246*FLEN/8, x13, x9, x10)

inst_1104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50110c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x236d8e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x04d3e6 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed0110c; op2val:0x3f236d8e;
op3val:0x7e84d3e6; valaddr_reg:x12; val_offset:3249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3249*FLEN/8, x13, x9, x10)

inst_1105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x513405 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4fb5c9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x29bd9e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed13405; op2val:0x3fcfb5c9;
op3val:0x7f29bd9e; valaddr_reg:x12; val_offset:3252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3252*FLEN/8, x13, x9, x10)

inst_1106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x513405 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4fb5c9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x29bd9e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed13405; op2val:0x3fcfb5c9;
op3val:0x7f29bd9e; valaddr_reg:x12; val_offset:3255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3255*FLEN/8, x13, x9, x10)

inst_1107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x513405 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4fb5c9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x29bd9e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed13405; op2val:0x3fcfb5c9;
op3val:0x7f29bd9e; valaddr_reg:x12; val_offset:3258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3258*FLEN/8, x13, x9, x10)

inst_1108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x513405 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4fb5c9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x29bd9e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed13405; op2val:0x3fcfb5c9;
op3val:0x7f29bd9e; valaddr_reg:x12; val_offset:3261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3261*FLEN/8, x13, x9, x10)

inst_1109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x513405 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4fb5c9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x29bd9e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed13405; op2val:0x3fcfb5c9;
op3val:0x7f29bd9e; valaddr_reg:x12; val_offset:3264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3264*FLEN/8, x13, x9, x10)

inst_1110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2deee7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0aa40d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c647e and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eadeee7; op2val:0x400aa40d;
op3val:0x7f3c647e; valaddr_reg:x12; val_offset:3267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3267*FLEN/8, x13, x9, x10)

inst_1111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2deee7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0aa40d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c647e and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eadeee7; op2val:0x400aa40d;
op3val:0x7f3c647e; valaddr_reg:x12; val_offset:3270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3270*FLEN/8, x13, x9, x10)

inst_1112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2deee7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0aa40d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c647e and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eadeee7; op2val:0x400aa40d;
op3val:0x7f3c647e; valaddr_reg:x12; val_offset:3273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3273*FLEN/8, x13, x9, x10)

inst_1113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2deee7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0aa40d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c647e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eadeee7; op2val:0x400aa40d;
op3val:0x7f3c647e; valaddr_reg:x12; val_offset:3276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3276*FLEN/8, x13, x9, x10)

inst_1114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2deee7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0aa40d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c647e and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eadeee7; op2val:0x400aa40d;
op3val:0x7f3c647e; valaddr_reg:x12; val_offset:3279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3279*FLEN/8, x13, x9, x10)

inst_1115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09ecac and fs2 == 0 and fe2 == 0x7b and fm2 == 0x026746 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0c83a7 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f09ecac; op2val:0x3d826746;
op3val:0x7d0c83a7; valaddr_reg:x12; val_offset:3282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3282*FLEN/8, x13, x9, x10)

inst_1116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09ecac and fs2 == 0 and fe2 == 0x7b and fm2 == 0x026746 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0c83a7 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f09ecac; op2val:0x3d826746;
op3val:0x7d0c83a7; valaddr_reg:x12; val_offset:3285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3285*FLEN/8, x13, x9, x10)

inst_1117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09ecac and fs2 == 0 and fe2 == 0x7b and fm2 == 0x026746 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0c83a7 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f09ecac; op2val:0x3d826746;
op3val:0x7d0c83a7; valaddr_reg:x12; val_offset:3288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3288*FLEN/8, x13, x9, x10)

inst_1118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09ecac and fs2 == 0 and fe2 == 0x7b and fm2 == 0x026746 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0c83a7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f09ecac; op2val:0x3d826746;
op3val:0x7d0c83a7; valaddr_reg:x12; val_offset:3291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3291*FLEN/8, x13, x9, x10)

inst_1119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09ecac and fs2 == 0 and fe2 == 0x7b and fm2 == 0x026746 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0c83a7 and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f09ecac; op2val:0x3d826746;
op3val:0x7d0c83a7; valaddr_reg:x12; val_offset:3294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3294*FLEN/8, x13, x9, x10)

inst_1120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x185240 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x049ddd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1dd0ae and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f185240; op2val:0x3f849ddd;
op3val:0x7f1dd0ae; valaddr_reg:x12; val_offset:3297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3297*FLEN/8, x13, x9, x10)

inst_1121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x185240 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x049ddd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1dd0ae and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f185240; op2val:0x3f849ddd;
op3val:0x7f1dd0ae; valaddr_reg:x12; val_offset:3300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3300*FLEN/8, x13, x9, x10)

inst_1122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x185240 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x049ddd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1dd0ae and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f185240; op2val:0x3f849ddd;
op3val:0x7f1dd0ae; valaddr_reg:x12; val_offset:3303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3303*FLEN/8, x13, x9, x10)

inst_1123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a40d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1548 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x48ecdf and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eba40d7; op2val:0x3f0a1548;
op3val:0x7e48ecdf; valaddr_reg:x12; val_offset:3306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3306*FLEN/8, x13, x9, x10)

inst_1124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a40d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1548 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x48ecdf and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eba40d7; op2val:0x3f0a1548;
op3val:0x7e48ecdf; valaddr_reg:x12; val_offset:3309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3309*FLEN/8, x13, x9, x10)

inst_1125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a40d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1548 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x48ecdf and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eba40d7; op2val:0x3f0a1548;
op3val:0x7e48ecdf; valaddr_reg:x12; val_offset:3312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3312*FLEN/8, x13, x9, x10)

inst_1126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a40d7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1548 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x48ecdf and fcsr == 0x80 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eba40d7; op2val:0x3f0a1548;
op3val:0x7e48ecdf; valaddr_reg:x12; val_offset:3315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 128, 0, x12, 3315*FLEN/8, x13, x9, x10)

inst_1127:
// fs1 == 0 and fe1 == 0xf3 and fm1 == 0x319f1b and fs2 == 0 and fe2 == 0x89 and fm2 == 0x376ad3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7e85b6 and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x79b19f1b; op2val:0x44b76ad3;
op3val:0x7efe85b6; valaddr_reg:x12; val_offset:3318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3318*FLEN/8, x13, x9, x10)

inst_1128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c2059 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x11387d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1efa7c and fcsr == 0x20 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c2059; op2val:0x3f11387d;
op3val:0x7e9efa7c; valaddr_reg:x12; val_offset:3321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 32, 0, x12, 3321*FLEN/8, x13, x9, x10)

inst_1129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c2059 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x11387d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1efa7c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c2059; op2val:0x3f11387d;
op3val:0x7e9efa7c; valaddr_reg:x12; val_offset:3324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 96, 0, x12, 3324*FLEN/8, x13, x9, x10)

inst_1130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4eb58d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x222e36 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02f434 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eceb58d; op2val:0x3fa22e36;
op3val:0x7f02f434; valaddr_reg:x12; val_offset:3327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 3327*FLEN/8, x13, x9, x10)

inst_1131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4eb58d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x222e36 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02f434 and fcsr == 0x40 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eceb58d; op2val:0x3fa22e36;
op3val:0x7f02f434; valaddr_reg:x12; val_offset:3330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 64, 0, x12, 3330*FLEN/8, x13, x9, x10)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2132300352,64,FLEN)
NAN_BOXED(1065655773,64,FLEN)
NAN_BOXED(2132660398,64,FLEN)
NAN_BOXED(2132300352,64,FLEN)
NAN_BOXED(2132300352,64,FLEN)
NAN_BOXED(2132660398,64,FLEN)
NAN_BOXED(2132300352,64,FLEN)
NAN_BOXED(2132300352,64,FLEN)
NAN_BOXED(2132660398,64,FLEN)
NAN_BOXED(2132300352,64,FLEN)
NAN_BOXED(1065655773,64,FLEN)
NAN_BOXED(2132300352,64,FLEN)
NAN_BOXED(2132300352,64,FLEN)
NAN_BOXED(1065655773,64,FLEN)
NAN_BOXED(2132660398,64,FLEN)
NAN_BOXED(2126135511,64,FLEN)
NAN_BOXED(2126135511,64,FLEN)
NAN_BOXED(2126135511,64,FLEN)
NAN_BOXED(2126135511,64,FLEN)
NAN_BOXED(1057625416,64,FLEN)
NAN_BOXED(1057625416,64,FLEN)
NAN_BOXED(2126135511,64,FLEN)
NAN_BOXED(1057625416,64,FLEN)
NAN_BOXED(1057625416,64,FLEN)
NAN_BOXED(2126135511,64,FLEN)
NAN_BOXED(1057625416,64,FLEN)
NAN_BOXED(2118708447,64,FLEN)
NAN_BOXED(2126135511,64,FLEN)
NAN_BOXED(2126135511,64,FLEN)
NAN_BOXED(2126135511,64,FLEN)
NAN_BOXED(2041683739,64,FLEN)
NAN_BOXED(1152871123,64,FLEN)
NAN_BOXED(2130609590,64,FLEN)
NAN_BOXED(2041683739,64,FLEN)
NAN_BOXED(1152871123,64,FLEN)
NAN_BOXED(2041683739,64,FLEN)
NAN_BOXED(2041683739,64,FLEN)
NAN_BOXED(1152871123,64,FLEN)
NAN_BOXED(2130609590,64,FLEN)
NAN_BOXED(2041683739,64,FLEN)
NAN_BOXED(1152871123,64,FLEN)
NAN_BOXED(2130609590,64,FLEN)
NAN_BOXED(2041683739,64,FLEN)
NAN_BOXED(1152871123,64,FLEN)
NAN_BOXED(2130609590,64,FLEN)
NAN_BOXED(2125763551,64,FLEN)
NAN_BOXED(1070517026,64,FLEN)
NAN_BOXED(2131877447,64,FLEN)
NAN_BOXED(2125763551,64,FLEN)
NAN_BOXED(1070517026,64,FLEN)
NAN_BOXED(2131877447,64,FLEN)
NAN_BOXED(2125763551,64,FLEN)
NAN_BOXED(1070517026,64,FLEN)
NAN_BOXED(2131877447,64,FLEN)
NAN_BOXED(2125763551,64,FLEN)
NAN_BOXED(1070517026,64,FLEN)
NAN_BOXED(2131877447,64,FLEN)
NAN_BOXED(2125763551,64,FLEN)
NAN_BOXED(1070517026,64,FLEN)
NAN_BOXED(2131877447,64,FLEN)
NAN_BOXED(2123320103,64,FLEN)
NAN_BOXED(1074009549,64,FLEN)
NAN_BOXED(2132008425,64,FLEN)
test_dataset_1:
NAN_BOXED(2123320103,32,FLEN)
NAN_BOXED(1074009549,32,FLEN)
NAN_BOXED(2132008425,32,FLEN)
NAN_BOXED(2123320103,32,FLEN)
NAN_BOXED(1074009549,32,FLEN)
NAN_BOXED(2132008425,32,FLEN)
NAN_BOXED(2123320103,32,FLEN)
NAN_BOXED(1074009549,32,FLEN)
NAN_BOXED(2132008425,32,FLEN)
NAN_BOXED(2123320103,32,FLEN)
NAN_BOXED(1074009549,32,FLEN)
NAN_BOXED(2132008425,32,FLEN)
NAN_BOXED(2119265951,32,FLEN)
NAN_BOXED(1077687286,32,FLEN)
NAN_BOXED(2132408255,32,FLEN)
NAN_BOXED(2119265951,32,FLEN)
NAN_BOXED(1077687286,32,FLEN)
NAN_BOXED(2132408255,32,FLEN)
NAN_BOXED(2119265951,32,FLEN)
NAN_BOXED(1077687286,32,FLEN)
NAN_BOXED(2132408255,32,FLEN)
NAN_BOXED(2119265951,32,FLEN)
NAN_BOXED(1077687286,32,FLEN)
NAN_BOXED(2132408255,32,FLEN)
NAN_BOXED(2119265951,32,FLEN)
NAN_BOXED(1077687286,32,FLEN)
NAN_BOXED(2132408255,32,FLEN)
NAN_BOXED(2131501145,32,FLEN)
NAN_BOXED(1058093181,32,FLEN)
NAN_BOXED(2124348028,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1058093181,32,FLEN)
NAN_BOXED(2124348028,32,FLEN)
NAN_BOXED(2131501145,32,FLEN)
NAN_BOXED(1058093181,32,FLEN)
NAN_BOXED(2124348028,32,FLEN)
NAN_BOXED(2131501145,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2124348028,32,FLEN)
NAN_BOXED(2131501145,32,FLEN)
NAN_BOXED(1058093181,32,FLEN)
NAN_BOXED(2124348028,32,FLEN)
NAN_BOXED(2127476109,32,FLEN)
NAN_BOXED(1067593270,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2127476109,32,FLEN)
NAN_BOXED(1067593270,32,FLEN)
NAN_BOXED(2130900020,32,FLEN)
NAN_BOXED(2127476109,32,FLEN)
NAN_BOXED(1067593270,32,FLEN)
NAN_BOXED(2130900020,32,FLEN)
NAN_BOXED(2127476109,32,FLEN)
NAN_BOXED(1067593270,32,FLEN)
NAN_BOXED(2130900020,32,FLEN)
NAN_BOXED(2127476109,32,FLEN)
NAN_BOXED(1067593270,32,FLEN)
NAN_BOXED(2130900020,32,FLEN)
NAN_BOXED(2115253854,32,FLEN)
NAN_BOXED(1077385403,32,FLEN)
NAN_BOXED(2127861397,32,FLEN)
NAN_BOXED(2115253854,32,FLEN)
NAN_BOXED(1077385403,32,FLEN)
NAN_BOXED(2127861397,32,FLEN)
NAN_BOXED(2115253854,32,FLEN)
NAN_BOXED(1077385403,32,FLEN)
NAN_BOXED(2127861397,32,FLEN)
NAN_BOXED(2115253854,32,FLEN)
NAN_BOXED(1077385403,32,FLEN)
NAN_BOXED(2127861397,32,FLEN)
NAN_BOXED(2115253854,32,FLEN)
NAN_BOXED(1077385403,32,FLEN)
NAN_BOXED(2127861397,32,FLEN)
NAN_BOXED(2132448628,32,FLEN)
NAN_BOXED(1051253274,32,FLEN)
NAN_BOXED(2118904719,32,FLEN)
NAN_BOXED(2132448628,32,FLEN)
NAN_BOXED(1051253274,32,FLEN)
NAN_BOXED(2118904719,32,FLEN)
NAN_BOXED(2132448628,32,FLEN)
NAN_BOXED(1051253274,32,FLEN)
NAN_BOXED(2118904719,32,FLEN)
NAN_BOXED(2132448628,32,FLEN)
NAN_BOXED(1051253274,32,FLEN)
NAN_BOXED(2118904719,32,FLEN)
NAN_BOXED(2132448628,32,FLEN)
NAN_BOXED(1051253274,32,FLEN)
NAN_BOXED(2118904719,32,FLEN)
NAN_BOXED(2132426498,32,FLEN)
NAN_BOXED(1062895721,32,FLEN)
NAN_BOXED(2130945799,32,FLEN)
NAN_BOXED(2132426498,32,FLEN)
NAN_BOXED(1062895721,32,FLEN)
NAN_BOXED(2130945799,32,FLEN)
NAN_BOXED(2132426498,32,FLEN)
NAN_BOXED(1062895721,32,FLEN)
NAN_BOXED(2130945799,32,FLEN)
NAN_BOXED(2132426498,32,FLEN)
NAN_BOXED(1062895721,32,FLEN)
NAN_BOXED(2130945799,32,FLEN)
NAN_BOXED(2132426498,32,FLEN)
NAN_BOXED(1062895721,32,FLEN)
NAN_BOXED(2130945799,32,FLEN)
NAN_BOXED(2132941353,32,FLEN)
NAN_BOXED(1053524475,32,FLEN)
NAN_BOXED(2122374413,32,FLEN)
NAN_BOXED(2132941353,32,FLEN)
NAN_BOXED(1053524475,32,FLEN)
NAN_BOXED(2122374413,32,FLEN)
NAN_BOXED(2132941353,32,FLEN)
NAN_BOXED(1053524475,32,FLEN)
NAN_BOXED(2122374413,32,FLEN)
NAN_BOXED(2132941353,32,FLEN)
NAN_BOXED(1053524475,32,FLEN)
NAN_BOXED(2122374413,32,FLEN)
NAN_BOXED(2132941353,32,FLEN)
NAN_BOXED(1053524475,32,FLEN)
NAN_BOXED(2122374413,32,FLEN)
NAN_BOXED(2106527234,32,FLEN)
NAN_BOXED(1091140588,32,FLEN)
NAN_BOXED(2132387710,32,FLEN)
NAN_BOXED(2106527234,32,FLEN)
NAN_BOXED(1091140588,32,FLEN)
NAN_BOXED(2132387710,32,FLEN)
NAN_BOXED(2106527234,32,FLEN)
NAN_BOXED(1091140588,32,FLEN)
NAN_BOXED(2132387710,32,FLEN)
NAN_BOXED(2106527234,32,FLEN)
NAN_BOXED(1091140588,32,FLEN)
NAN_BOXED(2132387710,32,FLEN)
NAN_BOXED(2106527234,32,FLEN)
NAN_BOXED(1091140588,32,FLEN)
NAN_BOXED(2132387710,32,FLEN)
NAN_BOXED(2132444318,32,FLEN)
NAN_BOXED(1057857307,32,FLEN)
NAN_BOXED(2125133352,32,FLEN)
NAN_BOXED(2132444318,32,FLEN)
NAN_BOXED(1057857307,32,FLEN)
NAN_BOXED(2125133352,32,FLEN)
NAN_BOXED(2132444318,32,FLEN)
NAN_BOXED(1057857307,32,FLEN)
NAN_BOXED(2125133352,32,FLEN)
NAN_BOXED(2132444318,32,FLEN)
NAN_BOXED(1057857307,32,FLEN)
NAN_BOXED(2125133352,32,FLEN)
NAN_BOXED(2132444318,32,FLEN)
NAN_BOXED(1057857307,32,FLEN)
NAN_BOXED(2125133352,32,FLEN)
NAN_BOXED(2106592241,32,FLEN)
NAN_BOXED(1074171239,32,FLEN)
NAN_BOXED(2115464098,32,FLEN)
NAN_BOXED(2106592241,32,FLEN)
NAN_BOXED(1074171239,32,FLEN)
NAN_BOXED(2115464098,32,FLEN)
NAN_BOXED(2106592241,32,FLEN)
NAN_BOXED(1074171239,32,FLEN)
NAN_BOXED(2115464098,32,FLEN)
NAN_BOXED(2106592241,32,FLEN)
NAN_BOXED(1074171239,32,FLEN)
NAN_BOXED(2115464098,32,FLEN)
NAN_BOXED(2106592241,32,FLEN)
NAN_BOXED(1074171239,32,FLEN)
NAN_BOXED(2115464098,32,FLEN)
NAN_BOXED(2129907471,32,FLEN)
NAN_BOXED(1055575971,32,FLEN)
NAN_BOXED(2120196355,32,FLEN)
NAN_BOXED(2129907471,32,FLEN)
NAN_BOXED(1055575971,32,FLEN)
NAN_BOXED(2120196355,32,FLEN)
NAN_BOXED(2129907471,32,FLEN)
NAN_BOXED(1055575971,32,FLEN)
NAN_BOXED(2120196355,32,FLEN)
NAN_BOXED(2129907471,32,FLEN)
NAN_BOXED(1055575971,32,FLEN)
NAN_BOXED(2120196355,32,FLEN)
NAN_BOXED(2129907471,32,FLEN)
NAN_BOXED(1055575971,32,FLEN)
NAN_BOXED(2120196355,32,FLEN)
NAN_BOXED(2134288866,32,FLEN)
NAN_BOXED(1058955275,32,FLEN)
NAN_BOXED(2128741059,32,FLEN)
NAN_BOXED(2134288866,32,FLEN)
NAN_BOXED(1058955275,32,FLEN)
NAN_BOXED(2128741059,32,FLEN)
NAN_BOXED(2134288866,32,FLEN)
NAN_BOXED(1058955275,32,FLEN)
NAN_BOXED(2128741059,32,FLEN)
NAN_BOXED(2134288866,32,FLEN)
NAN_BOXED(1058955275,32,FLEN)
NAN_BOXED(2128741059,32,FLEN)
NAN_BOXED(2134288866,32,FLEN)
NAN_BOXED(1058955275,32,FLEN)
NAN_BOXED(2128741059,32,FLEN)
NAN_BOXED(2115650943,32,FLEN)
NAN_BOXED(1079038208,32,FLEN)
NAN_BOXED(2130422996,32,FLEN)
NAN_BOXED(2115650943,32,FLEN)
NAN_BOXED(1079038208,32,FLEN)
NAN_BOXED(2130422996,32,FLEN)
NAN_BOXED(2115650943,32,FLEN)
NAN_BOXED(1079038208,32,FLEN)
NAN_BOXED(2130422996,32,FLEN)
NAN_BOXED(2115650943,32,FLEN)
NAN_BOXED(1079038208,32,FLEN)
NAN_BOXED(2130422996,32,FLEN)
NAN_BOXED(2115650943,32,FLEN)
NAN_BOXED(1079038208,32,FLEN)
NAN_BOXED(2130422996,32,FLEN)
NAN_BOXED(2122998464,32,FLEN)
NAN_BOXED(1076208946,32,FLEN)
NAN_BOXED(2134054373,32,FLEN)
NAN_BOXED(2122998464,32,FLEN)
NAN_BOXED(1076208946,32,FLEN)
NAN_BOXED(2134054373,32,FLEN)
NAN_BOXED(2122998464,32,FLEN)
NAN_BOXED(1076208946,32,FLEN)
NAN_BOXED(2134054373,32,FLEN)
NAN_BOXED(2122998464,32,FLEN)
NAN_BOXED(1076208946,32,FLEN)
NAN_BOXED(2134054373,32,FLEN)
NAN_BOXED(2122998464,32,FLEN)
NAN_BOXED(1076208946,32,FLEN)
NAN_BOXED(2134054373,32,FLEN)
NAN_BOXED(2133762122,32,FLEN)
NAN_BOXED(1058069466,32,FLEN)
NAN_BOXED(2126880836,32,FLEN)
NAN_BOXED(2133762122,32,FLEN)
NAN_BOXED(1058069466,32,FLEN)
NAN_BOXED(2126880836,32,FLEN)
NAN_BOXED(2133762122,32,FLEN)
NAN_BOXED(1058069466,32,FLEN)
NAN_BOXED(2126880836,32,FLEN)
NAN_BOXED(2133762122,32,FLEN)
NAN_BOXED(1058069466,32,FLEN)
NAN_BOXED(2126880836,32,FLEN)
NAN_BOXED(2133762122,32,FLEN)
NAN_BOXED(1058069466,32,FLEN)
NAN_BOXED(2126880836,32,FLEN)
NAN_BOXED(2130150396,32,FLEN)
NAN_BOXED(1066047376,32,FLEN)
NAN_BOXED(2131099568,32,FLEN)
NAN_BOXED(2130150396,32,FLEN)
NAN_BOXED(1066047376,32,FLEN)
NAN_BOXED(2131099568,32,FLEN)
NAN_BOXED(2130150396,32,FLEN)
NAN_BOXED(1066047376,32,FLEN)
NAN_BOXED(2131099568,32,FLEN)
NAN_BOXED(2130150396,32,FLEN)
NAN_BOXED(1066047376,32,FLEN)
NAN_BOXED(2131099568,32,FLEN)
NAN_BOXED(2130150396,32,FLEN)
NAN_BOXED(1066047376,32,FLEN)
NAN_BOXED(2131099568,32,FLEN)
NAN_BOXED(2132453421,32,FLEN)
NAN_BOXED(1067132673,32,FLEN)
NAN_BOXED(2134603464,32,FLEN)
NAN_BOXED(2132453421,32,FLEN)
NAN_BOXED(1067132673,32,FLEN)
NAN_BOXED(2134603464,32,FLEN)
NAN_BOXED(2132453421,32,FLEN)
NAN_BOXED(1067132673,32,FLEN)
NAN_BOXED(2134603464,32,FLEN)
NAN_BOXED(2132453421,32,FLEN)
NAN_BOXED(1067132673,32,FLEN)
NAN_BOXED(2134603464,32,FLEN)
NAN_BOXED(2132453421,32,FLEN)
NAN_BOXED(1067132673,32,FLEN)
NAN_BOXED(2134603464,32,FLEN)
NAN_BOXED(2091818984,32,FLEN)
NAN_BOXED(1095462741,32,FLEN)
NAN_BOXED(2123023551,32,FLEN)
NAN_BOXED(2091818984,32,FLEN)
NAN_BOXED(1095462741,32,FLEN)
NAN_BOXED(2123023551,32,FLEN)
NAN_BOXED(2091818984,32,FLEN)
NAN_BOXED(1095462741,32,FLEN)
NAN_BOXED(2123023551,32,FLEN)
NAN_BOXED(2091818984,32,FLEN)
NAN_BOXED(1095462741,32,FLEN)
NAN_BOXED(2123023551,32,FLEN)
NAN_BOXED(2091818984,32,FLEN)
NAN_BOXED(1095462741,32,FLEN)
NAN_BOXED(2123023551,32,FLEN)
NAN_BOXED(2129072680,32,FLEN)
NAN_BOXED(1057060818,32,FLEN)
NAN_BOXED(2120857756,32,FLEN)
NAN_BOXED(2129072680,32,FLEN)
NAN_BOXED(1057060818,32,FLEN)
NAN_BOXED(2120857756,32,FLEN)
NAN_BOXED(2129072680,32,FLEN)
NAN_BOXED(1057060818,32,FLEN)
NAN_BOXED(2120857756,32,FLEN)
NAN_BOXED(2129072680,32,FLEN)
NAN_BOXED(1057060818,32,FLEN)
NAN_BOXED(2120857756,32,FLEN)
NAN_BOXED(2129072680,32,FLEN)
NAN_BOXED(1057060818,32,FLEN)
NAN_BOXED(2120857756,32,FLEN)
NAN_BOXED(2128755830,32,FLEN)
NAN_BOXED(1042014781,32,FLEN)
NAN_BOXED(2106180235,32,FLEN)
NAN_BOXED(2128755830,32,FLEN)
NAN_BOXED(1042014781,32,FLEN)
NAN_BOXED(2106180235,32,FLEN)
NAN_BOXED(2128755830,32,FLEN)
NAN_BOXED(1042014781,32,FLEN)
NAN_BOXED(2106180235,32,FLEN)
NAN_BOXED(2128755830,32,FLEN)
NAN_BOXED(1042014781,32,FLEN)
NAN_BOXED(2106180235,32,FLEN)
NAN_BOXED(2128755830,32,FLEN)
NAN_BOXED(1042014781,32,FLEN)
NAN_BOXED(2106180235,32,FLEN)
NAN_BOXED(2133391778,32,FLEN)
NAN_BOXED(1058589255,32,FLEN)
NAN_BOXED(2127147896,32,FLEN)
NAN_BOXED(2133391778,32,FLEN)
NAN_BOXED(1058589255,32,FLEN)
NAN_BOXED(2127147896,32,FLEN)
NAN_BOXED(2133391778,32,FLEN)
NAN_BOXED(1058589255,32,FLEN)
NAN_BOXED(2127147896,32,FLEN)
NAN_BOXED(2133391778,32,FLEN)
NAN_BOXED(1058589255,32,FLEN)
NAN_BOXED(2127147896,32,FLEN)
NAN_BOXED(2133391778,32,FLEN)
NAN_BOXED(1058589255,32,FLEN)
NAN_BOXED(2127147896,32,FLEN)
NAN_BOXED(2108911927,32,FLEN)
NAN_BOXED(1085638902,32,FLEN)
NAN_BOXED(2130607643,32,FLEN)
NAN_BOXED(2108911927,32,FLEN)
NAN_BOXED(1085638902,32,FLEN)
NAN_BOXED(2130607643,32,FLEN)
NAN_BOXED(2108911927,32,FLEN)
NAN_BOXED(1085638902,32,FLEN)
NAN_BOXED(2130607643,32,FLEN)
NAN_BOXED(2108911927,32,FLEN)
NAN_BOXED(1085638902,32,FLEN)
NAN_BOXED(2130607643,32,FLEN)
NAN_BOXED(2108911927,32,FLEN)
NAN_BOXED(1085638902,32,FLEN)
NAN_BOXED(2130607643,32,FLEN)
NAN_BOXED(2121258207,32,FLEN)
NAN_BOXED(1059118102,32,FLEN)
NAN_BOXED(2115416891,32,FLEN)
NAN_BOXED(2121258207,32,FLEN)
NAN_BOXED(1059118102,32,FLEN)
NAN_BOXED(2115416891,32,FLEN)
NAN_BOXED(2121258207,32,FLEN)
NAN_BOXED(1059118102,32,FLEN)
NAN_BOXED(2115416891,32,FLEN)
NAN_BOXED(2121258207,32,FLEN)
NAN_BOXED(1059118102,32,FLEN)
NAN_BOXED(2115416891,32,FLEN)
NAN_BOXED(2121258207,32,FLEN)
NAN_BOXED(1059118102,32,FLEN)
NAN_BOXED(2115416891,32,FLEN)
NAN_BOXED(2126103038,32,FLEN)
NAN_BOXED(1049766943,32,FLEN)
NAN_BOXED(2111054158,32,FLEN)
NAN_BOXED(2126103038,32,FLEN)
NAN_BOXED(1049766943,32,FLEN)
NAN_BOXED(2111054158,32,FLEN)
NAN_BOXED(2126103038,32,FLEN)
NAN_BOXED(1049766943,32,FLEN)
NAN_BOXED(2111054158,32,FLEN)
NAN_BOXED(2126103038,32,FLEN)
NAN_BOXED(1049766943,32,FLEN)
NAN_BOXED(2111054158,32,FLEN)
NAN_BOXED(2126103038,32,FLEN)
NAN_BOXED(1049766943,32,FLEN)
NAN_BOXED(2111054158,32,FLEN)
NAN_BOXED(2116104479,32,FLEN)
NAN_BOXED(1082390202,32,FLEN)
NAN_BOXED(2133208827,32,FLEN)
NAN_BOXED(2116104479,32,FLEN)
NAN_BOXED(1082390202,32,FLEN)
NAN_BOXED(2133208827,32,FLEN)
NAN_BOXED(2116104479,32,FLEN)
NAN_BOXED(1082390202,32,FLEN)
NAN_BOXED(2133208827,32,FLEN)
NAN_BOXED(2116104479,32,FLEN)
NAN_BOXED(1082390202,32,FLEN)
NAN_BOXED(2133208827,32,FLEN)
NAN_BOXED(2116104479,32,FLEN)
NAN_BOXED(1082390202,32,FLEN)
NAN_BOXED(2133208827,32,FLEN)
NAN_BOXED(2131103511,32,FLEN)
NAN_BOXED(1016261782,32,FLEN)
NAN_BOXED(2082070784,32,FLEN)
NAN_BOXED(2131103511,32,FLEN)
NAN_BOXED(1016261782,32,FLEN)
NAN_BOXED(2082070784,32,FLEN)
NAN_BOXED(2131103511,32,FLEN)
NAN_BOXED(1016261782,32,FLEN)
NAN_BOXED(2082070784,32,FLEN)
NAN_BOXED(2131103511,32,FLEN)
NAN_BOXED(1016261782,32,FLEN)
NAN_BOXED(2082070784,32,FLEN)
NAN_BOXED(2131103511,32,FLEN)
NAN_BOXED(1016261782,32,FLEN)
NAN_BOXED(2082070784,32,FLEN)
NAN_BOXED(2132108052,32,FLEN)
NAN_BOXED(1018403743,32,FLEN)
NAN_BOXED(2085723695,32,FLEN)
NAN_BOXED(2132108052,32,FLEN)
NAN_BOXED(1018403743,32,FLEN)
NAN_BOXED(2085723695,32,FLEN)
NAN_BOXED(2132108052,32,FLEN)
NAN_BOXED(1018403743,32,FLEN)
NAN_BOXED(2085723695,32,FLEN)
NAN_BOXED(2132108052,32,FLEN)
NAN_BOXED(1018403743,32,FLEN)
NAN_BOXED(2085723695,32,FLEN)
NAN_BOXED(2132108052,32,FLEN)
NAN_BOXED(1018403743,32,FLEN)
NAN_BOXED(2085723695,32,FLEN)
NAN_BOXED(2122296620,32,FLEN)
NAN_BOXED(1076748078,32,FLEN)
NAN_BOXED(2133698285,32,FLEN)
NAN_BOXED(2122296620,32,FLEN)
NAN_BOXED(1076748078,32,FLEN)
NAN_BOXED(2133698285,32,FLEN)
NAN_BOXED(2122296620,32,FLEN)
NAN_BOXED(1076748078,32,FLEN)
NAN_BOXED(2133698285,32,FLEN)
NAN_BOXED(2122296620,32,FLEN)
NAN_BOXED(1076748078,32,FLEN)
NAN_BOXED(2133698285,32,FLEN)
NAN_BOXED(2122296620,32,FLEN)
NAN_BOXED(1076748078,32,FLEN)
NAN_BOXED(2133698285,32,FLEN)
NAN_BOXED(2129538701,32,FLEN)
NAN_BOXED(1056747782,32,FLEN)
NAN_BOXED(2120948359,32,FLEN)
NAN_BOXED(2129538701,32,FLEN)
NAN_BOXED(1056747782,32,FLEN)
NAN_BOXED(2120948359,32,FLEN)
NAN_BOXED(2129538701,32,FLEN)
NAN_BOXED(1056747782,32,FLEN)
NAN_BOXED(2120948359,32,FLEN)
NAN_BOXED(2129538701,32,FLEN)
NAN_BOXED(1056747782,32,FLEN)
NAN_BOXED(2120948359,32,FLEN)
NAN_BOXED(2129538701,32,FLEN)
NAN_BOXED(1056747782,32,FLEN)
NAN_BOXED(2120948359,32,FLEN)
NAN_BOXED(2123426918,32,FLEN)
NAN_BOXED(1065614623,32,FLEN)
NAN_BOXED(2123722888,32,FLEN)
NAN_BOXED(2123426918,32,FLEN)
NAN_BOXED(1065614623,32,FLEN)
NAN_BOXED(2123722888,32,FLEN)
NAN_BOXED(2123426918,32,FLEN)
NAN_BOXED(1065614623,32,FLEN)
NAN_BOXED(2123722888,32,FLEN)
NAN_BOXED(2123426918,32,FLEN)
NAN_BOXED(1065614623,32,FLEN)
NAN_BOXED(2123722888,32,FLEN)
NAN_BOXED(2123426918,32,FLEN)
NAN_BOXED(1065614623,32,FLEN)
NAN_BOXED(2123722888,32,FLEN)
NAN_BOXED(2109919601,32,FLEN)
NAN_BOXED(1090274342,32,FLEN)
NAN_BOXED(2134899207,32,FLEN)
NAN_BOXED(2109919601,32,FLEN)
NAN_BOXED(1090274342,32,FLEN)
NAN_BOXED(2134899207,32,FLEN)
NAN_BOXED(2109919601,32,FLEN)
NAN_BOXED(1090274342,32,FLEN)
NAN_BOXED(2134899207,32,FLEN)
NAN_BOXED(2109919601,32,FLEN)
NAN_BOXED(1090274342,32,FLEN)
NAN_BOXED(2134899207,32,FLEN)
NAN_BOXED(2109919601,32,FLEN)
NAN_BOXED(1090274342,32,FLEN)
NAN_BOXED(2134899207,32,FLEN)
NAN_BOXED(2099599219,32,FLEN)
NAN_BOXED(1090219463,32,FLEN)
NAN_BOXED(2124571557,32,FLEN)
NAN_BOXED(2099599219,32,FLEN)
NAN_BOXED(1090219463,32,FLEN)
NAN_BOXED(2124571557,32,FLEN)
NAN_BOXED(2099599219,32,FLEN)
NAN_BOXED(1090219463,32,FLEN)
NAN_BOXED(2124571557,32,FLEN)
NAN_BOXED(2099599219,32,FLEN)
NAN_BOXED(1090219463,32,FLEN)
NAN_BOXED(2124571557,32,FLEN)
NAN_BOXED(2099599219,32,FLEN)
NAN_BOXED(1090219463,32,FLEN)
NAN_BOXED(2124571557,32,FLEN)
NAN_BOXED(2131708614,32,FLEN)
NAN_BOXED(1057517794,32,FLEN)
NAN_BOXED(2123939281,32,FLEN)
NAN_BOXED(2131708614,32,FLEN)
NAN_BOXED(1057517794,32,FLEN)
NAN_BOXED(2123939281,32,FLEN)
NAN_BOXED(2131708614,32,FLEN)
NAN_BOXED(1057517794,32,FLEN)
NAN_BOXED(2123939281,32,FLEN)
NAN_BOXED(2131708614,32,FLEN)
NAN_BOXED(1057517794,32,FLEN)
NAN_BOXED(2123939281,32,FLEN)
NAN_BOXED(2131708614,32,FLEN)
NAN_BOXED(1057517794,32,FLEN)
NAN_BOXED(2123939281,32,FLEN)
NAN_BOXED(2134661327,32,FLEN)
NAN_BOXED(1048578314,32,FLEN)
NAN_BOXED(2117887516,32,FLEN)
NAN_BOXED(2134661327,32,FLEN)
NAN_BOXED(1048578314,32,FLEN)
NAN_BOXED(2117887516,32,FLEN)
NAN_BOXED(2134661327,32,FLEN)
NAN_BOXED(1048578314,32,FLEN)
NAN_BOXED(2117887516,32,FLEN)
NAN_BOXED(2134661327,32,FLEN)
NAN_BOXED(1048578314,32,FLEN)
NAN_BOXED(2117887516,32,FLEN)
NAN_BOXED(2134661327,32,FLEN)
NAN_BOXED(1048578314,32,FLEN)
NAN_BOXED(2117887516,32,FLEN)
NAN_BOXED(2134639716,32,FLEN)
NAN_BOXED(1063862694,32,FLEN)
NAN_BOXED(2133545014,32,FLEN)
NAN_BOXED(2134639716,32,FLEN)
NAN_BOXED(1063862694,32,FLEN)
NAN_BOXED(2133545014,32,FLEN)
NAN_BOXED(2134639716,32,FLEN)
NAN_BOXED(1063862694,32,FLEN)
NAN_BOXED(2133545014,32,FLEN)
NAN_BOXED(2134639716,32,FLEN)
NAN_BOXED(1063862694,32,FLEN)
NAN_BOXED(2133545014,32,FLEN)
NAN_BOXED(2134639716,32,FLEN)
NAN_BOXED(1063862694,32,FLEN)
NAN_BOXED(2133545014,32,FLEN)
NAN_BOXED(2130751106,32,FLEN)
NAN_BOXED(1068097973,32,FLEN)
NAN_BOXED(2133510481,32,FLEN)
NAN_BOXED(2130751106,32,FLEN)
NAN_BOXED(1068097973,32,FLEN)
NAN_BOXED(2133510481,32,FLEN)
NAN_BOXED(2130751106,32,FLEN)
NAN_BOXED(1068097973,32,FLEN)
NAN_BOXED(2133510481,32,FLEN)
NAN_BOXED(2130751106,32,FLEN)
NAN_BOXED(1068097973,32,FLEN)
NAN_BOXED(2133510481,32,FLEN)
NAN_BOXED(2130751106,32,FLEN)
NAN_BOXED(1068097973,32,FLEN)
NAN_BOXED(2133510481,32,FLEN)
NAN_BOXED(2125183225,32,FLEN)
NAN_BOXED(1072557633,32,FLEN)
NAN_BOXED(2132777488,32,FLEN)
NAN_BOXED(2125183225,32,FLEN)
NAN_BOXED(1072557633,32,FLEN)
NAN_BOXED(2132777488,32,FLEN)
NAN_BOXED(2125183225,32,FLEN)
NAN_BOXED(1072557633,32,FLEN)
NAN_BOXED(2132777488,32,FLEN)
NAN_BOXED(2125183225,32,FLEN)
NAN_BOXED(1072557633,32,FLEN)
NAN_BOXED(2132777488,32,FLEN)
NAN_BOXED(2125183225,32,FLEN)
NAN_BOXED(1072557633,32,FLEN)
NAN_BOXED(2132777488,32,FLEN)
NAN_BOXED(2132335065,32,FLEN)
NAN_BOXED(1059464803,32,FLEN)
NAN_BOXED(2126932061,32,FLEN)
NAN_BOXED(2132335065,32,FLEN)
NAN_BOXED(1059464803,32,FLEN)
NAN_BOXED(2126932061,32,FLEN)
NAN_BOXED(2132335065,32,FLEN)
NAN_BOXED(1059464803,32,FLEN)
NAN_BOXED(2126932061,32,FLEN)
NAN_BOXED(2132335065,32,FLEN)
NAN_BOXED(1059464803,32,FLEN)
NAN_BOXED(2126932061,32,FLEN)
NAN_BOXED(2132335065,32,FLEN)
NAN_BOXED(1059464803,32,FLEN)
NAN_BOXED(2126932061,32,FLEN)
NAN_BOXED(2125780552,32,FLEN)
NAN_BOXED(1069534663,32,FLEN)
NAN_BOXED(2131197244,32,FLEN)
NAN_BOXED(2125780552,32,FLEN)
NAN_BOXED(1069534663,32,FLEN)
NAN_BOXED(2131197244,32,FLEN)
NAN_BOXED(2125780552,32,FLEN)
NAN_BOXED(1069534663,32,FLEN)
NAN_BOXED(2131197244,32,FLEN)
NAN_BOXED(2125780552,32,FLEN)
NAN_BOXED(1069534663,32,FLEN)
NAN_BOXED(2131197244,32,FLEN)
NAN_BOXED(2125780552,32,FLEN)
NAN_BOXED(1069534663,32,FLEN)
NAN_BOXED(2131197244,32,FLEN)
NAN_BOXED(2124223642,32,FLEN)
NAN_BOXED(1045896154,32,FLEN)
NAN_BOXED(2105802085,32,FLEN)
NAN_BOXED(2124223642,32,FLEN)
NAN_BOXED(1045896154,32,FLEN)
NAN_BOXED(2105802085,32,FLEN)
NAN_BOXED(2124223642,32,FLEN)
NAN_BOXED(1045896154,32,FLEN)
NAN_BOXED(2105802085,32,FLEN)
NAN_BOXED(2124223642,32,FLEN)
NAN_BOXED(1045896154,32,FLEN)
NAN_BOXED(2105802085,32,FLEN)
NAN_BOXED(2124223642,32,FLEN)
NAN_BOXED(1045896154,32,FLEN)
NAN_BOXED(2105802085,32,FLEN)
NAN_BOXED(2131711167,32,FLEN)
NAN_BOXED(1052135469,32,FLEN)
NAN_BOXED(2118919751,32,FLEN)
NAN_BOXED(2131711167,32,FLEN)
NAN_BOXED(1052135469,32,FLEN)
NAN_BOXED(2118919751,32,FLEN)
NAN_BOXED(2131711167,32,FLEN)
NAN_BOXED(1052135469,32,FLEN)
NAN_BOXED(2118919751,32,FLEN)
NAN_BOXED(2131711167,32,FLEN)
NAN_BOXED(1052135469,32,FLEN)
NAN_BOXED(2118919751,32,FLEN)
NAN_BOXED(2131711167,32,FLEN)
NAN_BOXED(1052135469,32,FLEN)
NAN_BOXED(2118919751,32,FLEN)
NAN_BOXED(2126201681,32,FLEN)
NAN_BOXED(1070451177,32,FLEN)
NAN_BOXED(2132183194,32,FLEN)
NAN_BOXED(2126201681,32,FLEN)
NAN_BOXED(1070451177,32,FLEN)
NAN_BOXED(2132183194,32,FLEN)
NAN_BOXED(2126201681,32,FLEN)
NAN_BOXED(1070451177,32,FLEN)
NAN_BOXED(2132183194,32,FLEN)
NAN_BOXED(2126201681,32,FLEN)
NAN_BOXED(1070451177,32,FLEN)
NAN_BOXED(2132183194,32,FLEN)
NAN_BOXED(2126201681,32,FLEN)
NAN_BOXED(1070451177,32,FLEN)
NAN_BOXED(2132183194,32,FLEN)
NAN_BOXED(2114204098,32,FLEN)
NAN_BOXED(1040326713,32,FLEN)
NAN_BOXED(2089182161,32,FLEN)
NAN_BOXED(2114204098,32,FLEN)
NAN_BOXED(1040326713,32,FLEN)
NAN_BOXED(2089182161,32,FLEN)
NAN_BOXED(2114204098,32,FLEN)
NAN_BOXED(1040326713,32,FLEN)
NAN_BOXED(2089182161,32,FLEN)
NAN_BOXED(2114204098,32,FLEN)
NAN_BOXED(1040326713,32,FLEN)
NAN_BOXED(2089182161,32,FLEN)
NAN_BOXED(2114204098,32,FLEN)
NAN_BOXED(1040326713,32,FLEN)
NAN_BOXED(2089182161,32,FLEN)
NAN_BOXED(2109583444,32,FLEN)
NAN_BOXED(1083751062,32,FLEN)
NAN_BOXED(2128762343,32,FLEN)
NAN_BOXED(2109583444,32,FLEN)
NAN_BOXED(1083751062,32,FLEN)
NAN_BOXED(2128762343,32,FLEN)
NAN_BOXED(2109583444,32,FLEN)
NAN_BOXED(1083751062,32,FLEN)
NAN_BOXED(2128762343,32,FLEN)
NAN_BOXED(2109583444,32,FLEN)
NAN_BOXED(1083751062,32,FLEN)
NAN_BOXED(2128762343,32,FLEN)
NAN_BOXED(2109583444,32,FLEN)
NAN_BOXED(1083751062,32,FLEN)
NAN_BOXED(2128762343,32,FLEN)
NAN_BOXED(2123015314,32,FLEN)
NAN_BOXED(1060486305,32,FLEN)
NAN_BOXED(2118441223,32,FLEN)
NAN_BOXED(2123015314,32,FLEN)
NAN_BOXED(1060486305,32,FLEN)
NAN_BOXED(2118441223,32,FLEN)
NAN_BOXED(2123015314,32,FLEN)
NAN_BOXED(1060486305,32,FLEN)
NAN_BOXED(2118441223,32,FLEN)
NAN_BOXED(2123015314,32,FLEN)
NAN_BOXED(1060486305,32,FLEN)
NAN_BOXED(2118441223,32,FLEN)
NAN_BOXED(2123015314,32,FLEN)
NAN_BOXED(1060486305,32,FLEN)
NAN_BOXED(2118441223,32,FLEN)
NAN_BOXED(2125292421,32,FLEN)
NAN_BOXED(1073969689,32,FLEN)
NAN_BOXED(2133989696,32,FLEN)
NAN_BOXED(2125292421,32,FLEN)
NAN_BOXED(1073969689,32,FLEN)
NAN_BOXED(2133989696,32,FLEN)
NAN_BOXED(2125292421,32,FLEN)
NAN_BOXED(1073969689,32,FLEN)
NAN_BOXED(2133989696,32,FLEN)
NAN_BOXED(2125292421,32,FLEN)
NAN_BOXED(1073969689,32,FLEN)
NAN_BOXED(2133989696,32,FLEN)
NAN_BOXED(2125292421,32,FLEN)
NAN_BOXED(1073969689,32,FLEN)
NAN_BOXED(2133989696,32,FLEN)
NAN_BOXED(2118363269,32,FLEN)
NAN_BOXED(1070483520,32,FLEN)
NAN_BOXED(2124261588,32,FLEN)
NAN_BOXED(2118363269,32,FLEN)
NAN_BOXED(1070483520,32,FLEN)
NAN_BOXED(2124261588,32,FLEN)
NAN_BOXED(2118363269,32,FLEN)
NAN_BOXED(1070483520,32,FLEN)
NAN_BOXED(2124261588,32,FLEN)
NAN_BOXED(2118363269,32,FLEN)
NAN_BOXED(1070483520,32,FLEN)
NAN_BOXED(2124261588,32,FLEN)
NAN_BOXED(2118363269,32,FLEN)
NAN_BOXED(1070483520,32,FLEN)
NAN_BOXED(2124261588,32,FLEN)
NAN_BOXED(2133381900,32,FLEN)
NAN_BOXED(1060256541,32,FLEN)
NAN_BOXED(2129335158,32,FLEN)
NAN_BOXED(2133381900,32,FLEN)
NAN_BOXED(1060256541,32,FLEN)
NAN_BOXED(2129335158,32,FLEN)
NAN_BOXED(2133381900,32,FLEN)
NAN_BOXED(1060256541,32,FLEN)
NAN_BOXED(2129335158,32,FLEN)
NAN_BOXED(2133381900,32,FLEN)
NAN_BOXED(1060256541,32,FLEN)
NAN_BOXED(2129335158,32,FLEN)
NAN_BOXED(2133381900,32,FLEN)
NAN_BOXED(1060256541,32,FLEN)
NAN_BOXED(2129335158,32,FLEN)
NAN_BOXED(2119026343,32,FLEN)
NAN_BOXED(1071826831,32,FLEN)
NAN_BOXED(2125875656,32,FLEN)
NAN_BOXED(2119026343,32,FLEN)
NAN_BOXED(1071826831,32,FLEN)
NAN_BOXED(2125875656,32,FLEN)
NAN_BOXED(2119026343,32,FLEN)
NAN_BOXED(1071826831,32,FLEN)
NAN_BOXED(2125875656,32,FLEN)
NAN_BOXED(2119026343,32,FLEN)
NAN_BOXED(1071826831,32,FLEN)
NAN_BOXED(2125875656,32,FLEN)
NAN_BOXED(2119026343,32,FLEN)
NAN_BOXED(1071826831,32,FLEN)
NAN_BOXED(2125875656,32,FLEN)
NAN_BOXED(2125972043,32,FLEN)
NAN_BOXED(1050157190,32,FLEN)
NAN_BOXED(2111464811,32,FLEN)
NAN_BOXED(2125972043,32,FLEN)
NAN_BOXED(1050157190,32,FLEN)
NAN_BOXED(2111464811,32,FLEN)
NAN_BOXED(2125972043,32,FLEN)
NAN_BOXED(1050157190,32,FLEN)
NAN_BOXED(2111464811,32,FLEN)
NAN_BOXED(2125972043,32,FLEN)
NAN_BOXED(1050157190,32,FLEN)
NAN_BOXED(2111464811,32,FLEN)
NAN_BOXED(2125972043,32,FLEN)
NAN_BOXED(1050157190,32,FLEN)
NAN_BOXED(2111464811,32,FLEN)
NAN_BOXED(2123428763,32,FLEN)
NAN_BOXED(1062161823,32,FLEN)
NAN_BOXED(2120925659,32,FLEN)
NAN_BOXED(2123428763,32,FLEN)
NAN_BOXED(1062161823,32,FLEN)
NAN_BOXED(2120925659,32,FLEN)
NAN_BOXED(2123428763,32,FLEN)
NAN_BOXED(1062161823,32,FLEN)
NAN_BOXED(2120925659,32,FLEN)
NAN_BOXED(2123428763,32,FLEN)
NAN_BOXED(1062161823,32,FLEN)
NAN_BOXED(2120925659,32,FLEN)
NAN_BOXED(2123428763,32,FLEN)
NAN_BOXED(1062161823,32,FLEN)
NAN_BOXED(2120925659,32,FLEN)
NAN_BOXED(2132443808,32,FLEN)
NAN_BOXED(1053671452,32,FLEN)
NAN_BOXED(2121817371,32,FLEN)
NAN_BOXED(2132443808,32,FLEN)
NAN_BOXED(1053671452,32,FLEN)
NAN_BOXED(2121817371,32,FLEN)
NAN_BOXED(2132443808,32,FLEN)
NAN_BOXED(1053671452,32,FLEN)
NAN_BOXED(2121817371,32,FLEN)
NAN_BOXED(2132443808,32,FLEN)
NAN_BOXED(1053671452,32,FLEN)
NAN_BOXED(2121817371,32,FLEN)
NAN_BOXED(2132443808,32,FLEN)
NAN_BOXED(1053671452,32,FLEN)
NAN_BOXED(2121817371,32,FLEN)
NAN_BOXED(2130519612,32,FLEN)
NAN_BOXED(1069317221,32,FLEN)
NAN_BOXED(2134532887,32,FLEN)
NAN_BOXED(2130519612,32,FLEN)
NAN_BOXED(1069317221,32,FLEN)
NAN_BOXED(2134532887,32,FLEN)
NAN_BOXED(2130519612,32,FLEN)
NAN_BOXED(1069317221,32,FLEN)
NAN_BOXED(2134532887,32,FLEN)
NAN_BOXED(2130519612,32,FLEN)
NAN_BOXED(1069317221,32,FLEN)
NAN_BOXED(2134532887,32,FLEN)
NAN_BOXED(2130519612,32,FLEN)
NAN_BOXED(1069317221,32,FLEN)
NAN_BOXED(2134532887,32,FLEN)
NAN_BOXED(2133932837,32,FLEN)
NAN_BOXED(1053856764,32,FLEN)
NAN_BOXED(2123392642,32,FLEN)
NAN_BOXED(2133932837,32,FLEN)
NAN_BOXED(1053856764,32,FLEN)
NAN_BOXED(2123392642,32,FLEN)
NAN_BOXED(2133932837,32,FLEN)
NAN_BOXED(1053856764,32,FLEN)
NAN_BOXED(2123392642,32,FLEN)
NAN_BOXED(2133932837,32,FLEN)
NAN_BOXED(1053856764,32,FLEN)
NAN_BOXED(2123392642,32,FLEN)
NAN_BOXED(2133932837,32,FLEN)
NAN_BOXED(1053856764,32,FLEN)
NAN_BOXED(2123392642,32,FLEN)
NAN_BOXED(2129104998,32,FLEN)
NAN_BOXED(1057482012,32,FLEN)
NAN_BOXED(2121652422,32,FLEN)
NAN_BOXED(2129104998,32,FLEN)
NAN_BOXED(1057482012,32,FLEN)
NAN_BOXED(2121652422,32,FLEN)
NAN_BOXED(2129104998,32,FLEN)
NAN_BOXED(1057482012,32,FLEN)
NAN_BOXED(2121652422,32,FLEN)
NAN_BOXED(2129104998,32,FLEN)
NAN_BOXED(1057482012,32,FLEN)
NAN_BOXED(2121652422,32,FLEN)
NAN_BOXED(2129104998,32,FLEN)
NAN_BOXED(1057482012,32,FLEN)
NAN_BOXED(2121652422,32,FLEN)
NAN_BOXED(2123952299,32,FLEN)
NAN_BOXED(1067242839,32,FLEN)
NAN_BOXED(2126210106,32,FLEN)
NAN_BOXED(2123952299,32,FLEN)
NAN_BOXED(1067242839,32,FLEN)
NAN_BOXED(2126210106,32,FLEN)
NAN_BOXED(2123952299,32,FLEN)
NAN_BOXED(1067242839,32,FLEN)
NAN_BOXED(2126210106,32,FLEN)
NAN_BOXED(2123952299,32,FLEN)
NAN_BOXED(1067242839,32,FLEN)
NAN_BOXED(2126210106,32,FLEN)
NAN_BOXED(2123952299,32,FLEN)
NAN_BOXED(1067242839,32,FLEN)
NAN_BOXED(2126210106,32,FLEN)
NAN_BOXED(2132301596,32,FLEN)
NAN_BOXED(1066866911,32,FLEN)
NAN_BOXED(2134103134,32,FLEN)
NAN_BOXED(2132301596,32,FLEN)
NAN_BOXED(1066866911,32,FLEN)
NAN_BOXED(2134103134,32,FLEN)
NAN_BOXED(2132301596,32,FLEN)
NAN_BOXED(1066866911,32,FLEN)
NAN_BOXED(2134103134,32,FLEN)
NAN_BOXED(2132301596,32,FLEN)
NAN_BOXED(1066866911,32,FLEN)
NAN_BOXED(2134103134,32,FLEN)
NAN_BOXED(2132301596,32,FLEN)
NAN_BOXED(1066866911,32,FLEN)
NAN_BOXED(2134103134,32,FLEN)
NAN_BOXED(2120176535,32,FLEN)
NAN_BOXED(1018065516,32,FLEN)
NAN_BOXED(2073570979,32,FLEN)
NAN_BOXED(2120176535,32,FLEN)
NAN_BOXED(1018065516,32,FLEN)
NAN_BOXED(2073570979,32,FLEN)
NAN_BOXED(2120176535,32,FLEN)
NAN_BOXED(1018065516,32,FLEN)
NAN_BOXED(2073570979,32,FLEN)
NAN_BOXED(2120176535,32,FLEN)
NAN_BOXED(1018065516,32,FLEN)
NAN_BOXED(2073570979,32,FLEN)
NAN_BOXED(2120176535,32,FLEN)
NAN_BOXED(1018065516,32,FLEN)
NAN_BOXED(2073570979,32,FLEN)
NAN_BOXED(2125237661,32,FLEN)
NAN_BOXED(1040327085,32,FLEN)
NAN_BOXED(2100260155,32,FLEN)
NAN_BOXED(2125237661,32,FLEN)
NAN_BOXED(1040327085,32,FLEN)
NAN_BOXED(2100260155,32,FLEN)
NAN_BOXED(2125237661,32,FLEN)
NAN_BOXED(1040327085,32,FLEN)
NAN_BOXED(2100260155,32,FLEN)
NAN_BOXED(2125237661,32,FLEN)
NAN_BOXED(1040327085,32,FLEN)
NAN_BOXED(2100260155,32,FLEN)
NAN_BOXED(2125237661,32,FLEN)
NAN_BOXED(1040327085,32,FLEN)
NAN_BOXED(2100260155,32,FLEN)
NAN_BOXED(2092499741,32,FLEN)
NAN_BOXED(1103987627,32,FLEN)
NAN_BOXED(2132051623,32,FLEN)
NAN_BOXED(2092499741,32,FLEN)
NAN_BOXED(1103987627,32,FLEN)
NAN_BOXED(2132051623,32,FLEN)
NAN_BOXED(2092499741,32,FLEN)
NAN_BOXED(1103987627,32,FLEN)
NAN_BOXED(2132051623,32,FLEN)
NAN_BOXED(2092499741,32,FLEN)
NAN_BOXED(1103987627,32,FLEN)
NAN_BOXED(2132051623,32,FLEN)
NAN_BOXED(2092499741,32,FLEN)
NAN_BOXED(1103987627,32,FLEN)
NAN_BOXED(2132051623,32,FLEN)
NAN_BOXED(2108440548,32,FLEN)
NAN_BOXED(1087178568,32,FLEN)
NAN_BOXED(2131358736,32,FLEN)
NAN_BOXED(2108440548,32,FLEN)
NAN_BOXED(1087178568,32,FLEN)
NAN_BOXED(2131358736,32,FLEN)
NAN_BOXED(2108440548,32,FLEN)
NAN_BOXED(1087178568,32,FLEN)
NAN_BOXED(2131358736,32,FLEN)
NAN_BOXED(2108440548,32,FLEN)
NAN_BOXED(1087178568,32,FLEN)
NAN_BOXED(2131358736,32,FLEN)
NAN_BOXED(2108440548,32,FLEN)
NAN_BOXED(1087178568,32,FLEN)
NAN_BOXED(2131358736,32,FLEN)
NAN_BOXED(2123039529,32,FLEN)
NAN_BOXED(1076226092,32,FLEN)
NAN_BOXED(2134126137,32,FLEN)
NAN_BOXED(2123039529,32,FLEN)
NAN_BOXED(1076226092,32,FLEN)
NAN_BOXED(2134126137,32,FLEN)
NAN_BOXED(2123039529,32,FLEN)
NAN_BOXED(1076226092,32,FLEN)
NAN_BOXED(2134126137,32,FLEN)
NAN_BOXED(2123039529,32,FLEN)
NAN_BOXED(1076226092,32,FLEN)
NAN_BOXED(2134126137,32,FLEN)
NAN_BOXED(2123039529,32,FLEN)
NAN_BOXED(1076226092,32,FLEN)
NAN_BOXED(2134126137,32,FLEN)
NAN_BOXED(2133057233,32,FLEN)
NAN_BOXED(1033203346,32,FLEN)
NAN_BOXED(2101300974,32,FLEN)
NAN_BOXED(2133057233,32,FLEN)
NAN_BOXED(1033203346,32,FLEN)
NAN_BOXED(2101300974,32,FLEN)
NAN_BOXED(2133057233,32,FLEN)
NAN_BOXED(1033203346,32,FLEN)
NAN_BOXED(2101300974,32,FLEN)
NAN_BOXED(2133057233,32,FLEN)
NAN_BOXED(1033203346,32,FLEN)
NAN_BOXED(2101300974,32,FLEN)
NAN_BOXED(2133057233,32,FLEN)
NAN_BOXED(1033203346,32,FLEN)
NAN_BOXED(2101300974,32,FLEN)
NAN_BOXED(2115236075,32,FLEN)
NAN_BOXED(1084055933,32,FLEN)
NAN_BOXED(2134238766,32,FLEN)
NAN_BOXED(2115236075,32,FLEN)
NAN_BOXED(1084055933,32,FLEN)
NAN_BOXED(2134238766,32,FLEN)
NAN_BOXED(2115236075,32,FLEN)
NAN_BOXED(1084055933,32,FLEN)
NAN_BOXED(2134238766,32,FLEN)
NAN_BOXED(2115236075,32,FLEN)
NAN_BOXED(1084055933,32,FLEN)
NAN_BOXED(2134238766,32,FLEN)
NAN_BOXED(2115236075,32,FLEN)
NAN_BOXED(1084055933,32,FLEN)
NAN_BOXED(2134238766,32,FLEN)
NAN_BOXED(2129366748,32,FLEN)
NAN_BOXED(1060120641,32,FLEN)
NAN_BOXED(2124552001,32,FLEN)
NAN_BOXED(2129366748,32,FLEN)
NAN_BOXED(1060120641,32,FLEN)
NAN_BOXED(2124552001,32,FLEN)
NAN_BOXED(2129366748,32,FLEN)
NAN_BOXED(1060120641,32,FLEN)
NAN_BOXED(2124552001,32,FLEN)
NAN_BOXED(2129366748,32,FLEN)
NAN_BOXED(1060120641,32,FLEN)
NAN_BOXED(2124552001,32,FLEN)
NAN_BOXED(2129366748,32,FLEN)
NAN_BOXED(1060120641,32,FLEN)
NAN_BOXED(2124552001,32,FLEN)
NAN_BOXED(2132161326,32,FLEN)
NAN_BOXED(1065688018,32,FLEN)
NAN_BOXED(2132554196,32,FLEN)
NAN_BOXED(2132161326,32,FLEN)
NAN_BOXED(1065688018,32,FLEN)
NAN_BOXED(2132554196,32,FLEN)
NAN_BOXED(2132161326,32,FLEN)
NAN_BOXED(1065688018,32,FLEN)
NAN_BOXED(2132554196,32,FLEN)
NAN_BOXED(2132161326,32,FLEN)
NAN_BOXED(1065688018,32,FLEN)
NAN_BOXED(2132554196,32,FLEN)
NAN_BOXED(2132161326,32,FLEN)
NAN_BOXED(1065688018,32,FLEN)
NAN_BOXED(2132554196,32,FLEN)
NAN_BOXED(2126303100,32,FLEN)
NAN_BOXED(1064575425,32,FLEN)
NAN_BOXED(2125729448,32,FLEN)
NAN_BOXED(2126303100,32,FLEN)
NAN_BOXED(1064575425,32,FLEN)
NAN_BOXED(2125729448,32,FLEN)
NAN_BOXED(2126303100,32,FLEN)
NAN_BOXED(1064575425,32,FLEN)
NAN_BOXED(2125729448,32,FLEN)
NAN_BOXED(2126303100,32,FLEN)
NAN_BOXED(1064575425,32,FLEN)
NAN_BOXED(2125729448,32,FLEN)
NAN_BOXED(2126303100,32,FLEN)
NAN_BOXED(1064575425,32,FLEN)
NAN_BOXED(2125729448,32,FLEN)
NAN_BOXED(2107233934,32,FLEN)
NAN_BOXED(1080511923,32,FLEN)
NAN_BOXED(2123038539,32,FLEN)
NAN_BOXED(2107233934,32,FLEN)
NAN_BOXED(1080511923,32,FLEN)
NAN_BOXED(2123038539,32,FLEN)
NAN_BOXED(2107233934,32,FLEN)
NAN_BOXED(1080511923,32,FLEN)
NAN_BOXED(2123038539,32,FLEN)
NAN_BOXED(2107233934,32,FLEN)
NAN_BOXED(1080511923,32,FLEN)
NAN_BOXED(2123038539,32,FLEN)
NAN_BOXED(2107233934,32,FLEN)
NAN_BOXED(1080511923,32,FLEN)
NAN_BOXED(2123038539,32,FLEN)
NAN_BOXED(2111744012,32,FLEN)
NAN_BOXED(1082792439,32,FLEN)
NAN_BOXED(2129672792,32,FLEN)
NAN_BOXED(2111744012,32,FLEN)
NAN_BOXED(1082792439,32,FLEN)
NAN_BOXED(2129672792,32,FLEN)
NAN_BOXED(2111744012,32,FLEN)
NAN_BOXED(1082792439,32,FLEN)
NAN_BOXED(2129672792,32,FLEN)
NAN_BOXED(2111744012,32,FLEN)
NAN_BOXED(1082792439,32,FLEN)
NAN_BOXED(2129672792,32,FLEN)
NAN_BOXED(2111744012,32,FLEN)
NAN_BOXED(1082792439,32,FLEN)
NAN_BOXED(2129672792,32,FLEN)
NAN_BOXED(2129194305,32,FLEN)
NAN_BOXED(1047760759,32,FLEN)
NAN_BOXED(2111675325,32,FLEN)
NAN_BOXED(2129194305,32,FLEN)
NAN_BOXED(1047760759,32,FLEN)
NAN_BOXED(2111675325,32,FLEN)
NAN_BOXED(2129194305,32,FLEN)
NAN_BOXED(1047760759,32,FLEN)
NAN_BOXED(2111675325,32,FLEN)
NAN_BOXED(2129194305,32,FLEN)
NAN_BOXED(1047760759,32,FLEN)
NAN_BOXED(2111675325,32,FLEN)
NAN_BOXED(2129194305,32,FLEN)
NAN_BOXED(1047760759,32,FLEN)
NAN_BOXED(2111675325,32,FLEN)
NAN_BOXED(2129733539,32,FLEN)
NAN_BOXED(1042198635,32,FLEN)
NAN_BOXED(2106948775,32,FLEN)
NAN_BOXED(2129733539,32,FLEN)
NAN_BOXED(1042198635,32,FLEN)
NAN_BOXED(2106948775,32,FLEN)
NAN_BOXED(2129733539,32,FLEN)
NAN_BOXED(1042198635,32,FLEN)
NAN_BOXED(2106948775,32,FLEN)
NAN_BOXED(2129733539,32,FLEN)
NAN_BOXED(1042198635,32,FLEN)
NAN_BOXED(2106948775,32,FLEN)
NAN_BOXED(2129733539,32,FLEN)
NAN_BOXED(1042198635,32,FLEN)
NAN_BOXED(2106948775,32,FLEN)
NAN_BOXED(2107765078,32,FLEN)
NAN_BOXED(1086582949,32,FLEN)
NAN_BOXED(2130175520,32,FLEN)
NAN_BOXED(2107765078,32,FLEN)
NAN_BOXED(1086582949,32,FLEN)
NAN_BOXED(2130175520,32,FLEN)
NAN_BOXED(2107765078,32,FLEN)
NAN_BOXED(1086582949,32,FLEN)
NAN_BOXED(2130175520,32,FLEN)
NAN_BOXED(2107765078,32,FLEN)
NAN_BOXED(1086582949,32,FLEN)
NAN_BOXED(2130175520,32,FLEN)
NAN_BOXED(2107765078,32,FLEN)
NAN_BOXED(1086582949,32,FLEN)
NAN_BOXED(2130175520,32,FLEN)
NAN_BOXED(2125573776,32,FLEN)
NAN_BOXED(1073273344,32,FLEN)
NAN_BOXED(2133637227,32,FLEN)
NAN_BOXED(2125573776,32,FLEN)
NAN_BOXED(1073273344,32,FLEN)
NAN_BOXED(2133637227,32,FLEN)
NAN_BOXED(2125573776,32,FLEN)
NAN_BOXED(1073273344,32,FLEN)
NAN_BOXED(2133637227,32,FLEN)
NAN_BOXED(2125573776,32,FLEN)
NAN_BOXED(1073273344,32,FLEN)
NAN_BOXED(2133637227,32,FLEN)
NAN_BOXED(2125573776,32,FLEN)
NAN_BOXED(1073273344,32,FLEN)
NAN_BOXED(2133637227,32,FLEN)
NAN_BOXED(2129763485,32,FLEN)
NAN_BOXED(1066315444,32,FLEN)
NAN_BOXED(2131143106,32,FLEN)
NAN_BOXED(2129763485,32,FLEN)
NAN_BOXED(1066315444,32,FLEN)
NAN_BOXED(2131143106,32,FLEN)
NAN_BOXED(2129763485,32,FLEN)
NAN_BOXED(1066315444,32,FLEN)
NAN_BOXED(2131143106,32,FLEN)
NAN_BOXED(2129763485,32,FLEN)
NAN_BOXED(1066315444,32,FLEN)
NAN_BOXED(2131143106,32,FLEN)
NAN_BOXED(2129763485,32,FLEN)
NAN_BOXED(1066315444,32,FLEN)
NAN_BOXED(2131143106,32,FLEN)
NAN_BOXED(2109936904,32,FLEN)
NAN_BOXED(1087490883,32,FLEN)
NAN_BOXED(2132795153,32,FLEN)
NAN_BOXED(2109936904,32,FLEN)
NAN_BOXED(1087490883,32,FLEN)
NAN_BOXED(2132795153,32,FLEN)
NAN_BOXED(2109936904,32,FLEN)
NAN_BOXED(1087490883,32,FLEN)
NAN_BOXED(2132795153,32,FLEN)
NAN_BOXED(2109936904,32,FLEN)
NAN_BOXED(1087490883,32,FLEN)
NAN_BOXED(2132795153,32,FLEN)
NAN_BOXED(2109936904,32,FLEN)
NAN_BOXED(1087490883,32,FLEN)
NAN_BOXED(2132795153,32,FLEN)
NAN_BOXED(2105561771,32,FLEN)
NAN_BOXED(1089258219,32,FLEN)
NAN_BOXED(2129484757,32,FLEN)
NAN_BOXED(2105561771,32,FLEN)
NAN_BOXED(1089258219,32,FLEN)
NAN_BOXED(2129484757,32,FLEN)
NAN_BOXED(2105561771,32,FLEN)
NAN_BOXED(1089258219,32,FLEN)
NAN_BOXED(2129484757,32,FLEN)
NAN_BOXED(2105561771,32,FLEN)
NAN_BOXED(1089258219,32,FLEN)
NAN_BOXED(2129484757,32,FLEN)
NAN_BOXED(2105561771,32,FLEN)
NAN_BOXED(1089258219,32,FLEN)
NAN_BOXED(2129484757,32,FLEN)
NAN_BOXED(2133785868,32,FLEN)
NAN_BOXED(1065285677,32,FLEN)
NAN_BOXED(2133739702,32,FLEN)
NAN_BOXED(2133785868,32,FLEN)
NAN_BOXED(1065285677,32,FLEN)
NAN_BOXED(2133739702,32,FLEN)
NAN_BOXED(2133785868,32,FLEN)
NAN_BOXED(1065285677,32,FLEN)
NAN_BOXED(2133739702,32,FLEN)
NAN_BOXED(2133785868,32,FLEN)
NAN_BOXED(1065285677,32,FLEN)
NAN_BOXED(2133739702,32,FLEN)
NAN_BOXED(2133785868,32,FLEN)
NAN_BOXED(1065285677,32,FLEN)
NAN_BOXED(2133739702,32,FLEN)
NAN_BOXED(2133558071,32,FLEN)
NAN_BOXED(1057064834,32,FLEN)
NAN_BOXED(2125303761,32,FLEN)
NAN_BOXED(2133558071,32,FLEN)
NAN_BOXED(1057064834,32,FLEN)
NAN_BOXED(2125303761,32,FLEN)
NAN_BOXED(2133558071,32,FLEN)
NAN_BOXED(1057064834,32,FLEN)
NAN_BOXED(2125303761,32,FLEN)
NAN_BOXED(2133558071,32,FLEN)
NAN_BOXED(1057064834,32,FLEN)
NAN_BOXED(2125303761,32,FLEN)
NAN_BOXED(2133558071,32,FLEN)
NAN_BOXED(1057064834,32,FLEN)
NAN_BOXED(2125303761,32,FLEN)
NAN_BOXED(2131047852,32,FLEN)
NAN_BOXED(1066532457,32,FLEN)
NAN_BOXED(2132275090,32,FLEN)
NAN_BOXED(2131047852,32,FLEN)
NAN_BOXED(1066532457,32,FLEN)
NAN_BOXED(2132275090,32,FLEN)
NAN_BOXED(2131047852,32,FLEN)
NAN_BOXED(1066532457,32,FLEN)
NAN_BOXED(2132275090,32,FLEN)
NAN_BOXED(2131047852,32,FLEN)
NAN_BOXED(1066532457,32,FLEN)
NAN_BOXED(2132275090,32,FLEN)
NAN_BOXED(2131047852,32,FLEN)
NAN_BOXED(1066532457,32,FLEN)
NAN_BOXED(2132275090,32,FLEN)
NAN_BOXED(2110950119,32,FLEN)
NAN_BOXED(1088175529,32,FLEN)
NAN_BOXED(2134188565,32,FLEN)
NAN_BOXED(2110950119,32,FLEN)
NAN_BOXED(1088175529,32,FLEN)
NAN_BOXED(2134188565,32,FLEN)
NAN_BOXED(2110950119,32,FLEN)
NAN_BOXED(1088175529,32,FLEN)
NAN_BOXED(2134188565,32,FLEN)
NAN_BOXED(2110950119,32,FLEN)
NAN_BOXED(1088175529,32,FLEN)
NAN_BOXED(2134188565,32,FLEN)
NAN_BOXED(2110950119,32,FLEN)
NAN_BOXED(1088175529,32,FLEN)
NAN_BOXED(2134188565,32,FLEN)
NAN_BOXED(2133752850,32,FLEN)
NAN_BOXED(1056466131,32,FLEN)
NAN_BOXED(2125024491,32,FLEN)
NAN_BOXED(2133752850,32,FLEN)
NAN_BOXED(1056466131,32,FLEN)
NAN_BOXED(2125024491,32,FLEN)
NAN_BOXED(2133752850,32,FLEN)
NAN_BOXED(1056466131,32,FLEN)
NAN_BOXED(2125024491,32,FLEN)
NAN_BOXED(2133752850,32,FLEN)
NAN_BOXED(1056466131,32,FLEN)
NAN_BOXED(2125024491,32,FLEN)
NAN_BOXED(2133752850,32,FLEN)
NAN_BOXED(1056466131,32,FLEN)
NAN_BOXED(2125024491,32,FLEN)
NAN_BOXED(2132113595,32,FLEN)
NAN_BOXED(1058210880,32,FLEN)
NAN_BOXED(2125180318,32,FLEN)
NAN_BOXED(2132113595,32,FLEN)
NAN_BOXED(1058210880,32,FLEN)
NAN_BOXED(2125180318,32,FLEN)
NAN_BOXED(2132113595,32,FLEN)
NAN_BOXED(1058210880,32,FLEN)
NAN_BOXED(2125180318,32,FLEN)
NAN_BOXED(2132113595,32,FLEN)
NAN_BOXED(1058210880,32,FLEN)
NAN_BOXED(2125180318,32,FLEN)
NAN_BOXED(2132113595,32,FLEN)
NAN_BOXED(1058210880,32,FLEN)
NAN_BOXED(2125180318,32,FLEN)
NAN_BOXED(2119452630,32,FLEN)
NAN_BOXED(1076164635,32,FLEN)
NAN_BOXED(2131282881,32,FLEN)
NAN_BOXED(2119452630,32,FLEN)
NAN_BOXED(1076164635,32,FLEN)
NAN_BOXED(2131282881,32,FLEN)
NAN_BOXED(2119452630,32,FLEN)
NAN_BOXED(1076164635,32,FLEN)
NAN_BOXED(2131282881,32,FLEN)
NAN_BOXED(2119452630,32,FLEN)
NAN_BOXED(1076164635,32,FLEN)
NAN_BOXED(2131282881,32,FLEN)
NAN_BOXED(2119452630,32,FLEN)
NAN_BOXED(1076164635,32,FLEN)
NAN_BOXED(2131282881,32,FLEN)
NAN_BOXED(2101581885,32,FLEN)
NAN_BOXED(1095308808,32,FLEN)
NAN_BOXED(2132386654,32,FLEN)
NAN_BOXED(2101581885,32,FLEN)
NAN_BOXED(1095308808,32,FLEN)
NAN_BOXED(2132386654,32,FLEN)
NAN_BOXED(2101581885,32,FLEN)
NAN_BOXED(1095308808,32,FLEN)
NAN_BOXED(2132386654,32,FLEN)
NAN_BOXED(2101581885,32,FLEN)
NAN_BOXED(1095308808,32,FLEN)
NAN_BOXED(2132386654,32,FLEN)
NAN_BOXED(2101581885,32,FLEN)
NAN_BOXED(1095308808,32,FLEN)
NAN_BOXED(2132386654,32,FLEN)
NAN_BOXED(2134624879,32,FLEN)
NAN_BOXED(1050001485,32,FLEN)
NAN_BOXED(2119939015,32,FLEN)
NAN_BOXED(2134624879,32,FLEN)
NAN_BOXED(1050001485,32,FLEN)
NAN_BOXED(2119939015,32,FLEN)
NAN_BOXED(2134624879,32,FLEN)
NAN_BOXED(1050001485,32,FLEN)
NAN_BOXED(2119939015,32,FLEN)
NAN_BOXED(2134624879,32,FLEN)
NAN_BOXED(1050001485,32,FLEN)
NAN_BOXED(2119939015,32,FLEN)
NAN_BOXED(2134624879,32,FLEN)
NAN_BOXED(1050001485,32,FLEN)
NAN_BOXED(2119939015,32,FLEN)
NAN_BOXED(2134141625,32,FLEN)
NAN_BOXED(1035362839,32,FLEN)
NAN_BOXED(2105575681,32,FLEN)
NAN_BOXED(2134141625,32,FLEN)
NAN_BOXED(1035362839,32,FLEN)
NAN_BOXED(2105575681,32,FLEN)
NAN_BOXED(2134141625,32,FLEN)
NAN_BOXED(1035362839,32,FLEN)
NAN_BOXED(2105575681,32,FLEN)
NAN_BOXED(2134141625,32,FLEN)
NAN_BOXED(1035362839,32,FLEN)
NAN_BOXED(2105575681,32,FLEN)
NAN_BOXED(2134141625,32,FLEN)
NAN_BOXED(1035362839,32,FLEN)
NAN_BOXED(2105575681,32,FLEN)
NAN_BOXED(2133114953,32,FLEN)
NAN_BOXED(1051129039,32,FLEN)
NAN_BOXED(2119623801,32,FLEN)
NAN_BOXED(2133114953,32,FLEN)
NAN_BOXED(1051129039,32,FLEN)
NAN_BOXED(2119623801,32,FLEN)
NAN_BOXED(2133114953,32,FLEN)
NAN_BOXED(1051129039,32,FLEN)
NAN_BOXED(2119623801,32,FLEN)
NAN_BOXED(2133114953,32,FLEN)
NAN_BOXED(1051129039,32,FLEN)
NAN_BOXED(2119623801,32,FLEN)
NAN_BOXED(2133114953,32,FLEN)
NAN_BOXED(1051129039,32,FLEN)
NAN_BOXED(2119623801,32,FLEN)
NAN_BOXED(2134475691,32,FLEN)
NAN_BOXED(1055144415,32,FLEN)
NAN_BOXED(2124768053,32,FLEN)
NAN_BOXED(2134475691,32,FLEN)
NAN_BOXED(1055144415,32,FLEN)
NAN_BOXED(2124768053,32,FLEN)
NAN_BOXED(2134475691,32,FLEN)
NAN_BOXED(1055144415,32,FLEN)
NAN_BOXED(2124768053,32,FLEN)
NAN_BOXED(2134475691,32,FLEN)
NAN_BOXED(1055144415,32,FLEN)
NAN_BOXED(2124768053,32,FLEN)
NAN_BOXED(2134475691,32,FLEN)
NAN_BOXED(1055144415,32,FLEN)
NAN_BOXED(2124768053,32,FLEN)
NAN_BOXED(2133921319,32,FLEN)
NAN_BOXED(1024311263,32,FLEN)
NAN_BOXED(2093224703,32,FLEN)
NAN_BOXED(2133921319,32,FLEN)
NAN_BOXED(1024311263,32,FLEN)
NAN_BOXED(2093224703,32,FLEN)
NAN_BOXED(2133921319,32,FLEN)
NAN_BOXED(1024311263,32,FLEN)
NAN_BOXED(2093224703,32,FLEN)
NAN_BOXED(2133921319,32,FLEN)
NAN_BOXED(1024311263,32,FLEN)
NAN_BOXED(2093224703,32,FLEN)
NAN_BOXED(2133921319,32,FLEN)
NAN_BOXED(1024311263,32,FLEN)
NAN_BOXED(2093224703,32,FLEN)
NAN_BOXED(2105773149,32,FLEN)
NAN_BOXED(1092125684,32,FLEN)
NAN_BOXED(2132590155,32,FLEN)
NAN_BOXED(2105773149,32,FLEN)
NAN_BOXED(1092125684,32,FLEN)
NAN_BOXED(2132590155,32,FLEN)
NAN_BOXED(2105773149,32,FLEN)
NAN_BOXED(1092125684,32,FLEN)
NAN_BOXED(2132590155,32,FLEN)
NAN_BOXED(2105773149,32,FLEN)
NAN_BOXED(1092125684,32,FLEN)
NAN_BOXED(2132590155,32,FLEN)
NAN_BOXED(2105773149,32,FLEN)
NAN_BOXED(1092125684,32,FLEN)
NAN_BOXED(2132590155,32,FLEN)
NAN_BOXED(2129999422,32,FLEN)
NAN_BOXED(1062645218,32,FLEN)
NAN_BOXED(2127405542,32,FLEN)
NAN_BOXED(2129999422,32,FLEN)
NAN_BOXED(1062645218,32,FLEN)
NAN_BOXED(2127405542,32,FLEN)
NAN_BOXED(2129999422,32,FLEN)
NAN_BOXED(1062645218,32,FLEN)
NAN_BOXED(2127405542,32,FLEN)
NAN_BOXED(2129999422,32,FLEN)
NAN_BOXED(1062645218,32,FLEN)
NAN_BOXED(2127405542,32,FLEN)
NAN_BOXED(2129999422,32,FLEN)
NAN_BOXED(1062645218,32,FLEN)
NAN_BOXED(2127405542,32,FLEN)
NAN_BOXED(2093546675,32,FLEN)
NAN_BOXED(1084851318,32,FLEN)
NAN_BOXED(2114262737,32,FLEN)
NAN_BOXED(2093546675,32,FLEN)
NAN_BOXED(1084851318,32,FLEN)
NAN_BOXED(2114262737,32,FLEN)
NAN_BOXED(2093546675,32,FLEN)
NAN_BOXED(1084851318,32,FLEN)
NAN_BOXED(2114262737,32,FLEN)
NAN_BOXED(2093546675,32,FLEN)
NAN_BOXED(1084851318,32,FLEN)
NAN_BOXED(2114262737,32,FLEN)
NAN_BOXED(2093546675,32,FLEN)
NAN_BOXED(1084851318,32,FLEN)
NAN_BOXED(2114262737,32,FLEN)
NAN_BOXED(2123252868,32,FLEN)
NAN_BOXED(1041229791,32,FLEN)
NAN_BOXED(2099245636,32,FLEN)
NAN_BOXED(2123252868,32,FLEN)
NAN_BOXED(1041229791,32,FLEN)
NAN_BOXED(2099245636,32,FLEN)
NAN_BOXED(2123252868,32,FLEN)
NAN_BOXED(1041229791,32,FLEN)
NAN_BOXED(2099245636,32,FLEN)
NAN_BOXED(2123252868,32,FLEN)
NAN_BOXED(1041229791,32,FLEN)
NAN_BOXED(2099245636,32,FLEN)
NAN_BOXED(2123252868,32,FLEN)
NAN_BOXED(1041229791,32,FLEN)
NAN_BOXED(2099245636,32,FLEN)
NAN_BOXED(2134813160,32,FLEN)
NAN_BOXED(1061503864,32,FLEN)
NAN_BOXED(2131946239,32,FLEN)
NAN_BOXED(2134813160,32,FLEN)
NAN_BOXED(1061503864,32,FLEN)
NAN_BOXED(2131946239,32,FLEN)
NAN_BOXED(2134813160,32,FLEN)
NAN_BOXED(1061503864,32,FLEN)
NAN_BOXED(2131946239,32,FLEN)
NAN_BOXED(2134813160,32,FLEN)
NAN_BOXED(1061503864,32,FLEN)
NAN_BOXED(2131946239,32,FLEN)
NAN_BOXED(2134813160,32,FLEN)
NAN_BOXED(1061503864,32,FLEN)
NAN_BOXED(2131946239,32,FLEN)
NAN_BOXED(2134269034,32,FLEN)
NAN_BOXED(1060952921,32,FLEN)
NAN_BOXED(2131134495,32,FLEN)
NAN_BOXED(2134269034,32,FLEN)
NAN_BOXED(1060952921,32,FLEN)
NAN_BOXED(2131134495,32,FLEN)
NAN_BOXED(2134269034,32,FLEN)
NAN_BOXED(1060952921,32,FLEN)
NAN_BOXED(2131134495,32,FLEN)
NAN_BOXED(2134269034,32,FLEN)
NAN_BOXED(1060952921,32,FLEN)
NAN_BOXED(2131134495,32,FLEN)
NAN_BOXED(2134269034,32,FLEN)
NAN_BOXED(1060952921,32,FLEN)
NAN_BOXED(2131134495,32,FLEN)
NAN_BOXED(2122573125,32,FLEN)
NAN_BOXED(1046959282,32,FLEN)
NAN_BOXED(2104385290,32,FLEN)
NAN_BOXED(2122573125,32,FLEN)
NAN_BOXED(1046959282,32,FLEN)
NAN_BOXED(2104385290,32,FLEN)
NAN_BOXED(2122573125,32,FLEN)
NAN_BOXED(1046959282,32,FLEN)
NAN_BOXED(2104385290,32,FLEN)
NAN_BOXED(2122573125,32,FLEN)
NAN_BOXED(1046959282,32,FLEN)
NAN_BOXED(2104385290,32,FLEN)
NAN_BOXED(2122573125,32,FLEN)
NAN_BOXED(1046959282,32,FLEN)
NAN_BOXED(2104385290,32,FLEN)
NAN_BOXED(2131522473,32,FLEN)
NAN_BOXED(1042260236,32,FLEN)
NAN_BOXED(2108631139,32,FLEN)
NAN_BOXED(2131522473,32,FLEN)
NAN_BOXED(1042260236,32,FLEN)
NAN_BOXED(2108631139,32,FLEN)
NAN_BOXED(2131522473,32,FLEN)
NAN_BOXED(1042260236,32,FLEN)
NAN_BOXED(2108631139,32,FLEN)
NAN_BOXED(2131522473,32,FLEN)
NAN_BOXED(1042260236,32,FLEN)
NAN_BOXED(2108631139,32,FLEN)
NAN_BOXED(2131522473,32,FLEN)
NAN_BOXED(1042260236,32,FLEN)
NAN_BOXED(2108631139,32,FLEN)
NAN_BOXED(2127698080,32,FLEN)
NAN_BOXED(1062805795,32,FLEN)
NAN_BOXED(2125607442,32,FLEN)
NAN_BOXED(2127698080,32,FLEN)
NAN_BOXED(1062805795,32,FLEN)
NAN_BOXED(2125607442,32,FLEN)
NAN_BOXED(2127698080,32,FLEN)
NAN_BOXED(1062805795,32,FLEN)
NAN_BOXED(2125607442,32,FLEN)
NAN_BOXED(2127698080,32,FLEN)
NAN_BOXED(1062805795,32,FLEN)
NAN_BOXED(2125607442,32,FLEN)
NAN_BOXED(2127698080,32,FLEN)
NAN_BOXED(1062805795,32,FLEN)
NAN_BOXED(2125607442,32,FLEN)
NAN_BOXED(2126374489,32,FLEN)
NAN_BOXED(1042001075,32,FLEN)
NAN_BOXED(2103899431,32,FLEN)
NAN_BOXED(2126374489,32,FLEN)
NAN_BOXED(1042001075,32,FLEN)
NAN_BOXED(2103899431,32,FLEN)
NAN_BOXED(2126374489,32,FLEN)
NAN_BOXED(1042001075,32,FLEN)
NAN_BOXED(2103899431,32,FLEN)
NAN_BOXED(2126374489,32,FLEN)
NAN_BOXED(1042001075,32,FLEN)
NAN_BOXED(2103899431,32,FLEN)
NAN_BOXED(2126374489,32,FLEN)
NAN_BOXED(1042001075,32,FLEN)
NAN_BOXED(2103899431,32,FLEN)
NAN_BOXED(2103655733,32,FLEN)
NAN_BOXED(1088491896,32,FLEN)
NAN_BOXED(2127022158,32,FLEN)
NAN_BOXED(2103655733,32,FLEN)
NAN_BOXED(1088491896,32,FLEN)
NAN_BOXED(2127022158,32,FLEN)
NAN_BOXED(2103655733,32,FLEN)
NAN_BOXED(1088491896,32,FLEN)
NAN_BOXED(2127022158,32,FLEN)
NAN_BOXED(2103655733,32,FLEN)
NAN_BOXED(1088491896,32,FLEN)
NAN_BOXED(2127022158,32,FLEN)
NAN_BOXED(2103655733,32,FLEN)
NAN_BOXED(1088491896,32,FLEN)
NAN_BOXED(2127022158,32,FLEN)
NAN_BOXED(2092645927,32,FLEN)
NAN_BOXED(1099558138,32,FLEN)
NAN_BOXED(2127151919,32,FLEN)
NAN_BOXED(2092645927,32,FLEN)
NAN_BOXED(1099558138,32,FLEN)
NAN_BOXED(2127151919,32,FLEN)
NAN_BOXED(2092645927,32,FLEN)
NAN_BOXED(1099558138,32,FLEN)
NAN_BOXED(2127151919,32,FLEN)
NAN_BOXED(2092645927,32,FLEN)
NAN_BOXED(1099558138,32,FLEN)
NAN_BOXED(2127151919,32,FLEN)
NAN_BOXED(2092645927,32,FLEN)
NAN_BOXED(1099558138,32,FLEN)
NAN_BOXED(2127151919,32,FLEN)
NAN_BOXED(2112281733,32,FLEN)
NAN_BOXED(1072687264,32,FLEN)
NAN_BOXED(2119719337,32,FLEN)
NAN_BOXED(2112281733,32,FLEN)
NAN_BOXED(1072687264,32,FLEN)
NAN_BOXED(2119719337,32,FLEN)
NAN_BOXED(2112281733,32,FLEN)
NAN_BOXED(1072687264,32,FLEN)
NAN_BOXED(2119719337,32,FLEN)
NAN_BOXED(2112281733,32,FLEN)
NAN_BOXED(1072687264,32,FLEN)
NAN_BOXED(2119719337,32,FLEN)
NAN_BOXED(2112281733,32,FLEN)
NAN_BOXED(1072687264,32,FLEN)
NAN_BOXED(2119719337,32,FLEN)
NAN_BOXED(2112352328,32,FLEN)
NAN_BOXED(1081142420,32,FLEN)
NAN_BOXED(2128234396,32,FLEN)
NAN_BOXED(2112352328,32,FLEN)
NAN_BOXED(1081142420,32,FLEN)
NAN_BOXED(2128234396,32,FLEN)
NAN_BOXED(2112352328,32,FLEN)
NAN_BOXED(1081142420,32,FLEN)
NAN_BOXED(2128234396,32,FLEN)
NAN_BOXED(2112352328,32,FLEN)
NAN_BOXED(1081142420,32,FLEN)
NAN_BOXED(2128234396,32,FLEN)
NAN_BOXED(2112352328,32,FLEN)
NAN_BOXED(1081142420,32,FLEN)
NAN_BOXED(2128234396,32,FLEN)
NAN_BOXED(2123701337,32,FLEN)
NAN_BOXED(1058214449,32,FLEN)
NAN_BOXED(2116768704,32,FLEN)
NAN_BOXED(2123701337,32,FLEN)
NAN_BOXED(1058214449,32,FLEN)
NAN_BOXED(2116768704,32,FLEN)
NAN_BOXED(2123701337,32,FLEN)
NAN_BOXED(1058214449,32,FLEN)
NAN_BOXED(2116768704,32,FLEN)
NAN_BOXED(2123701337,32,FLEN)
NAN_BOXED(1058214449,32,FLEN)
NAN_BOXED(2116768704,32,FLEN)
NAN_BOXED(2123701337,32,FLEN)
NAN_BOXED(1058214449,32,FLEN)
NAN_BOXED(2116768704,32,FLEN)
NAN_BOXED(2116693888,32,FLEN)
NAN_BOXED(1076029534,32,FLEN)
NAN_BOXED(2128124179,32,FLEN)
NAN_BOXED(2116693888,32,FLEN)
NAN_BOXED(1076029534,32,FLEN)
NAN_BOXED(2128124179,32,FLEN)
NAN_BOXED(2116693888,32,FLEN)
NAN_BOXED(1076029534,32,FLEN)
NAN_BOXED(2128124179,32,FLEN)
NAN_BOXED(2116693888,32,FLEN)
NAN_BOXED(1076029534,32,FLEN)
NAN_BOXED(2128124179,32,FLEN)
NAN_BOXED(2116693888,32,FLEN)
NAN_BOXED(1076029534,32,FLEN)
NAN_BOXED(2128124179,32,FLEN)
NAN_BOXED(2133775576,32,FLEN)
NAN_BOXED(1055632163,32,FLEN)
NAN_BOXED(2124476994,32,FLEN)
NAN_BOXED(2133775576,32,FLEN)
NAN_BOXED(1055632163,32,FLEN)
NAN_BOXED(2124476994,32,FLEN)
NAN_BOXED(2133775576,32,FLEN)
NAN_BOXED(1055632163,32,FLEN)
NAN_BOXED(2124476994,32,FLEN)
NAN_BOXED(2133775576,32,FLEN)
NAN_BOXED(1055632163,32,FLEN)
NAN_BOXED(2124476994,32,FLEN)
NAN_BOXED(2133775576,32,FLEN)
NAN_BOXED(1055632163,32,FLEN)
NAN_BOXED(2124476994,32,FLEN)
NAN_BOXED(2113578628,32,FLEN)
NAN_BOXED(1073234498,32,FLEN)
NAN_BOXED(2121470512,32,FLEN)
NAN_BOXED(2113578628,32,FLEN)
NAN_BOXED(1073234498,32,FLEN)
NAN_BOXED(2121470512,32,FLEN)
NAN_BOXED(2113578628,32,FLEN)
NAN_BOXED(1073234498,32,FLEN)
NAN_BOXED(2121470512,32,FLEN)
NAN_BOXED(2113578628,32,FLEN)
NAN_BOXED(1073234498,32,FLEN)
NAN_BOXED(2121470512,32,FLEN)
NAN_BOXED(2113578628,32,FLEN)
NAN_BOXED(1073234498,32,FLEN)
NAN_BOXED(2121470512,32,FLEN)
NAN_BOXED(2117636992,32,FLEN)
NAN_BOXED(1075342105,32,FLEN)
NAN_BOXED(2128333208,32,FLEN)
NAN_BOXED(2117636992,32,FLEN)
NAN_BOXED(1075342105,32,FLEN)
NAN_BOXED(2128333208,32,FLEN)
NAN_BOXED(2117636992,32,FLEN)
NAN_BOXED(1075342105,32,FLEN)
NAN_BOXED(2128333208,32,FLEN)
NAN_BOXED(2117636992,32,FLEN)
NAN_BOXED(1075342105,32,FLEN)
NAN_BOXED(2128333208,32,FLEN)
NAN_BOXED(2117636992,32,FLEN)
NAN_BOXED(1075342105,32,FLEN)
NAN_BOXED(2128333208,32,FLEN)
NAN_BOXED(2132213254,32,FLEN)
NAN_BOXED(1060713074,32,FLEN)
NAN_BOXED(2128246439,32,FLEN)
NAN_BOXED(2132213254,32,FLEN)
NAN_BOXED(1060713074,32,FLEN)
NAN_BOXED(2128246439,32,FLEN)
NAN_BOXED(2132213254,32,FLEN)
NAN_BOXED(1060713074,32,FLEN)
NAN_BOXED(2128246439,32,FLEN)
NAN_BOXED(2132213254,32,FLEN)
NAN_BOXED(1060713074,32,FLEN)
NAN_BOXED(2128246439,32,FLEN)
NAN_BOXED(2132213254,32,FLEN)
NAN_BOXED(1060713074,32,FLEN)
NAN_BOXED(2128246439,32,FLEN)
NAN_BOXED(2115010317,32,FLEN)
NAN_BOXED(1071466652,32,FLEN)
NAN_BOXED(2121911637,32,FLEN)
NAN_BOXED(2115010317,32,FLEN)
NAN_BOXED(1071466652,32,FLEN)
NAN_BOXED(2121911637,32,FLEN)
NAN_BOXED(2115010317,32,FLEN)
NAN_BOXED(1071466652,32,FLEN)
NAN_BOXED(2121911637,32,FLEN)
NAN_BOXED(2115010317,32,FLEN)
NAN_BOXED(1071466652,32,FLEN)
NAN_BOXED(2121911637,32,FLEN)
NAN_BOXED(2115010317,32,FLEN)
NAN_BOXED(1071466652,32,FLEN)
NAN_BOXED(2121911637,32,FLEN)
NAN_BOXED(2123519433,32,FLEN)
NAN_BOXED(1066670947,32,FLEN)
NAN_BOXED(2125025921,32,FLEN)
NAN_BOXED(2123519433,32,FLEN)
NAN_BOXED(1066670947,32,FLEN)
NAN_BOXED(2125025921,32,FLEN)
NAN_BOXED(2123519433,32,FLEN)
NAN_BOXED(1066670947,32,FLEN)
NAN_BOXED(2125025921,32,FLEN)
NAN_BOXED(2123519433,32,FLEN)
NAN_BOXED(1066670947,32,FLEN)
NAN_BOXED(2125025921,32,FLEN)
NAN_BOXED(2123519433,32,FLEN)
NAN_BOXED(1066670947,32,FLEN)
NAN_BOXED(2125025921,32,FLEN)
NAN_BOXED(2123932912,32,FLEN)
NAN_BOXED(1075878464,32,FLEN)
NAN_BOXED(2134869536,32,FLEN)
NAN_BOXED(2123932912,32,FLEN)
NAN_BOXED(1075878464,32,FLEN)
NAN_BOXED(2134869536,32,FLEN)
NAN_BOXED(2123932912,32,FLEN)
NAN_BOXED(1075878464,32,FLEN)
NAN_BOXED(2134869536,32,FLEN)
NAN_BOXED(2123932912,32,FLEN)
NAN_BOXED(1075878464,32,FLEN)
NAN_BOXED(2134869536,32,FLEN)
NAN_BOXED(2123932912,32,FLEN)
NAN_BOXED(1075878464,32,FLEN)
NAN_BOXED(2134869536,32,FLEN)
NAN_BOXED(2127797065,32,FLEN)
NAN_BOXED(1067043184,32,FLEN)
NAN_BOXED(2130590881,32,FLEN)
NAN_BOXED(2127797065,32,FLEN)
NAN_BOXED(1067043184,32,FLEN)
NAN_BOXED(2130590881,32,FLEN)
NAN_BOXED(2127797065,32,FLEN)
NAN_BOXED(1067043184,32,FLEN)
NAN_BOXED(2130590881,32,FLEN)
NAN_BOXED(2127797065,32,FLEN)
NAN_BOXED(1067043184,32,FLEN)
NAN_BOXED(2130590881,32,FLEN)
NAN_BOXED(2127797065,32,FLEN)
NAN_BOXED(1067043184,32,FLEN)
NAN_BOXED(2130590881,32,FLEN)
NAN_BOXED(2131331874,32,FLEN)
NAN_BOXED(1063685054,32,FLEN)
NAN_BOXED(2130164780,32,FLEN)
NAN_BOXED(2131331874,32,FLEN)
NAN_BOXED(1063685054,32,FLEN)
NAN_BOXED(2130164780,32,FLEN)
NAN_BOXED(2131331874,32,FLEN)
NAN_BOXED(1063685054,32,FLEN)
NAN_BOXED(2130164780,32,FLEN)
NAN_BOXED(2131331874,32,FLEN)
NAN_BOXED(1063685054,32,FLEN)
NAN_BOXED(2130164780,32,FLEN)
NAN_BOXED(2131331874,32,FLEN)
NAN_BOXED(1063685054,32,FLEN)
NAN_BOXED(2130164780,32,FLEN)
NAN_BOXED(2132450312,32,FLEN)
NAN_BOXED(1055697662,32,FLEN)
NAN_BOXED(2123296540,32,FLEN)
NAN_BOXED(2132450312,32,FLEN)
NAN_BOXED(1055697662,32,FLEN)
NAN_BOXED(2123296540,32,FLEN)
NAN_BOXED(2132450312,32,FLEN)
NAN_BOXED(1055697662,32,FLEN)
NAN_BOXED(2123296540,32,FLEN)
NAN_BOXED(2132450312,32,FLEN)
NAN_BOXED(1055697662,32,FLEN)
NAN_BOXED(2123296540,32,FLEN)
NAN_BOXED(2132450312,32,FLEN)
NAN_BOXED(1055697662,32,FLEN)
NAN_BOXED(2123296540,32,FLEN)
NAN_BOXED(2130703730,32,FLEN)
NAN_BOXED(1069204501,32,FLEN)
NAN_BOXED(2134555746,32,FLEN)
NAN_BOXED(2130703730,32,FLEN)
NAN_BOXED(1069204501,32,FLEN)
NAN_BOXED(2134555746,32,FLEN)
NAN_BOXED(2130703730,32,FLEN)
NAN_BOXED(1069204501,32,FLEN)
NAN_BOXED(2134555746,32,FLEN)
NAN_BOXED(2130703730,32,FLEN)
NAN_BOXED(1069204501,32,FLEN)
NAN_BOXED(2134555746,32,FLEN)
NAN_BOXED(2130703730,32,FLEN)
NAN_BOXED(1069204501,32,FLEN)
NAN_BOXED(2134555746,32,FLEN)
NAN_BOXED(2113673722,32,FLEN)
NAN_BOXED(1081336953,32,FLEN)
NAN_BOXED(2129669544,32,FLEN)
NAN_BOXED(2113673722,32,FLEN)
NAN_BOXED(1081336953,32,FLEN)
NAN_BOXED(2129669544,32,FLEN)
NAN_BOXED(2113673722,32,FLEN)
NAN_BOXED(1081336953,32,FLEN)
NAN_BOXED(2129669544,32,FLEN)
NAN_BOXED(2113673722,32,FLEN)
NAN_BOXED(1081336953,32,FLEN)
NAN_BOXED(2129669544,32,FLEN)
NAN_BOXED(2113673722,32,FLEN)
NAN_BOXED(1081336953,32,FLEN)
NAN_BOXED(2129669544,32,FLEN)
NAN_BOXED(2123610476,32,FLEN)
NAN_BOXED(1042451672,32,FLEN)
NAN_BOXED(2101057850,32,FLEN)
NAN_BOXED(2123610476,32,FLEN)
NAN_BOXED(1042451672,32,FLEN)
NAN_BOXED(2101057850,32,FLEN)
NAN_BOXED(2123610476,32,FLEN)
NAN_BOXED(1042451672,32,FLEN)
NAN_BOXED(2101057850,32,FLEN)
NAN_BOXED(2123610476,32,FLEN)
NAN_BOXED(1042451672,32,FLEN)
NAN_BOXED(2101057850,32,FLEN)
NAN_BOXED(2123610476,32,FLEN)
NAN_BOXED(1042451672,32,FLEN)
NAN_BOXED(2101057850,32,FLEN)
NAN_BOXED(2096429146,32,FLEN)
NAN_BOXED(1100499028,32,FLEN)
NAN_BOXED(2131867821,32,FLEN)
NAN_BOXED(2096429146,32,FLEN)
NAN_BOXED(1100499028,32,FLEN)
NAN_BOXED(2131867821,32,FLEN)
NAN_BOXED(2096429146,32,FLEN)
NAN_BOXED(1100499028,32,FLEN)
NAN_BOXED(2131867821,32,FLEN)
NAN_BOXED(2096429146,32,FLEN)
NAN_BOXED(1100499028,32,FLEN)
NAN_BOXED(2131867821,32,FLEN)
NAN_BOXED(2096429146,32,FLEN)
NAN_BOXED(1100499028,32,FLEN)
NAN_BOXED(2131867821,32,FLEN)
NAN_BOXED(2108687236,32,FLEN)
NAN_BOXED(1086754647,32,FLEN)
NAN_BOXED(2131264838,32,FLEN)
NAN_BOXED(2108687236,32,FLEN)
NAN_BOXED(1086754647,32,FLEN)
NAN_BOXED(2131264838,32,FLEN)
NAN_BOXED(2108687236,32,FLEN)
NAN_BOXED(1086754647,32,FLEN)
NAN_BOXED(2131264838,32,FLEN)
NAN_BOXED(2108687236,32,FLEN)
NAN_BOXED(1086754647,32,FLEN)
NAN_BOXED(2131264838,32,FLEN)
NAN_BOXED(2108687236,32,FLEN)
NAN_BOXED(1086754647,32,FLEN)
NAN_BOXED(2131264838,32,FLEN)
NAN_BOXED(2107233053,32,FLEN)
NAN_BOXED(1080749601,32,FLEN)
NAN_BOXED(2123180559,32,FLEN)
NAN_BOXED(2107233053,32,FLEN)
NAN_BOXED(1080749601,32,FLEN)
NAN_BOXED(2123180559,32,FLEN)
NAN_BOXED(2107233053,32,FLEN)
NAN_BOXED(1080749601,32,FLEN)
NAN_BOXED(2123180559,32,FLEN)
NAN_BOXED(2107233053,32,FLEN)
NAN_BOXED(1080749601,32,FLEN)
NAN_BOXED(2123180559,32,FLEN)
NAN_BOXED(2107233053,32,FLEN)
NAN_BOXED(1080749601,32,FLEN)
NAN_BOXED(2123180559,32,FLEN)
NAN_BOXED(2093332524,32,FLEN)
NAN_BOXED(1099361565,32,FLEN)
NAN_BOXED(2127588114,32,FLEN)
NAN_BOXED(2093332524,32,FLEN)
NAN_BOXED(1099361565,32,FLEN)
NAN_BOXED(2127588114,32,FLEN)
NAN_BOXED(2093332524,32,FLEN)
NAN_BOXED(1099361565,32,FLEN)
NAN_BOXED(2127588114,32,FLEN)
NAN_BOXED(2093332524,32,FLEN)
NAN_BOXED(1099361565,32,FLEN)
NAN_BOXED(2127588114,32,FLEN)
NAN_BOXED(2093332524,32,FLEN)
NAN_BOXED(1099361565,32,FLEN)
NAN_BOXED(2127588114,32,FLEN)
NAN_BOXED(2132213123,32,FLEN)
NAN_BOXED(1049812361,32,FLEN)
NAN_BOXED(2116894334,32,FLEN)
NAN_BOXED(2132213123,32,FLEN)
NAN_BOXED(1049812361,32,FLEN)
NAN_BOXED(2116894334,32,FLEN)
NAN_BOXED(2132213123,32,FLEN)
NAN_BOXED(1049812361,32,FLEN)
NAN_BOXED(2116894334,32,FLEN)
NAN_BOXED(2132213123,32,FLEN)
NAN_BOXED(1049812361,32,FLEN)
NAN_BOXED(2116894334,32,FLEN)
NAN_BOXED(2132213123,32,FLEN)
NAN_BOXED(1049812361,32,FLEN)
NAN_BOXED(2116894334,32,FLEN)
NAN_BOXED(2128155621,32,FLEN)
NAN_BOXED(1070650342,32,FLEN)
NAN_BOXED(2133922777,32,FLEN)
NAN_BOXED(2128155621,32,FLEN)
NAN_BOXED(1070650342,32,FLEN)
NAN_BOXED(2133922777,32,FLEN)
NAN_BOXED(2128155621,32,FLEN)
NAN_BOXED(1070650342,32,FLEN)
NAN_BOXED(2133922777,32,FLEN)
NAN_BOXED(2128155621,32,FLEN)
NAN_BOXED(1070650342,32,FLEN)
NAN_BOXED(2133922777,32,FLEN)
NAN_BOXED(2128155621,32,FLEN)
NAN_BOXED(1070650342,32,FLEN)
NAN_BOXED(2133922777,32,FLEN)
NAN_BOXED(2120312853,32,FLEN)
NAN_BOXED(1070427876,32,FLEN)
NAN_BOXED(2125783548,32,FLEN)
NAN_BOXED(2120312853,32,FLEN)
NAN_BOXED(1070427876,32,FLEN)
NAN_BOXED(2125783548,32,FLEN)
NAN_BOXED(2120312853,32,FLEN)
NAN_BOXED(1070427876,32,FLEN)
NAN_BOXED(2125783548,32,FLEN)
NAN_BOXED(2120312853,32,FLEN)
NAN_BOXED(1070427876,32,FLEN)
NAN_BOXED(2125783548,32,FLEN)
NAN_BOXED(2120312853,32,FLEN)
NAN_BOXED(1070427876,32,FLEN)
NAN_BOXED(2125783548,32,FLEN)
NAN_BOXED(2131429718,32,FLEN)
NAN_BOXED(1066975854,32,FLEN)
NAN_BOXED(2133192264,32,FLEN)
NAN_BOXED(2131429718,32,FLEN)
NAN_BOXED(1066975854,32,FLEN)
NAN_BOXED(2133192264,32,FLEN)
NAN_BOXED(2131429718,32,FLEN)
NAN_BOXED(1066975854,32,FLEN)
NAN_BOXED(2133192264,32,FLEN)
NAN_BOXED(2131429718,32,FLEN)
NAN_BOXED(1066975854,32,FLEN)
NAN_BOXED(2133192264,32,FLEN)
NAN_BOXED(2131429718,32,FLEN)
NAN_BOXED(1066975854,32,FLEN)
NAN_BOXED(2133192264,32,FLEN)
NAN_BOXED(2114027129,32,FLEN)
NAN_BOXED(1081804819,32,FLEN)
NAN_BOXED(2130572846,32,FLEN)
NAN_BOXED(2114027129,32,FLEN)
NAN_BOXED(1081804819,32,FLEN)
NAN_BOXED(2130572846,32,FLEN)
NAN_BOXED(2114027129,32,FLEN)
NAN_BOXED(1081804819,32,FLEN)
NAN_BOXED(2130572846,32,FLEN)
NAN_BOXED(2114027129,32,FLEN)
NAN_BOXED(1081804819,32,FLEN)
NAN_BOXED(2130572846,32,FLEN)
NAN_BOXED(2114027129,32,FLEN)
NAN_BOXED(1081804819,32,FLEN)
NAN_BOXED(2130572846,32,FLEN)
NAN_BOXED(2109237473,32,FLEN)
NAN_BOXED(1064258369,32,FLEN)
NAN_BOXED(2108448800,32,FLEN)
NAN_BOXED(2109237473,32,FLEN)
NAN_BOXED(1064258369,32,FLEN)
NAN_BOXED(2108448800,32,FLEN)
NAN_BOXED(2109237473,32,FLEN)
NAN_BOXED(1064258369,32,FLEN)
NAN_BOXED(2108448800,32,FLEN)
NAN_BOXED(2109237473,32,FLEN)
NAN_BOXED(1064258369,32,FLEN)
NAN_BOXED(2108448800,32,FLEN)
NAN_BOXED(2109237473,32,FLEN)
NAN_BOXED(1064258369,32,FLEN)
NAN_BOXED(2108448800,32,FLEN)
NAN_BOXED(2134689955,32,FLEN)
NAN_BOXED(1028675497,32,FLEN)
NAN_BOXED(2098832298,32,FLEN)
NAN_BOXED(2134689955,32,FLEN)
NAN_BOXED(1028675497,32,FLEN)
NAN_BOXED(2098832298,32,FLEN)
NAN_BOXED(2134689955,32,FLEN)
NAN_BOXED(1028675497,32,FLEN)
NAN_BOXED(2098832298,32,FLEN)
NAN_BOXED(2134689955,32,FLEN)
NAN_BOXED(1028675497,32,FLEN)
NAN_BOXED(2098832298,32,FLEN)
NAN_BOXED(2134689955,32,FLEN)
NAN_BOXED(1028675497,32,FLEN)
NAN_BOXED(2098832298,32,FLEN)
NAN_BOXED(2133891596,32,FLEN)
NAN_BOXED(1062258105,32,FLEN)
NAN_BOXED(2131756432,32,FLEN)
NAN_BOXED(2133891596,32,FLEN)
NAN_BOXED(1062258105,32,FLEN)
NAN_BOXED(2131756432,32,FLEN)
NAN_BOXED(2133891596,32,FLEN)
NAN_BOXED(1062258105,32,FLEN)
NAN_BOXED(2131756432,32,FLEN)
NAN_BOXED(2133891596,32,FLEN)
NAN_BOXED(1062258105,32,FLEN)
NAN_BOXED(2131756432,32,FLEN)
NAN_BOXED(2133891596,32,FLEN)
NAN_BOXED(1062258105,32,FLEN)
NAN_BOXED(2131756432,32,FLEN)
NAN_BOXED(2130823077,32,FLEN)
NAN_BOXED(1066017209,32,FLEN)
NAN_BOXED(2131496304,32,FLEN)
NAN_BOXED(2130823077,32,FLEN)
NAN_BOXED(1066017209,32,FLEN)
NAN_BOXED(2131496304,32,FLEN)
NAN_BOXED(2130823077,32,FLEN)
NAN_BOXED(1066017209,32,FLEN)
NAN_BOXED(2131496304,32,FLEN)
NAN_BOXED(2130823077,32,FLEN)
NAN_BOXED(1066017209,32,FLEN)
NAN_BOXED(2131496304,32,FLEN)
NAN_BOXED(2130823077,32,FLEN)
NAN_BOXED(1066017209,32,FLEN)
NAN_BOXED(2131496304,32,FLEN)
NAN_BOXED(2130311277,32,FLEN)
NAN_BOXED(1054982372,32,FLEN)
NAN_BOXED(2119987122,32,FLEN)
NAN_BOXED(2130311277,32,FLEN)
NAN_BOXED(1054982372,32,FLEN)
NAN_BOXED(2119987122,32,FLEN)
NAN_BOXED(2130311277,32,FLEN)
NAN_BOXED(1054982372,32,FLEN)
NAN_BOXED(2119987122,32,FLEN)
NAN_BOXED(2130311277,32,FLEN)
NAN_BOXED(1054982372,32,FLEN)
NAN_BOXED(2119987122,32,FLEN)
NAN_BOXED(2130311277,32,FLEN)
NAN_BOXED(1054982372,32,FLEN)
NAN_BOXED(2119987122,32,FLEN)
NAN_BOXED(2125087048,32,FLEN)
NAN_BOXED(1055485477,32,FLEN)
NAN_BOXED(2115714731,32,FLEN)
NAN_BOXED(2125087048,32,FLEN)
NAN_BOXED(1055485477,32,FLEN)
NAN_BOXED(2115714731,32,FLEN)
NAN_BOXED(2125087048,32,FLEN)
NAN_BOXED(1055485477,32,FLEN)
NAN_BOXED(2115714731,32,FLEN)
NAN_BOXED(2125087048,32,FLEN)
NAN_BOXED(1055485477,32,FLEN)
NAN_BOXED(2115714731,32,FLEN)
NAN_BOXED(2125087048,32,FLEN)
NAN_BOXED(1055485477,32,FLEN)
NAN_BOXED(2115714731,32,FLEN)
NAN_BOXED(2133129941,32,FLEN)
NAN_BOXED(1063782258,32,FLEN)
NAN_BOXED(2132117533,32,FLEN)
NAN_BOXED(2133129941,32,FLEN)
NAN_BOXED(1063782258,32,FLEN)
NAN_BOXED(2132117533,32,FLEN)
NAN_BOXED(2133129941,32,FLEN)
NAN_BOXED(1063782258,32,FLEN)
NAN_BOXED(2132117533,32,FLEN)
NAN_BOXED(2133129941,32,FLEN)
NAN_BOXED(1063782258,32,FLEN)
NAN_BOXED(2132117533,32,FLEN)
NAN_BOXED(2133129941,32,FLEN)
NAN_BOXED(1063782258,32,FLEN)
NAN_BOXED(2132117533,32,FLEN)
NAN_BOXED(2132227409,32,FLEN)
NAN_BOXED(1049303399,32,FLEN)
NAN_BOXED(2116309481,32,FLEN)
NAN_BOXED(2132227409,32,FLEN)
NAN_BOXED(1049303399,32,FLEN)
NAN_BOXED(2116309481,32,FLEN)
NAN_BOXED(2132227409,32,FLEN)
NAN_BOXED(1049303399,32,FLEN)
NAN_BOXED(2116309481,32,FLEN)
NAN_BOXED(2132227409,32,FLEN)
NAN_BOXED(1049303399,32,FLEN)
NAN_BOXED(2116309481,32,FLEN)
NAN_BOXED(2132227409,32,FLEN)
NAN_BOXED(1049303399,32,FLEN)
NAN_BOXED(2116309481,32,FLEN)
NAN_BOXED(2128832697,32,FLEN)
NAN_BOXED(1054632367,32,FLEN)
NAN_BOXED(2118372321,32,FLEN)
NAN_BOXED(2128832697,32,FLEN)
NAN_BOXED(1054632367,32,FLEN)
NAN_BOXED(2118372321,32,FLEN)
NAN_BOXED(2128832697,32,FLEN)
NAN_BOXED(1054632367,32,FLEN)
NAN_BOXED(2118372321,32,FLEN)
NAN_BOXED(2128832697,32,FLEN)
NAN_BOXED(1054632367,32,FLEN)
NAN_BOXED(2118372321,32,FLEN)
NAN_BOXED(2128832697,32,FLEN)
NAN_BOXED(1054632367,32,FLEN)
NAN_BOXED(2118372321,32,FLEN)
NAN_BOXED(2132265057,32,FLEN)
NAN_BOXED(1064382063,32,FLEN)
NAN_BOXED(2131689260,32,FLEN)
NAN_BOXED(2132265057,32,FLEN)
NAN_BOXED(1064382063,32,FLEN)
NAN_BOXED(2131689260,32,FLEN)
NAN_BOXED(2132265057,32,FLEN)
NAN_BOXED(1064382063,32,FLEN)
NAN_BOXED(2131689260,32,FLEN)
NAN_BOXED(2132265057,32,FLEN)
NAN_BOXED(1064382063,32,FLEN)
NAN_BOXED(2131689260,32,FLEN)
NAN_BOXED(2132265057,32,FLEN)
NAN_BOXED(1064382063,32,FLEN)
NAN_BOXED(2131689260,32,FLEN)
NAN_BOXED(2134839244,32,FLEN)
NAN_BOXED(1060515879,32,FLEN)
NAN_BOXED(2131228971,32,FLEN)
NAN_BOXED(2134839244,32,FLEN)
NAN_BOXED(1060515879,32,FLEN)
NAN_BOXED(2131228971,32,FLEN)
NAN_BOXED(2134839244,32,FLEN)
NAN_BOXED(1060515879,32,FLEN)
NAN_BOXED(2131228971,32,FLEN)
NAN_BOXED(2134839244,32,FLEN)
NAN_BOXED(1060515879,32,FLEN)
NAN_BOXED(2131228971,32,FLEN)
NAN_BOXED(2134839244,32,FLEN)
NAN_BOXED(1060515879,32,FLEN)
NAN_BOXED(2131228971,32,FLEN)
NAN_BOXED(2130923132,32,FLEN)
NAN_BOXED(1066495522,32,FLEN)
NAN_BOXED(2132094948,32,FLEN)
NAN_BOXED(2130923132,32,FLEN)
NAN_BOXED(1066495522,32,FLEN)
NAN_BOXED(2132094948,32,FLEN)
NAN_BOXED(2130923132,32,FLEN)
NAN_BOXED(1066495522,32,FLEN)
NAN_BOXED(2132094948,32,FLEN)
NAN_BOXED(2130923132,32,FLEN)
NAN_BOXED(1066495522,32,FLEN)
NAN_BOXED(2132094948,32,FLEN)
NAN_BOXED(2130923132,32,FLEN)
NAN_BOXED(1066495522,32,FLEN)
NAN_BOXED(2132094948,32,FLEN)
NAN_BOXED(2106582025,32,FLEN)
NAN_BOXED(1087070011,32,FLEN)
NAN_BOXED(2128912053,32,FLEN)
NAN_BOXED(2106582025,32,FLEN)
NAN_BOXED(1087070011,32,FLEN)
NAN_BOXED(2128912053,32,FLEN)
NAN_BOXED(2106582025,32,FLEN)
NAN_BOXED(1087070011,32,FLEN)
NAN_BOXED(2128912053,32,FLEN)
NAN_BOXED(2106582025,32,FLEN)
NAN_BOXED(1087070011,32,FLEN)
NAN_BOXED(2128912053,32,FLEN)
NAN_BOXED(2106582025,32,FLEN)
NAN_BOXED(1087070011,32,FLEN)
NAN_BOXED(2128912053,32,FLEN)
NAN_BOXED(2093558125,32,FLEN)
NAN_BOXED(1093888549,32,FLEN)
NAN_BOXED(2123168608,32,FLEN)
NAN_BOXED(2093558125,32,FLEN)
NAN_BOXED(1093888549,32,FLEN)
NAN_BOXED(2123168608,32,FLEN)
NAN_BOXED(2093558125,32,FLEN)
NAN_BOXED(1093888549,32,FLEN)
NAN_BOXED(2123168608,32,FLEN)
NAN_BOXED(2093558125,32,FLEN)
NAN_BOXED(1093888549,32,FLEN)
NAN_BOXED(2123168608,32,FLEN)
NAN_BOXED(2093558125,32,FLEN)
NAN_BOXED(1093888549,32,FLEN)
NAN_BOXED(2123168608,32,FLEN)
NAN_BOXED(2108941620,32,FLEN)
NAN_BOXED(1090622152,32,FLEN)
NAN_BOXED(2134252363,32,FLEN)
NAN_BOXED(2108941620,32,FLEN)
NAN_BOXED(1090622152,32,FLEN)
NAN_BOXED(2134252363,32,FLEN)
NAN_BOXED(2108941620,32,FLEN)
NAN_BOXED(1090622152,32,FLEN)
NAN_BOXED(2134252363,32,FLEN)
NAN_BOXED(2108941620,32,FLEN)
NAN_BOXED(1090622152,32,FLEN)
NAN_BOXED(2134252363,32,FLEN)
NAN_BOXED(2108941620,32,FLEN)
NAN_BOXED(1090622152,32,FLEN)
NAN_BOXED(2134252363,32,FLEN)
NAN_BOXED(2091654469,32,FLEN)
NAN_BOXED(1107529151,32,FLEN)
NAN_BOXED(2133910670,32,FLEN)
NAN_BOXED(2091654469,32,FLEN)
NAN_BOXED(1107529151,32,FLEN)
NAN_BOXED(2133910670,32,FLEN)
NAN_BOXED(2091654469,32,FLEN)
NAN_BOXED(1107529151,32,FLEN)
NAN_BOXED(2133910670,32,FLEN)
NAN_BOXED(2091654469,32,FLEN)
NAN_BOXED(1107529151,32,FLEN)
NAN_BOXED(2133910670,32,FLEN)
NAN_BOXED(2091654469,32,FLEN)
NAN_BOXED(1107529151,32,FLEN)
NAN_BOXED(2133910670,32,FLEN)
NAN_BOXED(2134244955,32,FLEN)
NAN_BOXED(1055608325,32,FLEN)
NAN_BOXED(2124892149,32,FLEN)
NAN_BOXED(2134244955,32,FLEN)
NAN_BOXED(1055608325,32,FLEN)
NAN_BOXED(2124892149,32,FLEN)
NAN_BOXED(2134244955,32,FLEN)
NAN_BOXED(1055608325,32,FLEN)
NAN_BOXED(2124892149,32,FLEN)
NAN_BOXED(2134244955,32,FLEN)
NAN_BOXED(1055608325,32,FLEN)
NAN_BOXED(2124892149,32,FLEN)
NAN_BOXED(2134244955,32,FLEN)
NAN_BOXED(1055608325,32,FLEN)
NAN_BOXED(2124892149,32,FLEN)
NAN_BOXED(2132792653,32,FLEN)
NAN_BOXED(1031708904,32,FLEN)
NAN_BOXED(2099182105,32,FLEN)
NAN_BOXED(2132792653,32,FLEN)
NAN_BOXED(1031708904,32,FLEN)
NAN_BOXED(2099182105,32,FLEN)
NAN_BOXED(2132792653,32,FLEN)
NAN_BOXED(1031708904,32,FLEN)
NAN_BOXED(2099182105,32,FLEN)
NAN_BOXED(2132792653,32,FLEN)
NAN_BOXED(1031708904,32,FLEN)
NAN_BOXED(2099182105,32,FLEN)
NAN_BOXED(2132792653,32,FLEN)
NAN_BOXED(1031708904,32,FLEN)
NAN_BOXED(2099182105,32,FLEN)
NAN_BOXED(2111184396,32,FLEN)
NAN_BOXED(1032873092,32,FLEN)
NAN_BOXED(2079427059,32,FLEN)
NAN_BOXED(2111184396,32,FLEN)
NAN_BOXED(1032873092,32,FLEN)
NAN_BOXED(2079427059,32,FLEN)
NAN_BOXED(2111184396,32,FLEN)
NAN_BOXED(1032873092,32,FLEN)
NAN_BOXED(2079427059,32,FLEN)
NAN_BOXED(2111184396,32,FLEN)
NAN_BOXED(1032873092,32,FLEN)
NAN_BOXED(2079427059,32,FLEN)
NAN_BOXED(2111184396,32,FLEN)
NAN_BOXED(1032873092,32,FLEN)
NAN_BOXED(2079427059,32,FLEN)
NAN_BOXED(2102471265,32,FLEN)
NAN_BOXED(1025194513,32,FLEN)
NAN_BOXED(2063444021,32,FLEN)
NAN_BOXED(2102471265,32,FLEN)
NAN_BOXED(1025194513,32,FLEN)
NAN_BOXED(2063444021,32,FLEN)
NAN_BOXED(2102471265,32,FLEN)
NAN_BOXED(1025194513,32,FLEN)
NAN_BOXED(2063444021,32,FLEN)
NAN_BOXED(2102471265,32,FLEN)
NAN_BOXED(1025194513,32,FLEN)
NAN_BOXED(2063444021,32,FLEN)
NAN_BOXED(2102471265,32,FLEN)
NAN_BOXED(1025194513,32,FLEN)
NAN_BOXED(2063444021,32,FLEN)
NAN_BOXED(2132740643,32,FLEN)
NAN_BOXED(1037591573,32,FLEN)
NAN_BOXED(2105962170,32,FLEN)
NAN_BOXED(2132740643,32,FLEN)
NAN_BOXED(1037591573,32,FLEN)
NAN_BOXED(2105962170,32,FLEN)
NAN_BOXED(2132740643,32,FLEN)
NAN_BOXED(1037591573,32,FLEN)
NAN_BOXED(2105962170,32,FLEN)
NAN_BOXED(2132740643,32,FLEN)
NAN_BOXED(1037591573,32,FLEN)
NAN_BOXED(2105962170,32,FLEN)
NAN_BOXED(2132740643,32,FLEN)
NAN_BOXED(1037591573,32,FLEN)
NAN_BOXED(2105962170,32,FLEN)
NAN_BOXED(2128795543,32,FLEN)
NAN_BOXED(1055707134,32,FLEN)
NAN_BOXED(2119292685,32,FLEN)
NAN_BOXED(2128795543,32,FLEN)
NAN_BOXED(1055707134,32,FLEN)
NAN_BOXED(2119292685,32,FLEN)
NAN_BOXED(2128795543,32,FLEN)
NAN_BOXED(1055707134,32,FLEN)
NAN_BOXED(2119292685,32,FLEN)
NAN_BOXED(2128795543,32,FLEN)
NAN_BOXED(1055707134,32,FLEN)
NAN_BOXED(2119292685,32,FLEN)
NAN_BOXED(2128795543,32,FLEN)
NAN_BOXED(1055707134,32,FLEN)
NAN_BOXED(2119292685,32,FLEN)
NAN_BOXED(2110477797,32,FLEN)
NAN_BOXED(1078635605,32,FLEN)
NAN_BOXED(2124479145,32,FLEN)
NAN_BOXED(2110477797,32,FLEN)
NAN_BOXED(1078635605,32,FLEN)
NAN_BOXED(2124479145,32,FLEN)
NAN_BOXED(2110477797,32,FLEN)
NAN_BOXED(1078635605,32,FLEN)
NAN_BOXED(2124479145,32,FLEN)
NAN_BOXED(2110477797,32,FLEN)
NAN_BOXED(1078635605,32,FLEN)
NAN_BOXED(2124479145,32,FLEN)
NAN_BOXED(2110477797,32,FLEN)
NAN_BOXED(1078635605,32,FLEN)
NAN_BOXED(2124479145,32,FLEN)
NAN_BOXED(2114693057,32,FLEN)
NAN_BOXED(1085011453,32,FLEN)
NAN_BOXED(2134613632,32,FLEN)
NAN_BOXED(2114693057,32,FLEN)
NAN_BOXED(1085011453,32,FLEN)
NAN_BOXED(2134613632,32,FLEN)
NAN_BOXED(2114693057,32,FLEN)
NAN_BOXED(1085011453,32,FLEN)
NAN_BOXED(2134613632,32,FLEN)
NAN_BOXED(2114693057,32,FLEN)
NAN_BOXED(1085011453,32,FLEN)
NAN_BOXED(2134613632,32,FLEN)
NAN_BOXED(2114693057,32,FLEN)
NAN_BOXED(1085011453,32,FLEN)
NAN_BOXED(2134613632,32,FLEN)
NAN_BOXED(2123590481,32,FLEN)
NAN_BOXED(1069940023,32,FLEN)
NAN_BOXED(2128873164,32,FLEN)
NAN_BOXED(2123590481,32,FLEN)
NAN_BOXED(1069940023,32,FLEN)
NAN_BOXED(2128873164,32,FLEN)
NAN_BOXED(2123590481,32,FLEN)
NAN_BOXED(1069940023,32,FLEN)
NAN_BOXED(2128873164,32,FLEN)
NAN_BOXED(2123590481,32,FLEN)
NAN_BOXED(1069940023,32,FLEN)
NAN_BOXED(2128873164,32,FLEN)
NAN_BOXED(2123590481,32,FLEN)
NAN_BOXED(1069940023,32,FLEN)
NAN_BOXED(2128873164,32,FLEN)
NAN_BOXED(2128111262,32,FLEN)
NAN_BOXED(1066295847,32,FLEN)
NAN_BOXED(2129704904,32,FLEN)
NAN_BOXED(2128111262,32,FLEN)
NAN_BOXED(1066295847,32,FLEN)
NAN_BOXED(2129704904,32,FLEN)
NAN_BOXED(2128111262,32,FLEN)
NAN_BOXED(1066295847,32,FLEN)
NAN_BOXED(2129704904,32,FLEN)
NAN_BOXED(2128111262,32,FLEN)
NAN_BOXED(1066295847,32,FLEN)
NAN_BOXED(2129704904,32,FLEN)
NAN_BOXED(2128111262,32,FLEN)
NAN_BOXED(1066295847,32,FLEN)
NAN_BOXED(2129704904,32,FLEN)
NAN_BOXED(2126019767,32,FLEN)
NAN_BOXED(1058009949,32,FLEN)
NAN_BOXED(2119137816,32,FLEN)
NAN_BOXED(2126019767,32,FLEN)
NAN_BOXED(1058009949,32,FLEN)
NAN_BOXED(2119137816,32,FLEN)
NAN_BOXED(2126019767,32,FLEN)
NAN_BOXED(1058009949,32,FLEN)
NAN_BOXED(2119137816,32,FLEN)
NAN_BOXED(2126019767,32,FLEN)
NAN_BOXED(1058009949,32,FLEN)
NAN_BOXED(2119137816,32,FLEN)
NAN_BOXED(2126019767,32,FLEN)
NAN_BOXED(1058009949,32,FLEN)
NAN_BOXED(2119137816,32,FLEN)
NAN_BOXED(2110920037,32,FLEN)
NAN_BOXED(1087358326,32,FLEN)
NAN_BOXED(2133492057,32,FLEN)
NAN_BOXED(2110920037,32,FLEN)
NAN_BOXED(1087358326,32,FLEN)
NAN_BOXED(2133492057,32,FLEN)
NAN_BOXED(2110920037,32,FLEN)
NAN_BOXED(1087358326,32,FLEN)
NAN_BOXED(2133492057,32,FLEN)
NAN_BOXED(2110920037,32,FLEN)
NAN_BOXED(1087358326,32,FLEN)
NAN_BOXED(2133492057,32,FLEN)
NAN_BOXED(2110920037,32,FLEN)
NAN_BOXED(1087358326,32,FLEN)
NAN_BOXED(2133492057,32,FLEN)
NAN_BOXED(2115231032,32,FLEN)
NAN_BOXED(1075122057,32,FLEN)
NAN_BOXED(2125214070,32,FLEN)
NAN_BOXED(2115231032,32,FLEN)
NAN_BOXED(1075122057,32,FLEN)
NAN_BOXED(2125214070,32,FLEN)
NAN_BOXED(2115231032,32,FLEN)
NAN_BOXED(1075122057,32,FLEN)
NAN_BOXED(2125214070,32,FLEN)
NAN_BOXED(2115231032,32,FLEN)
NAN_BOXED(1075122057,32,FLEN)
NAN_BOXED(2125214070,32,FLEN)
NAN_BOXED(2115231032,32,FLEN)
NAN_BOXED(1075122057,32,FLEN)
NAN_BOXED(2125214070,32,FLEN)
NAN_BOXED(2132489478,32,FLEN)
NAN_BOXED(1060531731,32,FLEN)
NAN_BOXED(2128426206,32,FLEN)
NAN_BOXED(2132489478,32,FLEN)
NAN_BOXED(1060531731,32,FLEN)
NAN_BOXED(2128426206,32,FLEN)
NAN_BOXED(2132489478,32,FLEN)
NAN_BOXED(1060531731,32,FLEN)
NAN_BOXED(2128426206,32,FLEN)
NAN_BOXED(2132489478,32,FLEN)
NAN_BOXED(1060531731,32,FLEN)
NAN_BOXED(2128426206,32,FLEN)
NAN_BOXED(2132489478,32,FLEN)
NAN_BOXED(1060531731,32,FLEN)
NAN_BOXED(2128426206,32,FLEN)
NAN_BOXED(2134247378,32,FLEN)
NAN_BOXED(1062901540,32,FLEN)
NAN_BOXED(2132504097,32,FLEN)
NAN_BOXED(2134247378,32,FLEN)
NAN_BOXED(1062901540,32,FLEN)
NAN_BOXED(2132504097,32,FLEN)
NAN_BOXED(2134247378,32,FLEN)
NAN_BOXED(1062901540,32,FLEN)
NAN_BOXED(2132504097,32,FLEN)
NAN_BOXED(2134247378,32,FLEN)
NAN_BOXED(1062901540,32,FLEN)
NAN_BOXED(2132504097,32,FLEN)
NAN_BOXED(2134247378,32,FLEN)
NAN_BOXED(1062901540,32,FLEN)
NAN_BOXED(2132504097,32,FLEN)
NAN_BOXED(2126853583,32,FLEN)
NAN_BOXED(1047467869,32,FLEN)
NAN_BOXED(2109222716,32,FLEN)
NAN_BOXED(2126853583,32,FLEN)
NAN_BOXED(1047467869,32,FLEN)
NAN_BOXED(2109222716,32,FLEN)
NAN_BOXED(2126853583,32,FLEN)
NAN_BOXED(1047467869,32,FLEN)
NAN_BOXED(2109222716,32,FLEN)
NAN_BOXED(2126853583,32,FLEN)
NAN_BOXED(1047467869,32,FLEN)
NAN_BOXED(2109222716,32,FLEN)
NAN_BOXED(2126853583,32,FLEN)
NAN_BOXED(1047467869,32,FLEN)
NAN_BOXED(2109222716,32,FLEN)
NAN_BOXED(2128844912,32,FLEN)
NAN_BOXED(1061984701,32,FLEN)
NAN_BOXED(2125850151,32,FLEN)
NAN_BOXED(2128844912,32,FLEN)
NAN_BOXED(1061984701,32,FLEN)
NAN_BOXED(2125850151,32,FLEN)
NAN_BOXED(2128844912,32,FLEN)
NAN_BOXED(1061984701,32,FLEN)
NAN_BOXED(2125850151,32,FLEN)
NAN_BOXED(2128844912,32,FLEN)
NAN_BOXED(1061984701,32,FLEN)
NAN_BOXED(2125850151,32,FLEN)
NAN_BOXED(2128844912,32,FLEN)
NAN_BOXED(1061984701,32,FLEN)
NAN_BOXED(2125850151,32,FLEN)
NAN_BOXED(2133161232,32,FLEN)
NAN_BOXED(1058909867,32,FLEN)
NAN_BOXED(2127287134,32,FLEN)
NAN_BOXED(2133161232,32,FLEN)
NAN_BOXED(1058909867,32,FLEN)
NAN_BOXED(2127287134,32,FLEN)
NAN_BOXED(2133161232,32,FLEN)
NAN_BOXED(1058909867,32,FLEN)
NAN_BOXED(2127287134,32,FLEN)
NAN_BOXED(2133161232,32,FLEN)
NAN_BOXED(1058909867,32,FLEN)
NAN_BOXED(2127287134,32,FLEN)
NAN_BOXED(2133161232,32,FLEN)
NAN_BOXED(1058909867,32,FLEN)
NAN_BOXED(2127287134,32,FLEN)
NAN_BOXED(2131053638,32,FLEN)
NAN_BOXED(1066771206,32,FLEN)
NAN_BOXED(2132530319,32,FLEN)
NAN_BOXED(2131053638,32,FLEN)
NAN_BOXED(1066771206,32,FLEN)
NAN_BOXED(2132530319,32,FLEN)
NAN_BOXED(2131053638,32,FLEN)
NAN_BOXED(1066771206,32,FLEN)
NAN_BOXED(2132530319,32,FLEN)
NAN_BOXED(2131053638,32,FLEN)
NAN_BOXED(1066771206,32,FLEN)
NAN_BOXED(2132530319,32,FLEN)
NAN_BOXED(2131053638,32,FLEN)
NAN_BOXED(1066771206,32,FLEN)
NAN_BOXED(2132530319,32,FLEN)
NAN_BOXED(2125768366,32,FLEN)
NAN_BOXED(1071976606,32,FLEN)
NAN_BOXED(2132911316,32,FLEN)
NAN_BOXED(2125768366,32,FLEN)
NAN_BOXED(1071976606,32,FLEN)
NAN_BOXED(2132911316,32,FLEN)
NAN_BOXED(2125768366,32,FLEN)
NAN_BOXED(1071976606,32,FLEN)
NAN_BOXED(2132911316,32,FLEN)
NAN_BOXED(2125768366,32,FLEN)
NAN_BOXED(1071976606,32,FLEN)
NAN_BOXED(2132911316,32,FLEN)
NAN_BOXED(2125768366,32,FLEN)
NAN_BOXED(1071976606,32,FLEN)
NAN_BOXED(2132911316,32,FLEN)
NAN_BOXED(2133634257,32,FLEN)
NAN_BOXED(1043316289,32,FLEN)
NAN_BOXED(2112689390,32,FLEN)
NAN_BOXED(2133634257,32,FLEN)
NAN_BOXED(1043316289,32,FLEN)
NAN_BOXED(2112689390,32,FLEN)
NAN_BOXED(2133634257,32,FLEN)
NAN_BOXED(1043316289,32,FLEN)
NAN_BOXED(2112689390,32,FLEN)
NAN_BOXED(2133634257,32,FLEN)
NAN_BOXED(1043316289,32,FLEN)
NAN_BOXED(2112689390,32,FLEN)
NAN_BOXED(2133634257,32,FLEN)
NAN_BOXED(1043316289,32,FLEN)
NAN_BOXED(2112689390,32,FLEN)
NAN_BOXED(2133883402,32,FLEN)
NAN_BOXED(1064451416,32,FLEN)
NAN_BOXED(2133261735,32,FLEN)
NAN_BOXED(2133883402,32,FLEN)
NAN_BOXED(1064451416,32,FLEN)
NAN_BOXED(2133261735,32,FLEN)
NAN_BOXED(2133883402,32,FLEN)
NAN_BOXED(1064451416,32,FLEN)
NAN_BOXED(2133261735,32,FLEN)
NAN_BOXED(2133883402,32,FLEN)
NAN_BOXED(1064451416,32,FLEN)
NAN_BOXED(2133261735,32,FLEN)
NAN_BOXED(2133883402,32,FLEN)
NAN_BOXED(1064451416,32,FLEN)
NAN_BOXED(2133261735,32,FLEN)
NAN_BOXED(2133076170,32,FLEN)
NAN_BOXED(1053442966,32,FLEN)
NAN_BOXED(2122429318,32,FLEN)
NAN_BOXED(2133076170,32,FLEN)
NAN_BOXED(1053442966,32,FLEN)
NAN_BOXED(2122429318,32,FLEN)
NAN_BOXED(2133076170,32,FLEN)
NAN_BOXED(1053442966,32,FLEN)
NAN_BOXED(2122429318,32,FLEN)
NAN_BOXED(2133076170,32,FLEN)
NAN_BOXED(1053442966,32,FLEN)
NAN_BOXED(2122429318,32,FLEN)
NAN_BOXED(2133076170,32,FLEN)
NAN_BOXED(1053442966,32,FLEN)
NAN_BOXED(2122429318,32,FLEN)
NAN_BOXED(2118215254,32,FLEN)
NAN_BOXED(1057425605,32,FLEN)
NAN_BOXED(2110523183,32,FLEN)
NAN_BOXED(2118215254,32,FLEN)
NAN_BOXED(1057425605,32,FLEN)
NAN_BOXED(2110523183,32,FLEN)
NAN_BOXED(2118215254,32,FLEN)
NAN_BOXED(1057425605,32,FLEN)
NAN_BOXED(2110523183,32,FLEN)
NAN_BOXED(2118215254,32,FLEN)
NAN_BOXED(1057425605,32,FLEN)
NAN_BOXED(2110523183,32,FLEN)
NAN_BOXED(2118215254,32,FLEN)
NAN_BOXED(1057425605,32,FLEN)
NAN_BOXED(2110523183,32,FLEN)
NAN_BOXED(2123265433,32,FLEN)
NAN_BOXED(1075019972,32,FLEN)
NAN_BOXED(2133076574,32,FLEN)
NAN_BOXED(2123265433,32,FLEN)
NAN_BOXED(1075019972,32,FLEN)
NAN_BOXED(2133076574,32,FLEN)
NAN_BOXED(2123265433,32,FLEN)
NAN_BOXED(1075019972,32,FLEN)
NAN_BOXED(2133076574,32,FLEN)
NAN_BOXED(2123265433,32,FLEN)
NAN_BOXED(1075019972,32,FLEN)
NAN_BOXED(2133076574,32,FLEN)
NAN_BOXED(2123265433,32,FLEN)
NAN_BOXED(1075019972,32,FLEN)
NAN_BOXED(2133076574,32,FLEN)
NAN_BOXED(2123061487,32,FLEN)
NAN_BOXED(1014092524,32,FLEN)
NAN_BOXED(2072224137,32,FLEN)
NAN_BOXED(2123061487,32,FLEN)
NAN_BOXED(1014092524,32,FLEN)
NAN_BOXED(2072224137,32,FLEN)
NAN_BOXED(2123061487,32,FLEN)
NAN_BOXED(1014092524,32,FLEN)
NAN_BOXED(2072224137,32,FLEN)
NAN_BOXED(2123061487,32,FLEN)
NAN_BOXED(1014092524,32,FLEN)
NAN_BOXED(2072224137,32,FLEN)
NAN_BOXED(2123061487,32,FLEN)
NAN_BOXED(1014092524,32,FLEN)
NAN_BOXED(2072224137,32,FLEN)
NAN_BOXED(2120887903,32,FLEN)
NAN_BOXED(1049269224,32,FLEN)
NAN_BOXED(2105378968,32,FLEN)
NAN_BOXED(2120887903,32,FLEN)
NAN_BOXED(1049269224,32,FLEN)
NAN_BOXED(2105378968,32,FLEN)
NAN_BOXED(2120887903,32,FLEN)
NAN_BOXED(1049269224,32,FLEN)
NAN_BOXED(2105378968,32,FLEN)
NAN_BOXED(2120887903,32,FLEN)
NAN_BOXED(1049269224,32,FLEN)
NAN_BOXED(2105378968,32,FLEN)
NAN_BOXED(2120887903,32,FLEN)
NAN_BOXED(1049269224,32,FLEN)
NAN_BOXED(2105378968,32,FLEN)
NAN_BOXED(2129594978,32,FLEN)
NAN_BOXED(1067317084,32,FLEN)
NAN_BOXED(2131984471,32,FLEN)
NAN_BOXED(2129594978,32,FLEN)
NAN_BOXED(1067317084,32,FLEN)
NAN_BOXED(2131984471,32,FLEN)
NAN_BOXED(2129594978,32,FLEN)
NAN_BOXED(1067317084,32,FLEN)
NAN_BOXED(2131984471,32,FLEN)
NAN_BOXED(2129594978,32,FLEN)
NAN_BOXED(1067317084,32,FLEN)
NAN_BOXED(2131984471,32,FLEN)
NAN_BOXED(2129594978,32,FLEN)
NAN_BOXED(1067317084,32,FLEN)
NAN_BOXED(2131984471,32,FLEN)
NAN_BOXED(2133977433,32,FLEN)
NAN_BOXED(1036333159,32,FLEN)
NAN_BOXED(2106133045,32,FLEN)
NAN_BOXED(2133977433,32,FLEN)
NAN_BOXED(1036333159,32,FLEN)
NAN_BOXED(2106133045,32,FLEN)
NAN_BOXED(2133977433,32,FLEN)
NAN_BOXED(1036333159,32,FLEN)
NAN_BOXED(2106133045,32,FLEN)
NAN_BOXED(2133977433,32,FLEN)
NAN_BOXED(1036333159,32,FLEN)
NAN_BOXED(2106133045,32,FLEN)
NAN_BOXED(2133977433,32,FLEN)
NAN_BOXED(1036333159,32,FLEN)
NAN_BOXED(2106133045,32,FLEN)
NAN_BOXED(2123502366,32,FLEN)
NAN_BOXED(1051289220,32,FLEN)
NAN_BOXED(2109821500,32,FLEN)
NAN_BOXED(2123502366,32,FLEN)
NAN_BOXED(1051289220,32,FLEN)
NAN_BOXED(2109821500,32,FLEN)
NAN_BOXED(2123502366,32,FLEN)
NAN_BOXED(1051289220,32,FLEN)
NAN_BOXED(2109821500,32,FLEN)
NAN_BOXED(2123502366,32,FLEN)
NAN_BOXED(1051289220,32,FLEN)
NAN_BOXED(2109821500,32,FLEN)
NAN_BOXED(2123502366,32,FLEN)
NAN_BOXED(1051289220,32,FLEN)
NAN_BOXED(2109821500,32,FLEN)
NAN_BOXED(2133773518,32,FLEN)
NAN_BOXED(1063999633,32,FLEN)
NAN_BOXED(2132849275,32,FLEN)
NAN_BOXED(2133773518,32,FLEN)
NAN_BOXED(1063999633,32,FLEN)
NAN_BOXED(2132849275,32,FLEN)
NAN_BOXED(2133773518,32,FLEN)
NAN_BOXED(1063999633,32,FLEN)
NAN_BOXED(2132849275,32,FLEN)
NAN_BOXED(2133773518,32,FLEN)
NAN_BOXED(1063999633,32,FLEN)
NAN_BOXED(2132849275,32,FLEN)
NAN_BOXED(2133773518,32,FLEN)
NAN_BOXED(1063999633,32,FLEN)
NAN_BOXED(2132849275,32,FLEN)
NAN_BOXED(2127010537,32,FLEN)
NAN_BOXED(1072360918,32,FLEN)
NAN_BOXED(2134322443,32,FLEN)
NAN_BOXED(2127010537,32,FLEN)
NAN_BOXED(1072360918,32,FLEN)
NAN_BOXED(2134322443,32,FLEN)
NAN_BOXED(2127010537,32,FLEN)
NAN_BOXED(1072360918,32,FLEN)
NAN_BOXED(2134322443,32,FLEN)
NAN_BOXED(2127010537,32,FLEN)
NAN_BOXED(1072360918,32,FLEN)
NAN_BOXED(2134322443,32,FLEN)
NAN_BOXED(2127010537,32,FLEN)
NAN_BOXED(1072360918,32,FLEN)
NAN_BOXED(2134322443,32,FLEN)
NAN_BOXED(2127022464,32,FLEN)
NAN_BOXED(1069483092,32,FLEN)
NAN_BOXED(2132087479,32,FLEN)
NAN_BOXED(2127022464,32,FLEN)
NAN_BOXED(1069483092,32,FLEN)
NAN_BOXED(2132087479,32,FLEN)
NAN_BOXED(2127022464,32,FLEN)
NAN_BOXED(1069483092,32,FLEN)
NAN_BOXED(2132087479,32,FLEN)
NAN_BOXED(2127022464,32,FLEN)
NAN_BOXED(1069483092,32,FLEN)
NAN_BOXED(2132087479,32,FLEN)
NAN_BOXED(2127022464,32,FLEN)
NAN_BOXED(1069483092,32,FLEN)
NAN_BOXED(2132087479,32,FLEN)
NAN_BOXED(2126211526,32,FLEN)
NAN_BOXED(1061097752,32,FLEN)
NAN_BOXED(2123096174,32,FLEN)
NAN_BOXED(2126211526,32,FLEN)
NAN_BOXED(1061097752,32,FLEN)
NAN_BOXED(2123096174,32,FLEN)
NAN_BOXED(2126211526,32,FLEN)
NAN_BOXED(1061097752,32,FLEN)
NAN_BOXED(2123096174,32,FLEN)
NAN_BOXED(2126211526,32,FLEN)
NAN_BOXED(1061097752,32,FLEN)
NAN_BOXED(2123096174,32,FLEN)
NAN_BOXED(2126211526,32,FLEN)
NAN_BOXED(1061097752,32,FLEN)
NAN_BOXED(2123096174,32,FLEN)
NAN_BOXED(2134830431,32,FLEN)
NAN_BOXED(1062776757,32,FLEN)
NAN_BOXED(2132908884,32,FLEN)
NAN_BOXED(2134830431,32,FLEN)
NAN_BOXED(1062776757,32,FLEN)
NAN_BOXED(2132908884,32,FLEN)
NAN_BOXED(2134830431,32,FLEN)
NAN_BOXED(1062776757,32,FLEN)
NAN_BOXED(2132908884,32,FLEN)
NAN_BOXED(2134830431,32,FLEN)
NAN_BOXED(1062776757,32,FLEN)
NAN_BOXED(2132908884,32,FLEN)
NAN_BOXED(2134830431,32,FLEN)
NAN_BOXED(1062776757,32,FLEN)
NAN_BOXED(2132908884,32,FLEN)
NAN_BOXED(2128819371,32,FLEN)
NAN_BOXED(1069259769,32,FLEN)
NAN_BOXED(2133230056,32,FLEN)
NAN_BOXED(2128819371,32,FLEN)
NAN_BOXED(1069259769,32,FLEN)
NAN_BOXED(2133230056,32,FLEN)
NAN_BOXED(2128819371,32,FLEN)
NAN_BOXED(1069259769,32,FLEN)
NAN_BOXED(2133230056,32,FLEN)
NAN_BOXED(2128819371,32,FLEN)
NAN_BOXED(1069259769,32,FLEN)
NAN_BOXED(2133230056,32,FLEN)
NAN_BOXED(2128819371,32,FLEN)
NAN_BOXED(1069259769,32,FLEN)
NAN_BOXED(2133230056,32,FLEN)
NAN_BOXED(2130272976,32,FLEN)
NAN_BOXED(1067269203,32,FLEN)
NAN_BOXED(2132356190,32,FLEN)
NAN_BOXED(2130272976,32,FLEN)
NAN_BOXED(1067269203,32,FLEN)
NAN_BOXED(2132356190,32,FLEN)
NAN_BOXED(2130272976,32,FLEN)
NAN_BOXED(1067269203,32,FLEN)
NAN_BOXED(2132356190,32,FLEN)
NAN_BOXED(2130272976,32,FLEN)
NAN_BOXED(1067269203,32,FLEN)
NAN_BOXED(2132356190,32,FLEN)
NAN_BOXED(2130272976,32,FLEN)
NAN_BOXED(1067269203,32,FLEN)
NAN_BOXED(2132356190,32,FLEN)
NAN_BOXED(2102196565,32,FLEN)
NAN_BOXED(1073497106,32,FLEN)
NAN_BOXED(2110389233,32,FLEN)
NAN_BOXED(2102196565,32,FLEN)
NAN_BOXED(1073497106,32,FLEN)
NAN_BOXED(2110389233,32,FLEN)
NAN_BOXED(2102196565,32,FLEN)
NAN_BOXED(1073497106,32,FLEN)
NAN_BOXED(2110389233,32,FLEN)
NAN_BOXED(2102196565,32,FLEN)
NAN_BOXED(1073497106,32,FLEN)
NAN_BOXED(2110389233,32,FLEN)
NAN_BOXED(2102196565,32,FLEN)
NAN_BOXED(1073497106,32,FLEN)
NAN_BOXED(2110389233,32,FLEN)
NAN_BOXED(2108165420,32,FLEN)
NAN_BOXED(1085302364,32,FLEN)
NAN_BOXED(2129107072,32,FLEN)
NAN_BOXED(2108165420,32,FLEN)
NAN_BOXED(1085302364,32,FLEN)
NAN_BOXED(2129107072,32,FLEN)
NAN_BOXED(2108165420,32,FLEN)
NAN_BOXED(1085302364,32,FLEN)
NAN_BOXED(2129107072,32,FLEN)
NAN_BOXED(2108165420,32,FLEN)
NAN_BOXED(1085302364,32,FLEN)
NAN_BOXED(2129107072,32,FLEN)
NAN_BOXED(2108165420,32,FLEN)
NAN_BOXED(1085302364,32,FLEN)
NAN_BOXED(2129107072,32,FLEN)
NAN_BOXED(2131373217,32,FLEN)
NAN_BOXED(1046263796,32,FLEN)
NAN_BOXED(2112766792,32,FLEN)
NAN_BOXED(2131373217,32,FLEN)
NAN_BOXED(1046263796,32,FLEN)
NAN_BOXED(2112766792,32,FLEN)
NAN_BOXED(2131373217,32,FLEN)
NAN_BOXED(1046263796,32,FLEN)
NAN_BOXED(2112766792,32,FLEN)
NAN_BOXED(2131373217,32,FLEN)
NAN_BOXED(1046263796,32,FLEN)
NAN_BOXED(2112766792,32,FLEN)
NAN_BOXED(2131373217,32,FLEN)
NAN_BOXED(1046263796,32,FLEN)
NAN_BOXED(2112766792,32,FLEN)
NAN_BOXED(2126641409,32,FLEN)
NAN_BOXED(1046890361,32,FLEN)
NAN_BOXED(2108586975,32,FLEN)
NAN_BOXED(2126641409,32,FLEN)
NAN_BOXED(1046890361,32,FLEN)
NAN_BOXED(2108586975,32,FLEN)
NAN_BOXED(2126641409,32,FLEN)
NAN_BOXED(1046890361,32,FLEN)
NAN_BOXED(2108586975,32,FLEN)
NAN_BOXED(2126641409,32,FLEN)
NAN_BOXED(1046890361,32,FLEN)
NAN_BOXED(2108586975,32,FLEN)
NAN_BOXED(2126641409,32,FLEN)
NAN_BOXED(1046890361,32,FLEN)
NAN_BOXED(2108586975,32,FLEN)
NAN_BOXED(2130969463,32,FLEN)
NAN_BOXED(1066469026,32,FLEN)
NAN_BOXED(2132120260,32,FLEN)
NAN_BOXED(2130969463,32,FLEN)
NAN_BOXED(1066469026,32,FLEN)
NAN_BOXED(2132120260,32,FLEN)
NAN_BOXED(2130969463,32,FLEN)
NAN_BOXED(1066469026,32,FLEN)
NAN_BOXED(2132120260,32,FLEN)
NAN_BOXED(2130969463,32,FLEN)
NAN_BOXED(1066469026,32,FLEN)
NAN_BOXED(2132120260,32,FLEN)
NAN_BOXED(2130969463,32,FLEN)
NAN_BOXED(1066469026,32,FLEN)
NAN_BOXED(2132120260,32,FLEN)
NAN_BOXED(2105876407,32,FLEN)
NAN_BOXED(1093987175,32,FLEN)
NAN_BOXED(2134649197,32,FLEN)
NAN_BOXED(2105876407,32,FLEN)
NAN_BOXED(1093987175,32,FLEN)
NAN_BOXED(2134649197,32,FLEN)
NAN_BOXED(2105876407,32,FLEN)
NAN_BOXED(1093987175,32,FLEN)
NAN_BOXED(2134649197,32,FLEN)
NAN_BOXED(2105876407,32,FLEN)
NAN_BOXED(1093987175,32,FLEN)
NAN_BOXED(2134649197,32,FLEN)
NAN_BOXED(2105876407,32,FLEN)
NAN_BOXED(1093987175,32,FLEN)
NAN_BOXED(2134649197,32,FLEN)
NAN_BOXED(2130661889,32,FLEN)
NAN_BOXED(1044402936,32,FLEN)
NAN_BOXED(2109722689,32,FLEN)
NAN_BOXED(2130661889,32,FLEN)
NAN_BOXED(1044402936,32,FLEN)
NAN_BOXED(2109722689,32,FLEN)
NAN_BOXED(2130661889,32,FLEN)
NAN_BOXED(1044402936,32,FLEN)
NAN_BOXED(2109722689,32,FLEN)
NAN_BOXED(2130661889,32,FLEN)
NAN_BOXED(1044402936,32,FLEN)
NAN_BOXED(2109722689,32,FLEN)
NAN_BOXED(2130661889,32,FLEN)
NAN_BOXED(1044402936,32,FLEN)
NAN_BOXED(2109722689,32,FLEN)
NAN_BOXED(2122763420,32,FLEN)
NAN_BOXED(1055313773,32,FLEN)
NAN_BOXED(2113081882,32,FLEN)
NAN_BOXED(2122763420,32,FLEN)
NAN_BOXED(1055313773,32,FLEN)
NAN_BOXED(2113081882,32,FLEN)
NAN_BOXED(2122763420,32,FLEN)
NAN_BOXED(1055313773,32,FLEN)
NAN_BOXED(2113081882,32,FLEN)
NAN_BOXED(2122763420,32,FLEN)
NAN_BOXED(1055313773,32,FLEN)
NAN_BOXED(2113081882,32,FLEN)
NAN_BOXED(2122763420,32,FLEN)
NAN_BOXED(1055313773,32,FLEN)
NAN_BOXED(2113081882,32,FLEN)
NAN_BOXED(2131477729,32,FLEN)
NAN_BOXED(1067528580,32,FLEN)
NAN_BOXED(2133853109,32,FLEN)
NAN_BOXED(2131477729,32,FLEN)
NAN_BOXED(1067528580,32,FLEN)
NAN_BOXED(2133853109,32,FLEN)
NAN_BOXED(2131477729,32,FLEN)
NAN_BOXED(1067528580,32,FLEN)
NAN_BOXED(2133853109,32,FLEN)
NAN_BOXED(2131477729,32,FLEN)
NAN_BOXED(1067528580,32,FLEN)
NAN_BOXED(2133853109,32,FLEN)
NAN_BOXED(2131477729,32,FLEN)
NAN_BOXED(1067528580,32,FLEN)
NAN_BOXED(2133853109,32,FLEN)
NAN_BOXED(2114355345,32,FLEN)
NAN_BOXED(1065779480,32,FLEN)
NAN_BOXED(2114803264,32,FLEN)
NAN_BOXED(2114355345,32,FLEN)
NAN_BOXED(1065779480,32,FLEN)
NAN_BOXED(2114803264,32,FLEN)
NAN_BOXED(2114355345,32,FLEN)
NAN_BOXED(1065779480,32,FLEN)
NAN_BOXED(2114803264,32,FLEN)
NAN_BOXED(2114355345,32,FLEN)
NAN_BOXED(1065779480,32,FLEN)
NAN_BOXED(2114803264,32,FLEN)
NAN_BOXED(2114355345,32,FLEN)
NAN_BOXED(1065779480,32,FLEN)
NAN_BOXED(2114803264,32,FLEN)
NAN_BOXED(2129755549,32,FLEN)
NAN_BOXED(1068429443,32,FLEN)
NAN_BOXED(2133132866,32,FLEN)
NAN_BOXED(2129755549,32,FLEN)
NAN_BOXED(1068429443,32,FLEN)
NAN_BOXED(2133132866,32,FLEN)
NAN_BOXED(2129755549,32,FLEN)
NAN_BOXED(1068429443,32,FLEN)
NAN_BOXED(2133132866,32,FLEN)
NAN_BOXED(2129755549,32,FLEN)
NAN_BOXED(1068429443,32,FLEN)
NAN_BOXED(2133132866,32,FLEN)
NAN_BOXED(2129755549,32,FLEN)
NAN_BOXED(1068429443,32,FLEN)
NAN_BOXED(2133132866,32,FLEN)
NAN_BOXED(2131616044,32,FLEN)
NAN_BOXED(1058969118,32,FLEN)
NAN_BOXED(2125449303,32,FLEN)
NAN_BOXED(2131616044,32,FLEN)
NAN_BOXED(1058969118,32,FLEN)
NAN_BOXED(2125449303,32,FLEN)
NAN_BOXED(2131616044,32,FLEN)
NAN_BOXED(1058969118,32,FLEN)
NAN_BOXED(2125449303,32,FLEN)
NAN_BOXED(2131616044,32,FLEN)
NAN_BOXED(1058969118,32,FLEN)
NAN_BOXED(2125449303,32,FLEN)
NAN_BOXED(2131616044,32,FLEN)
NAN_BOXED(1058969118,32,FLEN)
NAN_BOXED(2125449303,32,FLEN)
NAN_BOXED(2108276501,32,FLEN)
NAN_BOXED(1085395850,32,FLEN)
NAN_BOXED(2129384132,32,FLEN)
NAN_BOXED(2108276501,32,FLEN)
NAN_BOXED(1085395850,32,FLEN)
NAN_BOXED(2129384132,32,FLEN)
NAN_BOXED(2108276501,32,FLEN)
NAN_BOXED(1085395850,32,FLEN)
NAN_BOXED(2129384132,32,FLEN)
NAN_BOXED(2108276501,32,FLEN)
NAN_BOXED(1085395850,32,FLEN)
NAN_BOXED(2129384132,32,FLEN)
NAN_BOXED(2108276501,32,FLEN)
NAN_BOXED(1085395850,32,FLEN)
NAN_BOXED(2129384132,32,FLEN)
NAN_BOXED(2125393738,32,FLEN)
NAN_BOXED(1071765237,32,FLEN)
NAN_BOXED(2132431667,32,FLEN)
NAN_BOXED(2125393738,32,FLEN)
NAN_BOXED(1071765237,32,FLEN)
NAN_BOXED(2132431667,32,FLEN)
NAN_BOXED(2125393738,32,FLEN)
NAN_BOXED(1071765237,32,FLEN)
NAN_BOXED(2132431667,32,FLEN)
NAN_BOXED(2125393738,32,FLEN)
NAN_BOXED(1071765237,32,FLEN)
NAN_BOXED(2132431667,32,FLEN)
NAN_BOXED(2125393738,32,FLEN)
NAN_BOXED(1071765237,32,FLEN)
NAN_BOXED(2132431667,32,FLEN)
NAN_BOXED(2128321642,32,FLEN)
NAN_BOXED(1067730592,32,FLEN)
NAN_BOXED(2131553483,32,FLEN)
NAN_BOXED(2128321642,32,FLEN)
NAN_BOXED(1067730592,32,FLEN)
NAN_BOXED(2131553483,32,FLEN)
NAN_BOXED(2128321642,32,FLEN)
NAN_BOXED(1067730592,32,FLEN)
NAN_BOXED(2131553483,32,FLEN)
NAN_BOXED(2128321642,32,FLEN)
NAN_BOXED(1067730592,32,FLEN)
NAN_BOXED(2131553483,32,FLEN)
NAN_BOXED(2128321642,32,FLEN)
NAN_BOXED(1067730592,32,FLEN)
NAN_BOXED(2131553483,32,FLEN)
NAN_BOXED(2134537064,32,FLEN)
NAN_BOXED(1059390904,32,FLEN)
NAN_BOXED(2129682714,32,FLEN)
NAN_BOXED(2134537064,32,FLEN)
NAN_BOXED(1059390904,32,FLEN)
NAN_BOXED(2129682714,32,FLEN)
NAN_BOXED(2134537064,32,FLEN)
NAN_BOXED(1059390904,32,FLEN)
NAN_BOXED(2129682714,32,FLEN)
NAN_BOXED(2134537064,32,FLEN)
NAN_BOXED(1059390904,32,FLEN)
NAN_BOXED(2129682714,32,FLEN)
NAN_BOXED(2134537064,32,FLEN)
NAN_BOXED(1059390904,32,FLEN)
NAN_BOXED(2129682714,32,FLEN)
NAN_BOXED(2133789332,32,FLEN)
NAN_BOXED(1050270579,32,FLEN)
NAN_BOXED(2119329472,32,FLEN)
NAN_BOXED(2133789332,32,FLEN)
NAN_BOXED(1050270579,32,FLEN)
NAN_BOXED(2119329472,32,FLEN)
NAN_BOXED(2133789332,32,FLEN)
NAN_BOXED(1050270579,32,FLEN)
NAN_BOXED(2119329472,32,FLEN)
NAN_BOXED(2133789332,32,FLEN)
NAN_BOXED(1050270579,32,FLEN)
NAN_BOXED(2119329472,32,FLEN)
NAN_BOXED(2133789332,32,FLEN)
NAN_BOXED(1050270579,32,FLEN)
NAN_BOXED(2119329472,32,FLEN)
NAN_BOXED(2056699474,32,FLEN)
NAN_BOXED(1141890086,32,FLEN)
NAN_BOXED(2133421029,32,FLEN)
NAN_BOXED(2056699474,32,FLEN)
NAN_BOXED(1141890086,32,FLEN)
NAN_BOXED(2133421029,32,FLEN)
NAN_BOXED(2056699474,32,FLEN)
NAN_BOXED(1141890086,32,FLEN)
NAN_BOXED(2133421029,32,FLEN)
NAN_BOXED(2056699474,32,FLEN)
NAN_BOXED(1141890086,32,FLEN)
NAN_BOXED(2133421029,32,FLEN)
NAN_BOXED(2056699474,32,FLEN)
NAN_BOXED(1141890086,32,FLEN)
NAN_BOXED(2133421029,32,FLEN)
NAN_BOXED(2092404382,32,FLEN)
NAN_BOXED(1107626254,32,FLEN)
NAN_BOXED(2134820654,32,FLEN)
NAN_BOXED(2092404382,32,FLEN)
NAN_BOXED(1107626254,32,FLEN)
NAN_BOXED(2134820654,32,FLEN)
NAN_BOXED(2092404382,32,FLEN)
NAN_BOXED(1107626254,32,FLEN)
NAN_BOXED(2134820654,32,FLEN)
NAN_BOXED(2092404382,32,FLEN)
NAN_BOXED(1107626254,32,FLEN)
NAN_BOXED(2134820654,32,FLEN)
NAN_BOXED(2092404382,32,FLEN)
NAN_BOXED(1107626254,32,FLEN)
NAN_BOXED(2134820654,32,FLEN)
NAN_BOXED(2125398409,32,FLEN)
NAN_BOXED(1040822781,32,FLEN)
NAN_BOXED(2101101311,32,FLEN)
NAN_BOXED(2125398409,32,FLEN)
NAN_BOXED(1040822781,32,FLEN)
NAN_BOXED(2101101311,32,FLEN)
NAN_BOXED(2125398409,32,FLEN)
NAN_BOXED(1040822781,32,FLEN)
NAN_BOXED(2101101311,32,FLEN)
NAN_BOXED(2125398409,32,FLEN)
NAN_BOXED(1040822781,32,FLEN)
NAN_BOXED(2101101311,32,FLEN)
NAN_BOXED(2125398409,32,FLEN)
NAN_BOXED(1040822781,32,FLEN)
NAN_BOXED(2101101311,32,FLEN)
NAN_BOXED(2119364605,32,FLEN)
NAN_BOXED(1076368309,32,FLEN)
NAN_BOXED(2131393980,32,FLEN)
NAN_BOXED(2119364605,32,FLEN)
NAN_BOXED(1076368309,32,FLEN)
NAN_BOXED(2131393980,32,FLEN)
NAN_BOXED(2119364605,32,FLEN)
NAN_BOXED(1076368309,32,FLEN)
NAN_BOXED(2131393980,32,FLEN)
NAN_BOXED(2119364605,32,FLEN)
NAN_BOXED(1076368309,32,FLEN)
NAN_BOXED(2131393980,32,FLEN)
NAN_BOXED(2119364605,32,FLEN)
NAN_BOXED(1076368309,32,FLEN)
NAN_BOXED(2131393980,32,FLEN)
NAN_BOXED(2123594683,32,FLEN)
NAN_BOXED(1070589992,32,FLEN)
NAN_BOXED(2129628568,32,FLEN)
NAN_BOXED(2123594683,32,FLEN)
NAN_BOXED(1070589992,32,FLEN)
NAN_BOXED(2129628568,32,FLEN)
NAN_BOXED(2123594683,32,FLEN)
NAN_BOXED(1070589992,32,FLEN)
NAN_BOXED(2129628568,32,FLEN)
NAN_BOXED(2123594683,32,FLEN)
NAN_BOXED(1070589992,32,FLEN)
NAN_BOXED(2129628568,32,FLEN)
NAN_BOXED(2123594683,32,FLEN)
NAN_BOXED(1070589992,32,FLEN)
NAN_BOXED(2129628568,32,FLEN)
NAN_BOXED(2107412640,32,FLEN)
NAN_BOXED(1090726852,32,FLEN)
NAN_BOXED(2132832652,32,FLEN)
NAN_BOXED(2107412640,32,FLEN)
NAN_BOXED(1090726852,32,FLEN)
NAN_BOXED(2132832652,32,FLEN)
NAN_BOXED(2107412640,32,FLEN)
NAN_BOXED(1090726852,32,FLEN)
NAN_BOXED(2132832652,32,FLEN)
NAN_BOXED(2107412640,32,FLEN)
NAN_BOXED(1090726852,32,FLEN)
NAN_BOXED(2132832652,32,FLEN)
NAN_BOXED(2107412640,32,FLEN)
NAN_BOXED(1090726852,32,FLEN)
NAN_BOXED(2132832652,32,FLEN)
NAN_BOXED(2123319913,32,FLEN)
NAN_BOXED(1074713766,32,FLEN)
NAN_BOXED(2132796570,32,FLEN)
NAN_BOXED(2123319913,32,FLEN)
NAN_BOXED(1074713766,32,FLEN)
NAN_BOXED(2132796570,32,FLEN)
NAN_BOXED(2123319913,32,FLEN)
NAN_BOXED(1074713766,32,FLEN)
NAN_BOXED(2132796570,32,FLEN)
NAN_BOXED(2123319913,32,FLEN)
NAN_BOXED(1074713766,32,FLEN)
NAN_BOXED(2132796570,32,FLEN)
NAN_BOXED(2123319913,32,FLEN)
NAN_BOXED(1074713766,32,FLEN)
NAN_BOXED(2132796570,32,FLEN)
NAN_BOXED(2111980387,32,FLEN)
NAN_BOXED(1083241911,32,FLEN)
NAN_BOXED(2130714388,32,FLEN)
NAN_BOXED(2111980387,32,FLEN)
NAN_BOXED(1083241911,32,FLEN)
NAN_BOXED(2130714388,32,FLEN)
NAN_BOXED(2111980387,32,FLEN)
NAN_BOXED(1083241911,32,FLEN)
NAN_BOXED(2130714388,32,FLEN)
NAN_BOXED(2111980387,32,FLEN)
NAN_BOXED(1083241911,32,FLEN)
NAN_BOXED(2130714388,32,FLEN)
NAN_BOXED(2111980387,32,FLEN)
NAN_BOXED(1083241911,32,FLEN)
NAN_BOXED(2130714388,32,FLEN)
NAN_BOXED(2125732345,32,FLEN)
NAN_BOXED(1063042607,32,FLEN)
NAN_BOXED(2124106782,32,FLEN)
NAN_BOXED(2125732345,32,FLEN)
NAN_BOXED(1063042607,32,FLEN)
NAN_BOXED(2124106782,32,FLEN)
NAN_BOXED(2125732345,32,FLEN)
NAN_BOXED(1063042607,32,FLEN)
NAN_BOXED(2124106782,32,FLEN)
NAN_BOXED(2125732345,32,FLEN)
NAN_BOXED(1063042607,32,FLEN)
NAN_BOXED(2124106782,32,FLEN)
NAN_BOXED(2125732345,32,FLEN)
NAN_BOXED(1063042607,32,FLEN)
NAN_BOXED(2124106782,32,FLEN)
NAN_BOXED(2087555755,32,FLEN)
NAN_BOXED(1104937883,32,FLEN)
NAN_BOXED(2127310179,32,FLEN)
NAN_BOXED(2087555755,32,FLEN)
NAN_BOXED(1104937883,32,FLEN)
NAN_BOXED(2127310179,32,FLEN)
NAN_BOXED(2087555755,32,FLEN)
NAN_BOXED(1104937883,32,FLEN)
NAN_BOXED(2127310179,32,FLEN)
NAN_BOXED(2087555755,32,FLEN)
NAN_BOXED(1104937883,32,FLEN)
NAN_BOXED(2127310179,32,FLEN)
NAN_BOXED(2087555755,32,FLEN)
NAN_BOXED(1104937883,32,FLEN)
NAN_BOXED(2127310179,32,FLEN)
NAN_BOXED(2132862897,32,FLEN)
NAN_BOXED(1040046358,32,FLEN)
NAN_BOXED(2107608428,32,FLEN)
NAN_BOXED(2132862897,32,FLEN)
NAN_BOXED(1040046358,32,FLEN)
NAN_BOXED(2107608428,32,FLEN)
NAN_BOXED(2132862897,32,FLEN)
NAN_BOXED(1040046358,32,FLEN)
NAN_BOXED(2107608428,32,FLEN)
NAN_BOXED(2132862897,32,FLEN)
NAN_BOXED(1040046358,32,FLEN)
NAN_BOXED(2107608428,32,FLEN)
NAN_BOXED(2132862897,32,FLEN)
NAN_BOXED(1040046358,32,FLEN)
NAN_BOXED(2107608428,32,FLEN)
NAN_BOXED(2125147248,32,FLEN)
NAN_BOXED(1021634285,32,FLEN)
NAN_BOXED(2082016764,32,FLEN)
NAN_BOXED(2125147248,32,FLEN)
NAN_BOXED(1021634285,32,FLEN)
NAN_BOXED(2082016764,32,FLEN)
NAN_BOXED(2125147248,32,FLEN)
NAN_BOXED(1021634285,32,FLEN)
NAN_BOXED(2082016764,32,FLEN)
NAN_BOXED(2125147248,32,FLEN)
NAN_BOXED(1021634285,32,FLEN)
NAN_BOXED(2082016764,32,FLEN)
NAN_BOXED(2125147248,32,FLEN)
NAN_BOXED(1021634285,32,FLEN)
NAN_BOXED(2082016764,32,FLEN)
NAN_BOXED(2134826685,32,FLEN)
NAN_BOXED(1064937954,32,FLEN)
NAN_BOXED(2134517072,32,FLEN)
NAN_BOXED(2134826685,32,FLEN)
NAN_BOXED(1064937954,32,FLEN)
NAN_BOXED(2134517072,32,FLEN)
NAN_BOXED(2134826685,32,FLEN)
NAN_BOXED(1064937954,32,FLEN)
NAN_BOXED(2134517072,32,FLEN)
NAN_BOXED(2134826685,32,FLEN)
NAN_BOXED(1064937954,32,FLEN)
NAN_BOXED(2134517072,32,FLEN)
NAN_BOXED(2134826685,32,FLEN)
NAN_BOXED(1064937954,32,FLEN)
NAN_BOXED(2134517072,32,FLEN)
NAN_BOXED(2130854247,32,FLEN)
NAN_BOXED(1060449103,32,FLEN)
NAN_BOXED(2126011535,32,FLEN)
NAN_BOXED(2130854247,32,FLEN)
NAN_BOXED(1060449103,32,FLEN)
NAN_BOXED(2126011535,32,FLEN)
NAN_BOXED(2130854247,32,FLEN)
NAN_BOXED(1060449103,32,FLEN)
NAN_BOXED(2126011535,32,FLEN)
NAN_BOXED(2130854247,32,FLEN)
NAN_BOXED(1060449103,32,FLEN)
NAN_BOXED(2126011535,32,FLEN)
NAN_BOXED(2130854247,32,FLEN)
NAN_BOXED(1060449103,32,FLEN)
NAN_BOXED(2126011535,32,FLEN)
NAN_BOXED(2102932297,32,FLEN)
NAN_BOXED(1071395165,32,FLEN)
NAN_BOXED(2109339076,32,FLEN)
NAN_BOXED(2102932297,32,FLEN)
NAN_BOXED(1071395165,32,FLEN)
NAN_BOXED(2109339076,32,FLEN)
NAN_BOXED(2102932297,32,FLEN)
NAN_BOXED(1071395165,32,FLEN)
NAN_BOXED(2109339076,32,FLEN)
NAN_BOXED(2102932297,32,FLEN)
NAN_BOXED(1071395165,32,FLEN)
NAN_BOXED(2109339076,32,FLEN)
NAN_BOXED(2102932297,32,FLEN)
NAN_BOXED(1071395165,32,FLEN)
NAN_BOXED(2109339076,32,FLEN)
NAN_BOXED(2131188823,32,FLEN)
NAN_BOXED(1066418124,32,FLEN)
NAN_BOXED(2132314969,32,FLEN)
NAN_BOXED(2131188823,32,FLEN)
NAN_BOXED(1066418124,32,FLEN)
NAN_BOXED(2132314969,32,FLEN)
NAN_BOXED(2131188823,32,FLEN)
NAN_BOXED(1066418124,32,FLEN)
NAN_BOXED(2132314969,32,FLEN)
NAN_BOXED(2131188823,32,FLEN)
NAN_BOXED(1066418124,32,FLEN)
NAN_BOXED(2132314969,32,FLEN)
NAN_BOXED(2131188823,32,FLEN)
NAN_BOXED(1066418124,32,FLEN)
NAN_BOXED(2132314969,32,FLEN)
NAN_BOXED(2134763348,32,FLEN)
NAN_BOXED(1063192954,32,FLEN)
NAN_BOXED(2133160843,32,FLEN)
NAN_BOXED(2134763348,32,FLEN)
NAN_BOXED(1063192954,32,FLEN)
NAN_BOXED(2133160843,32,FLEN)
NAN_BOXED(2134763348,32,FLEN)
NAN_BOXED(1063192954,32,FLEN)
NAN_BOXED(2133160843,32,FLEN)
NAN_BOXED(2134763348,32,FLEN)
NAN_BOXED(1063192954,32,FLEN)
NAN_BOXED(2133160843,32,FLEN)
NAN_BOXED(2134763348,32,FLEN)
NAN_BOXED(1063192954,32,FLEN)
NAN_BOXED(2133160843,32,FLEN)
NAN_BOXED(2124949711,32,FLEN)
NAN_BOXED(1058356698,32,FLEN)
NAN_BOXED(2118389956,32,FLEN)
NAN_BOXED(2124949711,32,FLEN)
NAN_BOXED(1058356698,32,FLEN)
NAN_BOXED(2118389956,32,FLEN)
NAN_BOXED(2124949711,32,FLEN)
NAN_BOXED(1058356698,32,FLEN)
NAN_BOXED(2118389956,32,FLEN)
NAN_BOXED(2124949711,32,FLEN)
NAN_BOXED(1058356698,32,FLEN)
NAN_BOXED(2118389956,32,FLEN)
NAN_BOXED(2124949711,32,FLEN)
NAN_BOXED(1058356698,32,FLEN)
NAN_BOXED(2118389956,32,FLEN)
NAN_BOXED(2127565068,32,FLEN)
NAN_BOXED(1059286414,32,FLEN)
NAN_BOXED(2122634214,32,FLEN)
NAN_BOXED(2127565068,32,FLEN)
NAN_BOXED(1059286414,32,FLEN)
NAN_BOXED(2122634214,32,FLEN)
NAN_BOXED(2127565068,32,FLEN)
NAN_BOXED(1059286414,32,FLEN)
NAN_BOXED(2122634214,32,FLEN)
NAN_BOXED(2127565068,32,FLEN)
NAN_BOXED(1059286414,32,FLEN)
NAN_BOXED(2122634214,32,FLEN)
NAN_BOXED(2127565068,32,FLEN)
NAN_BOXED(1059286414,32,FLEN)
NAN_BOXED(2122634214,32,FLEN)
NAN_BOXED(2127639557,32,FLEN)
NAN_BOXED(1070577097,32,FLEN)
NAN_BOXED(2133441950,32,FLEN)
NAN_BOXED(2127639557,32,FLEN)
NAN_BOXED(1070577097,32,FLEN)
NAN_BOXED(2133441950,32,FLEN)
NAN_BOXED(2127639557,32,FLEN)
NAN_BOXED(1070577097,32,FLEN)
NAN_BOXED(2133441950,32,FLEN)
NAN_BOXED(2127639557,32,FLEN)
NAN_BOXED(1070577097,32,FLEN)
NAN_BOXED(2133441950,32,FLEN)
NAN_BOXED(2127639557,32,FLEN)
NAN_BOXED(1070577097,32,FLEN)
NAN_BOXED(2133441950,32,FLEN)
NAN_BOXED(2125328103,32,FLEN)
NAN_BOXED(1074439181,32,FLEN)
NAN_BOXED(2134664318,32,FLEN)
NAN_BOXED(2125328103,32,FLEN)
NAN_BOXED(1074439181,32,FLEN)
NAN_BOXED(2134664318,32,FLEN)
NAN_BOXED(2125328103,32,FLEN)
NAN_BOXED(1074439181,32,FLEN)
NAN_BOXED(2134664318,32,FLEN)
NAN_BOXED(2125328103,32,FLEN)
NAN_BOXED(1074439181,32,FLEN)
NAN_BOXED(2134664318,32,FLEN)
NAN_BOXED(2125328103,32,FLEN)
NAN_BOXED(1074439181,32,FLEN)
NAN_BOXED(2134664318,32,FLEN)
NAN_BOXED(2131356844,32,FLEN)
NAN_BOXED(1031956294,32,FLEN)
NAN_BOXED(2097972135,32,FLEN)
NAN_BOXED(2131356844,32,FLEN)
NAN_BOXED(1031956294,32,FLEN)
NAN_BOXED(2097972135,32,FLEN)
NAN_BOXED(2131356844,32,FLEN)
NAN_BOXED(1031956294,32,FLEN)
NAN_BOXED(2097972135,32,FLEN)
NAN_BOXED(2131356844,32,FLEN)
NAN_BOXED(1031956294,32,FLEN)
NAN_BOXED(2097972135,32,FLEN)
NAN_BOXED(2131356844,32,FLEN)
NAN_BOXED(1031956294,32,FLEN)
NAN_BOXED(2097972135,32,FLEN)
NAN_BOXED(2132300352,32,FLEN)
NAN_BOXED(1065655773,32,FLEN)
NAN_BOXED(2132660398,32,FLEN)
NAN_BOXED(2132300352,32,FLEN)
NAN_BOXED(1065655773,32,FLEN)
NAN_BOXED(2132660398,32,FLEN)
NAN_BOXED(2132300352,32,FLEN)
NAN_BOXED(1065655773,32,FLEN)
NAN_BOXED(2132660398,32,FLEN)
NAN_BOXED(2126135511,32,FLEN)
NAN_BOXED(1057625416,32,FLEN)
NAN_BOXED(2118708447,32,FLEN)
NAN_BOXED(2126135511,32,FLEN)
NAN_BOXED(1057625416,32,FLEN)
NAN_BOXED(2118708447,32,FLEN)
NAN_BOXED(2126135511,32,FLEN)
NAN_BOXED(1057625416,32,FLEN)
NAN_BOXED(2118708447,32,FLEN)
NAN_BOXED(2126135511,32,FLEN)
NAN_BOXED(1057625416,32,FLEN)
NAN_BOXED(2118708447,32,FLEN)
NAN_BOXED(2041683739,32,FLEN)
NAN_BOXED(1152871123,32,FLEN)
NAN_BOXED(2130609590,32,FLEN)
NAN_BOXED(2131501145,32,FLEN)
NAN_BOXED(1058093181,32,FLEN)
NAN_BOXED(2124348028,32,FLEN)
NAN_BOXED(2131501145,32,FLEN)
NAN_BOXED(1058093181,32,FLEN)
NAN_BOXED(2124348028,32,FLEN)
NAN_BOXED(2127476109,32,FLEN)
NAN_BOXED(1067593270,32,FLEN)
NAN_BOXED(2130900020,32,FLEN)
NAN_BOXED(2127476109,32,FLEN)
NAN_BOXED(1067593270,32,FLEN)
NAN_BOXED(2130900020,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_8:
    .fill 168*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
