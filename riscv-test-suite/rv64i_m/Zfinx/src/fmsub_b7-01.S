
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 04:36:02 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fmsub.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fmsub_b7 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fmsub_b7)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rd == rs3 != rs2, rs1==x31, rs2==x30, rs3==x31, rd==x31,fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e8086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x31; dest:x31; op1val:0x7e78b41c; op2val:0x3eee8086;
op3val:0x7e78b41c; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x31, x30, x31, dyn, 96, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rd != rs3, rs1==x29, rs2==x29, rs3==x30, rd==x29,fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x63e702 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x29; op2:x29; op3:x30; dest:x29; op1val:0x7ef9f575; op2val:0x7ef9f575;
op3val:0x7d5e8636; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x29, x29, x29, x30, dyn, 96, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x30, rs2==x31, rs3==x28, rd==x28,fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2eb223 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x31; op3:x28; dest:x28; op1val:0x7ecdc757; op2val:0x3f2eb223;
op3val:0x7e8c6cae; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x28, x30, x31, x28, dyn, 96, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==x28, rs2==x27, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0bfc20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x28; op2:x27; op3:x27; dest:x27; op1val:0x7d322c35; op2val:0x410bfc20;
op3val:0x410bfc20; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x27, x28, x27, x27, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x27, rs2==x26, rs3==x29, rd==x26,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x390b28 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x27; op2:x26; op3:x29; dest:x26; op1val:0x7ce65f91; op2val:0x41390b28;
op3val:0x7ea6851a; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x26, x27, x26, x29, dyn, 96, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==x25, rs2==x25, rs3==x25, rd==x30,fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2637f1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x25; op2:x25; op3:x25; dest:x30; op1val:0x7d569889; op2val:0x7d569889;
op3val:0x7d569889; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x30, x25, x25, x25, dyn, 96, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x26, rs2==x24, rs3==x24, rd==x25,fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x794f79 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x26; op2:x24; op3:x24; dest:x25; op1val:0x7ea303ee; op2val:0x3ff94f79;
op3val:0x3ff94f79; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x25, x26, x24, x24, dyn, 96, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x23, rs2==x28, rs3==x26, rd==x24,fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x66cf10 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x23; op2:x28; op3:x26; dest:x24; op1val:0x7dbe28e8; op2val:0x3fe6cf10;
op3val:0x7e2b7290; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x24, x23, x28, x26, dyn, 96, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x22, rs2==x22, rs3==x21, rd==x23,fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x41568d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x22; op2:x22; op3:x21; dest:x23; op1val:0x7ef0ef31; op2val:0x7ef0ef31;
op3val:0x7f35f5c9; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x23, x22, x22, x21, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x20, rs2==x23, rs3==x20, rd==x22,fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ff72a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x20; op2:x23; op3:x20; dest:x22; op1val:0x7edd9b86; op2val:0x3f2ff72a;
op3val:0x7edd9b86; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x22, x20, x23, x20, dyn, 96, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x21, rs2==x20, rs3==x23, rd==x21,fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x437185 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x21; op2:x20; op3:x23; dest:x21; op1val:0x7f3b70e3; op2val:0x3d437185;
op3val:0x7d0f1a1b; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x21, x21, x20, x23, dyn, 96, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb9e5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0x7f24d370; op2val:0x7f24d370;
op3val:0x7f24d370; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x19, x19, x19, x19, dyn, 96, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x24, rs2==x21, rs3==x22, rd==x20,fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5109c2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x24; op2:x21; op3:x22; dest:x20; op1val:0x7ddd9367; op2val:0x3f5109c2;
op3val:0x7db4edca; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x20, x24, x21, x22, dyn, 96, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x17, rs2==x16, rs3==x15, rd==x18,fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2951df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x17; op2:x16; op3:x15; dest:x18; op1val:0x7e6ce9fd; op2val:0x402951df;
op3val:0x7f1cb23d; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x18, x17, x16, x15, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x15, rs2==x18, rs3==x16, rd==x17,fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4df5c4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x15; op2:x18; op3:x16; dest:x17; op1val:0x7e0acc40; op2val:0x404df5c4;
op3val:0x7edf559e; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x17, x15, x18, x16, dyn, 96, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x18, rs2==x15, rs3==x17, rd==x16,fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7e and fm2 == 0x15365b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x18; op2:x15; op3:x17; dest:x16; op1val:0x7ef557bf; op2val:0x3f15365b;
op3val:0x7e8f002a; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x16, x18, x15, x17, dyn, 96, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x16, rs2==x17, rs3==x18, rd==x15,fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x6ac41d and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x16; op2:x17; op3:x18; dest:x15; op1val:0x7ed25578; op2val:0x3deac41d;
op3val:0x7d40e341; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x15, x16, x17, x18, dyn, 96, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x13, rs2==x12, rs3==x11, rd==x14,fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5d28cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x13; op2:x12; op3:x11; dest:x14; op1val:0x7d371843; op2val:0x405d28cc;
op3val:0x7e1e2d21; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x14, x13, x12, x11, dyn, 96, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x11, rs2==x14, rs3==x12, rd==x13,fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20e19c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x11; op2:x14; op3:x12; dest:x13; op1val:0x7f02a304; op2val:0x3f20e19c;
op3val:0x7ea43208; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x13, x11, x14, x12, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x14, rs2==x11, rs3==x13, rd==x12,fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6e96ab and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x14; op2:x11; op3:x13; dest:x12; op1val:0x7e7143d8; op2val:0x3fee96ab;
op3val:0x7ee0db12; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x12, x14, x11, x13, dyn, 96, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x12, rs2==x13, rs3==x14, rd==x11,fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2955f8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x12; op2:x13; op3:x14; dest:x11; op1val:0x7eae05d5; op2val:0x3f2955f8;
op3val:0x7e663896; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x11, x12, x13, x14, dyn, 96, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x9, rs2==x8, rs3==x7, rd==x10,fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6142c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x9; op2:x8; op3:x7; dest:x10; op1val:0x7f188556; op2val:0x3f6142c5;
op3val:0x7f0634f9; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x10, x9, x8, x7, dyn, 96, 0, x3, 63*FLEN/8, x4, x1, x2)
RVTEST_VALBASEUPD(x13,test_dataset_1)

inst_22:
// rs1==x7, rs2==x10, rs3==x8, rd==x9,fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x169be3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x7; op2:x10; op3:x8; dest:x9; op1val:0x7e3b7753; op2val:0x40169be3;
op3val:0x7edc9425; valaddr_reg:x13; val_offset:0*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x9, x7, x10, x8, dyn, 96, 0, x13, 0*FLEN/8, x14, x1, x12)
RVTEST_SIGBASE(x11,signature_x11_0)

inst_23:
// rs1==x10, rs2==x7, rs3==x9, rd==x8,fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x55497a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x10; op2:x7; op3:x9; dest:x8; op1val:0x7ec9acea; op2val:0x3fd5497a;
op3val:0x7f2806c1; valaddr_reg:x13; val_offset:3*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x8, x10, x7, x9, dyn, 96, 0, x13, 3*FLEN/8, x14, x11, x12)

inst_24:
// rs1==x8, rs2==x9, rs3==x10, rd==x7,fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4a1abc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x8; op2:x9; op3:x10; dest:x7; op1val:0x7f0c0db1; op2val:0x3eca1abc;
op3val:0x7e5d22dd; valaddr_reg:x13; val_offset:6*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x7, x8, x9, x10, dyn, 96, 0, x13, 6*FLEN/8, x14, x11, x12)

inst_25:
// rs1==x5, rs2==x4, rs3==x3, rd==x6,fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x76b07a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x5; op2:x4; op3:x3; dest:x6; op1val:0x7f3c318d; op2val:0x3df6b07a;
op3val:0x7db55959; valaddr_reg:x13; val_offset:9*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x6, x5, x4, x3, dyn, 96, 0, x13, 9*FLEN/8, x14, x11, x12)

inst_26:
// rs1==x3, rs2==x6, rs3==x4, rd==x5,fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x67c89e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x3; op2:x6; op3:x4; dest:x5; op1val:0x7ea08f24; op2val:0x3fe7c89e;
op3val:0x7f115efd; valaddr_reg:x13; val_offset:12*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x5, x3, x6, x4, dyn, 96, 0, x13, 12*FLEN/8, x14, x11, x12)

inst_27:
// rs1==x6, rs2==x3, rs3==x5, rd==x4,fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x4de670 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x6; op2:x3; op3:x5; dest:x4; op1val:0x7de972bf; op2val:0x404de670;
op3val:0x7ebbc306; valaddr_reg:x13; val_offset:15*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x4, x6, x3, x5, dyn, 96, 0, x13, 15*FLEN/8, x14, x11, x12)

inst_28:
// rs1==x4, rs2==x5, rs3==x6, rd==x3,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x70e3ae and fs2 == 0 and fe2 == 0x83 and fm2 == 0x085868 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x004c24 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x4; op2:x5; op3:x6; dest:x3; op1val:0x7cf0e3ae; op2val:0x41885868;
op3val:0x7f004c24; valaddr_reg:x13; val_offset:18*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x3, x4, x5, x6, dyn, 96, 0, x13, 18*FLEN/8, x14, x11, x12)

inst_29:
// rs1==x2,fs1 == 0 and fe1 == 0xfe and fm1 == 0x12cc2f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3fdd86 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c0abd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x2; op2:x30; op3:x29; dest:x31; op1val:0x7f12cc2f; op2val:0x3f3fdd86;
op3val:0x7edc0abd; valaddr_reg:x13; val_offset:21*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x2, x30, x29, dyn, 96, 0, x13, 21*FLEN/8, x14, x11, x12)

inst_30:
// rs1==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x28177b and fs2 == 0 and fe2 == 0x7d and fm2 == 0x377ca6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x70f544 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x1; op2:x30; op3:x29; dest:x31; op1val:0x7f28177b; op2val:0x3eb77ca6;
op3val:0x7e70f544; valaddr_reg:x13; val_offset:24*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x1, x30, x29, dyn, 96, 0, x13, 24*FLEN/8, x14, x11, x12)

inst_31:
// rs1==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x057f28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ad721 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x643cef and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x0; op2:x30; op3:x29; dest:x31; op1val:0x0; op2val:0x3f5ad721;
op3val:0x7ee43cef; valaddr_reg:x13; val_offset:27*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x0, x30, x29, dyn, 96, 0, x13, 27*FLEN/8, x14, x11, x12)

inst_32:
// rs2==x2,fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eae04 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x49655f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2f2ece and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x2; op3:x29; dest:x31; op1val:0x7edeae04; op2val:0x3f49655f;
op3val:0x7eaf2ece; valaddr_reg:x13; val_offset:30*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x2, x29, dyn, 96, 0, x13, 30*FLEN/8, x14, x11, x12)

inst_33:
// rs2==x1,fs1 == 0 and fe1 == 0xfe and fm1 == 0x214618 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ff4f9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3560f6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x1; op3:x29; dest:x31; op1val:0x7f214618; op2val:0x3f8ff4f9;
op3val:0x7f3560f6; valaddr_reg:x13; val_offset:33*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x1, x29, dyn, 96, 0, x13, 33*FLEN/8, x14, x11, x12)

inst_34:
// rs2==x0,fs1 == 0 and fe1 == 0xfd and fm1 == 0x360dc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x334fd9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f08d0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x0; op3:x29; dest:x31; op1val:0x7eb60dc2; op2val:0x0;
op3val:0x7eff08d0; valaddr_reg:x13; val_offset:36*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x0, x29, dyn, 96, 0, x13, 36*FLEN/8, x14, x11, x12)

inst_35:
// rs3==x2,fs1 == 0 and fe1 == 0xfa and fm1 == 0x3a6060 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x39001e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06afbc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x2; dest:x31; op1val:0x7d3a6060; op2val:0x4139001e;
op3val:0x7f06afbc; valaddr_reg:x13; val_offset:39*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x2, dyn, 96, 0, x13, 39*FLEN/8, x14, x11, x12)

inst_36:
// rs3==x1,fs1 == 0 and fe1 == 0xfd and fm1 == 0x787f5a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x446e61 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eaca6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x1; dest:x31; op1val:0x7ef87f5a; op2val:0x3fc46e61;
op3val:0x7f3eaca6; valaddr_reg:x13; val_offset:42*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x1, dyn, 96, 0, x13, 42*FLEN/8, x14, x11, x12)

inst_37:
// rs3==x0,fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dcf3e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x314854 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5a91c1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x0; dest:x31; op1val:0x7f1dcf3e; op2val:0x3eb14854;
op3val:0x0; valaddr_reg:x13; val_offset:45*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x0, dyn, 96, 0, x13, 45*FLEN/8, x14, x11, x12)

inst_38:
// rd==x2,fs1 == 0 and fe1 == 0xfd and fm1 == 0x1424d7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5dd969 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00619d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x29; dest:x2; op1val:0x7e9424d7; op2val:0x3fddd969;
op3val:0x7f00619d; valaddr_reg:x13; val_offset:48*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x2, x31, x30, x29, dyn, 96, 0, x13, 48*FLEN/8, x14, x11, x12)

inst_39:
// rd==x1,fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0aa06a and fs2 == 0 and fe2 == 0x83 and fm2 == 0x23b353 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x314a7d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x29; dest:x1; op1val:0x7c8aa06a; op2val:0x41a3b353;
op3val:0x7eb14a7d; valaddr_reg:x13; val_offset:51*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x1, x31, x30, x29, dyn, 96, 0, x13, 51*FLEN/8, x14, x11, x12)

inst_40:
// rd==x0,fs1 == 0 and fe1 == 0xfc and fm1 == 0x010fa7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x32615c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x33dbf0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x31; op2:x30; op3:x29; dest:x0; op1val:0x7e010fa7; op2val:0x3f32615c;
op3val:0x7db3dbf0; valaddr_reg:x13; val_offset:54*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x0, x31, x30, x29, dyn, 96, 0, x13, 54*FLEN/8, x14, x11, x12)

inst_41:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x351ba3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x507ed5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x13802f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d351ba3; op2val:0x41507ed5;
op3val:0x7f13802f; valaddr_reg:x13; val_offset:57*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 57*FLEN/8, x14, x11, x12)

inst_42:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x46aaa4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x750c8e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e2b0e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc6aaa4; op2val:0x3ff50c8e;
op3val:0x7e3e2b0e; valaddr_reg:x13; val_offset:60*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 60*FLEN/8, x14, x11, x12)

inst_43:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x161feb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea7ba and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275021 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e961feb; op2val:0x400ea7ba;
op3val:0x7f275021; valaddr_reg:x13; val_offset:63*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 63*FLEN/8, x14, x11, x12)

inst_44:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x778bb6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3260f9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2c7cea and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d778bb6; op2val:0x40b260f9;
op3val:0x7eac7cea; valaddr_reg:x13; val_offset:66*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 66*FLEN/8, x14, x11, x12)

inst_45:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52fc23 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4dcc0d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x299c14 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed2fc23; op2val:0x3fcdcc0d;
op3val:0x7f299c14; valaddr_reg:x13; val_offset:69*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 69*FLEN/8, x14, x11, x12)

inst_46:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d4d3d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06fc02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x25e290 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1d4d3d; op2val:0x3f86fc02;
op3val:0x7f25e290; valaddr_reg:x13; val_offset:72*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 72*FLEN/8, x14, x11, x12)

inst_47:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55d3ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3eed2d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f794e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55d3ce; op2val:0x3fbeed2d;
op3val:0x7e9f794e; valaddr_reg:x13; val_offset:75*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 75*FLEN/8, x14, x11, x12)

inst_48:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x09c4a3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1dba6d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x29c3d8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e89c4a3; op2val:0x401dba6d;
op3val:0x7f29c3d8; valaddr_reg:x13; val_offset:78*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 78*FLEN/8, x14, x11, x12)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37e266 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x215d18 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67d083 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f37e266; op2val:0x3e215d18;
op3val:0x7de7d083; valaddr_reg:x13; val_offset:81*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 81*FLEN/8, x14, x11, x12)

inst_50:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0755d0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x287cca and fs3 == 0 and fe3 == 0xfc and fm3 == 0x322492 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0755d0; op2val:0x3fa87cca;
op3val:0x7e322492; valaddr_reg:x13; val_offset:84*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 84*FLEN/8, x14, x11, x12)

inst_51:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3333bd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x05044b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3a39c6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3333bd; op2val:0x4005044b;
op3val:0x7eba39c6; valaddr_reg:x13; val_offset:87*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 87*FLEN/8, x14, x11, x12)

inst_52:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x623931 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x645990 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x49ca15 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee23931; op2val:0x3ee45990;
op3val:0x7e49ca15; valaddr_reg:x13; val_offset:90*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 90*FLEN/8, x14, x11, x12)

inst_53:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x493572 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x4caef8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e01d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b493572; op2val:0x42ccaef8;
op3val:0x7ea0e01d; valaddr_reg:x13; val_offset:93*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 93*FLEN/8, x14, x11, x12)

inst_54:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4451ca and fs3 == 0 and fe3 == 0xfd and fm3 == 0x59799a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8dcb1a; op2val:0x3fc451ca;
op3val:0x7ed9799a; valaddr_reg:x13; val_offset:96*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 96*FLEN/8, x14, x11, x12)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36feaa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x39770f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x049324 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f36feaa; op2val:0x3f39770f;
op3val:0x7f049324; valaddr_reg:x13; val_offset:99*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 99*FLEN/8, x14, x11, x12)

inst_56:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45f2de and fs2 == 0 and fe2 == 0x7f and fm2 == 0x195a39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6d27d5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec5f2de; op2val:0x3f995a39;
op3val:0x7eed27d5; valaddr_reg:x13; val_offset:102*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 102*FLEN/8, x14, x11, x12)

inst_57:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01d495 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x238717 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x25ddbc and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f01d495; op2val:0x3da38717;
op3val:0x7d25ddbc; valaddr_reg:x13; val_offset:105*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 105*FLEN/8, x14, x11, x12)

inst_58:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cb5d8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5df921 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15c10f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cb5d8; op2val:0x3f5df921;
op3val:0x7f15c10f; valaddr_reg:x13; val_offset:108*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 108*FLEN/8, x14, x11, x12)

inst_59:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27e812 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x699098 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19310e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f27e812; op2val:0x3f699098;
op3val:0x7f19310e; valaddr_reg:x13; val_offset:111*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 111*FLEN/8, x14, x11, x12)

inst_60:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16ac6a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02272a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x193536 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96ac6a; op2val:0x3f82272a;
op3val:0x7e993536; valaddr_reg:x13; val_offset:114*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 114*FLEN/8, x14, x11, x12)

inst_61:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1f0870 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4409e1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x739132 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9f0870; op2val:0x40c409e1;
op3val:0x7ef39132; valaddr_reg:x13; val_offset:117*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 117*FLEN/8, x14, x11, x12)

inst_62:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3f39ad and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0a7c97 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4ee451 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3f39ad; op2val:0x3f8a7c97;
op3val:0x7d4ee451; valaddr_reg:x13; val_offset:120*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 120*FLEN/8, x14, x11, x12)

inst_63:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x205482 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x47070a and fs3 == 0 and fe3 == 0xfb and fm3 == 0x794c35 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e205482; op2val:0x3f47070a;
op3val:0x7df94c35; valaddr_reg:x13; val_offset:123*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 123*FLEN/8, x14, x11, x12)

inst_64:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0294a2 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1e5203 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x218322 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8294a2; op2val:0x3e1e5203;
op3val:0x7d218322; valaddr_reg:x13; val_offset:126*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 126*FLEN/8, x14, x11, x12)

inst_65:
// fs1 == 0 and fe1 == 0xf2 and fm1 == 0x3775d9 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x221af5 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6857ca and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x793775d9; op2val:0x44221af5;
op3val:0x7de857ca; valaddr_reg:x13; val_offset:129*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 129*FLEN/8, x14, x11, x12)

inst_66:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1bd969 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x655a0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ba04e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9bd969; op2val:0x40655a0f;
op3val:0x7e8ba04e; valaddr_reg:x13; val_offset:132*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 132*FLEN/8, x14, x11, x12)

inst_67:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cad6c and fs2 == 0 and fe2 == 0x84 and fm2 == 0x092539 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x27df2e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c9cad6c; op2val:0x42092539;
op3val:0x7f27df2e; valaddr_reg:x13; val_offset:135*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 135*FLEN/8, x14, x11, x12)

inst_68:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bcd6f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x77b7b4 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x642c6c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eebcd6f; op2val:0x3e77b7b4;
op3val:0x7de42c6c; valaddr_reg:x13; val_offset:138*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 138*FLEN/8, x14, x11, x12)

inst_69:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41bbe4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x304583 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0565c7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e41bbe4; op2val:0x3fb04583;
op3val:0x7e8565c7; valaddr_reg:x13; val_offset:141*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 141*FLEN/8, x14, x11, x12)

inst_70:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd6b8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb626 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3caf87 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e8bd6b8; op2val:0x3eacb626;
op3val:0x7dbcaf87; valaddr_reg:x13; val_offset:144*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 144*FLEN/8, x14, x11, x12)

inst_71:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22fef2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15bca2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eacfb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f22fef2; op2val:0x3f95bca2;
op3val:0x7f3eacfb; valaddr_reg:x13; val_offset:147*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 147*FLEN/8, x14, x11, x12)

inst_72:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x32f0a0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04e6dc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x39cae1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb2f0a0; op2val:0x3f84e6dc;
op3val:0x7eb9cae1; valaddr_reg:x13; val_offset:150*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 150*FLEN/8, x14, x11, x12)

inst_73:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x03eb38 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184c25 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x1cf5cd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d83eb38; op2val:0x3f984c25;
op3val:0x7d9cf5cd; valaddr_reg:x13; val_offset:153*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 153*FLEN/8, x14, x11, x12)

inst_74:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x039278 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x45d015 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4b5552 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e839278; op2val:0x3f45d015;
op3val:0x7e4b5552; valaddr_reg:x13; val_offset:156*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 156*FLEN/8, x14, x11, x12)

inst_75:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f23e5 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x47728f and fs3 == 0 and fe3 == 0xfb and fm3 == 0x77f83d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1f23e5; op2val:0x3e47728f;
op3val:0x7df7f83d; valaddr_reg:x13; val_offset:159*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 159*FLEN/8, x14, x11, x12)

inst_76:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0de66d and fs2 == 0 and fe2 == 0x84 and fm2 == 0x24b40d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3696d7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7c8de66d; op2val:0x4224b40d;
op3val:0x7f3696d7; valaddr_reg:x13; val_offset:162*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 162*FLEN/8, x14, x11, x12)

inst_77:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4ad9d0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0e173c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x612e76 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ecad9d0; op2val:0x3e8e173c;
op3val:0x7de12e76; valaddr_reg:x13; val_offset:165*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 165*FLEN/8, x14, x11, x12)

inst_78:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x509405 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4bec9d and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x262628 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed09405; op2val:0x3d4bec9d;
op3val:0x7ca62628; valaddr_reg:x13; val_offset:168*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 168*FLEN/8, x14, x11, x12)

inst_79:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4acb44 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6d29cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bdf4a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ecacb44; op2val:0x3fed29cb;
op3val:0x7f3bdf4a; valaddr_reg:x13; val_offset:171*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 171*FLEN/8, x14, x11, x12)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x25c226 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e711a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05ab76 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f25c226; op2val:0x3f4e711a;
op3val:0x7f05ab76; valaddr_reg:x13; val_offset:174*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 174*FLEN/8, x14, x11, x12)

inst_81:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x488955 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x33c213 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cd00e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e488955; op2val:0x3fb3c213;
op3val:0x7e8cd00e; valaddr_reg:x13; val_offset:177*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 177*FLEN/8, x14, x11, x12)

inst_82:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0049cc and fs2 == 0 and fe2 == 0x81 and fm2 == 0x13e107 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14364a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e0049cc; op2val:0x4093e107;
op3val:0x7f14364a; valaddr_reg:x13; val_offset:180*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 180*FLEN/8, x14, x11, x12)

inst_83:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4c83f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b3bb8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15941a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ecc83f6; op2val:0x3fbb3bb8;
op3val:0x7f15941a; valaddr_reg:x13; val_offset:183*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 183*FLEN/8, x14, x11, x12)

inst_84:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7d2ec5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2d33bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b4bc6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7d2ec5; op2val:0x3f2d33bc;
op3val:0x7e2b4bc6; valaddr_reg:x13; val_offset:186*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 186*FLEN/8, x14, x11, x12)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bcf66 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b5a50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d1b15 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1bcf66; op2val:0x3f9b5a50;
op3val:0x7f3d1b15; valaddr_reg:x13; val_offset:189*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 189*FLEN/8, x14, x11, x12)

inst_86:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23b468 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7205fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ac45f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f23b468; op2val:0x3f7205fd;
op3val:0x7f1ac45f; valaddr_reg:x13; val_offset:192*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 192*FLEN/8, x14, x11, x12)

inst_87:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d1eb3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x67748e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e0e3c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1d1eb3; op2val:0x3f67748e;
op3val:0x7f0e0e3c; valaddr_reg:x13; val_offset:195*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 195*FLEN/8, x14, x11, x12)

inst_88:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e22cb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x121c20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46c5f4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2e22cb; op2val:0x40121c20;
op3val:0x7ec6c5f4; valaddr_reg:x13; val_offset:198*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 198*FLEN/8, x14, x11, x12)

inst_89:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x088938 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x26ec21 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x320dd5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e888938; op2val:0x3da6ec21;
op3val:0x7cb20dd5; valaddr_reg:x13; val_offset:201*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 201*FLEN/8, x14, x11, x12)

inst_90:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x2ba537 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x200701 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5697ea and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7caba537; op2val:0x41200701;
op3val:0x7e5697ea; valaddr_reg:x13; val_offset:204*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 204*FLEN/8, x14, x11, x12)

inst_91:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x470bc0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b028e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04f6d6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e470bc0; op2val:0x402b028e;
op3val:0x7f04f6d6; valaddr_reg:x13; val_offset:207*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 207*FLEN/8, x14, x11, x12)

inst_92:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37a6a0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6f63f4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bbc44 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f37a6a0; op2val:0x3eef63f4;
op3val:0x7eabbc44; valaddr_reg:x13; val_offset:210*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 210*FLEN/8, x14, x11, x12)

inst_93:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33e876 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06f814 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3db40b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f33e876; op2val:0x3f86f814;
op3val:0x7f3db40b; valaddr_reg:x13; val_offset:213*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 213*FLEN/8, x14, x11, x12)

inst_94:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x375c30 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x437d92 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c052a and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f375c30; op2val:0x3ec37d92;
op3val:0x7e8c052a; valaddr_reg:x13; val_offset:216*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 216*FLEN/8, x14, x11, x12)

inst_95:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2950a7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03b4cc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2e37b3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e2950a7; op2val:0x3f83b4cc;
op3val:0x7e2e37b3; valaddr_reg:x13; val_offset:219*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 219*FLEN/8, x14, x11, x12)

inst_96:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x171200 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x04fd3a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1cf56f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e171200; op2val:0x3f84fd3a;
op3val:0x7e1cf56f; valaddr_reg:x13; val_offset:222*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 222*FLEN/8, x14, x11, x12)

inst_97:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fa438 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x38a8b3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2cdbf4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eefa438; op2val:0x3fb8a8b3;
op3val:0x7f2cdbf4; valaddr_reg:x13; val_offset:225*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 225*FLEN/8, x14, x11, x12)

inst_98:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x215d15 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x120cac and fs3 == 0 and fe3 == 0xfd and fm3 == 0x381e27 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f215d15; op2val:0x3f120cac;
op3val:0x7eb81e27; valaddr_reg:x13; val_offset:228*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 228*FLEN/8, x14, x11, x12)

inst_99:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7abe59 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1cc009 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x198816 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efabe59; op2val:0x3f9cc009;
op3val:0x7f198816; valaddr_reg:x13; val_offset:231*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 231*FLEN/8, x14, x11, x12)

inst_100:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x023841 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x795742 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7daa35 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d823841; op2val:0x40f95742;
op3val:0x7efdaa35; valaddr_reg:x13; val_offset:234*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 234*FLEN/8, x14, x11, x12)

inst_101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ead5d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c215d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1633bf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2ead5d; op2val:0x3f5c215d;
op3val:0x7f1633bf; valaddr_reg:x13; val_offset:237*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 237*FLEN/8, x14, x11, x12)

inst_102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1006e7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x232351 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x379087 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1006e7; op2val:0x3f232351;
op3val:0x7eb79087; valaddr_reg:x13; val_offset:240*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 240*FLEN/8, x14, x11, x12)

inst_103:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x091acb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0d73d3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x178395 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e091acb; op2val:0x408d73d3;
op3val:0x7f178395; valaddr_reg:x13; val_offset:243*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 243*FLEN/8, x14, x11, x12)

inst_104:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7f5f89 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a22b0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x19c214 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7f5f89; op2val:0x401a22b0;
op3val:0x7f19c214; valaddr_reg:x13; val_offset:246*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 246*FLEN/8, x14, x11, x12)

inst_105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8ee5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5094c0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x180081 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3a8ee5; op2val:0x3ed094c0;
op3val:0x7e980081; valaddr_reg:x13; val_offset:249*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 249*FLEN/8, x14, x11, x12)

inst_106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a21ed and fs2 == 0 and fe2 == 0x80 and fm2 == 0x16f6d0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35c8f6 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a21ed; op2val:0x4016f6d0;
op3val:0x7f35c8f6; valaddr_reg:x13; val_offset:252*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 252*FLEN/8, x14, x11, x12)

inst_107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b294d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x702ea5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x029014 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0b294d; op2val:0x3e702ea5;
op3val:0x7e029014; valaddr_reg:x13; val_offset:255*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 255*FLEN/8, x14, x11, x12)

inst_108:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x432184 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x184b7b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x682adf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc32184; op2val:0x3f984b7b;
op3val:0x7de82adf; valaddr_reg:x13; val_offset:258*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 258*FLEN/8, x14, x11, x12)

inst_109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dbb49 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x642cc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ad92f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2dbb49; op2val:0x3f642cc4;
op3val:0x7f1ad92f; valaddr_reg:x13; val_offset:261*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 261*FLEN/8, x14, x11, x12)

inst_110:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x608613 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x34efdc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1eb0a4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7de08613; op2val:0x40b4efdc;
op3val:0x7f1eb0a4; valaddr_reg:x13; val_offset:264*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 264*FLEN/8, x14, x11, x12)

inst_111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c37fe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ba417 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c6419 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3c37fe; op2val:0x3f2ba417;
op3val:0x7efc6419; valaddr_reg:x13; val_offset:267*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 267*FLEN/8, x14, x11, x12)

inst_112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x068e75 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x486b61 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52af79 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e868e75; op2val:0x3fc86b61;
op3val:0x7ed2af79; valaddr_reg:x13; val_offset:270*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 270*FLEN/8, x14, x11, x12)

inst_113:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4930f1 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x5eb217 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x2f0468 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc930f1; op2val:0x3ddeb217;
op3val:0x7c2f0468; valaddr_reg:x13; val_offset:273*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 273*FLEN/8, x14, x11, x12)

inst_114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a6931 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2b4da6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79799d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3a6931; op2val:0x3f2b4da6;
op3val:0x7ef9799d; valaddr_reg:x13; val_offset:276*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 276*FLEN/8, x14, x11, x12)

inst_115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a3505 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x62f173 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x334186 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca3505; op2val:0x3fe2f173;
op3val:0x7f334186; valaddr_reg:x13; val_offset:279*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 279*FLEN/8, x14, x11, x12)

inst_116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x269533 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x009bc1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x275fe8 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea69533; op2val:0x40009bc1;
op3val:0x7f275fe8; valaddr_reg:x13; val_offset:282*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 282*FLEN/8, x14, x11, x12)

inst_117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e9f2e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02ca7f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x22149c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1e9f2e; op2val:0x3e82ca7f;
op3val:0x7e22149c; valaddr_reg:x13; val_offset:285*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 285*FLEN/8, x14, x11, x12)

inst_118:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4168bc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x14e7f4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x60ff95 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4168bc; op2val:0x3f94e7f4;
op3val:0x7e60ff95; valaddr_reg:x13; val_offset:288*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 288*FLEN/8, x14, x11, x12)

inst_119:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x38bbf7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1c0856 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x61311d and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e38bbf7; op2val:0x401c0856;
op3val:0x7ee1311d; valaddr_reg:x13; val_offset:291*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 291*FLEN/8, x14, x11, x12)

inst_120:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x473131 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ec9ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20e69b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e473131; op2val:0x3fcec9ce;
op3val:0x7ea0e69b; valaddr_reg:x13; val_offset:294*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 294*FLEN/8, x14, x11, x12)

inst_121:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x495443 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x5e2b56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2eb928 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc95443; op2val:0x40de2b56;
op3val:0x7f2eb928; valaddr_reg:x13; val_offset:297*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 297*FLEN/8, x14, x11, x12)

inst_122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x07da62 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x25c38c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2fef0e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e87da62; op2val:0x3fa5c38c;
op3val:0x7eafef0e; valaddr_reg:x13; val_offset:300*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 300*FLEN/8, x14, x11, x12)

inst_123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x600183 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x466c5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d9ffe and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee00183; op2val:0x3fc66c5d;
op3val:0x7f2d9ffe; valaddr_reg:x13; val_offset:303*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 303*FLEN/8, x14, x11, x12)

inst_124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x218570 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ba263 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3033d3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea18570; op2val:0x400ba263;
op3val:0x7f3033d3; valaddr_reg:x13; val_offset:306*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 306*FLEN/8, x14, x11, x12)

inst_125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x40a218 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07b31d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c3884 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec0a218; op2val:0x3f87b31d;
op3val:0x7ecc3884; valaddr_reg:x13; val_offset:309*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 309*FLEN/8, x14, x11, x12)

inst_126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4906ca and fs2 == 0 and fe2 == 0x7a and fm2 == 0x125993 and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x65d86c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec906ca; op2val:0x3d125993;
op3val:0x7c65d86c; valaddr_reg:x13; val_offset:312*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 312*FLEN/8, x14, x11, x12)

inst_127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x290209 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5502b1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0ca079 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea90209; op2val:0x3ed502b1;
op3val:0x7e0ca079; valaddr_reg:x13; val_offset:315*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 315*FLEN/8, x14, x11, x12)

inst_128:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x414a12 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x4b3911 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1970d3 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b414a12; op2val:0x434b3911;
op3val:0x7f1970d3; valaddr_reg:x13; val_offset:318*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 318*FLEN/8, x14, x11, x12)

inst_129:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x045cbd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2fd438 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x35d23f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e045cbd; op2val:0x402fd438;
op3val:0x7eb5d23f; valaddr_reg:x13; val_offset:321*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 321*FLEN/8, x14, x11, x12)

inst_130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3cb2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4470eb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x55afc7 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0b3cb2; op2val:0x3f4470eb;
op3val:0x7ed5afc7; valaddr_reg:x13; val_offset:324*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 324*FLEN/8, x14, x11, x12)

inst_131:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7a5ab2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4b88d9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x470bbf and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e7a5ab2; op2val:0x3fcb88d9;
op3val:0x7ec70bbf; valaddr_reg:x13; val_offset:327*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 327*FLEN/8, x14, x11, x12)

inst_132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x554a27 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x34bbbd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16948f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed54a27; op2val:0x3fb4bbbd;
op3val:0x7f16948f; valaddr_reg:x13; val_offset:330*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 330*FLEN/8, x14, x11, x12)

inst_133:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x22fbeb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x28f8b9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x572759 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7da2fbeb; op2val:0x40a8f8b9;
op3val:0x7ed72759; valaddr_reg:x13; val_offset:333*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 333*FLEN/8, x14, x11, x12)

inst_134:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ed7f8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0ea3ff and fs3 == 0 and fe3 == 0xfc and fm3 == 0x54ac1b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ed7f8; op2val:0x3f8ea3ff;
op3val:0x7e54ac1b; valaddr_reg:x13; val_offset:336*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 336*FLEN/8, x14, x11, x12)

inst_135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14462d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x284ddf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42f650 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f14462d; op2val:0x3f284ddf;
op3val:0x7ec2f650; valaddr_reg:x13; val_offset:339*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 339*FLEN/8, x14, x11, x12)

inst_136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x57b43e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d2d8b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11eb2e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed7b43e; op2val:0x3fad2d8b;
op3val:0x7f11eb2e; valaddr_reg:x13; val_offset:342*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 342*FLEN/8, x14, x11, x12)

inst_137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f329c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x78b546 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2a3516 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2f329c; op2val:0x3ef8b546;
op3val:0x7eaa3516; valaddr_reg:x13; val_offset:345*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 345*FLEN/8, x14, x11, x12)

inst_138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b35f0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x534a7c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4221e4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeb35f0; op2val:0x3f534a7c;
op3val:0x7ec221e4; valaddr_reg:x13; val_offset:348*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 348*FLEN/8, x14, x11, x12)

inst_139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x44ab84 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2d20ce and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05011c and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec4ab84; op2val:0x3fad20ce;
op3val:0x7f05011c; valaddr_reg:x13; val_offset:351*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 351*FLEN/8, x14, x11, x12)

inst_140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2db366 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x16e747 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4cc816 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eadb366; op2val:0x3f96e747;
op3val:0x7eccc816; valaddr_reg:x13; val_offset:354*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 354*FLEN/8, x14, x11, x12)

inst_141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3790e1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7c192a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c4a9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb790e1; op2val:0x3ffc192a;
op3val:0x7f34c4a9; valaddr_reg:x13; val_offset:357*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 357*FLEN/8, x14, x11, x12)

inst_142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x063ff4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2075c6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x284b78 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f063ff4; op2val:0x3fa075c6;
op3val:0x7f284b78; valaddr_reg:x13; val_offset:360*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 360*FLEN/8, x14, x11, x12)

inst_143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34e60e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0d1155 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x475deb and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f34e60e; op2val:0x3e8d1155;
op3val:0x7e475deb; valaddr_reg:x13; val_offset:363*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 363*FLEN/8, x14, x11, x12)

inst_144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56da71 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57ca8e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x351b75 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed6da71; op2val:0x3fd7ca8e;
op3val:0x7f351b75; valaddr_reg:x13; val_offset:366*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 366*FLEN/8, x14, x11, x12)

inst_145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2147aa and fs2 == 0 and fe2 == 0x7c and fm2 == 0x272c67 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x52a373 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2147aa; op2val:0x3e272c67;
op3val:0x7dd2a373; valaddr_reg:x13; val_offset:369*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 369*FLEN/8, x14, x11, x12)

inst_146:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3acfb2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x68a6d7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x29c5f9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbacfb2; op2val:0x4068a6d7;
op3val:0x7ea9c5f9; valaddr_reg:x13; val_offset:372*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 372*FLEN/8, x14, x11, x12)

inst_147:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5edc92 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x544a7b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x38cf80 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d5edc92; op2val:0x40544a7b;
op3val:0x7e38cf80; valaddr_reg:x13; val_offset:375*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 375*FLEN/8, x14, x11, x12)

inst_148:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x60a082 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x127dc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0089e4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d60a082; op2val:0x41127dc4;
op3val:0x7f0089e4; valaddr_reg:x13; val_offset:378*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 378*FLEN/8, x14, x11, x12)

inst_149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x168405 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x12771a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2c3aa4 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f168405; op2val:0x3f92771a;
op3val:0x7f2c3aa4; valaddr_reg:x13; val_offset:381*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 381*FLEN/8, x14, x11, x12)

inst_150:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6d3ae1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x145fb2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x097eb9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ded3ae1; op2val:0x40945fb2;
op3val:0x7f097eb9; valaddr_reg:x13; val_offset:384*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 384*FLEN/8, x14, x11, x12)
RVTEST_SIGBASE(x11,signature_x11_1)

inst_151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d89da and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5dbf76 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5b9da0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efd89da; op2val:0x3e5dbf76;
op3val:0x7ddb9da0; valaddr_reg:x13; val_offset:387*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 387*FLEN/8, x14, x11, x12)

inst_152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2980ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c483e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39c4c2 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2980ff; op2val:0x3f8c483e;
op3val:0x7f39c4c2; valaddr_reg:x13; val_offset:390*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 390*FLEN/8, x14, x11, x12)

inst_153:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28a4b8 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0ace5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36e17b and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e28a4b8; op2val:0x408ace5d;
op3val:0x7f36e17b; valaddr_reg:x13; val_offset:393*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 393*FLEN/8, x14, x11, x12)

inst_154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x18ee3e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1c9b1c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b1bae and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e98ee3e; op2val:0x3f9c9b1c;
op3val:0x7ebb1bae; valaddr_reg:x13; val_offset:396*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 396*FLEN/8, x14, x11, x12)

inst_155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e0e28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57494f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1fd451 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3e0e28; op2val:0x3f57494f;
op3val:0x7f1fd451; valaddr_reg:x13; val_offset:399*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 399*FLEN/8, x14, x11, x12)

inst_156:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x780309 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2b0a9f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25b451 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df80309; op2val:0x402b0a9f;
op3val:0x7ea5b451; valaddr_reg:x13; val_offset:402*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 402*FLEN/8, x14, x11, x12)

inst_157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45fe09 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x285f5e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x023878 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ec5fe09; op2val:0x3f285f5e;
op3val:0x7e823878; valaddr_reg:x13; val_offset:405*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 405*FLEN/8, x14, x11, x12)

inst_158:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1654f7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5049bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x74a0ac and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1654f7; op2val:0x3fd049bc;
op3val:0x7e74a0ac; valaddr_reg:x13; val_offset:408*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 408*FLEN/8, x14, x11, x12)

inst_159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aa728 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x5d031f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x6f67fd and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0aa728; op2val:0x3cdd031f;
op3val:0x7c6f67fd; valaddr_reg:x13; val_offset:411*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 411*FLEN/8, x14, x11, x12)

inst_160:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x6e8086 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e78b41c; op2val:0x3eee8086;
op3val:0x7de7b44e; valaddr_reg:x13; val_offset:414*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 414*FLEN/8, x14, x11, x12)

inst_161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x63e702 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef9f575; op2val:0x3de3e702;
op3val:0x7d5e8636; valaddr_reg:x13; val_offset:417*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 417*FLEN/8, x14, x11, x12)

inst_162:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x0bfc20 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d322c35; op2val:0x410bfc20;
op3val:0x7ec2daf5; valaddr_reg:x13; val_offset:420*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 420*FLEN/8, x14, x11, x12)

inst_163:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2637f1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d569889; op2val:0x3fa637f1;
op3val:0x7d8b55ce; valaddr_reg:x13; val_offset:423*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 423*FLEN/8, x14, x11, x12)

inst_164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x7f and fm2 == 0x794f79 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea303ee; op2val:0x3ff94f79;
op3val:0x7f1ec16f; valaddr_reg:x13; val_offset:426*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 426*FLEN/8, x14, x11, x12)

inst_165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x41568d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef0ef31; op2val:0x3fc1568d;
op3val:0x7f35f5c9; valaddr_reg:x13; val_offset:429*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 429*FLEN/8, x14, x11, x12)

inst_166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2ff72a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edd9b86; op2val:0x3f2ff72a;
op3val:0x7e985346; valaddr_reg:x13; val_offset:432*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 432*FLEN/8, x14, x11, x12)

inst_167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2cb9e5 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f24d370; op2val:0x3eacb9e5;
op3val:0x7e5e6b80; valaddr_reg:x13; val_offset:435*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 435*FLEN/8, x14, x11, x12)

inst_168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x057f28 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ad721 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x643cef and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f057f28; op2val:0x3f5ad721;
op3val:0x7ee43cef; valaddr_reg:x13; val_offset:438*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 438*FLEN/8, x14, x11, x12)

inst_169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x360dc2 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x334fd9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f08d0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb60dc2; op2val:0x3fb34fd9;
op3val:0x7eff08d0; valaddr_reg:x13; val_offset:441*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 441*FLEN/8, x14, x11, x12)

inst_170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dcf3e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x314854 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5a91c1 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1dcf3e; op2val:0x3eb14854;
op3val:0x7e5a91c1; valaddr_reg:x13; val_offset:444*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 444*FLEN/8, x14, x11, x12)

inst_171:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x010fa7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x32615c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x33dbf0 and fcsr == 0x60 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e010fa7; op2val:0x3f32615c;
op3val:0x7db3dbf0; valaddr_reg:x13; val_offset:447*FLEN/8; rmval:dyn;
testreg:x12; fcsr_val:96 */
TEST_FPR4_OP(fmsub.s, x31, x30, x29, x28, dyn, 96, 0, x13, 447*FLEN/8, x14, x11, x12)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2121839644,64,FLEN)
NAN_BOXED(1055817862,64,FLEN)
NAN_BOXED(2121839644,64,FLEN)
NAN_BOXED(2130310517,64,FLEN)
NAN_BOXED(2130310517,64,FLEN)
NAN_BOXED(2103346742,64,FLEN)
NAN_BOXED(2127415127,64,FLEN)
NAN_BOXED(1060024867,64,FLEN)
NAN_BOXED(2123132078,64,FLEN)
NAN_BOXED(2100440117,64,FLEN)
NAN_BOXED(1091304480,64,FLEN)
NAN_BOXED(1091304480,64,FLEN)
NAN_BOXED(2095472529,64,FLEN)
NAN_BOXED(1094257448,64,FLEN)
NAN_BOXED(2124842266,64,FLEN)
NAN_BOXED(2102827145,64,FLEN)
NAN_BOXED(2102827145,64,FLEN)
NAN_BOXED(2102827145,64,FLEN)
NAN_BOXED(2124612590,64,FLEN)
NAN_BOXED(1073303417,64,FLEN)
NAN_BOXED(1073303417,64,FLEN)
NAN_BOXED(2109614312,64,FLEN)
NAN_BOXED(1072090896,64,FLEN)
NAN_BOXED(2116776592,64,FLEN)
NAN_BOXED(2129719089,64,FLEN)
NAN_BOXED(2129719089,64,FLEN)
NAN_BOXED(2134242761,64,FLEN)
NAN_BOXED(2128452486,64,FLEN)
NAN_BOXED(1060108074,64,FLEN)
NAN_BOXED(2128452486,64,FLEN)
NAN_BOXED(2134601955,64,FLEN)
NAN_BOXED(1027830149,64,FLEN)
NAN_BOXED(2098141723,64,FLEN)
NAN_BOXED(2133119856,64,FLEN)
NAN_BOXED(2133119856,64,FLEN)
NAN_BOXED(2133119856,64,FLEN)
NAN_BOXED(2111673191,64,FLEN)
NAN_BOXED(1062275522,64,FLEN)
NAN_BOXED(2109009354,64,FLEN)
NAN_BOXED(2121067005,64,FLEN)
NAN_BOXED(1076449759,64,FLEN)
NAN_BOXED(2132587069,64,FLEN)
NAN_BOXED(2114636864,64,FLEN)
NAN_BOXED(1078851012,64,FLEN)
NAN_BOXED(2128565662,64,FLEN)
NAN_BOXED(2130007999,64,FLEN)
NAN_BOXED(1058354779,64,FLEN)
NAN_BOXED(2123300906,64,FLEN)
NAN_BOXED(2127713656,64,FLEN)
NAN_BOXED(1038795805,64,FLEN)
NAN_BOXED(2101404481,64,FLEN)
NAN_BOXED(2100762691,64,FLEN)
NAN_BOXED(1079847116,64,FLEN)
NAN_BOXED(2115906849,64,FLEN)
NAN_BOXED(2130879236,64,FLEN)
NAN_BOXED(1059119516,64,FLEN)
NAN_BOXED(2124689928,64,FLEN)
NAN_BOXED(2121352152,64,FLEN)
NAN_BOXED(1072600747,64,FLEN)
NAN_BOXED(2128665362,64,FLEN)
NAN_BOXED(2125333973,64,FLEN)
NAN_BOXED(1059673592,64,FLEN)
NAN_BOXED(2120628374,64,FLEN)
NAN_BOXED(2132313430,64,FLEN)
NAN_BOXED(1063338693,64,FLEN)
NAN_BOXED(2131113209,64,FLEN)
test_dataset_1:
NAN_BOXED(2117826387,32,FLEN)
NAN_BOXED(1075223523,32,FLEN)
NAN_BOXED(2128385061,32,FLEN)
NAN_BOXED(2127146218,32,FLEN)
NAN_BOXED(1070942586,32,FLEN)
NAN_BOXED(2133329601,32,FLEN)
NAN_BOXED(2131496369,32,FLEN)
NAN_BOXED(1053432508,32,FLEN)
NAN_BOXED(2120032989,32,FLEN)
NAN_BOXED(2134651277,32,FLEN)
NAN_BOXED(1039577210,32,FLEN)
NAN_BOXED(2109036889,32,FLEN)
NAN_BOXED(2124451620,32,FLEN)
NAN_BOXED(1072154782,32,FLEN)
NAN_BOXED(2131844861,32,FLEN)
NAN_BOXED(2112451263,32,FLEN)
NAN_BOXED(1078847088,32,FLEN)
NAN_BOXED(2126234374,32,FLEN)
NAN_BOXED(2096161710,32,FLEN)
NAN_BOXED(1099454568,32,FLEN)
NAN_BOXED(2130725924,32,FLEN)
NAN_BOXED(2131938351,32,FLEN)
NAN_BOXED(1061150086,32,FLEN)
NAN_BOXED(2128349885,32,FLEN)
NAN_BOXED(2133333883,32,FLEN)
NAN_BOXED(1052212390,32,FLEN)
NAN_BOXED(2121332036,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(1062917921,32,FLEN)
NAN_BOXED(2128887023,32,FLEN)
NAN_BOXED(2128522756,32,FLEN)
NAN_BOXED(1061774687,32,FLEN)
NAN_BOXED(2125409998,32,FLEN)
NAN_BOXED(2132887064,32,FLEN)
NAN_BOXED(1066398969,32,FLEN)
NAN_BOXED(2134204662,32,FLEN)
NAN_BOXED(2125860290,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2130643152,32,FLEN)
NAN_BOXED(2100977760,32,FLEN)
NAN_BOXED(1094254622,32,FLEN)
NAN_BOXED(2131144636,32,FLEN)
NAN_BOXED(2130214746,32,FLEN)
NAN_BOXED(1069837921,32,FLEN)
NAN_BOXED(2134813862,32,FLEN)
NAN_BOXED(2132660030,32,FLEN)
NAN_BOXED(1051805780,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(2123637975,32,FLEN)
NAN_BOXED(1071503721,32,FLEN)
NAN_BOXED(2130731421,32,FLEN)
NAN_BOXED(2089459818,32,FLEN)
NAN_BOXED(1101247315,32,FLEN)
NAN_BOXED(2125548157,32,FLEN)
NAN_BOXED(2113998759,32,FLEN)
NAN_BOXED(1060266332,32,FLEN)
NAN_BOXED(2108939248,32,FLEN)
NAN_BOXED(2100632483,32,FLEN)
NAN_BOXED(1095794389,32,FLEN)
NAN_BOXED(2131984431,32,FLEN)
NAN_BOXED(2110171812,32,FLEN)
NAN_BOXED(1073024142,32,FLEN)
NAN_BOXED(2118003470,32,FLEN)
NAN_BOXED(2123767787,32,FLEN)
NAN_BOXED(1074702266,32,FLEN)
NAN_BOXED(2133282849,32,FLEN)
NAN_BOXED(2104986550,32,FLEN)
NAN_BOXED(1085432057,32,FLEN)
NAN_BOXED(2125233386,32,FLEN)
NAN_BOXED(2127756323,32,FLEN)
NAN_BOXED(1070451725,32,FLEN)
NAN_BOXED(2133433364,32,FLEN)
NAN_BOXED(2132626749,32,FLEN)
NAN_BOXED(1065810946,32,FLEN)
NAN_BOXED(2133189264,32,FLEN)
NAN_BOXED(2119553998,32,FLEN)
NAN_BOXED(1069477165,32,FLEN)
NAN_BOXED(2124380494,32,FLEN)
NAN_BOXED(2122957987,32,FLEN)
NAN_BOXED(1075690093,32,FLEN)
NAN_BOXED(2133443544,32,FLEN)
NAN_BOXED(2134368870,32,FLEN)
NAN_BOXED(1042373912,32,FLEN)
NAN_BOXED(2112344195,32,FLEN)
NAN_BOXED(2114409936,32,FLEN)
NAN_BOXED(1068006602,32,FLEN)
NAN_BOXED(2117215378,32,FLEN)
NAN_BOXED(2117284797,32,FLEN)
NAN_BOXED(1074070603,32,FLEN)
NAN_BOXED(2126133702,32,FLEN)
NAN_BOXED(2128754993,32,FLEN)
NAN_BOXED(1055152528,32,FLEN)
NAN_BOXED(2118765077,32,FLEN)
NAN_BOXED(2068395378,32,FLEN)
NAN_BOXED(1120710392,32,FLEN)
NAN_BOXED(2124472349,32,FLEN)
NAN_BOXED(2123221786,32,FLEN)
NAN_BOXED(1069830602,32,FLEN)
NAN_BOXED(2128181658,32,FLEN)
NAN_BOXED(2134310570,32,FLEN)
NAN_BOXED(1060730639,32,FLEN)
NAN_BOXED(2131006244,32,FLEN)
NAN_BOXED(2126901982,32,FLEN)
NAN_BOXED(1067014713,32,FLEN)
NAN_BOXED(2129471445,32,FLEN)
NAN_BOXED(2130826389,32,FLEN)
NAN_BOXED(1034127127,32,FLEN)
NAN_BOXED(2099633596,32,FLEN)
NAN_BOXED(2133636568,32,FLEN)
NAN_BOXED(1063123233,32,FLEN)
NAN_BOXED(2132132111,32,FLEN)
NAN_BOXED(2133321746,32,FLEN)
NAN_BOXED(1063882904,32,FLEN)
NAN_BOXED(2132357390,32,FLEN)
NAN_BOXED(2123803754,32,FLEN)
NAN_BOXED(1065494314,32,FLEN)
NAN_BOXED(2123969846,32,FLEN)
NAN_BOXED(2107574384,32,FLEN)
NAN_BOXED(1086589409,32,FLEN)
NAN_BOXED(2129891634,32,FLEN)
NAN_BOXED(2101295533,32,FLEN)
NAN_BOXED(1066040471,32,FLEN)
NAN_BOXED(2102322257,32,FLEN)
NAN_BOXED(2116048002,32,FLEN)
NAN_BOXED(1061619466,32,FLEN)
NAN_BOXED(2113489973,32,FLEN)
NAN_BOXED(2122486946,32,FLEN)
NAN_BOXED(1042174467,32,FLEN)
NAN_BOXED(2099348258,32,FLEN)
NAN_BOXED(2033677785,32,FLEN)
NAN_BOXED(1143085813,32,FLEN)
NAN_BOXED(2112378826,32,FLEN)
NAN_BOXED(2107365737,32,FLEN)
NAN_BOXED(1080384015,32,FLEN)
NAN_BOXED(2123079758,32,FLEN)
NAN_BOXED(2090642796,32,FLEN)
NAN_BOXED(1107895609,32,FLEN)
NAN_BOXED(2133319470,32,FLEN)
NAN_BOXED(2129382767,32,FLEN)
NAN_BOXED(1048033204,32,FLEN)
NAN_BOXED(2112105580,32,FLEN)
NAN_BOXED(2118237156,32,FLEN)
NAN_BOXED(1068516739,32,FLEN)
NAN_BOXED(2122671559,32,FLEN)
NAN_BOXED(2123093688,32,FLEN)
NAN_BOXED(1051506214,32,FLEN)
NAN_BOXED(2109517703,32,FLEN)
NAN_BOXED(2132999922,32,FLEN)
NAN_BOXED(1066777762,32,FLEN)
NAN_BOXED(2134813947,32,FLEN)
NAN_BOXED(2125656224,32,FLEN)
NAN_BOXED(1065674460,32,FLEN)
NAN_BOXED(2126105313,32,FLEN)
NAN_BOXED(2105797432,32,FLEN)
NAN_BOXED(1066945573,32,FLEN)
NAN_BOXED(2107438541,32,FLEN)
NAN_BOXED(2122551928,32,FLEN)
NAN_BOXED(1061539861,32,FLEN)
NAN_BOXED(2118866258,32,FLEN)
NAN_BOXED(2132747237,32,FLEN)
NAN_BOXED(1044869775,32,FLEN)
NAN_BOXED(2113402941,32,FLEN)
NAN_BOXED(2089674349,32,FLEN)
NAN_BOXED(1109701645,32,FLEN)
NAN_BOXED(2134283991,32,FLEN)
NAN_BOXED(2127223248,32,FLEN)
NAN_BOXED(1049499452,32,FLEN)
NAN_BOXED(2111909494,32,FLEN)
NAN_BOXED(2127598597,32,FLEN)
NAN_BOXED(1028385949,32,FLEN)
NAN_BOXED(2091263528,32,FLEN)
NAN_BOXED(2127219524,32,FLEN)
NAN_BOXED(1072507339,32,FLEN)
NAN_BOXED(2134630218,32,FLEN)
NAN_BOXED(2133180966,32,FLEN)
NAN_BOXED(1062105370,32,FLEN)
NAN_BOXED(2131078006,32,FLEN)
NAN_BOXED(2118682965,32,FLEN)
NAN_BOXED(1068745235,32,FLEN)
NAN_BOXED(2123157518,32,FLEN)
NAN_BOXED(2113948108,32,FLEN)
NAN_BOXED(1083433223,32,FLEN)
NAN_BOXED(2132031050,32,FLEN)
NAN_BOXED(2127332342,32,FLEN)
NAN_BOXED(1069235128,32,FLEN)
NAN_BOXED(2132120602,32,FLEN)
NAN_BOXED(2122133189,32,FLEN)
NAN_BOXED(1059926972,32,FLEN)
NAN_BOXED(2116766662,32,FLEN)
NAN_BOXED(2132528998,32,FLEN)
NAN_BOXED(1067145808,32,FLEN)
NAN_BOXED(2134711061,32,FLEN)
NAN_BOXED(2133046376,32,FLEN)
NAN_BOXED(1064437245,32,FLEN)
NAN_BOXED(2132460639,32,FLEN)
NAN_BOXED(2132614835,32,FLEN)
NAN_BOXED(1063744654,32,FLEN)
NAN_BOXED(2131627580,32,FLEN)
NAN_BOXED(2116952779,32,FLEN)
NAN_BOXED(1074928672,32,FLEN)
NAN_BOXED(2126956020,32,FLEN)
NAN_BOXED(2122877240,32,FLEN)
NAN_BOXED(1034349601,32,FLEN)
NAN_BOXED(2092043733,32,FLEN)
NAN_BOXED(2091623735,32,FLEN)
NAN_BOXED(1092617985,32,FLEN)
NAN_BOXED(2119604202,32,FLEN)
NAN_BOXED(2118585280,32,FLEN)
NAN_BOXED(1076560526,32,FLEN)
NAN_BOXED(2131031766,32,FLEN)
NAN_BOXED(2134353568,32,FLEN)
NAN_BOXED(1055876084,32,FLEN)
NAN_BOXED(2125184068,32,FLEN)
NAN_BOXED(2134108278,32,FLEN)
NAN_BOXED(1065809940,32,FLEN)
NAN_BOXED(2134750219,32,FLEN)
NAN_BOXED(2134334512,32,FLEN)
NAN_BOXED(1052999058,32,FLEN)
NAN_BOXED(2123105578,32,FLEN)
NAN_BOXED(2116636839,32,FLEN)
NAN_BOXED(1065596108,32,FLEN)
NAN_BOXED(2116958131,32,FLEN)
NAN_BOXED(2115441152,32,FLEN)
NAN_BOXED(1065680186,32,FLEN)
NAN_BOXED(2115827055,32,FLEN)
NAN_BOXED(2129634360,32,FLEN)
NAN_BOXED(1069066419,32,FLEN)
NAN_BOXED(2133646324,32,FLEN)
NAN_BOXED(2132892949,32,FLEN)
NAN_BOXED(1058147500,32,FLEN)
NAN_BOXED(2125995559,32,FLEN)
NAN_BOXED(2130361945,32,FLEN)
NAN_BOXED(1067237385,32,FLEN)
NAN_BOXED(2132379670,32,FLEN)
NAN_BOXED(2105686081,32,FLEN)
NAN_BOXED(1090082626,32,FLEN)
NAN_BOXED(2130553397,32,FLEN)
NAN_BOXED(2133765469,32,FLEN)
NAN_BOXED(1063002461,32,FLEN)
NAN_BOXED(2132161471,32,FLEN)
NAN_BOXED(2131756775,32,FLEN)
NAN_BOXED(1059267409,32,FLEN)
NAN_BOXED(2125959303,32,FLEN)
NAN_BOXED(2114525899,32,FLEN)
NAN_BOXED(1083012051,32,FLEN)
NAN_BOXED(2132247445,32,FLEN)
NAN_BOXED(2122276745,32,FLEN)
NAN_BOXED(1075454640,32,FLEN)
NAN_BOXED(2132394516,32,FLEN)
NAN_BOXED(2134544101,32,FLEN)
NAN_BOXED(1053856960,32,FLEN)
NAN_BOXED(2123890817,32,FLEN)
NAN_BOXED(2124030445,32,FLEN)
NAN_BOXED(1075246800,32,FLEN)
NAN_BOXED(2134231286,32,FLEN)
NAN_BOXED(2131437901,32,FLEN)
NAN_BOXED(1047539365,32,FLEN)
NAN_BOXED(2114097172,32,FLEN)
NAN_BOXED(2109940100,32,FLEN)
NAN_BOXED(1066945403,32,FLEN)
NAN_BOXED(2112367327,32,FLEN)
NAN_BOXED(2133703497,32,FLEN)
NAN_BOXED(1063529668,32,FLEN)
NAN_BOXED(2132465967,32,FLEN)
NAN_BOXED(2111866387,32,FLEN)
NAN_BOXED(1085599708,32,FLEN)
NAN_BOXED(2132717732,32,FLEN)
NAN_BOXED(2134652926,32,FLEN)
NAN_BOXED(1059824663,32,FLEN)
NAN_BOXED(2130469913,32,FLEN)
NAN_BOXED(2122747509,32,FLEN)
NAN_BOXED(1070099297,32,FLEN)
NAN_BOXED(2127736697,32,FLEN)
NAN_BOXED(2110337265,32,FLEN)
NAN_BOXED(1038004759,32,FLEN)
NAN_BOXED(2083456104,32,FLEN)
NAN_BOXED(2134534449,32,FLEN)
NAN_BOXED(1059802534,32,FLEN)
NAN_BOXED(2130278813,32,FLEN)
NAN_BOXED(2127181061,32,FLEN)
NAN_BOXED(1071837555,32,FLEN)
NAN_BOXED(2134065542,32,FLEN)
NAN_BOXED(2124846387,32,FLEN)
NAN_BOXED(1073781697,32,FLEN)
NAN_BOXED(2133286888,32,FLEN)
NAN_BOXED(2132713262,32,FLEN)
NAN_BOXED(1048758911,32,FLEN)
NAN_BOXED(2116162716,32,FLEN)
NAN_BOXED(2118215868,32,FLEN)
NAN_BOXED(1066723316,32,FLEN)
NAN_BOXED(2120286101,32,FLEN)
NAN_BOXED(2117647351,32,FLEN)
NAN_BOXED(1075578966,32,FLEN)
NAN_BOXED(2128687389,32,FLEN)
NAN_BOXED(2118594865,32,FLEN)
NAN_BOXED(1070516686,32,FLEN)
NAN_BOXED(2124474011,32,FLEN)
NAN_BOXED(2110346307,32,FLEN)
NAN_BOXED(1088301910,32,FLEN)
NAN_BOXED(2133768488,32,FLEN)
NAN_BOXED(2122832482,32,FLEN)
NAN_BOXED(1067828108,32,FLEN)
NAN_BOXED(2125459214,32,FLEN)
NAN_BOXED(2128609667,32,FLEN)
NAN_BOXED(1069968477,32,FLEN)
NAN_BOXED(2133696510,32,FLEN)
NAN_BOXED(2124514672,32,FLEN)
NAN_BOXED(1074504291,32,FLEN)
NAN_BOXED(2133865427,32,FLEN)
NAN_BOXED(2126553624,32,FLEN)
NAN_BOXED(1065857821,32,FLEN)
NAN_BOXED(2127313028,32,FLEN)
NAN_BOXED(2127103690,32,FLEN)
NAN_BOXED(1024612755,32,FLEN)
NAN_BOXED(2087049324,32,FLEN)
NAN_BOXED(2125005321,32,FLEN)
NAN_BOXED(1054147249,32,FLEN)
NAN_BOXED(2114756729,32,FLEN)
NAN_BOXED(2067876370,32,FLEN)
NAN_BOXED(1129003281,32,FLEN)
NAN_BOXED(2132373715,32,FLEN)
NAN_BOXED(2114215101,32,FLEN)
NAN_BOXED(1076876344,32,FLEN)
NAN_BOXED(2125845055,32,FLEN)
NAN_BOXED(2131442866,32,FLEN)
NAN_BOXED(1061449963,32,FLEN)
NAN_BOXED(2127933383,32,FLEN)
NAN_BOXED(2121947826,32,FLEN)
NAN_BOXED(1070303449,32,FLEN)
NAN_BOXED(2126973887,32,FLEN)
NAN_BOXED(2127907367,32,FLEN)
NAN_BOXED(1068809149,32,FLEN)
NAN_BOXED(2132186255,32,FLEN)
NAN_BOXED(2107833323,32,FLEN)
NAN_BOXED(1084815545,32,FLEN)
NAN_BOXED(2128029529,32,FLEN)
NAN_BOXED(2118047736,32,FLEN)
NAN_BOXED(1066312703,32,FLEN)
NAN_BOXED(2119478299,32,FLEN)
NAN_BOXED(2132035117,32,FLEN)
NAN_BOXED(1059605983,32,FLEN)
NAN_BOXED(2126706256,32,FLEN)
NAN_BOXED(2128065598,32,FLEN)
NAN_BOXED(1068313995,32,FLEN)
NAN_BOXED(2131880750,32,FLEN)
NAN_BOXED(2133799580,32,FLEN)
NAN_BOXED(1056486726,32,FLEN)
NAN_BOXED(2125083926,32,FLEN)
NAN_BOXED(2129343984,32,FLEN)
NAN_BOXED(1062423164,32,FLEN)
NAN_BOXED(2126651876,32,FLEN)
NAN_BOXED(2126818180,32,FLEN)
NAN_BOXED(1068310734,32,FLEN)
NAN_BOXED(2131034396,32,FLEN)
NAN_BOXED(2125312870,32,FLEN)
NAN_BOXED(1066854215,32,FLEN)
NAN_BOXED(2127349782,32,FLEN)
NAN_BOXED(2125959393,32,FLEN)
NAN_BOXED(1073486122,32,FLEN)
NAN_BOXED(2134164649,32,FLEN)
NAN_BOXED(2131116020,32,FLEN)
NAN_BOXED(1067480518,32,FLEN)
NAN_BOXED(2133347192,32,FLEN)
NAN_BOXED(2134173198,32,FLEN)
NAN_BOXED(1049432405,32,FLEN)
NAN_BOXED(2118606315,32,FLEN)
NAN_BOXED(2128009841,32,FLEN)
NAN_BOXED(1071106702,32,FLEN)
NAN_BOXED(2134186869,32,FLEN)
NAN_BOXED(2132887466,32,FLEN)
NAN_BOXED(1042754663,32,FLEN)
NAN_BOXED(2110956403,32,FLEN)
NAN_BOXED(2109394866,32,FLEN)
NAN_BOXED(1080600279,32,FLEN)
NAN_BOXED(2125055481,32,FLEN)
NAN_BOXED(2103368850,32,FLEN)
NAN_BOXED(1079265915,32,FLEN)
NAN_BOXED(2117652352,32,FLEN)
NAN_BOXED(2103484546,32,FLEN)
NAN_BOXED(1091730884,32,FLEN)
NAN_BOXED(2130741732,32,FLEN)
NAN_BOXED(2132182021,32,FLEN)
NAN_BOXED(1066563354,32,FLEN)
NAN_BOXED(2133605028,32,FLEN)
NAN_BOXED(2112699105,32,FLEN)
NAN_BOXED(1083465650,32,FLEN)
NAN_BOXED(2131328697,32,FLEN)
NAN_BOXED(2130545114,32,FLEN)
NAN_BOXED(1046331254,32,FLEN)
NAN_BOXED(2111544736,32,FLEN)
NAN_BOXED(2133426431,32,FLEN)
NAN_BOXED(1066158142,32,FLEN)
NAN_BOXED(2134492354,32,FLEN)
NAN_BOXED(2116592824,32,FLEN)
NAN_BOXED(1082838621,32,FLEN)
NAN_BOXED(2134303099,32,FLEN)
NAN_BOXED(2123951678,32,FLEN)
NAN_BOXED(1067227932,32,FLEN)
NAN_BOXED(2126191534,32,FLEN)
NAN_BOXED(2134773288,32,FLEN)
NAN_BOXED(1062685007,32,FLEN)
NAN_BOXED(2132792401,32,FLEN)
NAN_BOXED(2113405705,32,FLEN)
NAN_BOXED(1076562591,32,FLEN)
NAN_BOXED(2124788817,32,FLEN)
NAN_BOXED(2126904841,32,FLEN)
NAN_BOXED(1059610462,32,FLEN)
NAN_BOXED(2122463352,32,FLEN)
NAN_BOXED(2115392759,32,FLEN)
NAN_BOXED(1070614972,32,FLEN)
NAN_BOXED(2121572524,32,FLEN)
NAN_BOXED(2131404584,32,FLEN)
NAN_BOXED(1021117215,32,FLEN)
NAN_BOXED(2087675901,32,FLEN)
NAN_BOXED(2121839644,32,FLEN)
NAN_BOXED(1055817862,32,FLEN)
NAN_BOXED(2112336974,32,FLEN)
NAN_BOXED(2130310517,32,FLEN)
NAN_BOXED(1038345986,32,FLEN)
NAN_BOXED(2103346742,32,FLEN)
NAN_BOXED(2100440117,32,FLEN)
NAN_BOXED(1091304480,32,FLEN)
NAN_BOXED(2126699253,32,FLEN)
NAN_BOXED(2102827145,32,FLEN)
NAN_BOXED(1067857905,32,FLEN)
NAN_BOXED(2106283470,32,FLEN)
NAN_BOXED(2124612590,32,FLEN)
NAN_BOXED(1073303417,32,FLEN)
NAN_BOXED(2132722031,32,FLEN)
NAN_BOXED(2129719089,32,FLEN)
NAN_BOXED(1069635213,32,FLEN)
NAN_BOXED(2134242761,32,FLEN)
NAN_BOXED(2128452486,32,FLEN)
NAN_BOXED(1060108074,32,FLEN)
NAN_BOXED(2123912006,32,FLEN)
NAN_BOXED(2133119856,32,FLEN)
NAN_BOXED(1051507173,32,FLEN)
NAN_BOXED(2120117120,32,FLEN)
NAN_BOXED(2131066664,32,FLEN)
NAN_BOXED(1062917921,32,FLEN)
NAN_BOXED(2128887023,32,FLEN)
NAN_BOXED(2125860290,32,FLEN)
NAN_BOXED(1068715993,32,FLEN)
NAN_BOXED(2130643152,32,FLEN)
NAN_BOXED(2132660030,32,FLEN)
NAN_BOXED(1051805780,32,FLEN)
NAN_BOXED(2119864769,32,FLEN)
NAN_BOXED(2113998759,32,FLEN)
NAN_BOXED(1060266332,32,FLEN)
NAN_BOXED(2108939248,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 46*((SIGALIGN)/4),4,0xdeadbeef


signature_x11_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x11_1:
    .fill 42*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
