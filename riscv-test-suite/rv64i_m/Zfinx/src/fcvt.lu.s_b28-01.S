
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Wed Jun 21 10:48:34 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/update/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/update/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fcvt.lu.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fcvt.lu.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fcvt.lu.s_b28 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*RV64.*I.*Zfinx.*);def TEST_CASE_1=True;",fcvt.lu.s_b28)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1==x30, rd==x31,fs1 == 0 and fe1 == 0x00 and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x30; dest:x31; op1val:0x0; valaddr_reg:x3;
val_offset:0*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x31, x30, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2,LREG)

inst_1:// rs1==x31, rd==x30,fs1 == 0 and fe1 == 0x7e and fm1 == 0x124770 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x31; dest:x30; op1val:0x3f124770; valaddr_reg:x3;
val_offset:1*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x30, x31, dyn, 0, 0, x3, 1*FLEN/8, x4, x1, x2,LREG)

inst_2:// rs1==x28, rd==x29,fs1 == 0 and fe1 == 0x7f and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x28; dest:x29; op1val:0x3f800000; valaddr_reg:x3;
val_offset:2*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x29, x28, dyn, 0, 0, x3, 2*FLEN/8, x4, x1, x2,LREG)

inst_3:// rs1==x29, rd==x28,fs1 == 0 and fe1 == 0x7f and fm1 == 0x200000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x29; dest:x28; op1val:0x3fa00000; valaddr_reg:x3;
val_offset:3*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x28, x29, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2,LREG)

inst_4:// rs1==x26, rd==x27,fs1 == 0 and fe1 == 0x7f and fm1 == 0x400000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x26; dest:x27; op1val:0x3fc00000; valaddr_reg:x3;
val_offset:4*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x27, x26, dyn, 0, 0, x3, 4*FLEN/8, x4, x1, x2,LREG)

inst_5:// rs1==x27, rd==x26,fs1 == 0 and fe1 == 0x7f and fm1 == 0x600000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x27; dest:x26; op1val:0x3fe00000; valaddr_reg:x3;
val_offset:5*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x26, x27, dyn, 0, 0, x3, 5*FLEN/8, x4, x1, x2,LREG)

inst_6:// rs1==x24, rd==x25,fs1 == 0 and fe1 == 0x80 and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x24; dest:x25; op1val:0x40000000; valaddr_reg:x3;
val_offset:6*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x25, x24, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2,LREG)

inst_7:// rs1==x25, rd==x24,fs1 == 0 and fe1 == 0x80 and fm1 == 0x100000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x25; dest:x24; op1val:0x40100000; valaddr_reg:x3;
val_offset:7*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x24, x25, dyn, 0, 0, x3, 7*FLEN/8, x4, x1, x2,LREG)

inst_8:// rs1==x22, rd==x23,fs1 == 0 and fe1 == 0x80 and fm1 == 0x200000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x22; dest:x23; op1val:0x40200000; valaddr_reg:x3;
val_offset:8*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x23, x22, dyn, 0, 0, x3, 8*FLEN/8, x4, x1, x2,LREG)

inst_9:// rs1==x23, rd==x22,fs1 == 0 and fe1 == 0x80 and fm1 == 0x300000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x23; dest:x22; op1val:0x40300000; valaddr_reg:x3;
val_offset:9*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x22, x23, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2,LREG)

inst_10:// rs1==x20, rd==x21,fs1 == 0 and fe1 == 0x9c and fm1 == 0x5b9758 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x20; dest:x21; op1val:0x4e5b9758; valaddr_reg:x3;
val_offset:10*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x21, x20, dyn, 0, 0, x3, 10*FLEN/8, x4, x1, x2,LREG)

inst_11:// rs1==x21, rd==x20,fs1 == 0 and fe1 == 0x9d and fm1 == 0x7fffff and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x21; dest:x20; op1val:0x4effffff; valaddr_reg:x3;
val_offset:11*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x20, x21, dyn, 0, 0, x3, 11*FLEN/8, x4, x1, x2,LREG)

inst_12:// rs1==x18, rd==x19,fs1 == 0 and fe1 == 0xff and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x18; dest:x19; op1val:0x7f800000; valaddr_reg:x3;
val_offset:12*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x19, x18, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2,LREG)

inst_13:// rs1==x19, rd==x18,fs1 == 0 and fe1 == 0xff and fm1 == 0x000001 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x19; dest:x18; op1val:0x7f800001; valaddr_reg:x3;
val_offset:13*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x18, x19, dyn, 0, 0, x3, 13*FLEN/8, x4, x1, x2,LREG)

inst_14:// rs1==x16, rd==x17,fs1 == 0 and fe1 == 0xff and fm1 == 0x400001 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000  
/* opcode: fcvt.lu.s ; op1:x16; dest:x17; op1val:0x7fc00001; valaddr_reg:x3;
val_offset:14*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x17, x16, dyn, 0, 0, x3, 14*FLEN/8, x4, x1, x2,LREG)

inst_15:// rs1==x17, rd==x16,fs1 == 1 and fe1 == 0x00 and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x17; dest:x16; op1val:0x80000000; valaddr_reg:x3;
val_offset:15*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x16, x17, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2,LREG)

inst_16:// rs1==x14, rd==x15,fs1 == 1 and fe1 == 0x7d and fm1 == 0x58046a and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x14; dest:x15; op1val:0xbed8046a; valaddr_reg:x3;
val_offset:16*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x15, x14, dyn, 0, 0, x3, 16*FLEN/8, x4, x1, x2,LREG)

inst_17:// rs1==x15, rd==x14,fs1 == 1 and fe1 == 0x7f and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x15; dest:x14; op1val:0xbf800000; valaddr_reg:x3;
val_offset:17*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x14, x15, dyn, 0, 0, x3, 17*FLEN/8, x4, x1, x2,LREG)

inst_18:// rs1==x12, rd==x13,fs1 == 1 and fe1 == 0x80 and fm1 == 0x300000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x12; dest:x13; op1val:0xc0300000; valaddr_reg:x3;
val_offset:18*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x13, x12, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2,LREG)

inst_19:// rs1==x13, rd==x12,fs1 == 1 and fe1 == 0x80 and fm1 == 0x200000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x13; dest:x12; op1val:0xc0200000; valaddr_reg:x3;
val_offset:19*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x12, x13, dyn, 0, 0, x3, 19*FLEN/8, x4, x1, x2,LREG)

inst_20:// rs1==x10, rd==x11,fs1 == 1 and fe1 == 0x80 and fm1 == 0x100000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x10; dest:x11; op1val:0xc0100000; valaddr_reg:x3;
val_offset:20*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x11, x10, dyn, 0, 0, x3, 20*FLEN/8, x4, x1, x2,LREG)

inst_21:// rs1==x11, rd==x10,fs1 == 1 and fe1 == 0x80 and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x11; dest:x10; op1val:0xc0000000; valaddr_reg:x3;
val_offset:21*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x10, x11, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2,LREG)

inst_22:// rs1==x8, rd==x9,fs1 == 1 and fe1 == 0x7f and fm1 == 0x600000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x8; dest:x9; op1val:0xbfe00000; valaddr_reg:x3;
val_offset:22*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x9, x8, dyn, 0, 0, x3, 22*FLEN/8, x4, x1, x2,LREG)
RVTEST_VALBASEUPD(x10,test_dataset_1)

inst_23:// rs1==x9, rd==x8,fs1 == 1 and fe1 == 0x7f and fm1 == 0x400000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x9; dest:x8; op1val:0xbfc00000; valaddr_reg:x10;
val_offset:0*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x8, x9, dyn, 0, 0, x10, 0*FLEN/8, x11, x1, x2,LREG)

inst_24:// rs1==x6, rd==x7,fs1 == 1 and fe1 == 0x7f and fm1 == 0x200000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x6; dest:x7; op1val:0xbfa00000; valaddr_reg:x10;
val_offset:1*FLEN/8; rmval:dyn; correctval:0; testreg:x2;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x7, x6, dyn, 0, 0, x10, 1*FLEN/8, x11, x1, x2,LREG)

inst_25:// rs1==x7, rd==x6,fs1 == 1 and fe1 == 0x9d and fm1 == 0x4b3d25 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x7; dest:x6; op1val:0xcecb3d25; valaddr_reg:x10;
val_offset:2*FLEN/8; rmval:dyn; correctval:0; testreg:x8;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x6, x7, dyn, 0, 0, x10, 2*FLEN/8, x11, x1, x8,LREG)

inst_26:// rs1==x4, rd==x5,fs1 == 1 and fe1 == 0x9e and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x4; dest:x5; op1val:0xcf000000; valaddr_reg:x10;
val_offset:3*FLEN/8; rmval:dyn; correctval:0; testreg:x8;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x5, x4, dyn, 0, 0, x10, 3*FLEN/8, x11, x1, x8,LREG)
RVTEST_SIGBASE(x6,signature_x6_0)

inst_27:// rs1==x5, rd==x4,fs1 == 1 and fe1 == 0xff and fm1 == 0x000000 and  fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0xffffffff  
/* opcode: fcvt.lu.s ; op1:x5; dest:x4; op1val:0xff800000; valaddr_reg:x10;
val_offset:4*FLEN/8; rmval:dyn; correctval:0; testreg:x8;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x4, x5, dyn, 0, 0, x10, 4*FLEN/8, x11, x6, x8,LREG)

inst_28:// rs1==x2, rd==x3,
/* opcode: fcvt.lu.s ; op1:x2; dest:x3; op1val:0x0; valaddr_reg:x10;
val_offset:5*FLEN/8; rmval:rne; correctval:0; testreg:x8;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x3, x2, rne, 0, 0, x10, 5*FLEN/8, x11, x6, x8,LREG)

inst_29:// rs1==x3, rd==x2,
/* opcode: fcvt.lu.s ; op1:x3; dest:x2; op1val:0x0; valaddr_reg:x10;
val_offset:6*FLEN/8; rmval:rne; correctval:0; testreg:x8;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x2, x3, rne, 0, 0, x10, 6*FLEN/8, x11, x6, x8,LREG)

inst_30:// rs1==x0, rd==x1,
/* opcode: fcvt.lu.s ; op1:x0; dest:x1; op1val:0x0; valaddr_reg:x10;
val_offset:7*FLEN/8; rmval:rne; correctval:0; testreg:x8;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x1, x0, rne, 0, 0, x10, 7*FLEN/8, x11, x6, x8,LREG)

inst_31:// rs1==x1, rd==x0,
/* opcode: fcvt.lu.s ; op1:x1; dest:x0; op1val:0x0; valaddr_reg:x10;
val_offset:8*FLEN/8; rmval:rne; correctval:0; testreg:x8;
fcsr_val:0*/
TEST_FPID_OP(fcvt.lu.s, x0, x1, rne, 0, 0, x10, 8*FLEN/8, x11, x6, x8,LREG)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1058162544,64,FLEN)
NAN_BOXED(1065353216,64,FLEN)
NAN_BOXED(1067450368,64,FLEN)
NAN_BOXED(1069547520,64,FLEN)
NAN_BOXED(1071644672,64,FLEN)
NAN_BOXED(1073741824,64,FLEN)
NAN_BOXED(1074790400,64,FLEN)
NAN_BOXED(1075838976,64,FLEN)
NAN_BOXED(1076887552,64,FLEN)
NAN_BOXED(1314625368,64,FLEN)
NAN_BOXED(1325400063,64,FLEN)
NAN_BOXED(2139095040,64,FLEN)
NAN_BOXED(2139095041,64,FLEN)
NAN_BOXED(2143289345,64,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(3201827946,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(3224371200,32,FLEN)
NAN_BOXED(3223322624,32,FLEN)
NAN_BOXED(3222274048,32,FLEN)
NAN_BOXED(3221225472,32,FLEN)
NAN_BOXED(3219128320,32,FLEN)
test_dataset_1:
NAN_BOXED(3217031168,32,FLEN)
NAN_BOXED(3214934016,32,FLEN)
NAN_BOXED(3469425957,32,FLEN)
NAN_BOXED(3472883712,32,FLEN)
NAN_BOXED(4286578688,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
NAN_BOXED(0,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 54*((SIGALIGN)/4),4,0xdeadbeef


signature_x6_0:
    .fill 10*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
